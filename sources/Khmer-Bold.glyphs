{
.appVersion = "3141";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = MONO;
},
{
name = panose;
value = (
2,
2,
6,
0,
6,
5,
0,
2,
2,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
9,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
43,
44,
45,
46,
60,
62,
64,
67,
69
);
},
{
name = codePageRanges;
value = (
"1252"
);
}
);
date = "2020-10-31 04:20:23 +0000";
familyName = "Khmer OS";
featurePrefixes = (
{
code = "lookup SUB_0 {
	sub uni17B7 by uni17B7.r;
	sub uni17B8 by uni17B8.r;
	sub uni17B9 by uni17B9.r;
	sub uni17BA by uni17BA.r;
	sub uni17BE by uni17B8.r;
	sub uni17C6 by uni17C6.r;
	sub uni17C9 by uni17C9.r;
	sub uni17CD by uni17CD.r;
	sub uni17B7_17CD by iMark_17CDkhmer.r;
} SUB_0;
lookup SUB_1 {
	sub uni17B7 by uni17B7.a;
	sub uni17B8 by uni17B8.a;
	sub uni17B9 by uni17B9.a;
	sub uni17BA by uni17BA.a;
	sub uni17BE by uni17B8.a;
	sub uni17C6 by uni17C6.a;
	sub uni17CE by uni17CE.a;
	sub uni17D0 by uni17D0.a;
} SUB_1;
lookup SUB_10 {
	sub uni17C9 uni17B6 by uni17C9;
	sub uni17C9 uni17C4 by uni17C9;
	sub uni17C9 uni17C5 by uni17C9;
	sub uni17CA uni17B6 by uni17CA;
	sub uni17CA uni17C4 by uni17CA;
	sub uni17CA uni17C5 by uni17CA;
	sub uni17CC uni17B6 by uni17CC;
	sub uni17CC uni17C4 by uni17CC;
	sub uni17CC uni17C5 by uni17CC;
	sub uni17C9.r uni17B6 by uni17C9.r;
	sub uni17C9.r uni17C4 by uni17C9.r;
	sub uni17C9.r uni17C5 by uni17C9.r;
} SUB_10;
lookup SUB_11 {
	sub uni17D2_178A by coeng_178Akhmer.r;
	sub uni17D2_178F by coeng_178Akhmer.r;
	sub uni17D2_1797 by coeng_1797khmer.r;
	sub uni17D2_1798 by coeng_1798khmer.r;
} SUB_11;
lookup SUB_12 {
	sub uni17BB by uni17BB.b;
	sub uni17BC by uni17BC.b;
	sub uni17BD by uni17BD.b;
} SUB_12;
lookup SUB_13 {
	sub uni17BF by uni17BF.b;
	sub uni17C0 by uni17C0.b;
} SUB_13;
lookup SUB_14 {
	sub uni17CA by uni17BB;
} SUB_14;
lookup SUB_15 {
	sub uni17C9 by uni17BB;
	sub uni17C9.r by uni17BB;
} SUB_15;
lookup SUB_16 {
	sub uni1789 by uni1789.a;
} SUB_16;
lookup SUB_17 {
	sub uni17D2_1789 by coeng_1789khmer.a;
} SUB_17;
lookup SUB_18 {
	sub uni17D2_178A by coeng_178Akhmer.n;
	sub uni17D2_178B by coeng_178Bkhmer.n;
	sub uni17D2_178C by coeng_178Ckhmer.n;
	sub uni17D2_178F by coeng_178Akhmer.n;
	sub uni17D2_17A0 by coeng_17A0khmer.n;
} SUB_18;
lookup SUB_2 {
	sub uni17BB by uni17BB.n;
	sub uni17BC by uni17BC.n;
	sub uni17BD by uni17BD.n;
} SUB_2;
lookup SUB_3 {
	sub uni17BB.b by uni17BB.n2;
	sub uni17BC.b by uni17BC.n2;
	sub uni17BD.b by uni17BD.n2;
} SUB_3;
lookup SUB_4 {
	sub uni1780 by uni1780_17B6;
	sub uni1781 by uni1781_17B6;
	sub uni1782 by uni1782_17B6;
	sub uni1783 by uni1783_17B6;
	sub uni1784 by uni1784_17B6;
	sub uni1785 by uni1785_17B6;
	sub uni1786 by uni1786_17B6;
	sub uni1787 by uni1787_17B6;
	sub uni1788 by uni1788_17B6;
	sub uni1789 by uni1789_17B6;
	sub uni178A by uni178A_17B6;
	sub uni178B by uni178B_17B6;
	sub uni178C by uni178C_17B6;
	sub uni178D by uni178D_17B6;
	sub uni178E by uni178E_17B6;
	sub uni178F by uni178F_17B6;
	sub uni1790 by uni1790_17B6;
	sub uni1791 by uni1791_17B6;
	sub uni1792 by uni1792_17B6;
	sub uni1793 by uni1793_17B6;
	sub uni1794 by uni1794_17B6;
	sub uni1795 by uni1795_17B6;
	sub uni1796 by uni1796_17B6;
	sub uni1797 by uni1797_17B6;
	sub uni1798 by uni1798_17B6;
	sub uni1799 by uni1799_17B6;
	sub uni179A by uni179A_17B6;
	sub uni179B by uni179B_17B6;
	sub uni179C by uni179C_17B6;
	sub uni179F by uni179F_17B6;
	sub uni17A0 by uni17A0_17B6;
	sub uni17A1 by uni17A1_17B6;
	sub uni17A2 by uni17A2_17B6;
	sub uni1789.a by nyo_17B6khmer.a;
} SUB_4;
lookup SUB_5 {
	sub uni1780 by uni1780_17C5;
	sub uni1781 by uni1781_17C5;
	sub uni1782 by uni1782_17C5;
	sub uni1783 by uni1783_17C5;
	sub uni1784 by uni1784_17C5;
	sub uni1785 by uni1785_17C5;
	sub uni1786 by uni1786_17C5;
	sub uni1787 by uni1787_17C5;
	sub uni1788 by uni1788_17C5;
	sub uni1789 by uni1789_17C5;
	sub uni178A by uni178A_17C5;
	sub uni178B by uni178B_17C5;
	sub uni178C by uni178C_17C5;
	sub uni178D by uni178D_17C5;
	sub uni178E by uni178E_17C5;
	sub uni178F by uni178F_17C5;
	sub uni1790 by uni1790_17C5;
	sub uni1791 by uni1791_17C5;
	sub uni1792 by uni1792_17C5;
	sub uni1793 by uni1793_17C5;
	sub uni1794 by uni1794_17C5;
	sub uni1795 by uni1795_17C5;
	sub uni1796 by uni1796_17C5;
	sub uni1797 by uni1797_17C5;
	sub uni1798 by uni1798_17C5;
	sub uni1799 by uni1799_17C5;
	sub uni179A by uni179A_17C5;
	sub uni179B by uni179B_17C5;
	sub uni179C by uni179C_17C5;
	sub uni179F by uni179F_17C5;
	sub uni17A0 by uni17A0_17C5;
	sub uni17A1 by uni17A1_17C5;
	sub uni17A2 by uni17A2_17C5;
	sub uni1789.a by nyo_17C5khmer.a;
} SUB_5;
lookup SUB_6 {
	sub uni17B6 by uni17B6.space;
	sub uni17C4 by uni17B6.space;
	sub uni17C5 by uni17B6.space;
} SUB_6;
lookup SUB_7 {
	sub uni17D2_1798 by coeng_1798khmer.b;
	sub uni17D2_17A0 by coeng_17A0khmer.b;
} SUB_7;
lookup SUB_8 {
	sub uni17D2179A by uni17D2179A.b;
} SUB_8;
lookup SUB_9 {
	sub uni17D21799 by uni17D2_1799_17B6;
} SUB_9;
";
name = Prefix;
}
);
features = (
{
code = "script khmr;
language dflt;
lookup SUB_19 {
	sub uni17B7 uni17CD by uni17B7_17CD;
} SUB_19;
lookup SUB_20 {
	@SUB_20_0_IN_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17C9 uni17CD uni17B7_17CD];
	sub [uni179A uni179C] @SUB_20_0_IN_0' lookup SUB_0;
	@SUB_20_1_BT_0 = [uni17BB coeng_178Akhmer.r coeng_1797khmer.r coeng_1798khmer.r];
	@SUB_20_1_IN_1 = [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD];
	sub [uni179A uni179C] @SUB_20_1_BT_0 @SUB_20_1_IN_1' lookup SUB_0;
	@SUB_20_2_IN_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17CE uni17D0];
	sub uni17CA @SUB_20_2_IN_0' lookup SUB_1;
} SUB_20;
";
tag = abvs;
},
{
code = "script khmr;
language dflt;
lookup SUB_21 {
	sub uni17D2 uni1780 by uni17D2_1780;
	sub uni17D2 uni1781 by uni17D2_1781;
	sub uni17D2 uni1782 by uni17D2_1782;
	sub uni17D2 uni1784 by uni17D2_1784;
	sub uni17D2 uni1785 by uni17D2_1785;
	sub uni17D2 uni1786 by uni17D2_1786;
	sub uni17D2 uni1787 by uni17D2_1787;
	sub uni17D2 uni1789 by uni17D2_1789;
	sub uni17D2 uni178A by uni17D2_178A;
	sub uni17D2 uni178B by uni17D2_178B;
	sub uni17D2 uni178C by uni17D2_178C;
	sub uni17D2 uni178E by uni17D2_178E;
	sub uni17D2 uni178F by uni17D2_178F;
	sub uni17D2 uni1790 by uni17D2_1790;
	sub uni17D2 uni1791 by uni17D2_1791;
	sub uni17D2 uni1792 by uni17D2_1792;
	sub uni17D2 uni1793 by uni17D2_1793;
	sub uni17D2 uni1795 by uni17D2_1795;
	sub uni17D2 uni1796 by uni17D2_1796;
	sub uni17D2 uni1797 by uni17D2_1797;
	sub uni17D2 uni1798 by uni17D2_1798;
	sub uni17D2 uni179B by uni17D2_179B;
	sub uni17D2 uni179C by uni17D2_179C;
	sub uni17D2 uni17A0 by uni17D2_17A0;
	sub uni17D2 uni17A2 by uni17D2_17A2;
} SUB_21;
lookup SUB_22 {
	@SUB_22_0_IN_0 = [uni17D2_178A uni17D2_178F uni17D2_1797 uni17D2_1798];
	sub [uni179A uni179C] @SUB_22_0_IN_0' lookup SUB_11;
	@SUB_22_1_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_22_1_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_22_2_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_22_2_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni17A1 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_22_6_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_22_6_BT_0 [uni17BF uni17C0]' lookup SUB_13;
	sub [uni1789 uni17A1] [uni17BF uni17C0]' lookup SUB_13;
	@SUB_22_8_LA_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE];
	sub [uni179F uni17A0] uni17CA' lookup SUB_14 @SUB_22_8_LA_0;
	@SUB_22_9_LA_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17D0];
	sub [uni17C9 uni17C9.r]' lookup SUB_15 @SUB_22_9_LA_0;
	sub [uni17C9 uni17C9.r]' lookup SUB_15 uni17B6 uni17C6;
	sub [uni179F uni17A0] uni17CA' lookup SUB_14 uni17B6 uni17C6;
} SUB_22;
";
tag = blwf;
},
{
code = "script khmr;
language dflt;
lookup SUB_23 {
	sub uni17D21783 uni17B6 by uni17D2_1783_17B6;
	sub uni17D21783 uni17C4 by uni17D2_1783_17B6;
	sub uni17D21783 uni17C5 by uni17D2_1783_17C5;
	sub uni17D21788 uni17B6 by uni17D2_1788_17B6;
	sub uni17D21788 uni17C4 by uni17D2_1788_17B6;
	sub uni17D21788 uni17C5 by uni17D2_1788_17C5;
	sub uni17D2178D uni17B6 by uni17D2_178D_17B6;
	sub uni17D2178D uni17C4 by uni17D2_178D_17B6;
	sub uni17D2178D uni17C5 by uni17D2_178D_17C5;
	sub uni17D21794 uni17B6 by uni17D2_1794_17B6;
	sub uni17D21794 uni17C4 by uni17D2_1794_17B6;
	sub uni17D21794 uni17C5 by uni17D2_1794_17C5;
	sub uni17D21799 uni17B6 by uni17D2_1799_17B6;
	sub uni17D21799 uni17C4 by uni17D2_1799_17B6;
	sub uni17D21799 uni17C5 by uni17D2_1799_17C5;
	sub uni17D2179F uni17B6 by uni17D2_179F_17B6;
	sub uni17D2179F uni17C4 by uni17D2_179F_17B6;
	sub uni17D2179F uni17C5 by uni17D2_179F_17C5;
} SUB_23;
lookup SUB_24 {
	@SUB_24_0_LA_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D21783 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D21788 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2178D uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D21794 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D21799 uni17D2_179B uni17D2_179C uni17D2179F uni17D2_17A0 uni17D2_17A2];
	sub uni1789' lookup SUB_16 @SUB_24_0_LA_0;
	sub uni1789.a uni17D2_1789' lookup SUB_17;
	@SUB_24_2_IN_0 = [uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178F uni17D2_17A0];
	sub [uni178E uni178E_17B6 uni178E_17C5] @SUB_24_2_IN_0' lookup SUB_18;
	sub uni178E [uni17BB uni17BC uni17BD]' lookup SUB_2;
	@SUB_24_4_BT_0 = [coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_4_BT_0 [uni17BB.b uni17BC.b uni17BD.b]' lookup SUB_3;
	@SUB_24_5_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	sub @SUB_24_5_IN_0' lookup SUB_4 [uni17B6 uni17C4];
	@SUB_24_6_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_6_LA_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_6_IN_0' lookup SUB_4 @SUB_24_6_LA_1 [uni17B6 uni17C4];
	@SUB_24_7_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_7_LA_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_7_IN_0' lookup SUB_4 @SUB_24_7_LA_1 [uni17B6 uni17C4];
	@SUB_24_8_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	sub @SUB_24_8_IN_0' lookup SUB_5 uni17C5;
	@SUB_24_9_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_9_LA_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_9_IN_0' lookup SUB_5 @SUB_24_9_LA_1 uni17C5;
	@SUB_24_10_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_10_LA_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_10_IN_0' lookup SUB_5 @SUB_24_10_LA_1 uni17C5;
	@SUB_24_11_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	sub @SUB_24_11_BT_0 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_12_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_12_BT_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_12_BT_0 @SUB_24_12_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_13_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_13_BT_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_13_BT_0 @SUB_24_13_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	sub [uni17A1 uni17D2179F] [uni17D2_1798 uni17D2_17A0]' lookup SUB_7;
	@SUB_24_15_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_15_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_15_IN_0' lookup SUB_4 @SUB_24_15_LA_1 uni17B6;
	@SUB_24_16_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_16_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_16_IN_0' lookup SUB_4 @SUB_24_16_LA_1 uni17C4;
	@SUB_24_17_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_17_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_17_IN_0' lookup SUB_5 @SUB_24_17_LA_1 uni17C5;
	@SUB_24_18_LA_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub uni1789.a' lookup SUB_4 @SUB_24_18_LA_0 [uni17B6 uni17C4];
	@SUB_24_19_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_19_BT_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_19_BT_0 @SUB_24_19_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_20_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_20_BT_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_20_BT_0 @SUB_24_20_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_21_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_21_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_24_22_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_24_22_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni17A1 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789_17B6 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789_17B6 uni17BB.b uni17B6' lookup SUB_6;
} SUB_24;
";
tag = clig;
},
{
code = "script khmr;
language dflt;
lookup SUB_25 {
	sub uni17D2 uni179A by uni17D2179A;
} SUB_25;
lookup SUB_26 {
	@SUB_26_0_LA_0 = [uni1780 uni1781 uni1782 uni1784 uni1785 uni1786 uni1787 uni178A uni178B uni178C uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni17A2];
	@SUB_26_0_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub uni17D2179A' lookup SUB_8 @SUB_26_0_LA_0 @SUB_26_0_LA_1;
	sub [uni17C9 uni17C9.r]' lookup SUB_15 uni17B6.space uni17C6;
} SUB_26;
";
tag = pref;
},
{
code = "script khmr;
language dflt;
lookup SUB_27 {
	sub uni17D2 uni1783 by uni17D21783;
	sub uni17D2 uni1788 by uni17D21788;
	sub uni17D2 uni178D by uni17D2178D;
	sub uni17D2 uni1794 by uni17D21794;
	sub uni17D2 uni1799 by uni17D21799;
	sub uni17D2 uni179F by uni17D2179F;
} SUB_27;
lookup SUB_28 {
	@SUB_28_0_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_28_0_BT_0 [uni17BF uni17C0]' lookup SUB_13;
	sub uni17D21799' lookup SUB_9 uni17C9 uni17B6;
	@SUB_28_2_BT_0 = [uni17D2_1783_17B6 uni17D2_1788_17B6 uni17D2_178D_17B6 uni17D2_1794_17B6 uni17D2_1799_17B6 uni17D2_179F_17B6 uni17D2_1783_17C5 uni17D2_1788_17C5 uni17D2_178D_17C5 uni17D2_1794_17C5 uni17D2_1799_17C5 uni17D2_179F_17C5];
	@SUB_28_2_IN_1 = [uni17C9 uni17CA uni17CC uni17C9.r];
	sub @SUB_28_2_BT_0 @SUB_28_2_IN_1' lookup SUB_10 [uni17B6 uni17C4 uni17C5]' lookup SUB_10;
} SUB_28;
";
tag = pstf;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 2150;
},
{
name = typoDescender;
value = -1120;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2150;
},
{
name = winDescent;
value = 1120;
},
{
name = hheaAscender;
value = 2150;
},
{
name = hheaDescender;
value = -1120;
},
{
name = strikeoutPosition;
value = 498;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01240 22 2 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01229 8 15 7 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01237 6 22 5 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\0121920 1024 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\01264 64 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 6 values pushed */\01231 6 17 5 2 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    263,\012    263,\012    143,\012    143,\012    1303,\012    \"-93\",\012    0,\012    \"-609\",\012    \"-888\",\012    1303,\012    \"-93\",\012    0,\012    \"-659\",\012    \"-888\",\012    291,\012    291,\012    224,\012    224,\012    1456,\012    0,\012    1560,\012    1082,\012    0,\012    \"-416\",\012    1477,\012    \"-21\",\012    1581,\012    1102,\012    \"-21\",\012    \"-437\"\012)";
}
);
iconName = Bold;
id = m01;
metricValues = (
{
pos = 2150;
},
{
pos = 1462;
},
{
pos = 1098;
},
{
},
{
pos = -1120;
},
{
}
);
name = Bold;
}
);
glyphs = (
{
glyphname = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(500,393,l),
(1012,393,l),
(1076,193,l),
(975,175,l),
(975,0,l),
(1471,0,l),
(1471,175,l),
(1367,190,l),
(907,1456,l),
(608,1456,l),
(145,190,l),
(41,175,l),
(41,0,l),
(537,0,l),
(537,175,l),
(436,193,l)
);
},
{
closed = 1;
nodes = (
(773,1107,l),
(943,608,l),
(569,608,l),
(738,1104,l),
(753,1151,l),
(759,1151,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
21 1 4 1 15 12 11 8 3 0 6 0 3 2 76 0 4 0 3 0 4 3 104 0 1 1 31 77 2 1 0 0 32 0 78 20 19 19 19 17 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1512;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1301,215,o),
(1301,424,qs),
(1301,505,o),
(1243,642,o),
(1126,738,o),
(1039,757,q),
(1141,797,o),
(1248,956,o),
(1248,1057,qs),
(1248,1256,o),
(960,1456,o),
(703,1456,qs),
(56,1456,l),
(56,1280,l),
(211,1250,l),
(211,205,l),
(56,175,l),
(56,0,l),
(772,0,ls),
(1025,0,o)
);
},
{
closed = 1;
nodes = (
(869,644,o),
(964,594,o),
(1010,496,o),
(1010,424,qs),
(1010,325,o),
(888,224,o),
(772,224,qs),
(503,224,l),
(503,644,l),
(794,644,ls)
);
},
{
closed = 1;
nodes = (
(829,1231,o),
(956,1135,o),
(956,1034,qs),
(956,942,o),
(830,846,o),
(713,846,qs),
(503,846,l),
(503,1231,l),
(703,1231,ls)
);
}
);
width = 1344;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1158,56,o),
(1243,112,q),
(1243,460,l),
(1026,460,l),
(996,255,l),
(944,232,o),
(817,203,o),
(754,203,qs),
(628,203,o),
(444,326,o),
(344,550,o),
(344,703,qs),
(344,754,ls),
(344,907,o),
(439,1130,o),
(617,1252,o),
(741,1252,qs),
(794,1252,o),
(885,1234,o),
(963,1200,o),
(996,1176,q),
(1026,955,l),
(1243,955,l),
(1243,1307,l),
(1141,1393,o),
(882,1477,o),
(734,1477,qs),
(523,1477,o),
(217,1291,o),
(52,964,o),
(52,752,qs),
(52,703,ls),
(52,481,o),
(223,156,o),
(537,-21,o),
(749,-21,qs),
(904,-21,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
12 1 3 1 34 1 0 4 2 76 0 2 3 5 3 2 5 128 0 5 4 3 5 4 126 0 3 3 1 97 0 1 1 37 77 0 4 4 0 97 6 1 0 0 38 0 78 1 0 33 32 29 27 20 18 14 13 10 8 0 36 1 36 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1321;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1190,184,o),
(1355,507,o),
(1355,714,qs),
(1355,741,ls),
(1355,950,o),
(1188,1273,o),
(890,1456,o),
(695,1456,qs),
(56,1456,l),
(56,1280,l),
(213,1246,l),
(213,208,l),
(56,175,l),
(56,0,l),
(699,0,ls),
(894,0,o)
);
},
{
closed = 1;
nodes = (
(805,1232,o),
(973,1107,o),
(1062,886,o),
(1062,742,qs),
(1062,714,ls),
(1062,572,o),
(973,350,o),
(805,223,o),
(684,223,qs),
(505,223,l),
(505,1232,l),
(684,1232,ls)
);
}
);
width = 1426;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(973,224,l),
(503,224,l),
(503,640,l),
(996,640,l),
(996,865,l),
(503,865,l),
(503,1231,l),
(949,1231,l),
(962,1063,l),
(1186,1063,l),
(1186,1456,l),
(56,1456,l),
(56,1280,l),
(211,1250,l),
(211,205,l),
(56,175,l),
(56,0,l),
(1208,0,l),
(1208,398,l),
(986,398,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
6 5 2 3 1 4 3 2 0 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 3 4 3 2 114 8 1 7 5 6 6 7 114 0 4 0 5 7 4 5 103 0 3 3 1 95 0 1 1 31 77 0 6 6 0 96 0 0 0 32 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 3 4 3 2 114 8 1 7 5 6 5 7 6 128 0 4 0 5 7 4 5 103 0 3 3 1 95 0 1 1 31 77 0 6 6 0 96 0 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 3 4 3 2 4 128 8 1 7 5 6 5 7 6 128 0 4 0 5 7 4 5 103 0 3 3 1 95 0 1 1 31 77 0 6 6 0 96 0 0 0 32 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 19 0 19 17 17 17 17 17 21 17 9 8 29 
CALL[ ]	/* CallFunction */";
};
width = 1308;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,605,l),
(1013,605,l),
(1013,830,l),
(503,830,l),
(503,1231,l),
(978,1231,l),
(991,1057,l),
(1215,1057,l),
(1215,1456,l),
(56,1456,l),
(56,1280,l),
(211,1250,l),
(211,205,l),
(56,175,l),
(56,0,l),
(659,0,l),
(659,175,l),
(503,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
6 5 2 3 1 17 4 3 0 4 0 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 4 3 2 114 0 4 0 5 0 4 5 103 0 3 3 1 95 0 1 1 31 77 0 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 3 4 3 2 4 128 0 4 0 5 0 4 5 103 0 3 3 1 95 0 1 1 31 77 0 0 0 32 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 17 17 17 21 17 6 8 28 
CALL[ ]	/* CallFunction */";
};
width = 1265;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1186,63,o),
(1283,132,q),
(1283,721,l),
(782,721,l),
(782,516,l),
(990,500,l),
(990,253,l),
(948,232,o),
(819,203,o),
(742,203,qs),
(611,203,o),
(431,323,o),
(338,542,o),
(338,690,qs),
(338,742,ls),
(338,894,o),
(432,1124,o),
(609,1252,o),
(731,1252,qs),
(816,1252,o),
(948,1211,o),
(987,1177,q),
(1028,982,l),
(1244,982,l),
(1244,1305,l),
(1142,1391,o),
(866,1477,o),
(709,1477,qs),
(506,1477,o),
(209,1290,o),
(47,958,o),
(47,740,qs),
(47,690,ls),
(47,479,o),
(210,159,o),
(516,-21,o),
(733,-21,qs),
(913,-21,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
12 1 3 1 32 31 30 3 4 5 35 1 0 4 3 76 0 2 3 5 3 2 5 128 0 5 4 3 5 4 126 0 3 3 1 97 0 1 1 37 77 0 4 4 0 98 6 1 0 0 38 0 78 1 0 34 33 28 26 19 17 14 13 10 8 0 37 1 37 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1373;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,605,l),
(1097,605,l),
(1097,205,l),
(941,175,l),
(941,0,l),
(1544,0,l),
(1544,175,l),
(1388,205,l),
(1388,1250,l),
(1544,1280,l),
(1544,1456,l),
(941,1456,l),
(941,1280,l),
(1097,1250,l),
(1097,830,l),
(503,830,l),
(503,1250,l),
(659,1280,l),
(659,1456,l),
(56,1456,l),
(56,1280,l),
(211,1250,l),
(211,205,l),
(56,175,l),
(56,0,l),
(659,0,l),
(659,175,l),
(503,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
18 17 14 13 10 9 6 5 8 2 1 27 24 23 20 19 4 3 0 8 0 5 2 76 0 2 0 5 0 2 5 104 3 1 1 1 31 77 4 1 0 0 32 0 78 19 21 19 19 21 17 6 8 28 
CALL[ ]	/* CallFunction */";
};
width = 1600;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,1250,l),
(658,1280,l),
(658,1456,l),
(56,1456,l),
(56,1280,l),
(211,1250,l),
(211,205,l),
(56,175,l),
(56,0,l),
(658,0,l),
(658,175,l),
(503,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
11 10 9 6 5 4 3 0 8 0 1 1 76 0 1 1 31 77 0 0 0 32 0 78 21 17 2 8 24 
CALL[ ]	/* CallFunction */";
};
width = 714;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(911,91,o),
(1019,297,o),
(1019,437,qs),
(1019,1250,l),
(1175,1280,l),
(1175,1456,l),
(532,1456,l),
(532,1280,l),
(728,1250,l),
(728,437,ls),
(728,362,o),
(675,259,o),
(584,207,o),
(524,207,qs),
(431,207,o),
(319,320,o),
(311,463,q),
(37,463,l),
(35,457,l),
(41,294,o),
(172,82,o),
(401,-21,o),
(553,-21,qs),
(703,-21,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
19 18 15 14 4 1 3 1 76 0 1 3 2 3 1 2 128 0 3 3 31 77 0 2 2 0 98 4 1 0 0 38 0 78 1 0 17 16 10 8 6 4 0 23 1 23 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1202;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1461,1280,l),
(1461,1456,l),
(862,1456,l),
(862,1280,l),
(1006,1268,l),
(1004,1265,l),
(503,749,l),
(503,1250,l),
(651,1280,l),
(651,1456,l),
(56,1456,l),
(56,1280,l),
(211,1250,l),
(211,205,l),
(56,175,l),
(56,0,l),
(651,0,l),
(651,175,l),
(503,205,l),
(503,419,l),
(710,629,l),
(1031,187,l),
(1030,187,l),
(894,175,l),
(894,0,l),
(1513,0,l),
(1513,175,l),
(1370,200,l),
(903,825,l),
(1324,1253,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
28 25 23 22 21 20 17 16 15 14 11 10 9 8 6 5 2 17 0 2 1 76 3 1 2 2 31 77 1 1 0 0 32 0 78 23 21 24 19 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1545;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(914,224,l),
(503,224,l),
(503,1250,l),
(679,1280,l),
(679,1456,l),
(56,1456,l),
(56,1280,l),
(211,1250,l),
(211,205,l),
(56,175,l),
(56,0,l),
(1151,0,l),
(1151,437,l),
(928,437,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
10 9 6 5 4 3 1 4 3 2 0 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
4 1 3 1 2 2 3 114 0 1 1 31 77 0 2 2 0 96 0 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
4 1 3 1 2 1 3 2 128 0 1 1 31 77 0 2 2 0 96 0 0 0 32 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 13 0 13 19 21 17 5 8 25 
CALL[ ]	/* CallFunction */";
};
width = 1200;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,514,l),
(470,1132,l),
(476,1133,l),
(921,20,l),
(1142,20,l),
(1577,1142,l),
(1583,1141,l),
(1578,484,l),
(1578,205,l),
(1415,175,l),
(1415,0,l),
(2018,0,l),
(2018,175,l),
(1862,205,l),
(1862,1250,l),
(2018,1280,l),
(2018,1456,l),
(1430,1456,l),
(1046,441,l),
(1040,441,l),
(643,1456,l),
(56,1456,l),
(56,1280,l),
(211,1250,l),
(211,205,l),
(56,175,l),
(56,0,l),
(659,0,l),
(659,175,l),
(487,205,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
29 26 22 20 19 16 15 14 13 9 6 5 4 3 0 15 0 1 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
29 26 22 20 19 16 15 14 13 9 6 5 4 3 0 15 4 1 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
2 1 1 1 31 77 4 3 2 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 1 31 77 0 4 4 32 77 3 1 0 0 32 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
22 21 19 21 17 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 2066;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(472,999,l),
(478,1000,l),
(1126,0,l),
(1408,0,l),
(1408,1250,l),
(1564,1280,l),
(1564,1456,l),
(961,1456,l),
(961,1280,l),
(1147,1250,l),
(1147,447,l),
(1141,446,l),
(507,1456,l),
(56,1456,l),
(56,1280,l),
(211,1250,l),
(211,205,l),
(56,175,l),
(56,0,l),
(659,0,l),
(659,175,l),
(472,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
21 19 16 15 12 11 9 6 5 4 3 0 12 0 1 1 76 2 1 1 1 31 77 3 1 0 0 32 0 78 19 21 21 17 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1604;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1114,89,o),
(1290,288,o),
(1385,557,o),
(1385,717,qs),
(1385,739,ls),
(1385,898,o),
(1290,1167,o),
(1114,1367,o),
(870,1477,o),
(722,1477,qs),
(575,1477,o),
(333,1367,o),
(159,1167,o),
(65,898,o),
(65,739,qs),
(65,717,ls),
(65,557,o),
(159,288,o),
(334,89,o),
(576,-21,o),
(723,-21,qs),
(871,-21,o)
);
},
{
closed = 1;
nodes = (
(438,334,o),
(357,564,o),
(357,717,qs),
(357,741,ls),
(357,894,o),
(438,1122,o),
(600,1249,o),
(722,1249,qs),
(845,1249,o),
(1010,1121,o),
(1094,892,o),
(1094,741,qs),
(1094,717,ls),
(1094,564,o),
(1011,334,o),
(847,206,o),
(723,206,qs),
(601,206,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 1 97 0 1 1 37 77 5 1 2 2 0 97 4 1 0 0 38 0 78 23 22 1 0 32 30 22 39 23 39 12 10 0 21 1 21 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1446;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,205,l),
(503,528,l),
(749,528,ls),
(916,528,o),
(1158,643,o),
(1288,852,o),
(1288,991,qs),
(1288,1130,o),
(1158,1339,o),
(916,1456,o),
(749,1456,qs),
(56,1456,l),
(56,1280,l),
(211,1250,l),
(211,205,l),
(56,175,l),
(56,0,l),
(659,0,l),
(659,175,l)
);
},
{
closed = 1;
nodes = (
(871,1231,o),
(996,1094,o),
(996,989,qs),
(996,886,o),
(871,753,o),
(749,753,qs),
(503,753,l),
(503,1231,l),
(749,1231,ls)
);
}
);
width = 1325;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1250,213,o),
(1387,527,o),
(1387,717,qs),
(1387,739,ls),
(1387,898,o),
(1292,1168,o),
(1115,1367,o),
(872,1477,o),
(724,1477,qs),
(577,1477,o),
(335,1367,o),
(161,1168,o),
(67,898,o),
(67,739,qs),
(67,717,ls),
(67,557,o),
(161,287,o),
(335,89,o),
(578,-21,o),
(725,-21,qs),
(764,-21,o),
(843,-11,o),
(882,-3,q),
(1293,-281,l),
(1437,-79,l),
(1127,114,l)
);
},
{
closed = 1;
nodes = (
(440,334,o),
(359,564,o),
(359,717,qs),
(359,741,ls),
(359,894,o),
(439,1122,o),
(601,1249,o),
(724,1249,qs),
(847,1249,o),
(1012,1121,o),
(1096,892,o),
(1096,741,qs),
(1096,717,ls),
(1096,564,o),
(1014,334,o),
(849,206,o),
(725,206,qs),
(604,206,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
25 1 0 2 1 76 1 1 0 73 0 3 3 1 97 0 1 1 37 77 4 1 2 2 0 97 0 0 0 38 0 78 27 26 36 34 26 43 27 43 41 36 5 8 24 
CALL[ ]	/* CallFunction */";
};
width = 1449;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(868,1231,o),
(992,1110,o),
(992,1009,qs),
(992,907,o),
(867,800,o),
(741,800,qs),
(503,800,l),
(503,1231,l),
(746,1231,ls)
);
},
{
closed = 1;
nodes = (
(1347,0,l),
(1347,175,l),
(1223,204,l),
(1038,632,l),
(1039,633,o),
(1041,634,qs),
(1155,692,o),
(1283,894,o),
(1283,1022,qs),
(1283,1158,o),
(1154,1352,o),
(914,1456,o),
(746,1456,qs),
(56,1456,l),
(56,1280,l),
(211,1250,l),
(211,205,l),
(56,175,l),
(56,0,l),
(659,0,l),
(659,175,l),
(503,205,l),
(503,575,l),
(769,575,l),
(993,0,l)
);
}
);
width = 1408;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1054,77,o),
(1188,258,o),
(1188,382,qs),
(1188,561,o),
(939,781,o),
(698,848,q),
(586,885,o),
(459,950,o),
(405,1023,o),
(405,1072,qs),
(405,1129,o),
(467,1209,o),
(574,1251,o),
(644,1251,qs),
(726,1251,o),
(855,1215,o),
(893,1191,q),
(931,991,l),
(1150,991,l),
(1150,1319,l),
(1056,1394,o),
(927,1436,qs),
(803,1476,o),
(644,1476,qs),
(629,1476,ls),
(477,1474,o),
(245,1370,o),
(114,1189,o),
(114,1071,qs),
(114,952,o),
(227,783,o),
(454,662,o),
(627,611,qs),
(727,580,o),
(844,513,o),
(895,432,o),
(895,380,qs),
(895,325,o),
(838,244,o),
(729,200,o),
(650,200,qs),
(557,200,o),
(399,247,o),
(354,285,q),
(323,492,l),
(97,492,l),
(97,140,l),
(225,51,o),
(489,-21,o),
(650,-21,qs),
(812,-21,o)
);
}
);
width = 1247;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(839,1231,l),
(1106,1231,l),
(1122,1057,l),
(1344,1057,l),
(1344,1456,l),
(45,1456,l),
(45,1057,l),
(266,1057,l),
(282,1231,l),
(547,1231,l),
(547,205,l),
(391,175,l),
(391,0,l),
(996,0,l),
(996,175,l),
(839,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
15 4 3 0 4 0 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
4 1 2 1 0 1 2 114 5 1 1 1 3 95 0 3 3 31 77 0 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 1 2 1 0 1 2 0 128 5 1 1 1 3 95 0 3 3 31 77 0 0 0 32 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 17 17 17 19 17 6 8 28 
CALL[ ]	/* CallFunction */";
};
width = 1389;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1214,98,o),
(1361,327,o),
(1361,490,qs),
(1361,1250,l),
(1517,1280,l),
(1517,1456,l),
(914,1456,l),
(914,1280,l),
(1069,1250,l),
(1069,490,ls),
(1069,394,o),
(999,266,o),
(868,203,o),
(776,203,qs),
(686,203,o),
(556,266,o),
(486,394,o),
(486,490,qs),
(486,1250,l),
(642,1280,l),
(642,1456,l),
(39,1456,l),
(39,1280,l),
(194,1250,l),
(194,490,ls),
(194,327,o),
(340,99,o),
(603,-21,o),
(776,-21,qs),
(951,-21,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
25 24 21 20 10 9 6 5 8 2 1 1 76 3 1 1 1 31 77 0 2 2 0 98 4 1 0 0 38 0 78 1 0 23 22 16 14 8 7 0 29 1 29 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1555;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1502,1456,l),
(950,1456,l),
(950,1280,l),
(1103,1260,l),
(817,399,l),
(796,321,l),
(790,321,l),
(768,401,l),
(482,1260,l),
(613,1280,l),
(613,1456,l),
(34,1456,l),
(34,1280,l),
(164,1264,l),
(632,0,l),
(931,0,l),
(1370,1264,l),
(1502,1280,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
17 14 13 10 8 7 4 7 0 1 1 76 2 1 1 1 31 77 0 0 0 32 0 78 25 19 17 3 8 25 
CALL[ ]	/* CallFunction */";
};
width = 1535;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1111,971,l),
(1146,851,l),
(1422,0,l),
(1686,0,l),
(2028,1265,l),
(2167,1280,l),
(2167,1456,l),
(1592,1456,l),
(1592,1280,l),
(1758,1257,l),
(1581,524,l),
(1551,409,l),
(1545,409,l),
(1510,524,l),
(1211,1456,l),
(996,1456,l),
(708,549,l),
(671,419,l),
(665,419,l),
(634,549,l),
(463,1257,l),
(620,1280,l),
(620,1456,l),
(34,1456,l),
(34,1280,l),
(183,1265,l),
(521,0,l),
(787,0,l),
(1066,847,l),
(1105,971,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
28 23 20 19 16 10 8 7 4 9 0 1 1 76 3 2 2 1 1 31 77 4 1 0 0 32 0 78 19 23 23 19 17 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 2202;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(751,557,l),
(1021,187,l),
(896,175,l),
(896,0,l),
(1479,0,l),
(1479,175,l),
(1340,200,l),
(922,747,l),
(1295,1255,l),
(1424,1280,l),
(1424,1456,l),
(863,1456,l),
(863,1280,l),
(999,1267,l),
(749,917,l),
(499,1267,l),
(638,1280,l),
(638,1456,l),
(69,1456,l),
(69,1280,l),
(187,1255,l),
(575,721,l),
(163,199,l),
(36,175,l),
(36,0,l),
(597,0,l),
(597,175,l),
(475,187,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
27 26 25 24 21 19 17 14 13 12 11 10 7 5 3 0 16 0 1 1 76 2 1 1 1 31 77 3 1 0 0 32 0 78 22 22 22 17 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1514;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(899,522,l),
(1325,1260,l),
(1469,1280,l),
(1469,1456,l),
(899,1456,l),
(899,1280,l),
(1059,1263,l),
(790,796,l),
(768,752,l),
(762,751,l),
(740,798,l),
(498,1263,l),
(617,1280,l),
(617,1456,l),
(36,1456,l),
(36,1280,l),
(176,1260,l),
(608,499,l),
(608,205,l),
(452,175,l),
(452,0,l),
(1055,0,l),
(1055,175,l),
(899,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
23 22 20 17 16 13 11 10 7 5 4 3 0 13 0 1 1 76 2 1 1 1 31 77 0 0 0 32 0 78 25 22 17 3 8 25 
CALL[ ]	/* CallFunction */";
};
width = 1508;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(937,224,l),
(430,224,l),
(1143,1270,l),
(1143,1456,l),
(107,1456,l),
(95,1045,l),
(318,1045,l),
(341,1231,l),
(784,1231,l),
(74,192,l),
(74,0,l),
(1165,0,l),
(1183,410,l),
(961,410,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 1 3 3 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 1 2 114 6 1 5 4 4 5 112 0 1 1 3 95 0 3 3 31 77 0 4 4 0 96 0 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 5 1 2 5 128 6 1 5 4 1 5 4 126 0 1 1 3 95 0 3 3 31 77 0 4 4 0 96 0 0 0 32 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 13 0 13 18 17 17 18 17 7 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1226;
}
);
note = Z;
unicode = 90;
},
{
glyphname = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(661,58,o),
(713,124,q),
(718,92,o),
(740,28,o),
(751,0,q),
(1113,0,l),
(1113,175,l),
(1000,191,l),
(997,211,o),
(996,254,o),
(996,276,qs),
(996,722,ls),
(996,905,o),
(750,1102,o),
(538,1102,qs),
(416,1102,o),
(218,1042,o),
(133,994,q),
(137,713,l),
(347,713,l),
(370,856,l),
(400,877,o),
(475,900,o),
(522,900,qs),
(613,900,o),
(704,803,o),
(704,725,qs),
(704,645,l),
(561,645,ls),
(402,645,o),
(185,557,o),
(74,403,o),
(74,301,qs),
(74,152,o),
(264,-21,o),
(425,-21,qs),
(520,-21,o)
);
},
{
closed = 1;
nodes = (
(365,258,o),
(365,316,qs),
(365,378,o),
(464,466,o),
(560,466,qs),
(704,466,l),
(704,295,l),
(674,250,o),
(564,195,o),
(503,195,qs),
(438,195,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
18 1 2 4 40 1 6 7 34 29 2 0 6 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
18 1 2 4 40 1 6 7 34 29 2 5 6 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 2 1 2 3 1 128 0 1 0 7 6 1 7 105 0 2 2 4 97 0 4 4 40 77 9 1 6 6 0 97 5 8 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 1 2 3 1 128 0 1 0 7 6 1 7 105 0 2 2 4 97 0 4 4 40 77 0 5 5 32 77 9 1 6 6 0 97 8 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
38 37 1 0 43 41 37 47 38 47 31 30 22 20 17 16 13 11 8 6 0 36 1 36 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1154;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1013,111,o),
(1109,350,o),
(1109,511,qs),
(1109,532,ls),
(1109,705,o),
(1013,961,o),
(830,1102,o),
(699,1102,qs),
(608,1102,o),
(471,1032,o),
(424,967,q),
(424,1560,l),
(-22,1560,l),
(-22,1384,l),
(133,1354,l),
(133,0,l),
(385,0,l),
(406,133,l),
(454,58,o),
(596,-21,o),
(696,-21,qs),
(829,-21,o)
);
},
{
closed = 1;
nodes = (
(454,258,o),
(424,308,q),
(424,760,l),
(451,813,o),
(545,875,o),
(611,875,qs),
(684,875,o),
(775,791,o),
(818,638,o),
(818,532,qs),
(818,511,ls),
(818,365,o),
(720,206,o),
(608,206,qs),
(547,206,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
7 6 2 3 2 10 1 5 3 34 33 2 4 5 3 1 0 4 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
7 6 2 3 2 10 1 5 3 34 33 2 4 5 3 1 1 4 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 2 33 77 0 5 5 3 97 0 3 3 40 77 7 1 4 4 0 97 1 6 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 33 77 0 5 5 3 97 0 3 3 40 77 0 1 1 32 77 7 1 4 4 0 97 6 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
23 22 1 0 31 29 22 36 23 36 14 12 9 8 5 4 0 21 1 21 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1181;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(896,69,o),
(997,237,o),
(1014,352,q),
(1011,358,l),
(762,358,l),
(744,284,o),
(651,203,o),
(574,203,qs),
(514,203,o),
(417,271,o),
(359,414,o),
(359,525,qs),
(359,555,ls),
(359,660,o),
(411,808,o),
(516,888,o),
(596,888,qs),
(634,888,o),
(708,858,o),
(732,834,q),
(771,641,l),
(991,641,l),
(993,951,l),
(927,1011,o),
(716,1102,o),
(570,1102,qs),
(417,1102,o),
(191,961,o),
(67,715,o),
(67,555,qs),
(67,525,ls),
(67,366,o),
(189,119,o),
(416,-21,o),
(572,-21,qs),
(713,-21,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
12 1 3 1 1 76 0 2 3 5 3 2 5 128 0 5 4 3 5 4 126 0 3 3 1 97 0 1 1 40 77 0 4 4 0 97 6 1 0 0 38 0 78 1 0 31 30 28 26 19 17 14 13 10 8 0 35 1 35 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1082;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(716,57,o),
(767,132,q),
(789,0,l),
(1182,0,l),
(1182,175,l),
(1042,205,l),
(1042,1560,l),
(594,1560,l),
(594,1384,l),
(750,1354,l),
(750,966,l),
(701,1031,o),
(567,1102,o),
(478,1102,qs),
(350,1102,o),
(166,959,o),
(67,703,o),
(67,532,qs),
(67,511,ls),
(67,351,o),
(165,112,o),
(350,-21,o),
(479,-21,qs),
(575,-21,o)
);
},
{
closed = 1;
nodes = (
(359,369,o),
(359,511,qs),
(359,532,ls),
(359,634,o),
(402,788,o),
(495,875,o),
(568,875,qs),
(628,875,o),
(720,818,o),
(750,766,q),
(750,307,l),
(719,258,o),
(627,206,o),
(566,206,qs),
(455,206,o)
);
}
);
width = 1212;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(915,50,o),
(982,104,q),
(903,284,l),
(837,244,o),
(698,203,o),
(618,203,qs),
(541,203,o),
(433,266,o),
(374,377,o),
(368,448,q),
(370,454,l),
(1006,454,l),
(1006,613,ls),
(1006,768,o),
(902,986,o),
(702,1102,o),
(555,1102,qs),
(551,1102,ls),
(404,1102,o),
(297,1032,qs),
(187,960,o),
(67,711,o),
(67,550,qs),
(67,510,ls),
(67,356,o),
(194,116,o),
(426,-21,o),
(581,-21,qs),
(712,-21,o)
);
},
{
closed = 1;
nodes = (
(422,825,o),
(502,886,o),
(560,886,qs),
(621,886,o),
(698,834,o),
(733,739,o),
(733,673,qs),
(733,647,l),
(372,647,l),
(369,652,l),
(377,719,o)
);
}
);
width = 1078;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(512,205,l),
(512,877,l),
(757,877,l),
(757,1082,l),
(512,1082,l),
(512,1202,ls),
(512,1275,o),
(586,1353,o),
(662,1353,qs),
(694,1353,o),
(756,1346,o),
(780,1339,q),
(805,1556,l),
(768,1566,o),
(664,1581,o),
(617,1581,qs),
(429,1581,o),
(220,1384,o),
(220,1202,qs),
(220,1082,l),
(59,1082,l),
(59,877,l),
(220,877,l),
(220,205,l),
(79,175,l),
(79,0,l),
(703,0,l),
(703,175,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
14 1 4 3 15 1 2 4 27 26 3 2 4 0 1 3 76 0 4 4 3 97 0 3 3 39 77 6 1 1 1 2 95 5 1 2 2 34 77 0 0 0 32 0 78 17 19 37 35 17 19 16 7 8 29 
CALL[ ]	/* CallFunction */";
};
width = 799;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(923,-321,o),
(1044,-111,o),
(1044,32,qs),
(1044,1082,l),
(790,1082,l),
(769,946,l),
(720,1021,o),
(580,1102,o),
(483,1102,qs),
(353,1102,o),
(167,959,o),
(67,703,o),
(67,532,qs),
(67,511,ls),
(67,352,o),
(167,112,o),
(357,-21,o),
(489,-21,qs),
(573,-21,o),
(703,43,o),
(751,104,q),
(751,33,ls),
(751,-83,o),
(642,-213,o),
(525,-213,qs),
(457,-213,o),
(300,-178,o),
(230,-148,q),
(176,-356,l),
(254,-395,o),
(458,-437,o),
(540,-437,qs),
(697,-437,o)
);
},
{
closed = 1;
nodes = (
(359,369,o),
(359,511,qs),
(359,532,ls),
(359,635,o),
(403,788,o),
(497,875,o),
(572,875,qs),
(632,875,o),
(723,821,o),
(751,772,q),
(751,302,l),
(723,255,o),
(633,206,o),
(571,206,qs),
(457,206,o)
);
},
{
closed = 1;
nodes = (
(1007,871,l),
(1171,906,l),
(1171,1082,l),
(880,1082,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
49 26 2 6 3 50 37 36 3 5 6 11 1 2 5 4 1 1 2 3 1 0 1 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
49 26 2 6 4 50 37 36 3 5 6 11 1 2 5 4 1 1 2 3 1 0 1 5 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 6 3 95 10 7 4 3 3 3 34 77 9 1 5 5 2 97 0 2 2 38 77 0 1 1 0 97 8 1 0 0 42 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 7 2 4 4 34 77 0 6 6 3 97 0 3 3 40 77 9 1 5 5 2 97 0 2 2 38 77 0 1 1 0 97 8 1 0 0 42 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
48 48 34 33 1 0 48 51 48 51 41 39 33 47 34 47 28 27 24 22 15 13 8 6 0 32 1 32 11 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1198;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(479,205,l),
(479,779,l),
(510,826,o),
(607,875,o),
(666,875,qs),
(751,875,o),
(839,777,o),
(839,660,qs),
(839,205,l),
(713,175,l),
(713,0,l),
(1271,0,l),
(1271,175,l),
(1131,205,l),
(1131,658,ls),
(1131,885,o),
(940,1102,o),
(777,1102,qs),
(681,1102,o),
(530,1019,o),
(479,944,q),
(479,1560,l),
(32,1560,l),
(32,1384,l),
(188,1354,l),
(188,205,l),
(47,175,l),
(47,0,l),
(605,0,l),
(605,175,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
5 4 2 2 1 8 1 4 2 29 28 27 20 19 16 15 3 2 9 0 4 3 76 0 1 1 33 77 0 4 4 2 97 0 2 2 40 77 3 1 0 0 32 0 78 37 21 35 21 16 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1302;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(185,1311,l),
(487,1311,l),
(487,1560,l),
(185,1560,l)
);
},
{
closed = 1;
nodes = (
(487,1082,l),
(39,1082,l),
(39,906,l),
(195,876,l),
(195,205,l),
(54,175,l),
(54,0,l),
(627,0,l),
(627,175,l),
(487,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
13 10 9 8 7 4 6 2 3 1 76 0 0 0 1 95 4 1 1 1 33 77 0 3 3 34 77 0 2 2 32 2 78 0 0 12 11 6 5 0 3 0 3 17 5 8 23 
CALL[ ]	/* CallFunction */";
};
width = 661;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,-231,o),
(486,-40,qs),
(486,1082,l),
(39,1082,l),
(39,906,l),
(195,876,l),
(195,-40,ls),
(195,-122,o),
(131,-212,o),
(74,-212,qs),
(47,-212,o),
(-2,-205,o),
(-24,-199,q),
(-39,-420,l),
(-3,-429,o),
(64,-437,o),
(105,-437,qs),
(285,-437,o)
);
},
{
closed = 1;
nodes = (
(181,1311,l),
(483,1311,l),
(483,1560,l),
(181,1560,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
12 11 4 3 1 2 3 1 0 1 2 76 0 3 3 4 95 6 1 4 4 33 77 0 2 2 34 77 0 1 1 0 98 5 1 0 0 42 0 78 18 18 1 0 18 21 18 21 20 19 14 13 8 6 0 17 1 17 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1232,906,l),
(1232,1082,l),
(669,1082,l),
(669,908,l),
(780,892,l),
(778,889,l),
(479,615,l),
(479,1560,l),
(32,1560,l),
(32,1384,l),
(188,1354,l),
(188,205,l),
(47,175,l),
(47,0,l),
(605,0,l),
(605,175,l),
(479,205,l),
(479,324,l),
(623,452,l),
(816,189,l),
(818,185,l),
(736,166,l),
(736,0,l),
(1277,0,l),
(1277,175,l),
(1143,206,l),
(820,629,l),
(1092,871,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
17 16 2 3 2 26 23 21 20 15 14 11 10 9 8 6 5 2 13 0 3 2 76 0 2 2 33 77 0 3 3 34 77 1 1 0 0 32 0 78 21 21 24 19 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1316;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(480,1560,l),
(32,1560,l),
(32,1384,l),
(188,1354,l),
(188,205,l),
(47,175,l),
(47,0,l),
(621,0,l),
(621,175,l),
(480,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
9 6 5 4 3 0 6 0 1 1 76 0 1 1 33 77 0 0 0 32 0 78 21 17 2 8 24 
CALL[ ]	/* CallFunction */";
};
width = 653;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,205,l),
(484,778,l),
(513,825,o),
(603,875,o),
(665,875,qs),
(742,875,o),
(821,779,o),
(821,662,qs),
(821,205,l),
(703,175,l),
(703,0,l),
(1230,0,l),
(1230,175,l),
(1112,205,l),
(1112,735,l),
(1133,798,o),
(1227,875,o),
(1295,875,qs),
(1370,875,o),
(1449,782,o),
(1449,662,qs),
(1449,205,l),
(1323,175,l),
(1323,0,l),
(1882,0,l),
(1882,175,l),
(1741,205,l),
(1741,661,ls),
(1741,884,o),
(1556,1102,o),
(1396,1102,qs),
(1288,1102,o),
(1128,1004,o),
(1078,917,q),
(1041,1010,o),
(892,1102,o),
(788,1102,qs),
(685,1102,o),
(528,1017,o),
(476,939,q),
(464,1082,l),
(37,1082,l),
(37,906,l),
(193,876,l),
(193,205,l),
(52,175,l),
(52,0,l),
(610,0,l),
(610,175,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
14 8 5 4 4 5 1 48 47 46 39 38 35 34 33 26 25 22 21 3 2 14 0 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
7 1 5 5 1 97 3 2 2 1 1 34 77 6 4 2 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 1 34 77 7 1 5 5 2 97 3 1 2 2 40 77 6 4 2 0 0 32 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 21 37 21 36 35 21 16 8 8 30 
CALL[ ]	/* CallFunction */";
};
width = 1917;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,205,l),
(484,773,l),
(515,822,o),
(608,875,o),
(671,875,qs),
(756,875,o),
(842,784,o),
(842,675,qs),
(842,205,l),
(717,175,l),
(717,0,l),
(1275,0,l),
(1275,175,l),
(1135,205,l),
(1135,676,ls),
(1135,896,o),
(953,1102,o),
(792,1102,qs),
(690,1102,o),
(531,1010,o),
(477,927,q),
(464,1082,l),
(37,1082,l),
(37,906,l),
(192,876,l),
(192,205,l),
(52,175,l),
(52,0,l),
(602,0,l),
(602,175,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
8 5 4 3 4 1 29 28 27 20 19 16 15 3 2 9 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 4 4 1 97 2 1 1 1 34 77 3 1 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 1 34 77 0 4 4 2 97 0 2 2 40 77 3 1 0 0 32 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
37 21 35 21 16 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1307;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(966,119,o),
(1088,368,o),
(1088,530,qs),
(1088,551,ls),
(1088,713,o),
(966,961,o),
(738,1102,o),
(577,1102,qs),
(418,1102,o),
(189,961,o),
(67,712,o),
(67,551,qs),
(67,530,ls),
(67,368,o),
(189,119,o),
(419,-21,o),
(579,-21,qs),
(738,-21,o)
);
},
{
closed = 1;
nodes = (
(404,284,o),
(359,432,o),
(359,530,qs),
(359,551,ls),
(359,647,o),
(404,794,o),
(502,877,o),
(577,877,qs),
(654,877,o),
(751,794,o),
(797,647,o),
(797,551,qs),
(797,530,ls),
(797,432,o),
(751,285,o),
(655,203,o),
(579,203,qs),
(502,203,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 1 97 0 1 1 40 77 5 1 2 2 0 97 4 1 0 0 38 0 78 19 18 1 0 28 26 18 35 19 35 10 8 0 17 1 17 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1155;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(488,-210,l),
(488,103,l),
(535,42,o),
(668,-21,o),
(755,-21,qs),
(887,-21,o),
(1074,112,o),
(1173,351,o),
(1173,511,qs),
(1173,532,ls),
(1173,703,o),
(1074,959,o),
(888,1102,o),
(757,1102,qs),
(663,1102,o),
(527,1026,o),
(479,956,q),
(465,1082,l),
(41,1082,l),
(41,906,l),
(197,876,l),
(197,-210,l),
(56,-240,l),
(56,-416,l),
(629,-416,l),
(629,-240,l)
);
},
{
closed = 1;
nodes = (
(515,251,o),
(488,297,q),
(488,771,l),
(515,821,o),
(606,875,o),
(666,875,qs),
(740,875,o),
(835,788,o),
(881,635,o),
(881,532,qs),
(881,511,ls),
(881,369,o),
(780,203,o),
(668,203,qs),
(606,203,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
8 5 4 3 5 1 38 37 2 4 5 23 1 3 4 25 24 3 2 4 0 3 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 34 77 6 1 4 4 3 97 0 3 3 38 77 0 0 0 36 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 1 34 77 0 5 5 2 97 0 2 2 40 77 6 1 4 4 3 97 0 3 3 38 77 0 0 0 36 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
27 26 35 33 26 40 27 40 39 35 21 16 7 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1240;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1039,-210,l),
(1039,1082,l),
(785,1082,l),
(763,952,l),
(714,1024,o),
(577,1102,o),
(482,1102,qs),
(352,1102,o),
(166,959,o),
(67,703,o),
(67,532,qs),
(67,511,ls),
(67,351,o),
(166,112,o),
(352,-21,o),
(483,-21,qs),
(569,-21,o),
(698,40,o),
(747,100,q),
(747,-210,l),
(576,-244,l),
(576,-416,l),
(1170,-416,l),
(1170,-239,l)
);
},
{
closed = 1;
nodes = (
(359,368,o),
(359,511,qs),
(359,532,ls),
(359,635,o),
(402,791,o),
(496,877,o),
(570,877,qs),
(629,877,o),
(718,825,o),
(747,777,q),
(747,296,l),
(718,250,o),
(627,203,o),
(568,203,qs),
(455,203,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
19 1 5 2 28 27 2 4 5 4 1 1 4 23 22 3 2 4 0 1 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
19 1 5 3 28 27 2 4 5 4 1 1 4 23 22 3 2 4 0 1 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 2 97 3 1 2 2 40 77 6 1 4 4 1 97 0 1 1 38 77 0 0 0 36 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 34 77 0 5 5 2 97 0 2 2 40 77 6 1 4 4 1 97 0 1 1 38 77 0 0 0 36 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 32 30 24 38 25 38 19 39 37 16 7 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1156;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(517,205,l),
(517,735,l),
(547,780,o),
(586,804,qs),
(620,825,o),
(672,825,qs),
(686,825,l),
(831,817,l),
(862,1086,l),
(838,1093,o),
(776,1102,o),
(750,1102,qs),
(668,1102,o),
(550,1012,o),
(510,924,q),
(508,948,l),
(497,1082,l),
(70,1082,l),
(70,906,l),
(225,876,l),
(225,205,l),
(85,175,l),
(85,0,l),
(657,0,l),
(657,175,l)
);
}
);
width = 886;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(964,165,o),
(964,316,qs),
(964,454,o),
(780,607,o),
(579,653,qs),
(497,672,o),
(411,714,o),
(382,762,o),
(382,790,qs),
(382,839,o),
(464,901,o),
(541,901,qs),
(587,901,o),
(660,881,o),
(687,861,q),
(718,719,l),
(920,719,l),
(917,1015,l),
(848,1053,o),
(645,1100,o),
(523,1100,qs),
(377,1100,o),
(190,1010,o),
(99,862,o),
(99,772,qs),
(99,641,o),
(281,473,o),
(473,433,qs),
(600,407,o),
(685,338,o),
(685,293,qs),
(685,245,o),
(605,181,o),
(507,181,qs),
(455,181,o),
(374,201,o),
(340,218,q),
(301,374,l),
(98,374,l),
(101,68,l),
(197,25,o),
(406,-21,o),
(527,-21,qs),
(745,-21,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
25 1 5 3 3 1 0 2 2 76 0 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 5 5 3 97 0 3 3 40 77 0 2 2 0 97 6 1 0 0 38 0 78 1 0 32 30 27 26 23 21 10 8 5 4 0 43 1 43 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1034;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(644,-4,o),
(689,9,q),
(664,220,l),
(644,216,o),
(588,209,o),
(564,209,qs),
(518,209,o),
(465,263,o),
(465,326,qs),
(465,877,l),
(664,877,l),
(664,1082,l),
(465,1082,l),
(465,1347,l),
(174,1347,l),
(174,1082,l),
(25,1082,l),
(25,877,l),
(174,877,l),
(174,325,ls),
(174,145,o),
(337,-21,o),
(488,-21,qs),
(539,-21,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
20 1 6 1 21 1 0 6 2 76 0 3 2 3 133 5 1 1 1 2 95 4 1 2 2 34 77 0 6 6 0 98 7 1 0 0 38 0 78 1 0 18 16 13 12 11 10 9 8 7 6 5 4 0 23 1 23 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 735;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(773,61,o),
(824,137,q),
(844,0,l),
(1230,0,l),
(1230,175,l),
(1100,205,l),
(1100,1082,l),
(679,1082,l),
(679,906,l),
(808,876,l),
(808,304,l),
(776,257,o),
(676,206,o),
(611,206,qs),
(529,206,o),
(448,307,o),
(448,423,qs),
(448,1082,l),
(37,1082,l),
(37,906,l),
(156,876,l),
(156,425,ls),
(156,196,o),
(351,-21,o),
(522,-21,qs),
(619,-21,o)
);
}
);
width = 1275;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1225,1082,l),
(701,1082,l),
(701,907,l),
(834,886,l),
(655,396,l),
(627,312,l),
(621,312,l),
(596,396,l),
(433,887,l),
(547,907,l),
(547,1082,l),
(22,1082,l),
(22,906,l),
(139,888,l),
(466,0,l),
(763,0,l),
(1105,886,l),
(1225,906,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
17 14 13 10 8 7 4 7 0 1 1 76 2 1 1 1 34 77 0 0 0 32 0 78 25 19 17 3 8 25 
CALL[ ]	/* CallFunction */";
};
width = 1247;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(912,655,l),
(947,536,l),
(1145,0,l),
(1391,0,l),
(1666,882,l),
(1792,906,l),
(1792,1082,l),
(1280,1082,l),
(1280,907,l),
(1406,884,l),
(1288,456,l),
(1262,368,l),
(1256,368,l),
(1228,456,l),
(1013,1082,l),
(817,1082,l),
(595,464,l),
(568,381,l),
(562,381,l),
(542,464,l),
(442,885,l),
(556,907,l),
(556,1082,l),
(33,1082,l),
(33,906,l),
(165,882,l),
(417,0,l),
(676,0,l),
(871,535,l),
(906,655,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
28 23 20 19 16 10 8 7 4 9 0 1 1 76 3 2 2 1 1 34 77 4 1 0 0 32 0 78 19 23 23 19 17 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1822;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(661,387,l),
(828,180,l),
(734,167,l),
(734,0,l),
(1289,0,l),
(1289,175,l),
(1156,193,l),
(847,554,l),
(1124,889,l),
(1245,906,l),
(1245,1082,l),
(728,1082,l),
(728,914,l),
(821,901,l),
(664,695,l),
(507,901,l),
(591,914,l),
(591,1082,l),
(55,1082,l),
(55,906,l),
(186,889,l),
(479,542,l),
(169,193,l),
(30,175,l),
(30,0,l),
(590,0,l),
(590,167,l),
(498,179,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
27 26 25 24 21 19 17 14 13 12 11 10 7 5 3 0 16 0 1 1 76 2 1 1 1 34 77 3 1 0 0 32 0 78 22 22 22 17 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1319;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(610,-361,o),
(703,-236,o),
(733,-161,qs),
(1146,889,l),
(1268,906,l),
(1268,1082,l),
(733,1082,l),
(733,906,l),
(862,888,l),
(661,350,l),
(655,350,l),
(634,409,l),
(464,886,l),
(596,906,l),
(596,1082,l),
(22,1082,l),
(22,906,l),
(155,887,l),
(517,-12,l),
(493,-79,ls),
(472,-141,o),
(380,-207,o),
(317,-207,qs),
(300,-207,o),
(254,-203,o),
(235,-199,q),
(202,-413,l),
(240,-424,o),
(325,-437,o),
(363,-437,qs),
(467,-437,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
25 22 21 19 17 16 13 11 8 1 2 3 1 0 1 2 76 3 1 2 2 34 77 0 1 1 0 98 4 1 0 0 42 0 78 1 0 24 23 15 14 8 6 0 30 1 30 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1285;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(776,209,l),
(470,209,l),
(1001,895,l),
(1001,1082,l),
(112,1082,l),
(112,693,l),
(326,693,l),
(359,878,l),
(651,878,l),
(88,172,l),
(88,0,l),
(1024,0,l),
(1024,408,l),
(819,408,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 1 3 3 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 1 2 114 6 1 5 4 4 5 112 0 1 1 3 95 0 3 3 34 77 0 4 4 0 96 0 0 0 32 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 114 6 1 5 4 1 5 4 126 0 1 1 3 95 0 3 3 34 77 0 4 4 0 96 0 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 5 1 2 5 128 6 1 5 4 1 5 4 126 0 1 1 3 95 0 3 3 34 77 0 4 4 0 96 0 0 0 32 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 13 0 13 18 17 17 18 17 7 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1107;
}
);
note = z;
unicode = 122;
},
{
glyphname = uni1780;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1213,931,o),
(791,931,qs),
(651,931,ls),
(229,931,o),
(229,668,qs),
(229,0,l),
(492,0,l),
(492,668,ls),
(492,788,o),
(651,788,qs),
(791,788,ls),
(951,788,o),
(951,668,qs),
(951,0,l),
(1213,0,l),
(1213,668,ls)
);
},
{
closed = 1;
nodes = (
(1178,994,qs),
(1253,994,o),
(1306,1165,q),
(1253,1165,ls),
(1206,1165,o),
(1165,1190,qs),
(980,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(453,1303,l),
(136,1117,l),
(136,1065,l),
(239,976,l),
(270,952,o),
(361,952,qs),
(363,952,ls),
(395,952,o),
(443,1025,q),
(331,1105,l),
(406,1150,l),
(636,1004,l),
(716,1004,l),
(843,1124,l),
(1010,1032,ls),
(1073,994,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
32 1 8 6 29 28 22 21 20 17 6 4 8 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 4 3 4 5 3 128 0 8 9 1 4 5 8 4 105 0 3 0 1 0 3 1 106 7 1 6 6 17 77 2 1 0 0 19 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 4 8 9 8 4 9 128 0 5 9 3 9 5 3 128 0 8 0 9 5 8 9 105 0 3 0 1 0 3 1 106 7 1 6 6 17 77 2 1 0 0 19 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
41 39 34 18 20 52 20 50 18 50 16 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1780;
unicode = 6016;
},
{
glyphname = uni1781;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(526,902,qs),
(538,896,o),
(538,884,qs),
(538,862,o),
(526,850,qs),
(515,839,o),
(492,839,q),
(492,908,l),
(515,908,o)
);
},
{
closed = 1;
nodes = (
(869,777,o),
(788,734,qs),
(229,442,l),
(229,263,ls),
(229,0,o),
(651,0,qs),
(791,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,565,l),
(951,478,l),
(951,263,ls),
(951,143,o),
(791,143,qs),
(651,143,ls),
(492,143,o),
(492,263,qs),
(492,423,l),
(812,591,ls),
(1131,758,o),
(1213,861,o),
(1213,931,qs),
(1213,1051,ls),
(1213,1303,o),
(791,1303,qs),
(651,1303,ls),
(229,1303,o),
(229,1051,qs),
(229,838,ls),
(229,791,o),
(270,768,qs),
(311,745,o),
(362,745,qs),
(492,745,ls),
(562,745,o),
(597,780,qs),
(632,815,o),
(632,884,qs),
(632,942,o),
(597,972,qs),
(562,1001,o),
(492,1001,q),
(492,1051,ls),
(492,1160,o),
(651,1160,qs),
(791,1160,ls),
(951,1160,o),
(951,1051,qs),
(951,931,ls),
(950,872,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 0 2 0 2 55 48 47 40 4 5 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 0 0 2 114 0 0 0 3 5 0 3 106 0 1 1 4 97 0 4 4 17 77 0 5 5 6 97 0 6 6 19 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 0 1 2 0 128 0 0 0 3 5 0 3 106 0 1 1 4 97 0 4 4 17 77 0 5 5 6 97 0 6 6 19 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
53 56 53 54 18 57 17 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1781;
unicode = 6017;
},
{
glyphname = uni1782;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1178,994,qs),
(1253,994,o),
(1306,1165,q),
(1253,1165,ls),
(1206,1165,o),
(1165,1190,qs),
(980,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(453,1303,l),
(136,1117,l),
(136,1065,l),
(239,976,l),
(270,952,o),
(361,952,qs),
(363,952,ls),
(395,952,o),
(443,1025,q),
(331,1105,l),
(406,1150,l),
(636,1004,l),
(716,1004,l),
(843,1124,l),
(1010,1032,ls),
(1073,994,o)
);
},
{
closed = 1;
nodes = (
(651,788,qs),
(791,788,ls),
(951,788,o),
(951,668,qs),
(951,0,l),
(1213,0,l),
(1213,668,ls),
(1213,931,o),
(791,931,qs),
(651,931,ls),
(229,931,o),
(229,668,qs),
(229,0,l),
(492,0,l),
(492,97,l),
(547,172,ls),
(582,220,o),
(616,242,qs),
(650,262,o),
(714,262,qs),
(778,262,o),
(801,306,qs),
(811,324,o),
(811,369,qs),
(811,413,o),
(790,432,qs),
(755,465,o),
(698,466,qs),
(651,466,o),
(605,443,qs),
(569,426,o),
(492,303,q),
(492,668,ls),
(492,788,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
16 1 4 2 13 12 6 5 4 1 6 0 4 27 1 7 6 44 1 8 7 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 9 0 1 9 128 0 4 5 1 0 1 4 0 105 0 9 0 11 6 9 11 106 0 6 0 7 8 6 7 105 3 1 2 2 17 77 10 1 8 8 19 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 0 4 5 4 0 5 128 0 1 5 9 5 1 9 128 0 4 0 5 1 4 5 105 0 9 0 11 6 9 11 106 0 6 0 7 8 6 7 105 3 1 2 2 17 77 10 1 8 8 19 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
59 56 54 53 51 48 21 38 37 33 34 18 20 52 18 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1782;
unicode = 6018;
},
{
glyphname = uni1783;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179,969,qs),
(156,982,o),
(156,1014,qs),
(156,1035,o),
(179,1072,qs),
(203,1110,o),
(229,1133,q),
(229,954,l),
(203,954,o)
);
},
{
closed = 1;
nodes = (
(675,0,qs),
(768,0,ls),
(971,0,o),
(1082,55,q),
(1192,0,o),
(1396,0,qs),
(1489,0,ls),
(1934,0,o),
(1934,263,qs),
(1934,869,l),
(1694,1009,l),
(1744,1085,l),
(1878,997,o),
(1923,997,qs),
(2020,997,o),
(2057,1187,q),
(1982,1187,o),
(1928,1216,qs),
(1765,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1671,263,ls),
(1671,143,o),
(1489,143,qs),
(1396,143,ls),
(1213,143,o),
(1213,263,qs),
(1213,869,l),
(973,1009,l),
(1023,1085,l),
(1157,997,o),
(1202,997,qs),
(1299,997,o),
(1336,1187,q),
(1261,1187,o),
(1207,1216,qs),
(1044,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,263,ls),
(950,143,o),
(768,143,qs),
(675,143,ls),
(492,143,o),
(492,263,qs),
(492,1303,l),
(229,1303,l),
(110,1145,o),
(86,1098,qs),
(63,1052,o),
(63,1013,qs),
(63,933,o),
(110,897,qs),
(156,861,o),
(229,861,q),
(229,263,ls),
(229,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
56 55 47 37 36 28 1 7 5 4 57 46 45 38 27 26 6 1 0 63 1 9 3 3 76 48 29 2 2 74 7 1 4 8 1 5 0 4 5 105 11 1 0 0 1 3 0 1 105 0 2 2 17 77 6 1 3 3 9 98 10 1 9 9 19 9 78 0 0 67 64 62 59 54 52 51 50 43 40 35 33 32 31 24 21 19 18 11 10 0 8 0 8 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni1783;
unicode = 6019;
},
{
glyphname = uni1784;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(824,1184,qs),
(839,1197,o),
(868,1198,qs),
(897,1197,o),
(911,1184,qs),
(924,1171,o),
(924,1147,qs),
(924,1121,o),
(911,1108,qs),
(897,1094,o),
(868,1094,qs),
(839,1094,o),
(824,1108,qs),
(810,1121,o),
(810,1145,qs),
(810,1170,o)
);
},
{
closed = 1;
nodes = (
(197,564,qs),
(179,570,o),
(179,582,qs),
(179,601,o),
(197,631,qs),
(214,661,o),
(229,669,q),
(229,559,l),
(214,559,o)
);
},
{
closed = 1;
nodes = (
(1069,1143,qs),
(1069,1223,o),
(1026,1263,qs),
(983,1303,o),
(848,1303,qs),
(762,1303,o),
(719,1263,qs),
(675,1223,o),
(675,1146,qs),
(675,1112,o),
(690,1094,q),
(558,1094,ls),
(492,1094,o),
(492,1164,qs),
(492,1304,ls),
(492,1489,o),
(302,1489,qs),
(194,1489,o),
(165,1461,qs),
(136,1432,o),
(136,1373,q),
(182,1373,o),
(206,1355,qs),
(229,1338,o),
(229,1304,qs),
(229,1164,ls),
(229,951,o),
(558,951,qs),
(807,951,l),
(950,861,l),
(950,181,l),
(721,360,l),
(492,181,l),
(492,838,l),
(229,838,l),
(132,707,o),
(108,664,qs),
(86,620,o),
(86,581,qs),
(86,523,o),
(127,494,qs),
(167,465,o),
(229,465,q),
(229,0,l),
(492,0,l),
(721,180,l),
(950,0,l),
(1213,0,l),
(1213,946,l),
(1014,1039,l),
(1069,1093,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
45 26 2 5 6 17 1 4 5 44 43 42 29 4 2 4 3 76 0 8 7 8 133 0 7 10 7 133 0 4 5 2 5 4 2 128 9 1 0 0 6 5 0 6 104 0 1 1 10 97 0 10 10 17 77 0 5 5 2 95 3 1 2 2 19 2 78 71 69 64 62 35 21 37 23 17 18 30 38 35 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1784;
unicode = 6020;
},
{
glyphname = uni1785;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,587,q),
(881,594,o),
(881,605,qs),
(881,626,o),
(898,654,qs),
(916,683,o),
(951,722,q),
(951,582,l),
(916,582,o)
);
},
{
closed = 1;
nodes = (
(651,0,qs),
(791,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(788,642,o),
(788,604,qs),
(788,546,o),
(829,518,qs),
(870,489,o),
(951,489,q),
(951,263,ls),
(951,143,o),
(791,143,qs),
(651,143,ls),
(492,143,o),
(492,263,qs),
(492,975,l),
(331,1105,l),
(406,1150,l),
(636,1004,l),
(716,1004,l),
(843,1124,l),
(1010,1032,ls),
(1073,994,o),
(1178,994,qs),
(1253,994,o),
(1306,1165,q),
(1253,1165,ls),
(1206,1165,o),
(1165,1190,qs),
(980,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(453,1303,l),
(136,1117,l),
(136,1005,l),
(229,921,l),
(229,263,ls),
(229,0,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
15 1 3 1 30 29 26 12 11 5 4 3 31 10 2 8 4 5 1 2 0 8 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
15 1 3 1 30 29 26 12 11 5 5 3 31 10 2 8 4 5 1 2 0 8 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 8 4 0 4 8 0 128 0 3 5 1 4 8 3 4 105 10 1 0 0 7 6 0 7 106 2 1 1 1 17 77 0 6 6 9 98 0 9 9 19 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 5 3 4 3 5 4 128 0 8 4 0 4 8 0 128 0 3 0 4 8 3 4 105 10 1 0 0 7 6 0 7 106 2 1 1 1 17 77 0 6 6 9 98 0 9 9 19 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
0 0 53 50 48 47 39 38 36 33 28 27 24 22 21 19 17 16 14 13 0 8 0 8 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1785;
unicode = 6021;
},
{
glyphname = uni1786;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,587,q),
(881,594,o),
(881,605,qs),
(881,626,o),
(898,654,qs),
(916,683,o),
(951,722,q),
(951,582,l),
(916,582,o)
);
},
{
closed = 1;
nodes = (
(631,306,o),
(631,217,qs),
(631,0,o),
(884,0,qs),
(1213,0,o),
(1213,233,qs),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(788,642,o),
(788,604,qs),
(788,546,o),
(829,518,qs),
(870,489,o),
(951,489,q),
(951,461,l),
(950,461,l),
(950,233,ls),
(950,143,o),
(884,143,qs),
(774,143,o),
(774,217,qs),
(774,449,o),
(531,449,qs),
(492,449,l),
(492,975,l),
(331,1105,l),
(406,1150,l),
(636,1004,l),
(716,1004,l),
(843,1124,l),
(1010,1032,ls),
(1073,994,o),
(1178,994,qs),
(1253,994,o),
(1306,1165,q),
(1253,1165,ls),
(1206,1165,o),
(1165,1190,qs),
(980,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(453,1303,l),
(136,1117,l),
(136,1005,l),
(229,921,l),
(229,449,l),
(179,449,o),
(109,337,o),
(109,256,qs),
(109,194,o),
(127,146,qs),
(144,99,o),
(229,0,q),
(492,0,l),
(492,306,l),
(531,306,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
24 1 5 3 39 38 35 21 20 5 6 5 40 19 2 11 6 5 1 2 0 11 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
24 1 5 3 39 38 35 21 20 5 7 5 40 19 2 11 6 5 1 2 0 11 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 11 6 0 6 11 0 128 0 5 7 1 6 11 5 6 105 14 1 0 0 10 2 0 10 106 8 1 2 15 1 13 9 2 13 106 4 1 3 3 17 77 0 9 9 1 98 12 1 1 1 19 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 7 5 6 5 7 6 128 0 11 6 0 6 11 0 128 0 5 0 6 11 5 6 105 14 1 0 0 10 2 0 10 106 8 1 2 15 1 13 9 2 13 106 4 1 3 3 17 77 0 9 9 1 98 12 1 1 1 19 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
9 9 0 0 9 68 9 67 65 63 61 60 52 51 47 45 43 41 37 36 33 31 30 28 26 25 23 22 18 17 11 10 0 8 0 8 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1786;
unicode = 6022;
},
{
glyphname = uni1787;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(721,180,l),
(950,0,l),
(1213,0,l),
(1213,861,l),
(950,861,l),
(950,181,l),
(721,360,l),
(492,181,l),
(492,936,l),
(318,1060,l),
(393,1118,l),
(612,971,l),
(838,971,ls),
(1213,971,o),
(1213,1210,qs),
(1213,1443,o),
(997,1443,qs),
(911,1443,o),
(882,1421,qs),
(854,1397,o),
(854,1350,q),
(950,1350,o),
(951,1210,qs),
(950,1114,o),
(848,1114,qs),
(805,1114,l),
(505,1303,l),
(403,1303,l),
(136,1110,l),
(136,959,l),
(229,886,l),
(229,0,l),
(492,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
21 1 1 0 22 3 2 4 1 23 2 1 3 5 4 31 26 25 24 4 6 5 4 76 0 3 0 2 0 3 2 105 0 1 0 4 5 1 4 103 0 0 0 17 77 0 5 5 6 95 8 7 2 6 6 19 6 78 0 0 0 32 0 32 17 23 34 35 18 33 20 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1787;
unicode = 6023;
},
{
glyphname = uni1788;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(2117,0,qs),
(2210,0,ls),
(2655,0,o),
(2655,263,qs),
(2655,869,l),
(2415,1009,l),
(2465,1085,l),
(2599,997,o),
(2644,997,qs),
(2741,997,o),
(2778,1187,q),
(2703,1187,o),
(2649,1216,qs),
(2486,1303,l),
(2279,1025,l),
(2279,935,l),
(2392,862,l),
(2392,263,ls),
(2392,143,o),
(2210,143,qs),
(2117,143,ls),
(1934,143,o),
(1934,263,qs),
(1934,869,l),
(1694,1009,l),
(1744,1085,l),
(1878,997,o),
(1923,997,qs),
(2020,997,o),
(2057,1187,q),
(1982,1187,o),
(1928,1216,qs),
(1765,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1671,263,ls),
(1671,143,o),
(1489,143,qs),
(1396,143,ls),
(1213,143,o),
(1213,263,qs),
(1213,1103,l),
(721,1303,l),
(229,1104,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1055,l),
(601,1105,l),
(950,964,l),
(950,263,ls),
(950,0,o),
(1396,0,qs),
(1489,0,ls),
(1692,0,o),
(1803,55,q),
(1913,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
68 67 59 49 48 40 31 29 18 17 10 6 5 69 58 57 50 39 38 16 7 2 6 2 1 4 0 3 76 60 41 30 3 5 74 8 1 5 9 1 6 2 5 6 105 0 2 11 1 0 4 2 0 105 7 1 4 4 1 97 10 3 2 1 1 19 1 78 1 0 74 71 66 64 63 62 55 52 47 45 44 43 36 33 28 27 21 19 14 11 0 9 1 9 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2885;
}
);
note = uni1788;
unicode = 6024;
},
{
glyphname = uni1789;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(1723,-93,qs),
(1634,-93,o),
(1556,-170,o),
(1556,-216,q),
(1673,-216,o),
(1673,-279,qs),
(1673,-435,o),
(1522,-435,qs),
(1414,-435,o),
(929,-140,o),
(611,-140,qs),
(415,-140,o),
(229,-223,o),
(229,-270,qs),
(229,-347,l),
(298,-305,o),
(455,-263,o),
(551,-263,qs),
(681,-263,o),
(1146,-559,o),
(1522,-559,qs),
(1769,-559,o),
(1852,-489,qs),
(1935,-419,o),
(1935,-279,qs),
(1935,-93,o)
);
},
{
closed = 1;
nodes = (
(515,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(533,1103,l),
(722,957,l),
(911,1103,l),
(950,1055,l),
(950,0,l),
(1213,0,l),
(1213,1014,l),
(1373,1095,l),
(1672,941,l),
(1672,0,l),
(1935,0,l),
(1935,1054,l),
(1443,1303,l),
(1129,1126,l),
(928,1303,l),
(722,1140,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
2 1 7 0 20 1 4 2 2 76 64 63 62 51 50 49 48 47 44 43 42 39 38 37 14 9 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 11 1 0 7 9 0 105 0 6 0 5 2 6 5 105 0 3 0 2 4 3 2 105 10 8 2 7 7 19 77 0 4 4 1 97 0 1 1 20 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 11 1 0 7 9 0 105 0 6 0 5 2 6 5 105 0 3 0 2 4 3 2 105 0 4 0 1 4 1 101 10 8 2 7 7 19 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 11 1 0 7 9 0 105 0 6 0 5 2 6 5 105 0 3 0 2 4 3 2 105 10 8 2 7 7 19 77 0 4 4 1 97 0 1 1 20 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 9 11 1 0 7 9 0 105 0 4 0 1 4 1 101 10 8 2 7 7 19 77 0 5 5 6 97 0 6 6 18 77 0 2 2 3 97 0 3 3 18 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 11 1 0 7 9 0 105 10 8 2 7 7 19 77 0 5 5 6 97 0 6 6 18 77 0 2 2 3 97 0 3 3 18 77 0 4 4 1 97 0 1 1 20 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 9 11 1 0 7 9 0 105 0 4 0 1 4 1 101 10 8 2 7 7 19 77 0 5 5 6 97 0 6 6 18 77 0 2 2 3 97 0 3 3 18 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 11 1 0 7 9 0 105 10 8 2 7 7 19 77 0 5 5 6 97 0 6 6 18 77 0 2 2 3 97 0 3 3 18 77 0 4 4 1 97 0 1 1 20 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 9 11 1 0 7 9 0 105 0 4 0 1 4 1 101 10 8 2 7 7 19 77 0 5 5 6 97 0 6 6 18 77 0 2 2 3 97 0 3 3 18 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 9 11 1 0 7 9 0 105 0 3 0 2 4 3 2 105 0 4 0 1 4 1 101 10 8 2 7 7 19 77 0 5 5 6 97 0 6 6 18 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 61 60 54 52 46 45 41 40 35 33 31 30 28 26 25 23 18 16 15 13 0 9 1 9 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni1789;
unicode = 6025;
},
{
glyphname = uni178A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,1144,qs),
(492,1170,o),
(516,1170,qs),
(539,1170,o),
(539,1144,q),
(586,1144,o),
(608,1161,qs),
(632,1179,o),
(632,1213,qs),
(632,1303,o),
(464,1303,qs),
(229,1303,o),
(229,1144,qs),
(229,951,o),
(675,951,qs),
(768,951,ls),
(1213,951,o),
(1213,1221,qs),
(1213,1443,o),
(977,1443,qs),
(881,1443,o),
(857,1420,qs),
(834,1396,o),
(834,1350,q),
(950,1350,o),
(950,1221,qs),
(950,1094,o),
(768,1094,qs),
(675,1094,ls),
(492,1094,o)
);
},
{
closed = 1;
nodes = (
(950,0,l),
(1213,0,l),
(1213,841,l),
(950,841,l),
(950,181,l),
(721,360,l),
(492,181,l),
(492,841,l),
(229,841,l),
(229,0,l),
(492,0,l),
(721,180,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
41 36 35 34 4 7 8 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 0 1 4 2 1 105 11 1 0 0 3 8 0 3 105 6 1 5 5 4 97 0 4 4 17 77 9 1 8 8 7 95 10 1 7 7 19 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 6 0 6 5 114 0 2 0 1 4 2 1 105 11 1 0 0 3 8 0 3 105 0 6 6 4 97 0 4 4 17 77 9 1 8 8 7 95 10 1 7 7 19 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
2 0 40 39 38 37 33 32 31 30 27 25 24 23 19 17 15 12 10 8 5 4 0 29 2 29 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178A;
unicode = 6026;
},
{
glyphname = uni178B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179,969,qs),
(156,982,o),
(156,1014,qs),
(156,1035,o),
(179,1072,qs),
(203,1110,o),
(229,1133,q),
(229,954,l),
(203,954,o)
);
},
{
closed = 1;
nodes = (
(982,1075,l),
(1156,997,o),
(1202,997,qs),
(1255,997,o),
(1335,1147,o),
(1335,1290,qs),
(1335,1395,o),
(1300,1447,qs),
(1266,1499,o),
(1146,1499,qs),
(1099,1499,o),
(1076,1476,qs),
(1053,1453,o),
(1053,1386,q),
(1123,1386,o),
(1157,1358,qs),
(1192,1329,o),
(1192,1290,qs),
(1192,1256,o),
(1184,1238,qs),
(1181,1231,o),
(1177,1227,q),
(984,1303,l),
(817,1025,l),
(817,945,l),
(950,862,l),
(950,263,ls),
(950,143,o),
(768,143,qs),
(675,143,ls),
(492,143,o),
(492,263,qs),
(492,1303,l),
(229,1303,l),
(110,1145,o),
(86,1098,qs),
(63,1052,o),
(63,1013,qs),
(63,933,o),
(110,897,qs),
(156,861,o),
(229,861,q),
(229,263,ls),
(229,0,o),
(675,0,qs),
(768,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,869,l),
(952,1009,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
58 57 36 34 1 5 7 3 33 32 9 3 2 0 2 76 35 1 3 1 75 0 7 3 0 3 7 0 128 0 6 0 5 3 6 5 105 8 1 0 0 2 4 0 2 105 0 3 3 17 77 0 4 4 1 98 0 1 1 19 1 78 0 0 56 54 49 47 44 43 30 27 25 24 17 16 14 11 0 8 0 8 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178B;
unicode = 6027;
},
{
glyphname = uni178C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(526,902,qs),
(538,896,o),
(538,884,qs),
(538,862,o),
(526,850,qs),
(515,839,o),
(492,839,q),
(492,908,l),
(515,908,o)
);
},
{
closed = 1;
nodes = (
(492,263,qs),
(492,423,l),
(812,591,ls),
(1131,758,o),
(1213,861,o),
(1213,931,qs),
(1213,1056,l),
(928,1303,l),
(722,1140,l),
(515,1303,l),
(229,1056,l),
(229,838,ls),
(229,791,o),
(270,768,qs),
(311,745,o),
(362,745,qs),
(492,745,ls),
(562,745,o),
(597,780,qs),
(632,815,o),
(632,884,qs),
(632,942,o),
(597,972,qs),
(562,1001,o),
(492,1001,q),
(492,1056,l),
(533,1103,l),
(722,957,l),
(911,1103,l),
(951,1056,l),
(951,931,ls),
(950,872,o),
(869,777,o),
(788,734,qs),
(229,442,l),
(229,263,ls),
(229,0,o),
(570,0,q),
(570,1,l),
(604,1,l),
(951,220,l),
(951,117,ls),
(951,93,o),
(922,82,qs),
(893,70,o),
(834,70,q),
(834,11,o),
(864,-18,qs),
(893,-47,o),
(1001,-47,qs),
(1132,-47,o),
(1172,-6,qs),
(1213,34,o),
(1213,115,qs),
(1213,535,l),
(951,535,l),
(951,387,l),
(570,144,l),
(570,143,l),
(492,143,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
40 5 0 3 0 5 66 33 27 11 4 7 1 2 76 61 60 59 58 57 42 41 39 38 9 5 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 5 0 0 5 112 0 3 7 4 7 3 4 128 0 0 0 6 1 0 6 106 8 1 7 7 4 97 0 4 4 19 77 0 1 1 2 97 0 2 2 19 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 0 5 133 0 3 7 4 7 3 4 128 0 0 0 6 1 0 6 106 8 1 7 7 4 97 0 4 4 19 77 0 1 1 2 97 0 2 2 19 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 0 5 133 0 3 7 4 7 3 4 128 0 0 0 6 1 0 6 106 0 1 0 2 1 2 101 8 1 7 7 4 97 0 4 4 19 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
9 9 9 68 9 68 54 28 53 19 36 26 17 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178C;
unicode = 6028;
},
{
glyphname = uni178D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(1744,1085,l),
(1878,997,o),
(1923,997,qs),
(2020,997,o),
(2057,1187,q),
(1982,1187,o),
(1928,1216,qs),
(1765,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1671,233,ls),
(1671,143,o),
(1605,143,qs),
(1495,143,o),
(1495,217,qs),
(1495,449,o),
(1252,449,qs),
(1213,449,l),
(1213,1052,l),
(928,1303,l),
(722,1140,l),
(515,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(533,1103,l),
(722,957,l),
(911,1103,l),
(950,1055,l),
(950,449,l),
(900,449,o),
(830,337,o),
(830,256,qs),
(830,194,o),
(848,146,qs),
(865,99,o),
(950,0,q),
(1213,0,l),
(1213,306,l),
(1252,306,ls),
(1352,306,o),
(1352,217,qs),
(1352,0,o),
(1605,0,qs),
(1934,0,o),
(1934,233,qs),
(1934,869,l),
(1694,1009,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
67 66 58 47 45 43 32 31 29 28 10 10 9 57 56 30 10 4 4 10 2 1 8 2 3 76 59 46 44 3 9 74 0 9 0 10 4 9 10 105 11 1 0 2 4 0 89 7 5 2 4 0 2 8 4 2 105 0 8 8 1 95 6 3 2 1 1 19 1 78 1 0 65 63 62 61 54 52 50 48 42 41 35 33 27 26 20 19 18 16 14 12 0 9 1 9 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni178D;
unicode = 6029;
},
{
glyphname = uni178E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(1443,180,l),
(1672,0,l),
(1935,0,l),
(1935,1055,l),
(2044,1105,l),
(2393,964,l),
(2393,0,l),
(2656,0,l),
(2656,1103,l),
(2164,1303,l),
(1672,1104,l),
(1672,181,l),
(1443,360,l),
(1214,181,l),
(1214,1103,l),
(721,1303,l),
(229,1104,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1055,l),
(601,1105,l),
(951,964,l),
(951,0,l),
(1214,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
28 1 0 1 40 29 27 2 4 2 0 2 76 37 36 35 32 31 30 26 25 24 13 12 11 12 1 74 0 1 6 1 0 2 1 0 105 7 5 4 3 4 2 2 19 2 78 10 10 1 0 10 41 10 41 39 38 34 33 23 22 16 14 0 9 1 9 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2885;
}
);
note = uni178E;
unicode = 6030;
},
{
glyphname = uni178F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(1178,994,qs),
(1253,994,o),
(1306,1165,q),
(1253,1165,ls),
(1206,1165,o),
(1165,1190,qs),
(980,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(453,1303,l),
(136,1117,l),
(136,1065,l),
(239,976,l),
(270,952,o),
(361,952,qs),
(363,952,ls),
(395,952,o),
(443,1025,q),
(331,1105,l),
(406,1150,l),
(636,1004,l),
(716,1004,l),
(843,1124,l),
(1010,1032,ls),
(1073,994,o)
);
},
{
closed = 1;
nodes = (
(651,788,qs),
(791,788,ls),
(951,788,o),
(951,668,qs),
(951,0,l),
(1213,0,l),
(1213,668,ls),
(1213,931,o),
(791,931,qs),
(651,931,ls),
(229,931,o),
(229,668,qs),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,668,ls),
(492,788,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
26 1 5 3 23 22 16 15 14 11 6 1 5 2 1 8 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 1 9 1 2 9 128 0 5 6 1 1 2 5 1 105 0 9 0 11 7 9 11 106 0 7 12 1 0 8 7 0 105 4 1 3 3 17 77 10 1 8 8 19 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 5 6 5 1 6 128 0 2 6 9 6 2 9 128 0 5 0 6 2 5 6 105 0 9 0 11 7 9 11 106 0 7 12 1 0 8 7 0 105 4 1 3 3 17 77 10 1 8 8 19 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 59 56 54 53 51 48 46 45 39 37 35 33 32 30 28 27 25 24 20 17 13 12 0 9 1 9 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178F;
unicode = 6031;
},
{
glyphname = uni1790;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,587,q),
(881,594,o),
(881,605,qs),
(881,626,o),
(898,654,qs),
(916,683,o),
(951,722,q),
(951,582,l),
(916,582,o)
);
},
{
closed = 1;
nodes = (
(393,1118,l),
(612,971,l),
(838,971,ls),
(1213,971,o),
(1213,1210,qs),
(1213,1443,o),
(997,1443,qs),
(911,1443,o),
(882,1421,qs),
(854,1397,o),
(854,1350,q),
(950,1350,o),
(951,1210,qs),
(950,1114,o),
(848,1114,qs),
(805,1114,l),
(505,1303,l),
(403,1303,l),
(136,1110,l),
(136,959,l),
(229,886,l),
(229,263,ls),
(229,0,o),
(651,0,qs),
(791,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(788,642,o),
(788,604,qs),
(788,546,o),
(829,518,qs),
(870,489,o),
(951,489,q),
(951,263,ls),
(951,143,o),
(791,143,qs),
(651,143,ls),
(492,143,o),
(492,263,qs),
(492,936,l),
(318,1060,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
53 1 6 5 54 35 2 9 6 34 33 9 3 3 9 5 1 2 0 3 4 76 0 3 9 0 9 3 0 128 0 8 0 7 5 8 7 105 0 6 0 9 3 6 9 103 10 1 0 0 2 1 0 2 105 0 5 5 17 77 0 1 1 4 98 0 4 4 19 4 78 0 0 52 50 48 46 43 42 40 38 37 36 31 28 26 25 17 16 14 11 0 8 0 8 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1790;
unicode = 6032;
},
{
glyphname = uni1791;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1110,665,qs),
(1110,637,o),
(1068,637,qs),
(1042,637,l),
(1042,692,o),
(1068,692,qs),
(1110,692,o)
);
},
{
closed = 1;
nodes = (
(916,998,qs),
(881,998,o),
(881,1024,q),
(788,1024,o),
(788,954,qs),
(788,884,o),
(920,884,qs),
(1213,884,o),
(1213,1031,qs),
(1213,1303,o),
(721,1303,qs),
(229,1303,o),
(229,1031,qs),
(229,815,ls),
(229,494,o),
(722,494,qs),
(779,494,l),
(779,280,ls),
(779,144,o),
(707,144,qs),
(635,144,o),
(635,183,qs),
(635,280,ls),
(635,420,o),
(499,420,qs),
(323,420,o),
(323,327,q),
(372,327,o),
(372,280,qs),
(372,183,ls),
(372,0,o),
(707,0,qs),
(1042,0,o),
(1042,281,qs),
(1042,494,l),
(1068,494,ls),
(1213,494,o),
(1213,666,qs),
(1213,786,o),
(1038,786,qs),
(779,786,o),
(779,637,q),
(722,637,ls),
(492,637,o),
(492,815,qs),
(492,1031,ls),
(492,1160,o),
(721,1160,qs),
(951,1160,o),
(951,1031,qs),
(951,998,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
14 1 13 0 12 4 13 12 105 0 4 15 1 0 1 4 0 105 3 1 1 10 1 5 8 1 5 105 0 8 0 7 9 8 7 105 0 2 2 11 97 0 11 11 17 77 0 9 9 6 97 0 6 6 19 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 14 13 12 13 14 114 0 13 0 12 4 13 12 105 0 4 15 1 0 1 4 0 105 3 1 1 10 1 5 8 1 5 105 0 8 0 7 9 8 7 105 0 2 2 11 97 0 11 11 17 77 0 9 9 6 97 0 6 6 19 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
1 0 57 55 54 53 51 49 47 45 42 40 38 36 33 31 30 29 26 24 22 20 18 16 15 13 10 8 4 2 0 6 1 6 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1791;
unicode = 6033;
},
{
glyphname = uni1792;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,181,l),
(492,975,l),
(331,1105,l),
(406,1150,l),
(636,1004,l),
(716,1004,l),
(843,1124,l),
(1010,1032,ls),
(1073,994,o),
(1178,994,qs),
(1253,994,o),
(1306,1165,q),
(1253,1165,ls),
(1206,1165,o),
(1165,1190,qs),
(980,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(453,1303,l),
(136,1117,l),
(136,1005,l),
(229,921,l),
(229,0,l),
(492,0,l),
(721,180,l),
(951,0,l),
(1213,0,l),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(788,642,o),
(788,604,qs),
(788,546,o),
(829,518,qs),
(870,489,o),
(951,489,q),
(951,181,l),
(721,360,l)
);
},
{
closed = 1;
nodes = (
(898,587,q),
(881,594,o),
(881,605,qs),
(881,626,o),
(898,654,qs),
(916,683,o),
(951,722,q),
(951,582,l),
(916,582,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
22 1 6 4 37 36 33 19 18 5 7 6 38 17 2 1 7 46 42 2 9 1 40 39 14 0 4 2 0 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
22 1 6 4 37 36 33 19 18 5 8 6 38 17 2 1 7 46 42 2 9 1 40 39 14 0 4 2 0 5 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 8 1 7 1 6 7 105 10 1 9 0 0 2 9 0 106 5 1 4 4 17 77 0 1 1 2 95 3 1 2 2 19 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 8 6 7 6 8 7 128 0 6 0 7 1 6 7 105 10 1 9 0 0 2 9 0 106 5 1 4 4 17 77 0 1 1 2 95 3 1 2 2 19 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
41 41 41 49 41 49 19 33 34 18 20 18 17 24 17 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1792;
unicode = 6034;
},
{
glyphname = uni1793;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(950,908,q),
(950,839,l),
(927,839,o),
(916,850,qs),
(904,862,o),
(904,884,qs),
(904,896,o),
(916,902,qs),
(927,908,o)
);
},
{
closed = 1;
nodes = (
(573,777,o),
(492,872,o),
(491,931,qs),
(491,1051,ls),
(491,1160,o),
(651,1160,qs),
(791,1160,ls),
(950,1160,o),
(950,1051,qs),
(950,1001,l),
(880,1001,o),
(845,972,qs),
(810,942,o),
(810,884,qs),
(810,815,o),
(845,780,qs),
(880,745,o),
(950,745,qs),
(1080,745,ls),
(1131,745,o),
(1172,768,qs),
(1213,791,o),
(1213,838,qs),
(1213,1051,ls),
(1213,1303,o),
(791,1303,qs),
(651,1303,ls),
(229,1303,o),
(229,1051,qs),
(229,931,ls),
(229,861,o),
(311,758,o),
(630,591,qs),
(951,423,l),
(951,217,ls),
(951,144,o),
(887,144,qs),
(802,144,o),
(596,356,o),
(492,356,q),
(492,543,l),
(229,543,l),
(229,0,l),
(492,0,l),
(492,213,l),
(569,213,o),
(774,0,o),
(887,0,qs),
(1213,0,o),
(1213,217,qs),
(1213,442,l),
(654,734,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
26 9 2 6 5 1 76 0 10 0 1 0 10 1 105 0 0 0 9 5 0 9 105 0 6 0 3 7 6 3 105 0 11 11 8 97 0 8 8 17 77 0 5 5 2 97 4 1 2 2 19 77 0 7 7 2 97 4 1 2 2 19 2 78 55 52 50 49 43 40 56 33 17 17 17 17 35 17 21 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1793;
unicode = 6035;
},
{
glyphname = uni1794;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1213,263,qs),
(1213,869,l),
(973,1009,l),
(1023,1085,l),
(1157,997,o),
(1202,997,qs),
(1299,997,o),
(1336,1187,q),
(1261,1187,o),
(1207,1216,qs),
(1044,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,263,ls),
(950,143,o),
(768,143,qs),
(675,143,ls),
(492,143,o),
(492,263,qs),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,263,ls),
(229,0,o),
(675,0,qs),
(768,0,ls),
(1213,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
34 33 25 15 14 6 6 2 1 35 24 23 16 5 4 6 3 2 2 76 26 7 2 1 74 4 1 1 5 1 2 3 1 2 105 0 3 3 0 97 6 1 0 0 19 0 78 2 0 32 30 29 28 21 18 13 11 10 9 0 37 2 37 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1794;
unicode = 6036;
},
{
glyphname = uni1795;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,587,q),
(881,594,o),
(881,605,qs),
(881,626,o),
(898,654,qs),
(916,683,o),
(950,722,q),
(950,582,l),
(916,582,o)
);
},
{
closed = 1;
nodes = (
(492,181,l),
(492,936,l),
(318,1060,l),
(393,1118,l),
(612,971,l),
(838,971,ls),
(1213,971,o),
(1213,1210,qs),
(1213,1443,o),
(997,1443,qs),
(911,1443,o),
(882,1421,qs),
(854,1397,o),
(854,1350,q),
(950,1350,o),
(951,1210,qs),
(950,1114,o),
(848,1114,qs),
(805,1114,l),
(505,1303,l),
(403,1303,l),
(136,1110,l),
(136,959,l),
(229,886,l),
(229,0,l),
(492,0,l),
(721,180,l),
(950,0,l),
(1213,0,l),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(788,642,o),
(788,604,qs),
(788,546,o),
(829,518,qs),
(870,489,o),
(950,489,q),
(950,181,l),
(721,360,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
46 1 6 5 47 28 2 9 6 48 27 26 3 2 9 5 1 2 0 2 50 49 23 9 4 3 1 5 76 0 8 0 7 5 8 7 105 0 6 0 9 2 6 9 103 10 1 0 0 1 3 0 1 105 0 5 5 17 77 0 2 2 3 95 4 1 3 3 19 3 78 0 0 45 43 41 39 36 35 33 31 30 29 25 24 22 21 20 19 11 10 0 8 0 8 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1795;
unicode = 6037;
},
{
glyphname = uni1796;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(533,1103,l),
(722,957,l),
(911,1103,l),
(950,1055,l),
(950,0,l),
(1213,0,l),
(1213,1052,l),
(928,1303,l),
(722,1140,l),
(515,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
2 1 1 0 1 76 22 21 20 19 18 15 14 13 12 11 10 2 74 0 2 4 1 0 1 2 0 105 5 3 2 1 1 19 1 78 10 10 1 0 10 31 10 31 25 23 17 16 0 9 1 9 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1796;
unicode = 6038;
},
{
glyphname = uni1797;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,248,qs),
(179,283,o),
(179,303,qs),
(179,326,o),
(190,337,qs),
(202,349,o),
(229,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(1178,994,qs),
(1253,994,o),
(1306,1165,q),
(1253,1165,ls),
(1206,1165,o),
(1165,1190,qs),
(980,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(453,1303,l),
(136,1117,l),
(136,1065,l),
(239,976,l),
(270,952,o),
(361,952,qs),
(363,952,ls),
(395,952,o),
(443,1025,q),
(331,1105,l),
(406,1150,l),
(636,1004,l),
(716,1004,l),
(843,1124,l),
(1010,1032,ls),
(1073,994,o)
);
},
{
closed = 1;
nodes = (
(651,788,qs),
(791,788,ls),
(951,788,o),
(951,668,qs),
(951,0,l),
(1213,0,l),
(1213,668,ls),
(1213,931,o),
(791,931,qs),
(651,931,ls),
(229,931,o),
(229,668,qs),
(229,442,l),
(156,442,o),
(121,408,qs),
(86,372,o),
(86,303,qs),
(86,268,o),
(106,222,qs),
(127,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(492,668,ls),
(492,788,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
25 1 5 3 22 21 15 14 13 10 6 1 5 0 1 7 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 9 1 2 9 128 0 5 6 1 1 2 5 1 105 0 9 0 11 8 9 11 106 0 8 0 0 7 8 0 105 4 1 3 3 17 77 10 1 7 7 19 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 5 6 5 1 6 128 0 2 6 9 6 2 9 128 0 5 0 6 2 5 6 105 0 9 0 11 8 9 11 106 0 8 0 0 7 8 0 105 4 1 3 3 17 77 10 1 7 7 19 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
59 56 54 53 51 48 24 18 33 34 18 20 52 25 17 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1797;
unicode = 6039;
},
{
glyphname = uni1798;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(950,143,o),
(768,143,qs),
(675,143,ls),
(492,143,o),
(492,263,qs),
(492,534,l),
(950,534,l),
(950,263,ls)
);
},
{
closed = 1;
nodes = (
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,263,ls),
(229,0,o),
(675,0,qs),
(768,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,869,l),
(973,1009,l),
(1023,1085,l),
(1157,997,o),
(1202,997,qs),
(1299,997,o),
(1336,1187,q),
(1261,1187,o),
(1207,1216,qs),
(1044,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,677,l),
(492,677,l),
(492,869,l),
(231,1009,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
41 40 32 22 21 13 6 4 3 31 30 23 12 11 8 6 2 4 2 76 33 14 2 3 74 6 1 3 7 1 4 2 3 4 105 0 2 0 0 1 2 0 103 0 1 1 5 97 0 5 5 19 5 78 33 23 53 33 22 19 50 16 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1798;
unicode = 6040;
},
{
glyphname = uni1799;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(542,1072,qs),
(565,1035,o),
(565,1014,qs),
(565,982,o),
(542,969,qs),
(518,954,o),
(492,954,q),
(492,1143,l),
(518,1110,o)
);
},
{
closed = 1;
nodes = (
(675,0,qs),
(768,0,ls),
(971,0,o),
(1082,55,q),
(1192,0,o),
(1396,0,qs),
(1489,0,ls),
(1934,0,o),
(1934,263,qs),
(1934,869,l),
(1694,1009,l),
(1744,1085,l),
(1878,997,o),
(1923,997,qs),
(2020,997,o),
(2057,1187,q),
(1982,1187,o),
(1928,1216,qs),
(1765,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1671,263,ls),
(1671,143,o),
(1489,143,qs),
(1396,143,ls),
(1213,143,o),
(1213,263,qs),
(1213,869,l),
(973,1009,l),
(1023,1085,l),
(1157,997,o),
(1202,997,qs),
(1299,997,o),
(1336,1187,q),
(1261,1187,o),
(1207,1216,qs),
(1044,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,263,ls),
(950,143,o),
(768,143,qs),
(675,143,ls),
(492,143,o),
(492,263,qs),
(492,861,l),
(565,861,o),
(612,897,qs),
(658,933,o),
(658,1013,qs),
(658,1052,o),
(635,1098,qs),
(612,1145,o),
(492,1303,q),
(229,1303,l),
(229,263,ls),
(229,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
56 55 47 37 36 28 0 7 5 4 57 46 45 38 27 26 6 2 0 63 1 9 3 3 76 48 29 2 1 74 7 1 4 8 1 5 0 4 5 105 0 0 0 2 3 0 2 105 0 1 1 17 77 6 1 3 3 9 98 10 1 9 9 19 9 78 67 64 62 59 33 23 53 33 23 50 23 24 17 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni1799;
unicode = 6041;
},
{
glyphname = uni179A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,248,qs),
(179,283,o),
(179,303,qs),
(179,326,o),
(190,337,qs),
(202,349,o),
(229,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,442,l),
(156,442,o),
(121,408,qs),
(86,372,o),
(86,303,qs),
(86,268,o),
(106,222,qs),
(127,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(492,869,l),
(231,1009,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
32 31 23 3 4 3 22 21 9 3 2 4 0 1 1 0 3 76 24 1 3 74 0 3 0 4 2 3 4 105 0 2 0 0 1 2 0 105 0 1 1 19 1 78 33 22 24 24 17 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni179A;
unicode = 6042;
},
{
glyphname = uni179B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(1396,0,qs),
(1489,0,ls),
(1934,0,o),
(1934,263,qs),
(1934,869,l),
(1694,1009,l),
(1744,1085,l),
(1878,997,o),
(1923,997,qs),
(2020,997,o),
(2057,1187,q),
(1982,1187,o),
(1928,1216,qs),
(1765,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1671,263,ls),
(1671,143,o),
(1489,143,qs),
(1396,143,ls),
(1213,143,o),
(1213,263,qs),
(1213,1103,l),
(721,1303,l),
(229,1104,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1055,l),
(601,1105,l),
(950,964,l),
(950,263,ls),
(950,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
44 43 35 26 24 13 12 7 5 4 45 34 33 11 4 1 5 2 1 3 0 3 76 36 25 2 4 74 0 4 0 5 1 4 5 105 0 1 7 1 0 3 1 0 105 0 3 3 2 97 6 1 2 2 19 2 78 1 0 50 47 42 40 39 38 31 28 23 22 16 14 0 9 1 9 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni179B;
unicode = 6043;
},
{
glyphname = uni179C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,248,qs),
(179,283,o),
(179,303,qs),
(179,326,o),
(190,337,qs),
(202,349,o),
(229,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(96,945,l),
(229,862,l),
(229,442,l),
(156,442,o),
(121,408,qs),
(86,372,o),
(86,303,qs),
(86,268,o),
(106,222,qs),
(127,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(492,869,l),
(231,1009,l),
(261,1075,l),
(435,997,o),
(481,997,qs),
(534,997,o),
(614,1147,o),
(614,1290,qs),
(614,1395,o),
(579,1447,qs),
(545,1499,o),
(425,1499,qs),
(378,1499,o),
(355,1476,qs),
(332,1453,o),
(332,1386,q),
(402,1386,o),
(436,1358,qs),
(471,1329,o),
(471,1290,qs),
(471,1256,o),
(463,1238,qs),
(460,1231,o),
(456,1227,q),
(263,1303,l),
(96,1025,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
47 32 31 10 4 3 1 46 45 33 3 5 3 0 1 4 0 3 76 0 3 1 5 1 3 5 128 0 2 0 1 3 2 1 105 0 5 0 0 4 5 0 105 0 4 4 19 4 78 24 20 37 35 31 17 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni179C;
unicode = 6044;
},
{
glyphname = uni179D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1178,994,qs),
(1253,994,o),
(1306,1165,q),
(1253,1165,ls),
(1206,1165,o),
(1165,1190,qs),
(980,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(453,1303,l),
(136,1117,l),
(136,1065,l),
(239,976,l),
(270,952,o),
(361,952,qs),
(363,952,ls),
(395,952,o),
(443,1025,q),
(331,1105,l),
(406,1150,l),
(636,1004,l),
(716,1004,l),
(843,1124,l),
(1010,1032,ls),
(1073,994,o)
);
},
{
closed = 1;
nodes = (
(791,931,qs),
(651,931,ls),
(229,931,o),
(229,668,qs),
(229,0,l),
(492,0,l),
(492,97,l),
(547,172,ls),
(582,220,o),
(616,242,qs),
(650,262,o),
(714,262,qs),
(778,262,o),
(801,306,qs),
(811,324,o),
(811,369,qs),
(811,413,o),
(790,432,qs),
(755,465,o),
(698,466,qs),
(651,466,o),
(605,443,qs),
(569,426,o),
(492,303,q),
(492,668,ls),
(492,788,o),
(651,788,qs),
(791,788,ls),
(951,788,o),
(951,668,qs),
(951,449,l),
(851,449,l),
(851,306,l),
(951,306,l),
(951,0,l),
(1213,0,l),
(1213,306,l),
(1230,306,ls),
(1277,306,o),
(1300,341,qs),
(1323,376,o),
(1323,495,q),
(1300,449,o),
(1230,449,qs),
(1213,449,l),
(1213,668,ls),
(1213,931,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
16 1 4 2 13 12 6 5 4 1 6 0 4 30 1 6 11 48 1 13 7 65 1 8 13 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
16 1 4 2 13 12 6 5 4 1 6 0 4 30 1 12 11 48 1 13 7 65 1 8 13 5 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 15 0 1 15 128 0 4 5 1 0 1 4 0 105 0 15 0 11 6 15 11 106 9 1 7 13 6 7 89 12 10 2 6 0 13 8 6 13 105 3 1 2 2 17 77 14 1 8 8 19 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 15 0 1 15 128 0 4 5 1 0 1 4 0 105 0 15 0 11 12 15 11 106 10 1 6 9 1 7 13 6 7 105 0 12 0 13 8 12 13 105 3 1 2 2 17 77 14 1 8 8 19 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 0 4 5 4 0 5 128 0 1 5 15 5 1 15 128 0 4 0 5 1 4 5 105 0 15 0 11 12 15 11 106 10 1 6 9 1 7 13 6 7 105 0 12 0 13 8 12 13 105 3 1 2 2 17 77 14 1 8 8 19 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
72 69 67 66 61 59 53 51 46 43 41 40 39 38 18 20 34 33 34 18 20 52 18 16 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni179D;
unicode = 6045;
},
{
glyphname = uni179E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(768,143,qs),
(675,143,ls),
(492,143,o),
(492,263,qs),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,263,ls),
(229,0,o),
(675,0,qs),
(768,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,529,l),
(1250,529,ls),
(1296,529,o),
(1320,564,qs),
(1343,598,o),
(1343,718,q),
(1320,672,o),
(1250,672,qs),
(1213,672,l),
(1213,869,l),
(973,1009,l),
(1023,1085,l),
(1157,997,o),
(1202,997,qs),
(1299,997,o),
(1336,1187,q),
(1261,1187,o),
(1207,1216,qs),
(1044,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,672,l),
(823,672,l),
(823,529,l),
(950,529,l),
(950,263,ls),
(950,143,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
44 43 35 16 15 7 6 3 2 45 34 33 21 17 6 5 7 1 3 2 76 36 8 2 2 74 7 1 2 8 1 3 1 2 3 105 4 1 1 5 1 0 9 1 0 105 0 9 9 6 97 0 6 6 19 6 78 50 47 33 23 50 36 36 33 22 17 17 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni179E;
unicode = 6046;
},
{
glyphname = uni179F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(698,997,o),
(774,997,qs),
(895,997,o),
(931,1187,q),
(827,1187,o),
(760,1216,qs),
(556,1303,l),
(298,1055,l),
(298,965,l),
(412,900,l),
(229,841,o),
(229,668,qs),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,668,ls),
(492,788,o),
(651,788,qs),
(791,788,ls),
(950,788,o),
(950,668,qs),
(950,263,ls),
(950,0,o),
(1396,0,qs),
(1489,0,ls),
(1934,0,o),
(1934,263,qs),
(1934,869,l),
(1694,1009,l),
(1744,1085,l),
(1878,997,o),
(1923,997,qs),
(2020,997,o),
(2057,1187,q),
(1982,1187,o),
(1928,1216,qs),
(1765,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1671,263,ls),
(1671,143,o),
(1489,143,qs),
(1396,143,ls),
(1213,143,o),
(1213,263,qs),
(1213,668,ls),
(1213,931,o),
(791,931,qs),
(654,931,l),
(458,1039,l),
(520,1095,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
68 60 32 31 23 5 4 3 59 22 2 1 4 58 33 21 3 6 1 2 1 2 0 4 76 61 24 2 3 74 9 1 3 10 1 4 1 3 4 105 0 1 0 6 7 1 6 105 0 7 11 1 0 2 7 0 105 0 2 2 5 97 8 1 5 5 19 5 78 1 0 67 65 64 63 55 54 48 46 44 41 38 35 30 28 27 26 19 16 13 11 0 9 1 9 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni179F;
unicode = 6047;
},
{
glyphname = uni17A0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1672,0,l),
(1935,0,l),
(1935,1083,l),
(1294,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,263,ls),
(950,143,o),
(768,143,qs),
(675,143,ls),
(492,143,o),
(492,263,qs),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,263,ls),
(229,0,o),
(675,0,qs),
(768,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,869,l),
(1036,972,l),
(1242,1082,l),
(1672,944,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
32 30 20 19 11 5 2 1 35 29 28 21 10 9 2 1 8 3 2 2 76 31 12 2 1 74 0 1 0 2 3 1 2 105 0 3 3 0 97 4 1 0 0 19 0 78 23 53 33 23 52 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni17A0;
unicode = 6048;
},
{
glyphname = uni17A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1110,665,qs),
(1110,637,o),
(1068,637,qs),
(1042,637,l),
(1042,692,o),
(1068,692,qs),
(1110,692,o)
);
},
{
closed = 1;
nodes = (
(916,998,qs),
(881,998,o),
(881,1024,q),
(788,1024,o),
(788,954,qs),
(788,884,o),
(920,884,qs),
(1213,884,o),
(1213,1031,qs),
(1213,1303,o),
(721,1303,qs),
(229,1303,o),
(229,1031,qs),
(229,815,ls),
(229,494,o),
(722,494,qs),
(779,494,l),
(779,280,ls),
(779,144,o),
(707,144,qs),
(635,144,o),
(635,183,qs),
(635,280,ls),
(635,420,o),
(499,420,qs),
(323,420,o),
(323,327,q),
(372,327,o),
(372,280,qs),
(372,183,ls),
(372,0,o),
(707,0,qs),
(1042,0,o),
(1042,281,qs),
(1042,494,l),
(1068,494,ls),
(1213,494,o),
(1213,666,qs),
(1213,786,o),
(1038,786,qs),
(779,786,o),
(779,637,q),
(722,637,ls),
(492,637,o),
(492,815,qs),
(492,1031,ls),
(492,1160,o),
(721,1160,qs),
(951,1160,o),
(951,1031,qs),
(951,998,o)
);
},
{
closed = 1;
nodes = (
(1745,1085,l),
(1879,997,o),
(1924,997,qs),
(2021,997,o),
(2058,1187,q),
(1983,1187,o),
(1929,1216,qs),
(1766,1303,l),
(1559,1025,l),
(1559,935,l),
(1672,862,l),
(1672,-480,l),
(1443,-328,l),
(1213,-490,l),
(1213,-93,l),
(950,-93,l),
(881,-161,ls),
(845,-195,o),
(829,-228,qs),
(811,-262,o),
(811,-294,qs),
(811,-328,o),
(846,-345,qs),
(879,-360,o),
(944,-360,qs),
(950,-360,l),
(950,-673,l),
(1213,-673,l),
(1443,-501,l),
(1672,-673,l),
(1935,-673,l),
(1935,869,l),
(1695,1009,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
89 81 2 13 2 90 1 20 13 80 1 12 20 79 58 2 4 12 77 1 17 18 78 76 61 3 15 17 6 76 82 1 11 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
89 81 2 13 2 90 1 14 13 80 1 12 20 79 58 2 4 12 77 1 17 18 78 76 61 3 15 17 6 76 82 1 11 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 17 18 15 18 17 15 128 0 19 0 20 12 19 20 105 14 1 13 0 12 4 13 12 105 0 4 21 1 0 1 4 0 105 3 1 1 10 1 5 8 1 5 105 0 8 0 7 9 8 7 105 0 18 16 1 15 18 15 99 0 2 2 11 97 0 11 11 17 77 0 9 9 6 97 0 6 6 19 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 17 18 15 18 17 15 128 0 19 0 20 12 19 20 105 14 1 13 0 12 4 13 12 105 0 4 21 1 0 1 4 0 105 3 1 1 10 1 5 8 1 5 105 0 8 0 7 9 8 7 105 0 2 2 11 97 0 11 11 17 77 0 9 9 6 97 0 6 6 19 77 16 1 15 15 18 95 0 18 18 18 15 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 90 values pushed */
0 14 13 20 13 14 114 0 17 18 15 18 17 15 128 0 19 0 20 12 19 20 105 0 13 0 12 4 13 12 105 0 4 21 1 0 1 4 0 105 3 1 1 10 1 5 8 1 5 105 0 8 0 7 9 8 7 105 0 2 2 11 97 0 11 11 17 77 0 9 9 6 97 0 6 6 19 77 16 1 15 15 18 95 0 18 18 18 15 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
1 0 88 86 85 84 75 74 66 64 63 62 60 59 57 55 54 53 51 49 47 45 42 40 38 36 33 31 30 29 26 24 22 20 18 16 15 13 10 8 4 2 0 6 1 6 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni17A1;
unicode = 6049;
},
{
glyphname = uni17A2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,248,qs),
(179,283,o),
(179,303,qs),
(179,326,o),
(190,337,qs),
(202,349,o),
(229,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(928,248,qs),
(910,283,o),
(910,303,qs),
(910,326,o),
(921,337,qs),
(933,349,o),
(960,349,q),
(960,192,l),
(945,212,o)
);
},
{
closed = 1;
nodes = (
(887,442,o),
(852,408,qs),
(817,372,o),
(817,303,qs),
(817,268,o),
(837,222,qs),
(858,176,o),
(898,117,q),
(960,0,l),
(1223,0,l),
(1223,869,l),
(962,1009,l),
(1012,1075,l),
(1166,997,o),
(1212,997,qs),
(1278,997,o),
(1336,1187,q),
(1270,1187,o),
(1214,1216,qs),
(1044,1303,l),
(827,1025,l),
(827,945,l),
(960,862,l),
(960,677,l),
(492,677,l),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,442,l),
(156,442,o),
(121,408,qs),
(86,372,o),
(86,303,qs),
(86,268,o),
(106,222,qs),
(127,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(492,534,l),
(960,534,l),
(960,442,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
57 56 48 42 41 33 6 6 5 58 47 46 43 32 31 6 7 6 9 0 2 3 0 3 76 49 34 2 5 74 8 1 5 9 1 6 7 5 6 105 0 7 0 2 4 7 2 103 11 1 4 1 1 0 3 4 0 105 10 1 3 3 19 3 78 69 68 60 59 55 53 22 20 33 22 24 17 23 24 17 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A2;
unicode = 6050;
},
{
glyphname = uni17A5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(651,738,qs),
(791,738,ls),
(951,738,o),
(951,618,qs),
(951,0,l),
(1213,0,l),
(1213,618,ls),
(1213,881,o),
(791,881,qs),
(651,881,ls),
(229,881,o),
(229,618,qs),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,618,ls),
(492,738,o)
);
},
{
closed = 1;
nodes = (
(393,1118,l),
(612,971,l),
(838,971,ls),
(1213,971,o),
(1213,1210,qs),
(1213,1443,o),
(997,1443,qs),
(911,1443,o),
(882,1421,qs),
(854,1397,o),
(854,1350,q),
(950,1350,o),
(951,1210,qs),
(950,1114,o),
(848,1114,qs),
(805,1114,l),
(505,1303,l),
(403,1303,l),
(136,1110,l),
(136,959,l),
(229,886,l),
(492,936,l),
(318,1060,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
55 1 7 6 56 37 2 10 7 36 35 2 3 10 2 1 2 0 4 76 0 9 0 8 6 9 8 105 0 7 0 10 3 7 10 103 0 3 0 5 1 3 5 106 0 1 11 1 0 2 1 0 105 0 6 6 17 77 4 1 2 2 19 2 78 1 0 54 52 50 48 45 44 42 40 39 38 33 30 28 27 25 22 20 19 13 11 0 9 1 9 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A5;
unicode = 6053;
},
{
glyphname = uni17A6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(535,-469,qs),
(535,-502,o),
(489,-545,q),
(489,-450,l),
(535,-450,o)
);
},
{
closed = 1;
nodes = (
(1213,1103,l),
(721,1303,l),
(229,1104,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1055,l),
(601,1105,l),
(950,964,l),
(950,0,l),
(1213,0,l)
);
},
{
closed = 1;
nodes = (
(1703,1075,l),
(1877,997,o),
(1923,997,qs),
(1976,997,o),
(2056,1147,o),
(2056,1290,qs),
(2056,1395,o),
(2021,1447,qs),
(1987,1499,o),
(1867,1499,qs),
(1820,1499,o),
(1797,1476,qs),
(1774,1453,o),
(1774,1386,q),
(1844,1386,o),
(1878,1358,qs),
(1913,1329,o),
(1913,1290,qs),
(1913,1256,o),
(1905,1238,qs),
(1902,1231,o),
(1898,1227,q),
(1705,1303,l),
(1538,1025,l),
(1538,945,l),
(1671,862,l),
(1671,-445,ls),
(1671,-555,o),
(1433,-555,qs),
(1194,-555,o),
(1194,-445,qs),
(1194,-302,ls),
(1194,-93,o),
(722,-93,qs),
(249,-93,o),
(249,-302,qs),
(249,-673,l),
(489,-673,l),
(559,-606,ls),
(628,-539,o),
(628,-468,qs),
(628,-414,o),
(594,-388,qs),
(559,-361,o),
(489,-361,q),
(489,-302,ls),
(489,-212,o),
(722,-212,qs),
(954,-212,o),
(954,-302,qs),
(954,-445,ls),
(954,-673,o),
(1433,-673,qs),
(1934,-673,o),
(1934,-445,qs),
(1934,869,l),
(1673,1009,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
89 88 67 66 65 31 30 29 18 17 10 12 10 64 63 33 16 4 1 12 2 1 2 0 13 11 10 3 9 6 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 12 10 1 10 12 1 128 0 6 5 9 5 6 9 128 0 11 0 10 12 11 10 105 0 1 13 1 0 2 1 0 105 0 8 0 5 6 8 5 105 14 3 2 2 2 19 77 0 9 9 4 97 7 1 4 4 25 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 10 1 10 12 1 128 0 6 5 9 5 6 9 128 0 11 0 10 12 11 10 105 0 1 13 1 0 2 1 0 105 14 3 2 2 2 19 77 0 5 5 8 97 0 8 8 18 77 0 9 9 4 97 7 1 4 4 25 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 12 10 1 10 12 1 128 0 6 5 9 5 6 9 128 0 11 0 10 12 11 10 105 0 1 13 1 0 2 1 0 105 0 9 7 1 4 9 4 101 14 3 2 2 2 19 77 0 5 5 8 97 0 8 8 18 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
15 15 1 0 87 85 80 78 75 74 61 59 56 54 52 51 45 44 42 40 37 35 15 32 15 32 28 27 21 19 0 9 1 9 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni17A6;
unicode = 6054;
},
{
glyphname = uni17A7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(526,902,qs),
(538,896,o),
(538,884,qs),
(538,862,o),
(526,850,qs),
(515,839,o),
(492,839,q),
(492,908,l),
(515,908,o)
);
},
{
closed = 1;
nodes = (
(492,263,qs),
(492,423,l),
(812,591,ls),
(1131,758,o),
(1213,861,o),
(1213,931,qs),
(1213,1051,ls),
(1213,1303,o),
(791,1303,qs),
(651,1303,ls),
(229,1303,o),
(229,1051,qs),
(229,838,ls),
(229,791,o),
(270,768,qs),
(311,745,o),
(362,745,qs),
(492,745,ls),
(562,745,o),
(597,780,qs),
(632,815,o),
(632,884,qs),
(632,942,o),
(597,972,qs),
(562,1001,o),
(492,1001,q),
(492,1051,ls),
(492,1160,o),
(651,1160,qs),
(791,1160,ls),
(951,1160,o),
(951,1051,qs),
(951,931,ls),
(950,872,o),
(869,777,o),
(788,734,qs),
(229,442,l),
(229,263,ls),
(229,0,o),
(570,0,q),
(570,1,l),
(604,1,l),
(951,220,l),
(951,117,ls),
(951,93,o),
(922,82,qs),
(893,70,o),
(834,70,q),
(834,11,o),
(864,-18,qs),
(893,-47,o),
(1001,-47,qs),
(1132,-47,o),
(1172,-6,qs),
(1213,34,o),
(1213,115,qs),
(1213,535,l),
(951,535,l),
(951,387,l),
(570,144,l),
(570,143,l),
(492,143,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 0 2 0 6 68 33 27 11 4 9 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 5 0 0 6 114 0 3 9 4 9 3 4 128 0 0 0 7 1 0 7 106 0 5 5 8 97 0 8 8 17 77 10 1 9 9 4 97 0 4 4 19 77 0 1 1 2 97 0 2 2 19 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 6 5 0 5 6 0 128 0 3 9 4 9 3 4 128 0 0 0 7 1 0 7 106 0 5 5 8 97 0 8 8 17 77 10 1 9 9 4 97 0 4 4 19 77 0 1 1 2 97 0 2 2 19 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 6 5 0 5 6 0 128 0 3 9 4 9 3 4 128 0 0 0 7 1 0 7 106 0 1 0 2 1 2 101 0 5 5 8 97 0 8 8 17 77 10 1 9 9 4 97 0 4 4 19 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
9 9 9 70 9 70 53 54 18 56 53 19 36 26 17 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A7;
unicode = 6055;
},
{
glyphname = uni17A8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(526,902,qs),
(538,896,o),
(538,884,qs),
(538,862,o),
(526,850,qs),
(515,839,o),
(492,839,q),
(492,908,l),
(515,908,o)
);
},
{
closed = 1;
nodes = (
(492,263,qs),
(492,423,l),
(812,591,ls),
(1131,758,o),
(1213,861,o),
(1213,931,qs),
(1213,1051,ls),
(1213,1303,o),
(791,1303,qs),
(651,1303,ls),
(229,1303,o),
(229,1051,qs),
(229,838,ls),
(229,791,o),
(270,768,qs),
(311,745,o),
(362,745,qs),
(492,745,ls),
(562,745,o),
(597,780,qs),
(632,815,o),
(632,884,qs),
(632,942,o),
(597,972,qs),
(562,1001,o),
(492,1001,q),
(492,1051,ls),
(492,1160,o),
(651,1160,qs),
(791,1160,ls),
(951,1160,o),
(951,1051,qs),
(951,931,ls),
(950,872,o),
(869,777,o),
(788,734,qs),
(229,442,l),
(229,263,ls),
(229,0,o),
(570,0,q),
(570,1,l),
(604,1,l),
(951,220,l),
(951,117,ls),
(951,93,o),
(922,82,qs),
(893,70,o),
(834,70,q),
(834,11,o),
(864,-18,qs),
(893,-47,o),
(1001,-47,qs),
(1132,-47,o),
(1172,-6,qs),
(1213,34,o),
(1213,115,qs),
(1213,535,l),
(951,535,l),
(951,387,l),
(570,144,l),
(570,143,l),
(492,143,o)
);
},
{
closed = 1;
nodes = (
(1178,1364,qs),
(1253,1364,o),
(1306,1535,q),
(1253,1535,ls),
(1206,1535,o),
(1165,1560,qs),
(980,1673,l),
(893,1673,l),
(749,1548,l),
(550,1673,l),
(453,1673,l),
(136,1487,l),
(136,1435,l),
(239,1346,l),
(270,1322,o),
(361,1322,qs),
(363,1322,ls),
(395,1322,o),
(443,1395,q),
(331,1475,l),
(406,1520,l),
(636,1374,l),
(716,1374,l),
(843,1494,l),
(1010,1402,ls),
(1073,1364,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
87 1 14 12 84 83 77 76 75 72 6 10 14 5 0 2 0 6 68 33 27 11 4 9 1 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
13 1 12 14 12 133 0 11 10 8 10 11 8 128 0 6 5 0 0 6 114 0 3 9 4 9 3 4 128 0 14 15 1 10 11 14 10 105 0 0 0 7 1 0 7 106 0 5 5 8 97 0 8 8 17 77 16 1 9 9 4 97 0 4 4 19 77 0 1 1 2 97 0 2 2 19 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
13 1 12 14 12 133 0 11 10 8 10 11 8 128 0 6 5 0 5 6 0 128 0 3 9 4 9 3 4 128 0 14 15 1 10 11 14 10 105 0 0 0 7 1 0 7 106 0 5 5 8 97 0 8 8 17 77 16 1 9 9 4 97 0 4 4 19 77 0 1 1 2 97 0 2 2 19 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
13 1 12 14 12 133 0 11 10 8 10 11 8 128 0 6 5 0 5 6 0 128 0 3 9 4 9 3 4 128 0 14 15 1 10 11 14 10 105 0 0 0 7 1 0 7 106 0 1 0 2 1 2 101 0 5 5 8 97 0 8 8 17 77 16 1 9 9 4 97 0 4 4 19 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 83 values pushed */
13 1 12 14 12 133 0 10 14 15 14 10 15 128 0 11 15 8 15 11 8 128 0 6 5 0 5 6 0 128 0 3 9 4 9 3 4 128 0 14 0 15 11 14 15 105 0 0 0 7 1 0 7 106 0 1 0 2 1 2 101 0 5 5 8 97 0 8 8 17 77 16 1 9 9 4 97 0 4 4 19 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
9 9 96 94 93 91 89 88 86 85 81 78 74 73 9 70 9 70 53 54 18 56 53 19 36 26 17 17 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A8;
unicode = 6056;
},
{
glyphname = uni17A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1229,-6,qs),
(1212,-47,o),
(1177,-47,q),
(1177,-70,o),
(1212,-93,o),
(1327,-93,qs),
(1403,-93,o),
(1426,-46,qs),
(1450,2,o),
(1450,97,qs),
(1450,535,l),
(1247,535,l),
(1247,99,ls),
(1247,35,o)
);
},
{
closed = 1;
nodes = (
(526,902,qs),
(538,896,o),
(538,884,qs),
(538,862,o),
(526,850,qs),
(515,839,o),
(492,839,q),
(492,908,l),
(515,908,o)
);
},
{
closed = 1;
nodes = (
(492,263,qs),
(492,423,l),
(812,591,ls),
(1131,758,o),
(1213,861,o),
(1213,931,qs),
(1213,1051,ls),
(1213,1303,o),
(791,1303,qs),
(651,1303,ls),
(229,1303,o),
(229,1051,qs),
(229,838,ls),
(229,791,o),
(270,768,qs),
(311,745,o),
(362,745,qs),
(492,745,ls),
(562,745,o),
(597,780,qs),
(632,815,o),
(632,884,qs),
(632,942,o),
(597,972,qs),
(562,1001,o),
(492,1001,q),
(492,1051,ls),
(492,1160,o),
(651,1160,qs),
(791,1160,ls),
(951,1160,o),
(951,1051,qs),
(951,931,ls),
(950,872,o),
(869,777,o),
(788,734,qs),
(229,442,l),
(229,263,ls),
(229,0,o),
(570,0,q),
(570,1,l),
(604,1,l),
(951,220,l),
(951,117,ls),
(951,93,o),
(922,82,qs),
(893,70,o),
(834,70,q),
(834,11,o),
(864,-18,qs),
(893,-47,o),
(1001,-47,qs),
(1082,-47,o),
(1122,-6,qs),
(1163,34,o),
(1163,115,qs),
(1163,535,l),
(951,535,l),
(951,387,l),
(570,144,l),
(570,143,l),
(492,143,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
19 14 2 3 9 82 47 41 25 4 12 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 9 8 3 3 9 114 0 6 12 7 12 6 7 128 0 2 5 1 5 2 1 128 0 3 0 10 0 3 10 106 0 1 0 1 85 0 8 8 11 97 0 11 11 17 77 13 1 12 12 7 97 0 7 7 19 77 4 1 0 0 5 97 0 5 5 19 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 9 8 3 3 9 114 0 6 12 7 12 6 7 128 0 3 0 10 0 3 10 106 0 1 0 1 85 0 8 8 11 97 0 11 11 17 77 13 1 12 12 7 97 0 7 7 19 77 4 1 0 0 5 97 0 5 5 19 77 0 2 2 18 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 9 8 3 8 9 3 128 0 6 12 7 12 6 7 128 0 3 0 10 0 3 10 106 0 1 0 1 85 0 8 8 11 97 0 11 11 17 77 13 1 12 12 7 97 0 7 7 19 77 4 1 0 0 5 97 0 5 5 19 77 0 2 2 18 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 9 8 3 8 9 3 128 0 6 12 7 12 6 7 128 0 2 5 1 5 2 1 128 0 3 0 10 0 3 10 106 0 5 2 0 5 89 4 1 0 0 1 0 1 101 0 8 8 11 97 0 11 11 17 77 13 1 12 12 7 97 0 7 7 19 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
23 23 23 84 23 84 76 73 68 65 59 58 56 53 19 36 26 20 18 36 17 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A9;
unicode = 6057;
},
{
glyphname = uni17AA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(526,902,qs),
(538,896,o),
(538,884,qs),
(538,862,o),
(526,850,qs),
(515,839,o),
(492,839,q),
(492,908,l),
(515,908,o)
);
},
{
closed = 1;
nodes = (
(492,263,qs),
(492,423,l),
(812,591,ls),
(1131,758,o),
(1213,861,o),
(1213,931,qs),
(1213,1051,ls),
(1213,1303,o),
(791,1303,qs),
(651,1303,ls),
(229,1303,o),
(229,1051,qs),
(229,838,ls),
(229,791,o),
(270,768,qs),
(311,745,o),
(362,745,qs),
(492,745,ls),
(562,745,o),
(597,780,qs),
(632,815,o),
(632,884,qs),
(632,942,o),
(597,972,qs),
(562,1001,o),
(492,1001,q),
(492,1051,ls),
(492,1160,o),
(651,1160,qs),
(791,1160,ls),
(951,1160,o),
(951,1051,qs),
(951,931,ls),
(950,872,o),
(869,777,o),
(788,734,qs),
(229,442,l),
(229,263,ls),
(229,0,o),
(570,0,q),
(570,1,l),
(604,1,l),
(951,220,l),
(951,117,ls),
(951,93,o),
(922,82,qs),
(893,70,o),
(834,70,q),
(834,11,o),
(864,-18,qs),
(893,-47,o),
(1001,-47,qs),
(1132,-47,o),
(1172,-6,qs),
(1213,34,o),
(1213,115,qs),
(1213,535,l),
(951,535,l),
(951,387,l),
(570,144,l),
(570,143,l),
(492,143,o)
);
},
{
closed = 1;
nodes = (
(393,1558,l),
(612,1411,l),
(838,1411,ls),
(1213,1411,o),
(1213,1650,qs),
(1213,1883,o),
(997,1883,qs),
(911,1883,o),
(882,1861,qs),
(854,1837,o),
(854,1790,q),
(950,1790,o),
(951,1650,qs),
(950,1554,o),
(848,1554,qs),
(805,1554,l),
(505,1743,l),
(403,1743,l),
(136,1550,l),
(136,1399,l),
(229,1326,l),
(492,1376,l),
(318,1500,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
92 1 11 10 93 74 2 14 11 73 72 2 8 14 5 0 2 0 6 68 33 27 11 4 9 1 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 10 12 11 12 10 11 128 0 6 5 0 0 6 114 0 3 9 4 9 3 4 128 0 13 0 12 10 13 12 105 0 11 0 14 8 11 14 103 0 0 0 7 1 0 7 106 0 5 5 8 97 0 8 8 17 77 15 1 9 9 4 97 0 4 4 19 77 0 1 1 2 97 0 2 2 19 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 10 12 11 12 10 11 128 0 6 5 0 5 6 0 128 0 3 9 4 9 3 4 128 0 13 0 12 10 13 12 105 0 11 0 14 8 11 14 103 0 0 0 7 1 0 7 106 0 5 5 8 97 0 8 8 17 77 15 1 9 9 4 97 0 4 4 19 77 0 1 1 2 97 0 2 2 19 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 77 values pushed */
0 10 12 11 12 10 11 128 0 6 5 0 5 6 0 128 0 3 9 4 9 3 4 128 0 13 0 12 10 13 12 105 0 11 0 14 8 11 14 103 0 0 0 7 1 0 7 106 0 1 0 2 1 2 101 0 5 5 8 97 0 8 8 17 77 15 1 9 9 4 97 0 4 4 19 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
9 9 91 89 87 85 82 81 79 77 76 75 9 70 9 70 53 54 18 56 53 19 36 26 17 16 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17AA;
unicode = 6058;
},
{
glyphname = uni17AB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1047,-93,qs),
(881,-93,o),
(881,-186,q),
(950,-186,o),
(950,-233,qs),
(950,-429,o),
(589,-429,qs),
(259,-429,o),
(136,-391,q),
(193,-481,o),
(444,-572,o),
(588,-572,qs),
(1213,-572,o),
(1213,-233,qs),
(1213,-93,o)
);
},
{
closed = 1;
nodes = (
(1213,263,qs),
(1213,869,l),
(973,1009,l),
(1023,1085,l),
(1157,997,o),
(1202,997,qs),
(1299,997,o),
(1336,1187,q),
(1261,1187,o),
(1207,1216,qs),
(1044,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,263,ls),
(950,143,o),
(768,143,qs),
(675,143,ls),
(492,143,o),
(492,263,qs),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,263,ls),
(229,0,o),
(675,0,qs),
(768,0,ls),
(1213,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
49 48 40 30 29 21 6 6 5 50 39 38 31 20 19 6 7 6 5 1 1 2 3 76 41 22 2 5 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
8 1 5 9 1 6 7 5 6 105 0 3 0 2 1 3 2 105 0 7 7 4 97 10 1 4 4 19 77 0 1 1 0 97 0 0 0 20 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
8 1 5 9 1 6 7 5 6 105 0 7 7 4 97 10 1 4 4 19 77 0 2 2 3 97 0 3 3 18 77 0 1 1 0 97 0 0 0 20 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
8 1 5 9 1 6 7 5 6 105 0 1 0 0 1 0 101 0 7 7 4 97 10 1 4 4 19 77 0 2 2 3 97 0 3 3 18 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
17 15 47 45 44 43 36 33 28 26 25 24 15 52 17 52 33 18 35 33 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17AB;
unicode = 6059;
},
{
glyphname = uni17AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1213,-233,qs),
(1213,-93,o),
(1047,-93,qs),
(881,-93,o),
(881,-186,q),
(950,-186,o),
(950,-233,qs),
(950,-429,o),
(589,-429,qs),
(259,-429,o),
(136,-391,q),
(193,-481,o),
(444,-572,o),
(588,-572,qs),
(830,-572,o),
(978,-521,q),
(1008,-544,o),
(1041,-557,qs),
(1081,-572,o),
(1161,-572,qs),
(1241,-572,o),
(1326,-495,o),
(1326,-430,q),
(1240,-430,o),
(1197,-412,qs),
(1181,-405,o),
(1164,-396,q),
(1213,-328,o)
);
},
{
closed = 1;
nodes = (
(1213,263,qs),
(1213,869,l),
(973,1009,l),
(1023,1085,l),
(1157,997,o),
(1202,997,qs),
(1299,997,o),
(1336,1187,q),
(1261,1187,o),
(1207,1216,qs),
(1044,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,263,ls),
(950,143,o),
(768,143,qs),
(675,143,ls),
(492,143,o),
(492,263,qs),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,263,ls),
(229,0,o),
(675,0,qs),
(768,0,ls),
(1213,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
62 61 53 43 42 34 6 8 7 63 52 51 44 33 32 6 9 8 16 1 0 4 11 1 1 0 4 76 54 35 2 7 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
10 1 7 11 1 8 9 7 8 105 0 5 0 4 0 5 4 105 0 9 9 6 97 12 1 6 6 19 77 3 1 0 0 1 97 2 1 1 1 20 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
10 1 7 11 1 8 9 7 8 105 0 9 9 6 97 12 1 6 6 19 77 0 4 4 5 97 0 5 5 18 77 3 1 0 0 1 97 2 1 1 1 20 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
10 1 7 11 1 8 9 7 8 105 3 1 0 2 1 1 0 1 101 0 9 9 6 97 12 1 6 6 19 77 0 4 4 5 97 0 5 5 18 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
30 28 60 58 57 56 49 46 41 39 38 37 28 65 30 65 33 18 35 36 34 19 13 7 28 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17AC;
unicode = 6060;
},
{
glyphname = uni17AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1047,-93,qs),
(881,-93,o),
(881,-186,q),
(950,-186,o),
(950,-233,qs),
(950,-429,o),
(589,-429,qs),
(259,-429,o),
(136,-391,q),
(193,-481,o),
(444,-572,o),
(588,-572,qs),
(1213,-572,o),
(1213,-233,qs),
(1213,-93,o)
);
},
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(533,1103,l),
(722,957,l),
(911,1103,l),
(950,1055,l),
(950,0,l),
(1213,0,l),
(1213,1052,l),
(928,1303,l),
(722,1140,l),
(515,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
17 1 5 4 5 1 1 2 2 76 37 36 35 34 33 30 29 28 27 26 10 6 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 6 8 1 4 5 6 4 105 0 3 0 2 1 3 2 105 9 7 2 5 5 19 77 0 1 1 0 97 0 0 0 20 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 6 8 1 4 5 6 4 105 9 7 2 5 5 19 77 0 2 2 3 97 0 3 3 18 77 0 1 1 0 97 0 0 0 20 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 6 8 1 4 5 6 4 105 0 1 0 0 1 0 101 9 7 2 5 5 19 77 0 2 2 3 97 0 3 3 18 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
25 25 16 15 25 46 25 46 40 38 32 31 15 24 16 24 33 18 35 33 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17AD;
unicode = 6061;
},
{
glyphname = uni17AE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1213,-233,qs),
(1213,-93,o),
(1047,-93,qs),
(881,-93,o),
(881,-186,q),
(950,-186,o),
(950,-233,qs),
(950,-429,o),
(589,-429,qs),
(259,-429,o),
(136,-391,q),
(193,-481,o),
(444,-572,o),
(588,-572,qs),
(830,-572,o),
(978,-521,q),
(1008,-544,o),
(1041,-557,qs),
(1081,-572,o),
(1161,-572,qs),
(1241,-572,o),
(1326,-495,o),
(1326,-430,q),
(1240,-430,o),
(1197,-412,qs),
(1181,-405,o),
(1164,-396,q),
(1213,-328,o)
);
},
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(533,1103,l),
(722,957,l),
(911,1103,l),
(950,1055,l),
(950,0,l),
(1213,0,l),
(1213,1052,l),
(928,1303,l),
(722,1140,l),
(515,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
30 1 7 6 16 1 0 4 11 1 1 0 3 76 50 49 48 47 46 43 42 41 40 39 10 8 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 8 10 1 6 7 8 6 105 0 5 0 4 0 5 4 105 11 9 2 7 7 19 77 3 1 0 0 1 97 2 1 1 1 20 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 10 1 6 7 8 6 105 11 9 2 7 7 19 77 0 4 4 5 97 0 5 5 18 77 3 1 0 0 1 97 2 1 1 1 20 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 8 10 1 6 7 8 6 105 3 1 0 2 1 1 0 1 101 11 9 2 7 7 19 77 0 4 4 5 97 0 5 5 18 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
38 38 29 28 38 59 38 59 53 51 45 44 28 37 29 37 33 18 35 36 34 19 12 7 28 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17AE;
unicode = 6062;
},
{
glyphname = uni17AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,564,qs),
(179,570,o),
(179,582,qs),
(179,601,o),
(197,631,qs),
(214,661,o),
(229,669,q),
(229,559,l),
(214,559,o)
);
},
{
closed = 1;
nodes = (
(492,181,l),
(492,838,l),
(229,838,l),
(132,707,o),
(108,664,qs),
(86,620,o),
(86,581,qs),
(86,523,o),
(127,494,qs),
(167,465,o),
(229,465,q),
(229,0,l),
(492,0,l),
(721,180,l),
(950,0,l),
(1213,0,l),
(1213,1103,l),
(721,1303,l),
(492,1198,l),
(492,1304,ls),
(492,1396,o),
(456,1443,qs),
(422,1489,o),
(302,1489,qs),
(194,1489,o),
(165,1461,qs),
(136,1432,o),
(136,1373,q),
(182,1373,o),
(206,1355,qs),
(229,1338,o),
(229,1304,qs),
(229,1164,ls),
(229,1056,o),
(258,1026,qs),
(287,997,o),
(365,997,qs),
(442,998,o),
(442,1025,q),
(627,1103,l),
(950,978,l),
(950,181,l),
(721,360,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
34 33 32 12 11 5 0 1 10 1 6 0 1 1 5 6 51 50 37 9 4 3 5 4 76 0 1 2 0 2 1 0 128 0 5 6 3 6 5 3 128 0 2 0 0 6 2 0 105 0 6 6 3 95 4 1 3 3 19 3 78 23 17 18 23 35 23 45 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17AF;
unicode = 6063;
},
{
glyphname = uni17B0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,-539,qs),
(229,-608,o),
(301,-643,qs),
(372,-678,o),
(567,-678,qs),
(672,-678,o),
(724,-632,qs),
(776,-585,o),
(776,-491,q),
(852,-508,ls),
(903,-518,o),
(946,-518,qs),
(1213,-518,o),
(1213,-246,qs),
(1213,-27,l),
(951,-27,l),
(751,-218,o),
(458,-381,o),
(284,-430,q),
(229,-451,o)
);
},
{
closed = 1;
nodes = (
(907,-386,qs),
(894,-386,o),
(879,-382,qs),
(750,-342,l),
(863,-284,o),
(951,-205,q),
(951,-246,ls),
(951,-386,o)
);
},
{
closed = 1;
nodes = (
(492,-509,qs),
(492,-481,l),
(541,-464,o),
(656,-404,q),
(656,-488,ls),
(656,-517,o),
(606,-555,o),
(567,-555,qs),
(492,-555,o)
);
},
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(533,1103,l),
(722,957,l),
(911,1103,l),
(950,1055,l),
(950,0,l),
(1213,0,l),
(1213,1052,l),
(928,1303,l),
(722,1140,l),
(515,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
39 1 6 5 23 21 2 3 0 34 32 10 3 1 3 3 76 59 58 57 56 55 52 51 50 49 48 10 7 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 6 3 6 0 3 128 0 7 10 1 5 6 7 5 105 0 3 0 1 4 3 1 106 11 8 2 6 6 19 77 9 1 4 4 2 97 0 2 2 25 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 0 6 3 6 0 3 128 0 7 10 1 5 6 7 5 105 0 3 0 1 4 3 1 106 9 1 4 0 2 4 2 101 11 8 2 6 6 19 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
47 47 38 37 29 28 47 68 47 68 62 60 54 53 37 46 38 46 28 36 29 36 27 37 34 19 12 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17B0;
unicode = 6064;
},
{
glyphname = uni17B1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(578,1529,o),
(658,1510,qs),
(737,1491,o),
(815,1452,qs),
(896,1412,ls),
(988,1366,o),
(1122,1366,qs),
(1257,1366,o),
(1257,1539,q),
(1164,1539,o),
(1099,1571,qs),
(940,1651,ls),
(848,1698,o),
(752,1721,qs),
(655,1744,o),
(556,1744,q),
(156,1508,l),
(156,1415,l),
(277,1345,ls),
(315,1322,o),
(370,1312,q),
(461,1418,l),
(342,1471,l),
(439,1529,l)
);
},
{
closed = 1;
nodes = (
(526,902,qs),
(538,896,o),
(538,884,qs),
(538,862,o),
(526,850,qs),
(515,839,o),
(492,839,q),
(492,908,l),
(515,908,o)
);
},
{
closed = 1;
nodes = (
(492,263,qs),
(492,423,l),
(812,591,ls),
(1131,758,o),
(1213,861,o),
(1213,931,qs),
(1213,1051,ls),
(1213,1303,o),
(791,1303,qs),
(651,1303,ls),
(229,1303,o),
(229,1051,qs),
(229,838,ls),
(229,791,o),
(270,768,qs),
(311,745,o),
(362,745,qs),
(492,745,ls),
(562,745,o),
(597,780,qs),
(632,815,o),
(632,884,qs),
(632,942,o),
(597,972,qs),
(562,1001,o),
(492,1001,q),
(492,1051,ls),
(492,1160,o),
(651,1160,qs),
(791,1160,ls),
(951,1160,o),
(951,1051,qs),
(951,931,ls),
(950,872,o),
(869,777,o),
(788,734,qs),
(229,442,l),
(229,263,ls),
(229,0,o),
(570,0,q),
(570,1,l),
(604,1,l),
(951,220,l),
(951,117,ls),
(951,93,o),
(922,82,qs),
(893,70,o),
(834,70,q),
(834,11,o),
(864,-18,qs),
(893,-47,o),
(1001,-47,qs),
(1132,-47,o),
(1172,-6,qs),
(1213,34,o),
(1213,115,qs),
(1213,535,l),
(951,535,l),
(951,387,l),
(570,144,l),
(570,143,l),
(492,143,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
6 5 1 3 2 3 2 1 12 2 29 24 2 4 10 92 57 51 35 4 13 5 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 10 9 4 4 10 114 0 7 13 8 13 7 8 128 0 0 0 3 2 0 3 105 0 1 0 2 12 1 2 105 0 4 0 11 5 4 11 106 0 9 9 12 97 0 12 12 17 77 14 1 13 13 8 97 0 8 8 19 77 0 5 5 6 97 0 6 6 19 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 10 9 4 9 10 4 128 0 7 13 8 13 7 8 128 0 0 0 3 2 0 3 105 0 1 0 2 12 1 2 105 0 4 0 11 5 4 11 106 0 9 9 12 97 0 12 12 17 77 14 1 13 13 8 97 0 8 8 19 77 0 5 5 6 97 0 6 6 19 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 10 9 4 9 10 4 128 0 7 13 8 13 7 8 128 0 0 0 3 2 0 3 105 0 1 0 2 12 1 2 105 0 4 0 11 5 4 11 106 0 5 0 6 5 6 101 0 9 9 12 97 0 12 12 17 77 14 1 13 13 8 97 0 8 8 19 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
33 33 33 94 33 94 86 83 78 75 69 68 66 63 53 19 36 26 18 21 33 21 23 15 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17B1;
unicode = 6065;
},
{
glyphname = uni17B2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1001,263,qs),
(1001,144,o),
(792,144,qs),
(651,144,ls),
(492,144,o),
(492,263,qs),
(492,1045,l),
(637,1113,l),
(1000,968,l),
(1213,1103,l),
(721,1303,l),
(229,1104,l),
(229,263,ls),
(229,0,o),
(651,0,qs),
(792,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,412,o),
(1086,428,q),
(1127,461,ls),
(1213,526,o),
(1213,652,qs),
(1213,891,o),
(887,891,qs),
(616,891,o),
(616,706,qs),
(616,543,o),
(782,543,qs),
(887,543,o),
(887,652,q),
(829,652,o),
(829,706,qs),
(829,769,o),
(887,769,qs),
(951,769,o),
(951,652,qs),
(951,551,o),
(901,514,q),
(617,286,l),
(617,285,ls),
(617,217,o),
(806,217,q),
(940,326,l),
(949,326,ls),
(1001,326,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
25 1 7 3 4 1 0 7 2 76 38 37 36 35 34 33 6 4 74 8 1 7 3 0 3 7 0 128 0 0 6 3 0 6 126 0 4 0 1 2 4 1 105 0 2 0 3 7 2 3 105 0 6 6 5 97 0 5 5 19 5 78 0 0 0 45 0 45 57 55 34 33 18 38 18 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17B2;
unicode = 6066;
},
{
glyphname = uni17B3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(526,902,qs),
(538,896,o),
(538,884,qs),
(538,862,o),
(526,850,qs),
(515,839,o),
(492,839,q),
(492,908,l),
(515,908,o)
);
},
{
closed = 1;
nodes = (
(492,263,qs),
(492,423,l),
(812,591,ls),
(1131,758,o),
(1213,861,o),
(1213,931,qs),
(1213,1051,ls),
(1213,1303,o),
(791,1303,qs),
(651,1303,ls),
(229,1303,o),
(229,1051,qs),
(229,838,ls),
(229,791,o),
(270,768,qs),
(311,745,o),
(362,745,qs),
(492,745,ls),
(562,745,o),
(597,780,qs),
(632,815,o),
(632,884,qs),
(632,942,o),
(597,972,qs),
(562,1001,o),
(492,1001,q),
(492,1051,ls),
(492,1160,o),
(651,1160,qs),
(791,1160,ls),
(951,1160,o),
(951,1051,qs),
(951,931,ls),
(950,872,o),
(869,777,o),
(788,734,qs),
(229,442,l),
(229,263,ls),
(229,0,o),
(570,0,q),
(570,1,l),
(604,1,l),
(951,220,l),
(951,117,ls),
(951,93,o),
(922,82,qs),
(893,70,o),
(834,70,q),
(834,11,o),
(864,-18,qs),
(893,-47,o),
(1001,-47,qs),
(1132,-47,o),
(1172,-6,qs),
(1213,34,o),
(1213,115,qs),
(1213,535,l),
(951,535,l),
(951,387,l),
(570,144,l),
(570,143,l),
(492,143,o)
);
},
{
closed = 1;
nodes = (
(722,1721,qs),
(625,1744,o),
(556,1744,q),
(156,1508,l),
(156,1415,l),
(277,1345,ls),
(315,1322,o),
(370,1312,q),
(461,1418,l),
(342,1471,l),
(439,1529,l),
(548,1529,o),
(628,1510,qs),
(707,1491,o),
(785,1452,qs),
(866,1412,ls),
(958,1366,o),
(1092,1366,qs),
(1227,1366,o),
(1227,1539,q),
(1192,1539,o),
(1160,1544,q),
(1141,1582,o),
(1141,1626,qs),
(1141,1669,o),
(1159,1716,q),
(1189,1819,o),
(1280,1819,qs),
(1328,1819,o),
(1328,1866,qs),
(1328,1913,o),
(1219,1913,qs),
(1000,1912,o),
(946,1789,qs),
(911,1712,o),
(911,1652,qs),
(911,1650,l),
(910,1651,l),
(818,1698,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
71 1 12 15 105 104 100 99 4 13 14 101 1 8 13 5 0 2 0 6 68 33 27 11 4 9 1 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 15 11 12 11 15 12 128 0 14 12 13 12 14 13 128 0 6 5 0 0 6 114 0 3 9 4 9 3 4 128 0 10 0 11 15 10 11 105 0 12 0 13 8 12 13 105 0 0 0 7 1 0 7 106 0 5 5 8 97 0 8 8 17 77 16 1 9 9 4 97 0 4 4 19 77 0 1 1 2 97 0 2 2 19 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 15 11 12 11 15 12 128 0 14 12 13 12 14 13 128 0 6 5 0 5 6 0 128 0 3 9 4 9 3 4 128 0 10 0 11 15 10 11 105 0 12 0 13 8 12 13 105 0 0 0 7 1 0 7 106 0 5 5 8 97 0 8 8 17 77 16 1 9 9 4 97 0 4 4 19 77 0 1 1 2 97 0 2 2 19 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 15 11 12 11 15 12 128 0 14 12 13 12 14 13 128 0 6 5 0 5 6 0 128 0 3 9 4 9 3 4 128 0 10 0 11 15 10 11 105 0 12 0 13 8 12 13 105 0 0 0 7 1 0 7 106 0 1 0 2 1 2 101 0 5 5 8 97 0 8 8 17 77 16 1 9 9 4 97 0 4 4 19 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
9 9 107 106 98 97 92 90 89 88 82 80 78 76 9 70 9 70 53 54 18 56 53 19 36 26 17 17 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17B3;
unicode = 6067;
},
{
glyphname = uni17A3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,248,qs),
(179,283,o),
(179,303,qs),
(179,326,o),
(190,337,qs),
(202,349,o),
(229,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(928,248,qs),
(910,283,o),
(910,303,qs),
(910,326,o),
(921,337,qs),
(933,349,o),
(960,349,q),
(960,192,l),
(945,212,o)
);
},
{
closed = 1;
nodes = (
(887,442,o),
(852,408,qs),
(817,372,o),
(817,303,qs),
(817,268,o),
(837,222,qs),
(858,176,o),
(898,117,q),
(960,0,l),
(1223,0,l),
(1223,869,l),
(962,1009,l),
(1012,1075,l),
(1166,997,o),
(1212,997,qs),
(1278,997,o),
(1336,1187,q),
(1270,1187,o),
(1214,1216,qs),
(1044,1303,l),
(827,1025,l),
(827,945,l),
(960,862,l),
(960,677,l),
(492,677,l),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,442,l),
(156,442,o),
(121,408,qs),
(86,372,o),
(86,303,qs),
(86,268,o),
(106,222,qs),
(127,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(492,534,l),
(960,534,l),
(960,442,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
57 56 48 42 41 33 6 6 5 58 47 46 43 32 31 6 7 6 9 0 2 3 0 3 76 49 34 2 5 74 8 1 5 9 1 6 7 5 6 105 0 7 0 2 4 7 2 103 11 1 4 1 1 0 3 4 0 105 10 1 3 3 19 3 78 69 68 60 59 55 53 22 20 33 22 24 17 23 24 17 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A3;
unicode = 6051;
},
{
glyphname = uni17A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,248,qs),
(179,283,o),
(179,303,qs),
(179,326,o),
(190,337,qs),
(202,349,o),
(229,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(918,248,qs),
(900,283,o),
(900,303,qs),
(900,326,o),
(911,337,qs),
(923,349,o),
(950,349,q),
(950,192,l),
(935,212,o)
);
},
{
closed = 1;
nodes = (
(877,442,o),
(842,408,qs),
(807,372,o),
(807,303,qs),
(807,268,o),
(827,222,qs),
(848,176,o),
(888,117,q),
(950,0,l),
(1213,0,l),
(1213,869,l),
(1036,972,l),
(1242,1082,l),
(1672,944,l),
(1672,0,l),
(1935,0,l),
(1935,1083,l),
(1294,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,677,l),
(492,677,l),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,442,l),
(156,442,o),
(121,408,qs),
(86,372,o),
(86,303,qs),
(86,268,o),
(106,222,qs),
(127,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(492,534,l),
(950,534,l),
(950,442,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
54 50 48 42 41 33 6 6 5 56 55 53 47 46 43 32 31 8 7 6 9 0 2 3 0 3 76 49 34 2 5 74 0 5 0 6 7 5 6 105 0 7 0 2 4 7 2 103 10 1 4 1 1 0 3 4 0 105 9 8 2 3 3 19 3 78 67 66 58 57 22 20 33 22 24 17 23 24 17 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni17A4;
unicode = 6052;
},
{
glyphname = uni17B4;
layers = (
{
layerId = m01;
width = 1204;
}
);
note = uni17B4;
unicode = 6068;
},
{
glyphname = uni17B5;
layers = (
{
layerId = m01;
width = 1204;
}
);
note = uni17B5;
unicode = 6069;
},
{
glyphname = uni17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-103,1113,l),
(230,968,l),
(230,0,l),
(493,0,l),
(493,1103,l),
(1,1303,l),
(-370,1136,l),
(-309,1025,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
7 6 5 2 1 5 0 74 0 0 0 19 0 78 19 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17B6;
unicode = 6070;
},
{
glyphname = uni17BF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-50,1762,qs),
(27,1739,o),
(90,1692,q),
(-305,1692,l),
(-305,1739,o),
(-278,1762,qs),
(-251,1785,o),
(-198,1785,qs),
(-127,1785,o)
);
},
{
closed = 1;
nodes = (
(155,1818,l),
(110,1851,o),
(68,1874,q),
(68,2047,l),
(-69,2047,l),
(-69,1929,l),
(-137,1945,o),
(-218,1945,qs),
(-514,1945,o),
(-514,1692,qs),
(-514,1569,o),
(-355,1569,qs),
(113,1569,ls),
(171,1569,o),
(201,1522,qs),
(229,1476,o),
(229,1383,qs),
(229,-326,ls),
(229,-465,o),
(87,-465,qs),
(-86,-465,ls),
(-229,-465,o),
(-229,-326,qs),
(-229,-93,l),
(-492,-93,l),
(-492,-326,ls),
(-492,-609,o),
(-86,-609,qs),
(87,-609,ls),
(492,-609,o),
(492,-326,qs),
(492,1383,ls),
(492,1475,o),
(446,1545,qs),
(409,1600,o),
(311,1641,q),
(311,1991,l),
(155,1991,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
45 43 40 3 0 6 10 1 5 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 8 7 133 10 1 8 6 1 8 112 0 3 5 4 5 3 4 128 0 6 9 1 0 1 6 0 105 0 1 0 5 3 1 5 104 0 4 4 2 96 0 2 2 20 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 8 7 133 10 1 8 6 8 133 0 3 5 4 5 3 4 128 0 6 9 1 0 1 6 0 105 0 1 0 5 3 1 5 104 0 4 4 2 96 0 2 2 20 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 8 7 133 10 1 8 6 8 133 0 6 9 1 0 1 6 0 105 0 1 0 5 3 1 5 104 0 3 3 18 77 0 4 4 2 96 0 2 2 20 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 7 8 7 133 10 1 8 6 8 133 0 6 9 1 0 1 6 0 105 0 1 0 5 3 1 5 104 0 4 0 2 4 2 100 0 3 3 18 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
9 9 1 0 9 46 9 46 42 41 39 37 35 32 27 24 22 21 19 16 5 4 0 8 1 8 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17BF;
unicode = 6079;
},
{
glyphname = uni17C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(87,-465,qs),
(-86,-465,ls),
(-229,-465,o),
(-229,-326,qs),
(-229,-93,l),
(-492,-93,l),
(-492,-326,ls),
(-492,-609,o),
(-86,-609,qs),
(87,-609,ls),
(492,-609,o),
(492,-326,qs),
(492,1374,ls),
(492,1644,o),
(133,1644,qs),
(-70,1644,ls),
(-136,1644,o),
(-136,1717,qs),
(-136,1830,ls),
(-136,2000,o),
(-327,2000,qs),
(-492,2000,o),
(-492,1877,q),
(-399,1877,o),
(-399,1830,qs),
(-399,1717,ls),
(-399,1500,o),
(-70,1500,qs),
(133,1500,ls),
(229,1500,o),
(229,1374,qs),
(229,-326,ls),
(229,-465,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 0 6 0 5 6 128 0 2 0 1 3 2 1 105 0 3 0 0 5 3 0 103 0 6 6 4 96 0 4 4 20 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 0 1 3 2 1 105 0 3 0 0 5 3 0 103 0 5 5 18 77 0 6 6 4 96 0 4 4 20 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 1 3 2 1 105 0 3 0 0 5 3 0 103 0 6 0 4 6 4 100 0 5 5 18 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
50 18 51 51 33 19 50 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17C0;
unicode = 6080;
},
{
glyphname = uni17C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(608,981,qs),
(655,981,o),
(689,1194,q),
(649,1194,ls),
(609,1194,o),
(566,1221,qs),
(438,1303,l),
(229,1303,l),
(229,0,l),
(492,0,l),
(562,80,ls),
(608,134,o),
(632,190,qs),
(656,246,o),
(656,303,qs),
(656,372,o),
(615,407,qs),
(574,442,o),
(493,442,q),
(493,1026,l),
(511,1014,ls),
(563,981,o)
);
},
{
closed = 1;
nodes = (
(545,337,qs),
(562,326,o),
(562,303,qs),
(562,263,o),
(545,223,qs),
(527,183,o),
(493,144,q),
(493,348,l),
(527,348,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
1 1 4 3 23 1 1 5 2 76 0 3 0 4 0 3 4 105 0 0 6 1 5 1 0 5 105 0 2 2 17 77 0 1 1 19 1 78 22 22 22 30 22 30 33 34 17 24 18 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17C1;
unicode = 6081;
},
{
glyphname = uni17C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,1709,qs),
(49,1709,o),
(49,1563,qs),
(49,1396,o),
(335,1396,qs),
(684,1396,o),
(684,1679,qs),
(684,1942,o),
(436,1942,qs),
(304,1942,o),
(304,1819,q),
(440,1819,o),
(440,1679,qs),
(440,1539,o),
(335,1539,qs),
(253,1539,o),
(253,1563,qs),
(253,1586,o),
(304,1586,q),
(304,1709,o)
);
},
{
closed = 1;
nodes = (
(608,981,qs),
(655,981,o),
(689,1194,q),
(649,1194,ls),
(609,1194,o),
(566,1221,qs),
(438,1303,l),
(229,1303,l),
(229,0,l),
(492,0,l),
(562,80,ls),
(608,134,o),
(632,190,qs),
(656,246,o),
(656,303,qs),
(656,372,o),
(615,407,qs),
(574,442,o),
(493,442,q),
(493,1026,l),
(511,1014,ls),
(563,981,o)
);
},
{
closed = 1;
nodes = (
(545,337,qs),
(562,326,o),
(562,303,qs),
(562,263,o),
(545,223,qs),
(527,183,o),
(493,144,q),
(493,348,l),
(527,348,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
21 1 10 9 43 1 7 11 2 76 0 3 0 2 5 3 2 105 0 5 0 0 1 5 0 105 0 1 0 4 8 1 4 105 0 9 0 10 6 9 10 105 0 6 12 1 11 7 6 11 105 0 8 8 17 77 0 7 7 19 7 78 42 42 42 50 42 50 41 39 38 36 17 24 19 34 34 33 18 34 16 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17C2;
unicode = 6082;
},
{
glyphname = uni17C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(117,1539,qs),
(117,1396,o),
(372,1396,qs),
(679,1396,o),
(679,1633,qs),
(679,1869,o),
(422,1869,qs),
(380,1869,l),
(380,2036,o),
(186,2036,qs),
(63,2036,o),
(63,1943,q),
(137,1943,o),
(137,1869,qs),
(137,1726,o),
(330,1726,qs),
(372,1726,ls),
(435,1726,o),
(435,1633,qs),
(435,1539,o),
(372,1539,qs),
(330,1539,o),
(330,1633,q),
(117,1633,o)
);
},
{
closed = 1;
nodes = (
(608,981,qs),
(655,981,o),
(689,1194,q),
(649,1194,ls),
(609,1194,o),
(566,1221,qs),
(438,1303,l),
(229,1303,l),
(229,0,l),
(492,0,l),
(562,80,ls),
(608,134,o),
(632,190,qs),
(656,246,o),
(656,303,qs),
(656,372,o),
(615,407,qs),
(574,442,o),
(493,442,q),
(493,1026,l),
(511,1014,ls),
(563,981,o)
);
},
{
closed = 1;
nodes = (
(545,337,qs),
(562,326,o),
(562,303,qs),
(562,263,o),
(545,223,qs),
(527,183,o),
(493,144,q),
(493,348,l),
(527,348,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
25 1 11 10 47 1 8 12 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
13 1 6 1 0 0 6 114 0 3 0 2 4 3 2 105 0 4 0 1 6 4 1 105 0 0 0 5 9 0 5 106 0 10 0 11 7 10 11 105 0 7 14 1 12 8 7 12 105 0 9 9 17 77 0 8 8 19 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
13 1 6 1 0 1 6 0 128 0 3 0 2 4 3 2 105 0 4 0 1 6 4 1 105 0 0 0 5 9 0 5 106 0 10 0 11 7 10 11 105 0 7 14 1 12 8 7 12 105 0 9 9 17 77 0 8 8 19 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
46 46 0 0 46 54 46 54 45 43 42 40 38 37 36 35 27 26 0 23 0 23 34 33 33 18 50 33 15 7 28 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17C3;
unicode = 6083;
},
{
glyphname = uni17C4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-103,1113,l),
(230,968,l),
(230,0,l),
(493,0,l),
(493,1103,l),
(1,1303,l),
(-370,1136,l),
(-309,1025,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
7 6 5 2 1 5 0 74 0 0 0 19 0 78 19 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17C4;
unicode = 6084;
},
{
glyphname = uni17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-309,1025,l),
(-103,1113,l),
(230,968,l),
(230,0,l),
(493,0,l),
(493,1024,l),
(539,1117,o),
(539,1164,qs),
(539,1536,ls),
(539,1752,o),
(362,1752,qs),
(184,1752,o),
(184,1629,q),
(231,1629,o),
(254,1606,qs),
(277,1583,o),
(277,1536,qs),
(277,1191,l),
(1,1303,l),
(-370,1136,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
19 18 17 16 13 1 6 2 0 1 76 0 1 0 0 2 1 0 105 0 2 2 19 2 78 21 33 21 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17C5;
unicode = 6085;
},
{
glyphname = uni17C7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(433,1150,qs),
(451,1169,o),
(488,1169,qs),
(526,1169,o),
(544,1150,qs),
(564,1131,o),
(564,1094,qs),
(564,1056,o),
(544,1038,qs),
(526,1019,o),
(488,1019,qs),
(451,1019,o),
(433,1038,qs),
(414,1056,o),
(414,1094,qs),
(414,1131,o)
);
},
{
closed = 1;
nodes = (
(684,1251,qs),
(619,1303,o),
(488,1303,qs),
(358,1303,o),
(293,1251,qs),
(229,1199,o),
(229,1094,qs),
(229,989,o),
(293,936,qs),
(358,884,o),
(488,884,qs),
(619,884,o),
(684,936,qs),
(748,989,o),
(748,1094,qs),
(748,1199,o)
);
},
{
closed = 1;
nodes = (
(433,269,qs),
(451,289,o),
(488,289,qs),
(526,289,o),
(544,269,qs),
(564,249,o),
(564,209,qs),
(564,170,o),
(544,150,qs),
(526,130,o),
(488,130,qs),
(451,130,o),
(433,150,qs),
(414,170,o),
(414,209,qs),
(414,249,o)
);
},
{
closed = 1;
nodes = (
(684,367,qs),
(619,419,o),
(488,419,qs),
(358,419,o),
(293,367,qs),
(229,315,o),
(229,209,qs),
(229,104,o),
(293,52,qs),
(358,0,o),
(488,0,qs),
(619,0,o),
(684,52,qs),
(748,104,o),
(748,209,qs),
(748,315,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 0 0 2 7 0 2 105 0 7 0 5 4 7 5 105 0 1 1 3 97 0 3 3 17 77 0 4 4 6 97 0 6 6 19 6 78 38 38 38 38 38 38 38 35 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 977;
}
);
note = uni17C7;
unicode = 6087;
},
{
glyphname = uni17C8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(556,41,qs),
(625,83,o),
(655,164,q),
(594,126,o),
(564,126,qs),
(533,126,o),
(533,164,qs),
(533,249,o),
(496,290,qs),
(458,333,o),
(381,333,qs),
(305,333,o),
(267,292,qs),
(229,250,o),
(229,166,qs),
(229,83,o),
(267,41,qs),
(305,0,o),
(381,0,qs),
(486,0,o)
);
},
{
closed = 1;
nodes = (
(556,870,qs),
(625,912,o),
(655,993,q),
(594,955,o),
(564,955,qs),
(533,955,o),
(533,993,qs),
(533,1078,o),
(496,1119,qs),
(458,1162,o),
(381,1162,qs),
(305,1162,o),
(267,1121,qs),
(229,1079,o),
(229,995,qs),
(229,912,o),
(267,870,qs),
(305,829,o),
(381,829,qs),
(486,829,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
36 1 5 4 16 1 2 1 2 76 0 5 4 3 4 5 3 128 0 2 1 0 1 2 0 128 0 4 7 1 3 1 4 3 105 0 1 1 0 97 6 1 0 0 19 0 78 21 20 1 0 35 33 29 27 20 39 21 39 15 13 9 7 0 19 1 19 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 791;
}
);
note = uni17C8;
unicode = 6088;
},
{
glyphname = uni17DC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1150,182,o),
(1150,359,qs),
(1150,513,o),
(914,658,o),
(675,658,qs),
(576,658,o),
(455,684,o),
(388,764,o),
(388,842,qs),
(388,941,o),
(534,1055,o),
(675,1055,qs),
(817,1055,o),
(963,979,o),
(963,910,qs),
(963,851,o),
(922,851,qs),
(862,851,o),
(862,793,qs),
(862,734,o),
(922,734,qs),
(1001,734,o),
(1099,763,o),
(1150,840,o),
(1150,910,qs),
(1150,1057,o),
(911,1210,o),
(675,1210,qs),
(440,1210,o),
(200,1019,o),
(200,842,qs),
(200,688,o),
(436,543,o),
(675,543,qs),
(775,543,o),
(895,518,o),
(963,438,o),
(963,360,qs),
(963,260,o),
(817,146,o),
(675,146,qs),
(533,146,o),
(388,222,o),
(388,292,qs),
(388,350,o),
(429,350,qs),
(458,350,o),
(489,380,o),
(489,408,qs),
(489,468,o),
(429,468,qs),
(350,468,o),
(251,439,o),
(200,363,o),
(200,293,qs),
(200,145,o),
(438,-10,o),
(675,-10,qs),
(910,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
0 5 0 8 7 5 8 105 0 7 0 6 9 7 6 105 0 9 0 4 1 9 4 105 0 1 0 2 3 1 2 105 0 3 3 0 97 10 1 0 0 19 0 78 1 0 54 52 47 45 42 40 38 36 31 29 25 23 18 16 13 11 8 6 0 58 1 58 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1350;
}
);
note = uni17DC;
unicode = 6108;
},
{
glyphname = uni1789.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(515,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(533,1103,l),
(722,957,l),
(911,1103,l),
(950,1055,l),
(950,0,l),
(1213,0,l),
(1213,1014,l),
(1373,1095,l),
(1672,941,l),
(1672,0,l),
(1935,0,l),
(1935,1054,l),
(1443,1303,l),
(1129,1126,l),
(928,1303,l),
(722,1140,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
2 1 1 0 1 76 38 37 36 25 24 23 22 21 18 17 16 13 12 11 14 3 74 0 3 5 1 0 1 3 0 105 4 2 2 1 1 19 1 78 1 0 35 34 28 26 20 19 15 14 0 9 1 9 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni1789.a;
},
{
glyphname = uni17BF.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-50,1762,qs),
(27,1739,o),
(90,1692,q),
(-305,1692,l),
(-305,1739,o),
(-278,1762,qs),
(-251,1785,o),
(-198,1785,qs),
(-127,1785,o)
);
},
{
closed = 1;
nodes = (
(155,1818,l),
(110,1851,o),
(68,1874,q),
(68,2047,l),
(-69,2047,l),
(-69,1929,l),
(-137,1945,o),
(-218,1945,qs),
(-514,1945,o),
(-514,1692,qs),
(-514,1569,o),
(-355,1569,qs),
(113,1569,ls),
(171,1569,o),
(201,1522,qs),
(229,1476,o),
(229,1383,qs),
(229,-837,ls),
(229,-976,o),
(87,-976,qs),
(-86,-976,ls),
(-229,-976,o),
(-229,-837,qs),
(-229,-744,l),
(-492,-744,l),
(-492,-837,ls),
(-492,-1120,o),
(-86,-1120,qs),
(87,-1120,ls),
(492,-1120,o),
(492,-837,qs),
(492,1383,ls),
(492,1475,o),
(446,1545,qs),
(409,1600,o),
(311,1641,q),
(311,1991,l),
(155,1991,l)
);
}
);
width = 721;
}
);
note = uni17BF.b;
},
{
glyphname = uni17C0.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(87,-976,qs),
(-86,-976,ls),
(-229,-976,o),
(-229,-837,qs),
(-229,-744,l),
(-492,-744,l),
(-492,-837,ls),
(-492,-1120,o),
(-86,-1120,qs),
(87,-1120,ls),
(492,-1120,o),
(492,-837,qs),
(492,1374,ls),
(492,1644,o),
(133,1644,qs),
(-70,1644,ls),
(-136,1644,o),
(-136,1717,qs),
(-136,1830,ls),
(-136,2000,o),
(-327,2000,qs),
(-492,2000,o),
(-492,1877,q),
(-399,1877,o),
(-399,1830,qs),
(-399,1717,ls),
(-399,1500,o),
(-70,1500,qs),
(133,1500,ls),
(229,1500,o),
(229,1374,qs),
(229,-837,ls),
(229,-976,o)
);
}
);
width = 721;
}
);
note = uni17C0.b;
},
{
glyphname = uni17B6.space;
layers = (
{
layerId = m01;
width = 721;
}
);
note = uni17B6.space;
},
{
glyphname = uni1780_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(156,1102,l),
(156,1011,l),
(229,971,ls),
(299,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(503,1139,l),
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l)
);
},
{
closed = 1;
nodes = (
(1214,697,o),
(1209,723,qs),
(1167,931,o),
(791,931,qs),
(651,931,ls),
(230,931,o),
(230,669,qs),
(230,668,l),
(229,0,l),
(492,0,l),
(493,668,ls),
(493,788,o),
(652,788,qs),
(792,788,ls),
(931,788,o),
(949,697,qs),
(952,684,o),
(952,668,qs),
(951,0,l),
(1213,0,l),
(1214,668,ls)
);
}
);
width = 1442;
}
);
note = uni1780_17B6;
},
{
glyphname = uni1780_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1214,697,o),
(1209,723,qs),
(1167,931,o),
(791,931,qs),
(651,931,ls),
(230,931,o),
(230,669,qs),
(230,668,l),
(229,0,l),
(492,0,l),
(493,668,ls),
(493,788,o),
(652,788,qs),
(792,788,ls),
(931,788,o),
(949,697,qs),
(952,684,o),
(952,668,qs),
(951,0,l),
(1213,0,l),
(1214,668,ls)
);
},
{
closed = 1;
nodes = (
(1986,1164,qs),
(1985,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1631,1752,o),
(1631,1630,qs),
(1631,1629,l),
(1678,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1724,1174,l),
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(156,1102,l),
(156,1011,l),
(229,971,ls),
(299,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(503,1139,l),
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1986,1128,o)
);
}
);
width = 1442;
}
);
note = uni1780_17C5;
},
{
glyphname = uni1781_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(526,902,qs),
(536,897,o),
(538,888,qs),
(539,884,l),
(538,862,o),
(526,850,qs),
(516,839,o),
(493,839,q),
(493,908,l),
(516,908,o)
);
},
{
closed = 1;
nodes = (
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l),
(1444,1303,l),
(1173,1182,l),
(1084,1303,o),
(792,1303,qs),
(652,1303,ls),
(230,1303,o),
(229,1051,qs),
(230,838,ls),
(230,828,o),
(232,819,qs),
(238,786,o),
(271,768,qs),
(311,745,o),
(362,745,qs),
(492,745,ls),
(562,745,o),
(597,780,qs),
(632,815,o),
(633,884,qs),
(632,900,o),
(630,914,qs),
(622,950,o),
(597,972,qs),
(562,1001,o),
(492,1001,q),
(492,1051,ls),
(492,1160,o),
(651,1160,qs),
(791,1160,ls),
(932,1160,o),
(949,1076,qs),
(951,1067,o),
(951,1057,qs),
(951,931,ls),
(950,872,o),
(869,777,o),
(789,734,qs),
(229,442,l),
(230,263,ls),
(230,234,o),
(235,207,qs),
(276,0,o),
(651,0,qs),
(791,0,ls),
(1213,0,o),
(1214,263,qs),
(1213,565,l),
(952,478,l),
(952,263,ls),
(952,143,o),
(792,143,qs),
(652,143,ls),
(514,143,o),
(496,234,qs),
(493,247,o),
(493,263,qs),
(493,423,l),
(812,591,ls),
(1132,758,o),
(1213,861,o),
(1213,931,qs),
(1213,1059,l),
(1340,1113,l)
);
}
);
width = 1442;
}
);
note = uni1781_17B6;
},
{
glyphname = uni1781_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(526,902,qs),
(536,897,o),
(538,888,qs),
(539,884,l),
(538,862,o),
(526,850,qs),
(516,839,o),
(493,839,q),
(493,908,l),
(516,908,o)
);
},
{
closed = 1;
nodes = (
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1986,1128,o),
(1986,1164,qs),
(1985,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1631,1752,o),
(1631,1630,qs),
(1631,1629,l),
(1678,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1724,1189,l),
(1444,1303,l),
(1173,1182,l),
(1085,1303,o),
(792,1303,qs),
(652,1303,ls),
(230,1303,o),
(229,1051,qs),
(230,838,ls),
(230,828,o),
(232,819,qs),
(238,786,o),
(271,768,qs),
(311,745,o),
(362,745,qs),
(492,745,ls),
(562,745,o),
(597,780,qs),
(632,815,o),
(633,884,qs),
(632,900,o),
(630,914,qs),
(622,950,o),
(597,972,qs),
(562,1001,o),
(492,1001,q),
(492,1051,ls),
(492,1160,o),
(651,1160,qs),
(791,1160,ls),
(932,1160,o),
(949,1076,qs),
(951,1067,o),
(951,1057,qs),
(951,931,ls),
(950,872,o),
(869,777,o),
(789,734,qs),
(229,442,l),
(230,263,ls),
(230,234,o),
(235,207,qs),
(276,0,o),
(651,0,qs),
(791,0,ls),
(1213,0,o),
(1214,263,qs),
(1213,565,l),
(952,478,l),
(952,263,ls),
(952,143,o),
(792,143,qs),
(652,143,ls),
(514,143,o),
(496,234,qs),
(493,247,o),
(493,263,qs),
(493,423,l),
(812,591,ls),
(1132,758,o),
(1213,861,o),
(1213,931,qs),
(1214,1059,l),
(1340,1113,l)
);
}
);
width = 1442;
}
);
note = uni1781_17C5;
},
{
glyphname = uni1782_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(156,1102,l),
(156,1011,l),
(229,971,ls),
(299,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(503,1139,l),
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l)
);
},
{
closed = 1;
nodes = (
(652,788,qs),
(792,788,ls),
(931,788,o),
(949,697,qs),
(952,684,o),
(952,668,qs),
(951,0,l),
(1213,0,l),
(1214,668,ls),
(1214,697,o),
(1209,723,qs),
(1167,931,o),
(791,931,qs),
(651,931,ls),
(230,931,o),
(230,669,qs),
(230,668,l),
(229,0,l),
(492,0,l),
(492,97,l),
(547,172,ls),
(582,220,o),
(616,242,qs),
(650,262,o),
(714,262,qs),
(778,262,o),
(801,306,qs),
(812,324,o),
(812,369,qs),
(812,384,o),
(809,396,qs),
(805,419,o),
(790,432,qs),
(755,465,o),
(698,466,qs),
(651,466,o),
(606,443,qs),
(569,426,o),
(493,303,q),
(493,668,ls),
(493,788,o)
);
}
);
width = 1442;
}
);
note = uni1782_17B6;
},
{
glyphname = uni1782_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,788,qs),
(792,788,ls),
(931,788,o),
(949,697,qs),
(952,684,o),
(952,668,qs),
(951,0,l),
(1213,0,l),
(1214,668,ls),
(1214,697,o),
(1209,723,qs),
(1167,931,o),
(791,931,qs),
(651,931,ls),
(230,931,o),
(230,669,qs),
(230,668,l),
(229,0,l),
(492,0,l),
(492,97,l),
(547,172,ls),
(582,220,o),
(616,242,qs),
(650,262,o),
(714,262,qs),
(778,262,o),
(801,306,qs),
(812,324,o),
(812,369,qs),
(812,384,o),
(809,396,qs),
(805,419,o),
(790,432,qs),
(755,465,o),
(698,466,qs),
(651,466,o),
(606,443,qs),
(569,426,o),
(493,303,q),
(493,668,ls),
(493,788,o)
);
},
{
closed = 1;
nodes = (
(1986,1164,qs),
(1985,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1631,1752,o),
(1631,1630,qs),
(1631,1629,l),
(1678,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1724,1174,l),
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(156,1102,l),
(156,1011,l),
(229,971,ls),
(299,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(503,1139,l),
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1986,1128,o)
);
}
);
width = 1442;
}
);
note = uni1782_17C5;
},
{
glyphname = uni1783_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,969,qs),
(162,979,o),
(158,999,qs),
(157,1004,o),
(157,1009,qs),
(157,1016,ls),
(157,1037,o),
(179,1072,qs),
(203,1110,o),
(230,1133,q),
(230,954,l),
(204,954,o)
);
},
{
closed = 1;
nodes = (
(1757,972,l),
(1963,1082,l),
(2394,944,l),
(2393,0,l),
(2656,0,l),
(2657,1083,l),
(2016,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1672,263,ls),
(1672,143,o),
(1490,143,qs),
(1397,143,ls),
(1235,143,o),
(1216,237,qs),
(1214,249,o),
(1214,263,qs),
(1214,869,l),
(974,1009,l),
(1023,1085,l),
(1157,997,o),
(1202,997,qs),
(1299,997,o),
(1336,1187,q),
(1261,1187,o),
(1207,1216,qs),
(1045,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(951,263,ls),
(951,143,o),
(769,143,qs),
(676,143,ls),
(514,143,o),
(495,237,qs),
(493,249,o),
(493,263,qs),
(493,1303,l),
(230,1303,l),
(110,1145,o),
(87,1098,qs),
(64,1054,o),
(64,1016,qs),
(64,1004,ls),
(64,986,o),
(67,970,qs),
(77,923,o),
(110,897,qs),
(156,861,o),
(229,861,q),
(230,263,l),
(230,254,ls),
(230,231,o),
(234,210,qs),
(276,0,o),
(675,0,qs),
(768,0,ls),
(971,0,o),
(1082,55,q),
(1192,0,o),
(1396,0,qs),
(1489,0,ls),
(1934,0,o),
(1935,263,qs),
(1935,869,l)
);
}
);
width = 2164;
}
);
note = uni1783_17B6;
},
{
glyphname = uni1783_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,969,qs),
(162,979,o),
(158,999,qs),
(157,1004,o),
(157,1009,qs),
(157,1016,ls),
(157,1037,o),
(179,1072,qs),
(203,1110,o),
(230,1133,q),
(230,954,l),
(204,954,o)
);
},
{
closed = 1;
nodes = (
(2707,1164,qs),
(2706,1536,ls),
(2706,1578,o),
(2699,1612,qs),
(2671,1752,o),
(2529,1752,qs),
(2352,1752,o),
(2352,1630,qs),
(2352,1629,l),
(2399,1629,o),
(2421,1606,qs),
(2436,1591,o),
(2441,1566,qs),
(2444,1552,o),
(2444,1536,qs),
(2444,1156,l),
(2016,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1672,263,ls),
(1672,143,o),
(1490,143,qs),
(1397,143,ls),
(1235,143,o),
(1216,237,qs),
(1214,249,o),
(1214,263,qs),
(1214,869,l),
(974,1009,l),
(1023,1085,l),
(1157,997,o),
(1202,997,qs),
(1299,997,o),
(1336,1187,q),
(1261,1187,o),
(1207,1216,qs),
(1045,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(951,263,ls),
(951,143,o),
(769,143,qs),
(676,143,ls),
(514,143,o),
(495,237,qs),
(493,249,o),
(493,263,qs),
(493,1303,l),
(230,1303,l),
(110,1145,o),
(87,1098,qs),
(64,1054,o),
(64,1016,qs),
(64,1004,ls),
(64,986,o),
(67,970,qs),
(77,923,o),
(110,897,qs),
(156,861,o),
(229,861,q),
(230,263,l),
(230,254,ls),
(230,231,o),
(234,210,qs),
(276,0,o),
(675,0,qs),
(768,0,ls),
(971,0,o),
(1082,55,q),
(1192,0,o),
(1396,0,qs),
(1489,0,ls),
(1934,0,o),
(1935,263,qs),
(1935,869,l),
(1757,972,l),
(1963,1082,l),
(2394,944,l),
(2393,0,l),
(2656,0,l),
(2656,1037,l),
(2707,1128,o)
);
}
);
width = 2164;
}
);
note = uni1783_17C5;
},
{
glyphname = uni1784_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(825,1184,qs),
(839,1197,o),
(869,1198,qs),
(897,1197,o),
(912,1184,q),
(920,1175,o),
(923,1162,qs),
(924,1155,o),
(924,1147,qs),
(924,1121,o),
(912,1108,qs),
(898,1094,o),
(869,1094,qs),
(840,1094,o),
(825,1108,qs),
(815,1117,o),
(812,1132,qs),
(811,1138,o),
(810,1145,q),
(810,1170,o)
);
},
{
closed = 1;
nodes = (
(198,564,qs),
(182,569,o),
(179,580,q),
(179,582,ls),
(179,601,o),
(197,631,qs),
(214,661,o),
(230,669,q),
(230,559,l),
(215,559,o)
);
},
{
closed = 1;
nodes = (
(1070,1143,qs),
(1070,1168,o),
(1066,1189,qs),
(1056,1236,o),
(1027,1263,qs),
(984,1303,o),
(849,1303,qs),
(763,1303,o),
(720,1263,qs),
(676,1223,o),
(675,1146,qs),
(675,1133,o),
(677,1123,qs),
(680,1105,o),
(691,1094,q),
(559,1094,ls),
(505,1094,o),
(495,1142,qs),
(493,1152,o),
(493,1164,qs),
(493,1304,ls),
(493,1334,o),
(488,1359,qs),
(462,1489,o),
(303,1489,qs),
(195,1489,o),
(165,1461,qs),
(137,1433,o),
(137,1377,qs),
(137,1373,l),
(183,1373,o),
(206,1355,qs),
(224,1342,o),
(228,1320,qs),
(230,1313,o),
(230,1304,qs),
(230,1164,ls),
(230,1139,o),
(234,1118,qs),
(267,951,o),
(558,951,qs),
(807,951,l),
(950,861,l),
(950,181,l),
(721,360,l),
(492,181,l),
(493,838,l),
(230,838,l),
(132,707,o),
(109,664,qs),
(86,620,o),
(86,581,qs),
(86,567,o),
(88,555,qs),
(96,516,o),
(128,494,qs),
(167,465,o),
(229,465,q),
(229,0,l),
(492,0,l),
(721,180,l),
(950,0,l),
(1213,0,l),
(1213,946,l),
(1015,1039,l),
(1070,1093,o)
);
},
{
closed = 1;
nodes = (
(1340,1113,l),
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l),
(1444,1303,l),
(1072,1136,l),
(1133,1025,l)
);
}
);
width = 1442;
}
);
note = uni1784_17B6;
},
{
glyphname = uni1784_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(824,1184,qs),
(840,1197,o),
(868,1198,qs),
(898,1197,o),
(911,1184,qs),
(921,1175,o),
(924,1161,qs),
(925,1155,o),
(925,1147,qs),
(925,1121,o),
(911,1108,qs),
(897,1094,o),
(868,1094,qs),
(839,1094,o),
(824,1108,qs),
(814,1118,o),
(811,1133,qs),
(810,1139,o),
(810,1145,qs),
(810,1170,o)
);
},
{
closed = 1;
nodes = (
(197,564,qs),
(182,569,o),
(180,579,q),
(180,582,ls),
(180,601,o),
(198,631,qs),
(215,661,o),
(229,669,q),
(229,559,l),
(214,559,o)
);
},
{
closed = 1;
nodes = (
(1069,1143,qs),
(1069,1168,o),
(1065,1189,qs),
(1056,1236,o),
(1026,1263,qs),
(983,1303,o),
(848,1303,qs),
(762,1303,o),
(719,1263,qs),
(676,1224,o),
(676,1149,qs),
(676,1140,ls),
(676,1130,o),
(678,1122,qs),
(681,1105,o),
(690,1094,q),
(558,1094,ls),
(504,1094,o),
(495,1142,qs),
(493,1152,o),
(492,1164,q),
(492,1304,ls),
(492,1334,o),
(487,1359,qs),
(461,1489,o),
(302,1489,qs),
(194,1489,o),
(166,1461,qs),
(137,1432,o),
(136,1373,q),
(182,1373,o),
(206,1355,qs),
(224,1342,o),
(228,1320,qs),
(229,1313,o),
(229,1304,qs),
(229,1164,ls),
(229,1140,o),
(233,1118,qs),
(267,951,o),
(559,951,qs),
(808,951,l),
(951,861,l),
(951,181,l),
(721,360,l),
(493,181,l),
(492,838,l),
(229,838,l),
(133,707,o),
(108,664,qs),
(87,622,o),
(87,584,qs),
(87,581,ls),
(87,566,o),
(89,553,qs),
(97,516,o),
(127,494,qs),
(167,465,o),
(229,465,q),
(229,0,l),
(492,0,l),
(721,180,l),
(950,0,l),
(1213,0,l),
(1214,946,l),
(1014,1039,l),
(1069,1093,o)
);
},
{
closed = 1;
nodes = (
(1985,1164,qs),
(1986,1536,ls),
(1985,1578,o),
(1979,1612,qs),
(1951,1752,o),
(1809,1752,qs),
(1631,1752,o),
(1630,1629,q),
(1677,1629,o),
(1701,1606,qs),
(1716,1591,o),
(1721,1565,qs),
(1724,1552,o),
(1724,1536,qs),
(1723,1189,l),
(1443,1303,l),
(1073,1136,l),
(1133,1025,l),
(1339,1113,l),
(1672,968,l),
(1672,0,l),
(1935,0,l),
(1936,1037,l),
(1985,1128,o)
);
}
);
width = 1442;
}
);
note = uni1784_17C5;
},
{
glyphname = uni1785_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,587,q),
(884,593,o),
(882,602,qs),
(881,605,l),
(881,626,o),
(899,654,qs),
(917,683,o),
(951,722,q),
(951,582,l),
(916,582,o)
);
},
{
closed = 1;
nodes = (
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l),
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(136,1117,l),
(136,1005,l),
(229,921,l),
(230,263,ls),
(230,234,o),
(235,207,qs),
(276,0,o),
(651,0,qs),
(791,0,ls),
(1213,0,o),
(1214,263,qs),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(789,644,o),
(789,607,qs),
(789,597,ls),
(789,587,o),
(791,577,qs),
(799,539,o),
(830,518,qs),
(871,489,o),
(952,489,q),
(952,263,ls),
(952,143,o),
(792,143,qs),
(652,143,ls),
(514,143,o),
(496,234,qs),
(493,247,o),
(493,263,qs),
(492,975,l),
(361,1085,l),
(503,1139,l)
);
}
);
width = 1442;
}
);
note = uni1785_17B6;
},
{
glyphname = uni1785_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,587,q),
(884,593,o),
(882,602,qs),
(881,605,l),
(881,626,o),
(899,654,qs),
(917,683,o),
(951,722,q),
(951,582,l),
(916,582,o)
);
},
{
closed = 1;
nodes = (
(1986,1164,qs),
(1985,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1631,1752,o),
(1631,1630,qs),
(1631,1629,l),
(1678,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1724,1174,l),
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(136,1117,l),
(136,1005,l),
(229,921,l),
(230,263,ls),
(230,234,o),
(235,207,qs),
(276,0,o),
(651,0,qs),
(791,0,ls),
(1213,0,o),
(1214,263,qs),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(789,644,o),
(789,607,qs),
(789,597,ls),
(789,587,o),
(791,577,qs),
(799,539,o),
(830,518,qs),
(871,489,o),
(952,489,q),
(952,263,ls),
(952,143,o),
(792,143,qs),
(652,143,ls),
(514,143,o),
(496,234,qs),
(493,247,o),
(493,263,qs),
(492,975,l),
(361,1085,l),
(503,1139,l),
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1986,1128,o)
);
}
);
width = 1442;
}
);
note = uni1785_17C5;
},
{
glyphname = uni1786_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,587,q),
(884,593,o),
(882,602,qs),
(881,605,l),
(881,626,o),
(899,654,qs),
(917,683,o),
(951,722,q),
(951,582,l),
(916,582,o)
);
},
{
closed = 1;
nodes = (
(361,1085,l),
(503,1139,l),
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l),
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(136,1117,l),
(136,1005,l),
(229,921,l),
(230,449,l),
(180,449,o),
(109,337,o),
(109,256,qs),
(110,219,o),
(116,187,qs),
(120,165,o),
(127,146,qs),
(145,99,o),
(229,0,q),
(492,0,l),
(492,306,l),
(531,306,ls),
(616,306,o),
(629,242,qs),
(631,231,o),
(631,217,qs),
(631,185,o),
(637,158,qs),
(668,0,o),
(884,0,qs),
(1213,0,o),
(1214,233,qs),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(789,644,o),
(789,607,qs),
(789,597,ls),
(789,587,o),
(791,577,qs),
(799,539,o),
(830,518,qs),
(871,489,o),
(952,489,q),
(951,461,l),
(950,461,l),
(951,233,ls),
(951,143,o),
(885,143,qs),
(787,143,o),
(775,201,qs),
(774,209,o),
(774,217,qs),
(774,255,o),
(768,286,qs),
(736,449,o),
(532,449,qs),
(493,449,l),
(492,975,l)
);
}
);
width = 1442;
}
);
note = uni1786_17B6;
},
{
glyphname = uni1786_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(899,587,qs),
(884,593,o),
(882,603,q),
(881,605,l),
(881,626,o),
(898,654,qs),
(917,683,o),
(952,722,q),
(952,582,l),
(917,582,o)
);
},
{
closed = 1;
nodes = (
(1985,1163,qs),
(1985,1536,ls),
(1985,1579,o),
(1979,1613,qs),
(1951,1752,o),
(1809,1752,qs),
(1631,1752,o),
(1630,1629,q),
(1677,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1723,1174,l),
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(137,1117,l),
(136,1005,l),
(229,921,l),
(229,449,l),
(179,449,o),
(110,337,o),
(109,256,qs),
(109,219,o),
(116,187,qs),
(120,165,o),
(127,146,qs),
(144,99,o),
(229,0,q),
(492,0,l),
(492,306,l),
(531,306,ls),
(616,306,o),
(629,241,qs),
(631,230,o),
(632,217,qs),
(632,208,ls),
(632,181,o),
(637,158,qs),
(668,0,o),
(884,0,qs),
(1213,0,o),
(1214,233,qs),
(1213,861,l),
(951,861,l),
(878,781,ls),
(833,732,o),
(811,687,qs),
(789,642,o),
(788,604,qs),
(788,590,o),
(791,577,qs),
(798,539,o),
(830,518,qs),
(870,489,o),
(951,489,q),
(951,461,l),
(950,461,l),
(951,233,ls),
(951,143,o),
(885,143,qs),
(788,143,o),
(776,200,qs),
(775,208,o),
(775,217,qs),
(774,254,o),
(768,285,qs),
(735,449,o),
(531,449,qs),
(492,449,l),
(492,975,l),
(361,1085,l),
(502,1139,l),
(1007,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1936,1037,l),
(1985,1126,o)
);
}
);
width = 1442;
}
);
note = uni1786_17C5;
},
{
glyphname = uni1787_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1339,1113,l),
(1672,968,l),
(1672,0,l),
(1935,0,l),
(1935,1103,l),
(1443,1303,l),
(1213,1199,l),
(1213,1210,ls),
(1213,1252,o),
(1206,1286,qs),
(1174,1443,o),
(997,1443,qs),
(911,1443,o),
(882,1421,qs),
(854,1397,o),
(854,1350,q),
(929,1350,o),
(946,1265,qs),
(951,1241,o),
(951,1210,qs),
(950,1114,o),
(848,1114,qs),
(805,1114,l),
(505,1303,l),
(403,1303,l),
(136,1110,l),
(136,959,l),
(229,886,l),
(229,0,l),
(492,0,l),
(721,180,l),
(950,0,l),
(1213,0,l),
(1213,861,l),
(950,861,l),
(950,181,l),
(721,360,l),
(492,181,l),
(492,936,l),
(318,1060,l),
(393,1118,l),
(612,971,l),
(838,971,ls),
(1033,971,o),
(1127,1036,q),
(1133,1025,l)
);
}
);
width = 1442;
}
);
note = uni1787_17B6;
},
{
glyphname = uni1787_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1985,1164,qs),
(1985,1536,ls),
(1984,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1630,1752,o),
(1630,1629,q),
(1677,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1723,1189,l),
(1443,1303,l),
(1213,1199,l),
(1213,1210,ls),
(1213,1252,o),
(1206,1286,qs),
(1174,1443,o),
(997,1443,qs),
(911,1443,o),
(882,1421,qs),
(854,1397,o),
(854,1350,q),
(929,1350,o),
(946,1265,qs),
(951,1241,o),
(951,1210,qs),
(950,1114,o),
(848,1114,qs),
(805,1114,l),
(505,1303,l),
(403,1303,l),
(136,1110,l),
(136,959,l),
(229,886,l),
(229,0,l),
(492,0,l),
(721,180,l),
(950,0,l),
(1213,0,l),
(1213,861,l),
(950,861,l),
(950,181,l),
(721,360,l),
(492,181,l),
(492,936,l),
(318,1060,l),
(393,1118,l),
(612,971,l),
(838,971,ls),
(1033,971,o),
(1127,1036,q),
(1133,1025,l),
(1339,1113,l),
(1672,968,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1985,1128,o)
);
}
);
width = 1442;
}
);
note = uni1787_17C5;
},
{
glyphname = uni1788_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(574,328,o),
(578,312,q),
(578,303,ls),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(2478,972,l),
(2684,1082,l),
(3114,944,l),
(3114,0,l),
(3377,0,l),
(3377,1083,l),
(2736,1303,l),
(2279,1025,l),
(2279,935,l),
(2392,862,l),
(2392,263,ls),
(2392,143,o),
(2210,143,qs),
(2117,143,ls),
(1955,143,o),
(1937,237,qs),
(1934,249,o),
(1934,263,qs),
(1934,869,l),
(1694,1009,l),
(1744,1085,l),
(1878,997,o),
(1923,997,qs),
(2020,997,o),
(2057,1187,q),
(1982,1187,o),
(1928,1216,qs),
(1765,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1671,263,ls),
(1671,143,o),
(1489,143,qs),
(1396,143,ls),
(1234,143,o),
(1216,237,qs),
(1213,249,o),
(1213,263,qs),
(1213,1103,l),
(721,1303,l),
(229,1104,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,310,ls),
(681,325,o),
(678,339,qs),
(670,382,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1055,l),
(601,1105,l),
(950,964,l),
(950,263,ls),
(950,235,o),
(955,210,qs),
(997,0,o),
(1396,0,qs),
(1489,0,ls),
(1692,0,o),
(1803,55,q),
(1913,0,o),
(2117,0,qs),
(2210,0,ls),
(2655,0,o),
(2655,263,qs),
(2655,869,l)
);
}
);
width = 2885;
}
);
note = uni1788_17B6;
},
{
glyphname = uni1788_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(574,328,o),
(578,312,q),
(578,303,ls),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(3427,1164,qs),
(3427,1536,ls),
(3426,1578,o),
(3420,1612,qs),
(3392,1752,o),
(3250,1752,qs),
(3072,1752,o),
(3072,1629,q),
(3119,1629,o),
(3142,1606,qs),
(3157,1591,o),
(3162,1566,qs),
(3165,1552,o),
(3165,1536,qs),
(3165,1156,l),
(2736,1303,l),
(2279,1025,l),
(2279,935,l),
(2392,862,l),
(2392,263,ls),
(2392,143,o),
(2210,143,qs),
(2117,143,ls),
(1955,143,o),
(1937,237,qs),
(1934,249,o),
(1934,263,qs),
(1934,869,l),
(1694,1009,l),
(1744,1085,l),
(1878,997,o),
(1923,997,qs),
(2020,997,o),
(2057,1187,q),
(1982,1187,o),
(1928,1216,qs),
(1765,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1671,263,ls),
(1671,143,o),
(1489,143,qs),
(1396,143,ls),
(1234,143,o),
(1216,237,qs),
(1213,249,o),
(1213,263,qs),
(1213,1103,l),
(721,1303,l),
(229,1104,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,310,ls),
(681,325,o),
(678,339,qs),
(670,382,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1055,l),
(601,1105,l),
(950,964,l),
(950,263,ls),
(950,235,o),
(955,210,qs),
(997,0,o),
(1396,0,qs),
(1489,0,ls),
(1692,0,o),
(1803,55,q),
(1913,0,o),
(2117,0,qs),
(2210,0,ls),
(2655,0,o),
(2655,263,qs),
(2655,869,l),
(2478,972,l),
(2684,1082,l),
(3114,944,l),
(3114,0,l),
(3377,0,l),
(3377,1037,l),
(3427,1128,o)
);
}
);
width = 2885;
}
);
note = uni1788_17C5;
},
{
glyphname = uni1789_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1930,-228,qs),
(1903,-93,o),
(1723,-93,qs),
(1634,-93,o),
(1595,-131,qs),
(1557,-169,o),
(1557,-214,qs),
(1557,-216,l),
(1662,-216,o),
(1672,-267,qs),
(1673,-273,o),
(1673,-279,qs),
(1673,-435,o),
(1522,-435,qs),
(1414,-435,o),
(929,-140,o),
(611,-140,qs),
(415,-140,o),
(229,-223,o),
(229,-270,qs),
(230,-347,l),
(298,-305,o),
(455,-263,o),
(551,-263,qs),
(681,-263,o),
(1146,-559,o),
(1522,-559,qs),
(1769,-559,o),
(1852,-489,qs),
(1935,-419,o),
(1935,-279,qs),
(1935,-251,o)
);
},
{
closed = 1;
nodes = (
(561,337,qs),
(575,328,o),
(578,312,qs),
(579,308,o),
(579,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(493,349,l),
(520,349,ls),
(544,349,o)
);
},
{
closed = 1;
nodes = (
(2395,968,l),
(2394,0,l),
(2657,0,l),
(2658,1103,l),
(2166,1303,l),
(1794,1136,l),
(1802,1121,l),
(1444,1303,l),
(1129,1126,l),
(929,1303,l),
(722,1140,l),
(516,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l),
(615,119,o),
(681,235,o),
(682,303,qs),
(682,322,o),
(679,339,qs),
(670,382,o),
(641,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(534,1103,l),
(722,957,l),
(912,1103,l),
(950,1055,l),
(950,0,l),
(1213,0,l),
(1214,1014,l),
(1373,1095,l),
(1672,941,l),
(1672,0,l),
(1935,0,l),
(1936,1054,l),
(1929,1057,l),
(2062,1113,l)
);
}
);
width = 2164;
}
);
note = uni1789_17B6;
},
{
glyphname = uni1789_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(562,337,qs),
(574,329,o),
(577,314,qs),
(578,309,o),
(578,303,qs),
(578,275,o),
(565,247,qs),
(550,220,o),
(493,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(1931,-228,qs),
(1904,-93,o),
(1724,-93,qs),
(1635,-93,o),
(1556,-170,o),
(1556,-216,q),
(1662,-216,o),
(1673,-268,qs),
(1674,-273,o),
(1674,-279,qs),
(1673,-435,o),
(1522,-435,qs),
(1414,-435,o),
(929,-140,o),
(611,-140,qs),
(415,-140,o),
(230,-223,o),
(229,-270,qs),
(229,-347,l),
(298,-305,o),
(456,-263,o),
(552,-263,qs),
(682,-263,o),
(1147,-559,o),
(1523,-559,qs),
(1770,-559,o),
(1853,-489,qs),
(1936,-419,o),
(1936,-279,qs),
(1935,-251,o)
);
},
{
closed = 1;
nodes = (
(2707,1164,qs),
(2708,1536,ls),
(2707,1578,o),
(2701,1612,qs),
(2673,1752,o),
(2531,1752,qs),
(2353,1752,o),
(2352,1629,q),
(2399,1629,o),
(2423,1606,qs),
(2438,1591,o),
(2443,1565,qs),
(2446,1552,o),
(2446,1536,qs),
(2445,1189,l),
(2165,1303,l),
(1795,1136,l),
(1803,1121,l),
(1443,1303,l),
(1130,1126,l),
(928,1303,l),
(722,1140,l),
(515,1303,l),
(230,1056,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,323,o),
(678,340,qs),
(669,383,o),
(640,408,qs),
(601,442,o),
(520,442,qs),
(493,442,l),
(493,1056,l),
(533,1103,l),
(723,957,l),
(911,1103,l),
(950,1055,l),
(950,0,l),
(1213,0,l),
(1213,1014,l),
(1373,1095,l),
(1673,941,l),
(1672,0,l),
(1935,0,l),
(1935,1054,l),
(1930,1057,l),
(2061,1113,l),
(2394,968,l),
(2394,0,l),
(2657,0,l),
(2658,1037,l),
(2707,1128,o)
);
}
);
width = 2164;
}
);
note = uni1789_17C5;
},
{
glyphname = uni178A_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(950,0,l),
(1213,0,l),
(1213,841,l),
(950,841,l),
(950,181,l),
(721,360,l),
(492,181,l),
(492,841,l),
(229,841,l),
(229,0,l),
(492,0,l),
(721,180,l)
);
},
{
closed = 1;
nodes = (
(1340,1113,l),
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l),
(1444,1303,l),
(1212,1199,l),
(1213,1210,o),
(1213,1221,qs),
(1213,1257,o),
(1207,1286,qs),
(1176,1443,o),
(978,1443,qs),
(882,1443,o),
(857,1420,qs),
(834,1396,o),
(834,1350,q),
(929,1350,o),
(946,1264,qs),
(950,1245,o),
(950,1221,qs),
(950,1094,o),
(768,1094,qs),
(675,1094,ls),
(501,1094,o),
(492,1139,q),
(492,1144,ls),
(492,1170,o),
(516,1170,qs),
(535,1170,o),
(539,1153,q),
(539,1144,l),
(586,1144,o),
(608,1161,qs),
(632,1179,o),
(633,1213,qs),
(633,1222,o),
(631,1230,qs),
(617,1303,o),
(465,1303,qs),
(230,1303,o),
(229,1144,qs),
(230,1128,o),
(232,1114,qs),
(265,951,o),
(675,951,qs),
(768,951,ls),
(1017,951,o),
(1127,1036,q),
(1133,1025,l)
);
}
);
width = 1442;
}
);
note = uni178A_17B6;
},
{
glyphname = uni178A_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(950,0,l),
(1213,0,l),
(1213,841,l),
(950,841,l),
(950,181,l),
(721,360,l),
(492,181,l),
(492,841,l),
(229,841,l),
(229,0,l),
(492,0,l),
(721,180,l)
);
},
{
closed = 1;
nodes = (
(1985,1163,qs),
(1985,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1630,1752,o),
(1630,1629,q),
(1677,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1723,1189,l),
(1444,1303,l),
(1212,1199,l),
(1213,1210,o),
(1213,1221,qs),
(1213,1257,o),
(1207,1286,qs),
(1176,1443,o),
(978,1443,qs),
(882,1443,o),
(857,1420,qs),
(834,1396,o),
(834,1350,q),
(929,1350,o),
(946,1264,qs),
(950,1245,o),
(950,1221,qs),
(950,1094,o),
(768,1094,qs),
(675,1094,ls),
(501,1094,o),
(492,1139,q),
(492,1144,ls),
(492,1170,o),
(516,1170,qs),
(535,1170,o),
(539,1153,q),
(539,1144,l),
(586,1144,o),
(608,1161,qs),
(632,1179,o),
(633,1213,qs),
(633,1222,o),
(631,1230,qs),
(617,1303,o),
(465,1303,qs),
(230,1303,o),
(229,1144,qs),
(230,1128,o),
(232,1114,qs),
(265,951,o),
(675,951,qs),
(768,951,ls),
(1017,951,o),
(1127,1036,q),
(1133,1025,l),
(1340,1113,l),
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1985,1126,o)
);
}
);
width = 1442;
}
);
note = uni178A_17C5;
},
{
glyphname = uni178B_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,969,qs),
(162,979,o),
(158,999,qs),
(157,1004,o),
(157,1009,qs),
(157,1016,ls),
(157,1037,o),
(179,1072,qs),
(203,1110,o),
(230,1133,q),
(230,954,l),
(204,954,o)
);
},
{
closed = 1;
nodes = (
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l),
(1444,1303,l),
(1335,1254,l),
(1335,1301,ls),
(1335,1342,o),
(1328,1375,qs),
(1320,1419,o),
(1300,1447,qs),
(1267,1499,o),
(1147,1499,qs),
(1100,1499,o),
(1076,1476,qs),
(1054,1453,o),
(1053,1386,q),
(1123,1386,o),
(1158,1358,qs),
(1185,1335,o),
(1191,1306,qs),
(1192,1301,o),
(1192,1295,qs),
(1192,1290,ls),
(1192,1256,o),
(1185,1238,q),
(1181,1231,o),
(1177,1227,q),
(985,1303,l),
(817,1025,l),
(817,945,l),
(950,862,l),
(951,263,ls),
(951,143,o),
(769,143,qs),
(676,143,ls),
(514,143,o),
(495,237,qs),
(493,249,o),
(493,263,qs),
(493,1303,l),
(230,1303,l),
(110,1145,o),
(87,1098,qs),
(64,1054,o),
(64,1016,qs),
(64,1004,ls),
(64,986,o),
(67,970,qs),
(77,923,o),
(110,897,qs),
(156,861,o),
(229,861,q),
(230,263,l),
(230,254,ls),
(230,231,o),
(234,210,qs),
(276,0,o),
(675,0,qs),
(768,0,ls),
(1213,0,o),
(1214,263,qs),
(1214,869,l),
(953,1009,l),
(982,1075,l),
(1156,997,o),
(1202,997,qs),
(1255,997,o),
(1295,1072,qs),
(1302,1085,o),
(1307,1100,q),
(1340,1113,l)
);
}
);
width = 1442;
}
);
note = uni178B_17B6;
},
{
glyphname = uni178B_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,969,qs),
(162,979,o),
(158,999,qs),
(157,1004,o),
(157,1009,qs),
(157,1016,ls),
(157,1037,o),
(179,1072,qs),
(203,1110,o),
(230,1133,q),
(230,954,l),
(204,954,o)
);
},
{
closed = 1;
nodes = (
(1986,1164,qs),
(1985,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1631,1752,o),
(1631,1630,qs),
(1631,1629,l),
(1678,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1724,1189,l),
(1444,1303,l),
(1335,1254,l),
(1335,1301,ls),
(1335,1342,o),
(1328,1375,qs),
(1320,1419,o),
(1300,1447,qs),
(1267,1499,o),
(1147,1499,qs),
(1100,1499,o),
(1076,1476,qs),
(1054,1453,o),
(1053,1386,q),
(1123,1386,o),
(1158,1358,qs),
(1185,1335,o),
(1191,1306,qs),
(1192,1301,o),
(1192,1295,qs),
(1192,1290,ls),
(1192,1256,o),
(1185,1238,q),
(1181,1231,o),
(1177,1227,q),
(985,1303,l),
(817,1025,l),
(817,945,l),
(950,862,l),
(951,263,ls),
(951,143,o),
(769,143,qs),
(676,143,ls),
(514,143,o),
(495,237,qs),
(493,249,o),
(493,263,qs),
(493,1303,l),
(230,1303,l),
(110,1145,o),
(87,1098,qs),
(64,1054,o),
(64,1016,qs),
(64,1004,ls),
(64,986,o),
(67,970,qs),
(77,923,o),
(110,897,qs),
(156,861,o),
(229,861,q),
(230,263,l),
(230,254,ls),
(230,231,o),
(234,210,qs),
(276,0,o),
(675,0,qs),
(768,0,ls),
(1213,0,o),
(1214,263,qs),
(1214,869,l),
(953,1009,l),
(982,1075,l),
(1156,997,o),
(1202,997,qs),
(1255,997,o),
(1295,1072,qs),
(1302,1085,o),
(1307,1100,q),
(1340,1113,l),
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1986,1128,o)
);
}
);
width = 1442;
}
);
note = uni178B_17C5;
},
{
glyphname = uni178C_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(526,902,qs),
(536,897,o),
(538,888,qs),
(539,884,l),
(538,862,o),
(526,850,qs),
(516,839,o),
(493,839,q),
(493,908,l),
(516,908,o)
);
},
{
closed = 1;
nodes = (
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l),
(1444,1303,l),
(1104,1150,l),
(929,1303,l),
(722,1140,l),
(516,1303,l),
(229,1056,l),
(230,838,ls),
(230,828,o),
(232,819,qs),
(238,786,o),
(271,768,qs),
(311,745,o),
(362,745,qs),
(492,745,ls),
(562,745,o),
(597,780,qs),
(632,815,o),
(633,884,qs),
(632,900,o),
(630,914,qs),
(622,950,o),
(597,972,qs),
(562,1001,o),
(492,1001,q),
(492,1056,l),
(534,1103,l),
(722,957,l),
(912,1103,l),
(951,1056,l),
(951,931,ls),
(950,872,o),
(869,777,o),
(789,734,qs),
(229,442,l),
(230,263,ls),
(230,228,o),
(236,197,qs),
(275,0,o),
(570,0,q),
(570,1,l),
(604,1,l),
(951,220,l),
(951,116,ls),
(951,93,o),
(922,82,qs),
(893,70,o),
(834,70,q),
(834,50,o),
(838,34,qs),
(844,1,o),
(864,-18,qs),
(894,-47,o),
(1002,-47,qs),
(1133,-47,o),
(1173,-6,qs),
(1213,33,o),
(1213,111,qs),
(1213,535,l),
(951,535,l),
(951,387,l),
(571,144,l),
(571,143,l),
(511,143,o),
(497,213,qs),
(493,231,o),
(493,254,qs),
(493,423,l),
(812,591,ls),
(1132,758,o),
(1213,861,o),
(1213,931,qs),
(1213,1056,l),
(1212,1058,l),
(1340,1113,l)
);
}
);
width = 1442;
}
);
note = uni178C_17B6;
},
{
glyphname = uni178C_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(526,902,qs),
(536,897,o),
(538,888,qs),
(539,884,l),
(538,862,o),
(526,850,qs),
(516,839,o),
(493,839,q),
(493,908,l),
(516,908,o)
);
},
{
closed = 1;
nodes = (
(1986,1164,qs),
(1985,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1631,1752,o),
(1631,1630,qs),
(1631,1629,l),
(1678,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1724,1189,l),
(1444,1303,l),
(1104,1150,l),
(929,1303,l),
(722,1140,l),
(516,1303,l),
(229,1056,l),
(230,838,ls),
(230,828,o),
(232,819,qs),
(238,786,o),
(271,768,qs),
(311,745,o),
(362,745,qs),
(492,745,ls),
(562,745,o),
(597,780,qs),
(632,815,o),
(633,884,qs),
(632,900,o),
(630,914,qs),
(622,950,o),
(597,972,qs),
(562,1001,o),
(492,1001,q),
(492,1056,l),
(534,1103,l),
(722,957,l),
(912,1103,l),
(951,1056,l),
(951,931,ls),
(950,872,o),
(869,777,o),
(789,734,qs),
(229,442,l),
(230,263,ls),
(230,228,o),
(236,197,qs),
(275,0,o),
(570,0,q),
(570,1,l),
(604,1,l),
(951,220,l),
(951,116,ls),
(951,93,o),
(922,82,qs),
(893,70,o),
(834,70,q),
(834,50,o),
(838,34,qs),
(844,1,o),
(864,-18,qs),
(894,-47,o),
(1002,-47,qs),
(1133,-47,o),
(1173,-6,qs),
(1213,33,o),
(1213,111,qs),
(1213,535,l),
(951,535,l),
(951,387,l),
(571,144,l),
(571,143,l),
(511,143,o),
(497,213,qs),
(493,231,o),
(493,254,qs),
(493,423,l),
(812,591,ls),
(1132,758,o),
(1213,861,o),
(1213,931,qs),
(1213,1056,l),
(1212,1058,l),
(1340,1113,l),
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1986,1128,o)
);
}
);
width = 1442;
}
);
note = uni178C_17C5;
},
{
glyphname = uni178D_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(575,328,o),
(578,312,qs),
(579,308,o),
(579,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(1757,972,l),
(1963,1082,l),
(2393,944,l),
(2393,0,l),
(2656,0,l),
(2657,1083,l),
(2016,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1672,233,ls),
(1672,143,o),
(1606,143,qs),
(1508,143,o),
(1496,201,qs),
(1495,206,o),
(1495,212,qs),
(1495,217,ls),
(1495,255,o),
(1489,286,qs),
(1456,449,o),
(1252,449,qs),
(1213,449,l),
(1213,1052,l),
(929,1303,l),
(722,1140,l),
(516,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(682,303,qs),
(682,322,o),
(678,339,qs),
(670,382,o),
(641,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(534,1103,l),
(722,957,l),
(912,1103,l),
(950,1055,l),
(950,449,l),
(900,449,o),
(830,337,o),
(830,256,qs),
(830,219,o),
(837,187,qs),
(841,165,o),
(848,146,qs),
(865,99,o),
(950,0,q),
(1213,0,l),
(1213,306,l),
(1252,306,ls),
(1337,306,o),
(1350,242,qs),
(1352,231,o),
(1352,217,qs),
(1352,185,o),
(1358,158,qs),
(1389,0,o),
(1605,0,qs),
(1934,0,o),
(1935,233,qs),
(1934,869,l)
);
}
);
width = 2164;
}
);
note = uni178D_17B6;
},
{
glyphname = uni178D_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(575,328,o),
(578,312,qs),
(579,308,o),
(579,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(2706,1163,qs),
(2706,1536,ls),
(2706,1578,o),
(2699,1612,qs),
(2671,1752,o),
(2529,1752,qs),
(2351,1752,o),
(2351,1629,q),
(2398,1629,o),
(2421,1606,qs),
(2436,1591,o),
(2441,1566,qs),
(2444,1552,o),
(2444,1536,qs),
(2444,1156,l),
(2016,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1672,233,ls),
(1672,143,o),
(1606,143,qs),
(1508,143,o),
(1496,201,qs),
(1495,206,o),
(1495,212,qs),
(1495,217,ls),
(1495,255,o),
(1489,286,qs),
(1456,449,o),
(1252,449,qs),
(1213,449,l),
(1213,1052,l),
(929,1303,l),
(722,1140,l),
(516,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(682,303,qs),
(682,322,o),
(678,339,qs),
(670,382,o),
(641,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(534,1103,l),
(722,957,l),
(912,1103,l),
(950,1055,l),
(950,449,l),
(900,449,o),
(830,337,o),
(830,256,qs),
(830,219,o),
(837,187,qs),
(841,165,o),
(848,146,qs),
(865,99,o),
(950,0,q),
(1213,0,l),
(1213,306,l),
(1252,306,ls),
(1337,306,o),
(1350,242,qs),
(1352,231,o),
(1352,217,qs),
(1352,185,o),
(1358,158,qs),
(1389,0,o),
(1605,0,qs),
(1934,0,o),
(1935,233,qs),
(1934,869,l),
(1757,972,l),
(1963,1082,l),
(2393,944,l),
(2393,0,l),
(2656,0,l),
(2656,1037,l),
(2706,1126,o)
);
}
);
width = 2164;
}
);
note = uni178D_17C5;
},
{
glyphname = uni178E_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(574,328,o),
(578,312,q),
(578,303,ls),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(3115,968,l),
(3115,0,l),
(3378,0,l),
(3378,1103,l),
(2886,1303,l),
(2543,1149,l),
(2164,1303,l),
(1672,1104,l),
(1672,181,l),
(1443,360,l),
(1214,181,l),
(1214,1103,l),
(721,1303,l),
(229,1104,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,310,ls),
(681,325,o),
(678,339,qs),
(670,382,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1055,l),
(601,1105,l),
(951,964,l),
(951,0,l),
(1214,0,l),
(1443,180,l),
(1672,0,l),
(1935,0,l),
(1935,1055,l),
(2044,1105,l),
(2393,964,l),
(2393,0,l),
(2656,0,l),
(2656,1059,l),
(2782,1113,l)
);
}
);
width = 2885;
}
);
note = uni178E_17B6;
},
{
glyphname = uni178E_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(574,328,o),
(578,312,q),
(578,303,ls),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(3428,1164,qs),
(3428,1536,ls),
(3427,1578,o),
(3421,1612,qs),
(3393,1752,o),
(3251,1752,qs),
(3073,1752,o),
(3073,1629,q),
(3120,1629,o),
(3143,1606,qs),
(3158,1591,o),
(3163,1566,qs),
(3166,1552,o),
(3166,1536,qs),
(3166,1189,l),
(2886,1303,l),
(2543,1149,l),
(2164,1303,l),
(1672,1104,l),
(1672,181,l),
(1443,360,l),
(1214,181,l),
(1214,1103,l),
(721,1303,l),
(229,1104,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,310,ls),
(681,325,o),
(678,339,qs),
(670,382,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1055,l),
(601,1105,l),
(951,964,l),
(951,0,l),
(1214,0,l),
(1443,180,l),
(1672,0,l),
(1935,0,l),
(1935,1055,l),
(2044,1105,l),
(2393,964,l),
(2393,0,l),
(2656,0,l),
(2656,1059,l),
(2782,1113,l),
(3115,968,l),
(3115,0,l),
(3378,0,l),
(3378,1037,l),
(3428,1128,o)
);
}
);
width = 2885;
}
);
note = uni178E_17C5;
},
{
glyphname = uni178F_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(575,328,o),
(578,312,qs),
(579,308,o),
(579,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(493,349,l),
(520,349,ls),
(544,349,o)
);
},
{
closed = 1;
nodes = (
(652,788,qs),
(792,788,ls),
(931,788,o),
(949,697,qs),
(952,684,o),
(952,668,qs),
(951,0,l),
(1213,0,l),
(1214,668,ls),
(1214,697,o),
(1209,723,qs),
(1167,931,o),
(791,931,qs),
(651,931,ls),
(230,931,o),
(230,669,qs),
(230,668,l),
(229,0,l),
(492,0,l),
(615,119,o),
(681,235,o),
(682,303,qs),
(682,322,o),
(679,339,qs),
(670,382,o),
(641,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(493,668,ls),
(493,788,o)
);
},
{
closed = 1;
nodes = (
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(156,1102,l),
(156,1011,l),
(229,971,ls),
(299,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(503,1139,l),
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l)
);
}
);
width = 1442;
}
);
note = uni178F_17B6;
},
{
glyphname = uni178F_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(575,328,o),
(578,312,qs),
(579,308,o),
(579,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(493,349,l),
(520,349,ls),
(544,349,o)
);
},
{
closed = 1;
nodes = (
(652,788,qs),
(792,788,ls),
(931,788,o),
(949,697,qs),
(952,684,o),
(952,668,qs),
(951,0,l),
(1213,0,l),
(1214,668,ls),
(1214,697,o),
(1209,723,qs),
(1167,931,o),
(791,931,qs),
(651,931,ls),
(230,931,o),
(230,669,qs),
(230,668,l),
(229,0,l),
(492,0,l),
(615,119,o),
(681,235,o),
(682,303,qs),
(682,322,o),
(679,339,qs),
(670,382,o),
(641,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(493,668,ls),
(493,788,o)
);
},
{
closed = 1;
nodes = (
(1986,1164,qs),
(1985,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1631,1752,o),
(1631,1630,qs),
(1631,1629,l),
(1678,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1724,1174,l),
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(156,1102,l),
(156,1011,l),
(229,971,ls),
(299,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(503,1139,l),
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1986,1128,o)
);
}
);
width = 1442;
}
);
note = uni178F_17C5;
},
{
glyphname = uni1790_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,587,qs),
(883,593,o),
(882,602,q),
(881,605,l),
(881,626,o),
(898,654,qs),
(916,683,o),
(951,722,q),
(951,582,l),
(916,582,o)
);
},
{
closed = 1;
nodes = (
(1339,1113,l),
(1672,968,l),
(1672,0,l),
(1935,0,l),
(1935,1103,l),
(1443,1303,l),
(1213,1199,l),
(1213,1210,ls),
(1213,1252,o),
(1206,1286,qs),
(1174,1443,o),
(997,1443,qs),
(911,1443,o),
(882,1421,qs),
(854,1397,o),
(854,1350,q),
(929,1350,o),
(946,1265,qs),
(951,1241,o),
(951,1210,qs),
(950,1114,o),
(848,1114,qs),
(805,1114,l),
(505,1303,l),
(403,1303,l),
(136,1110,l),
(136,959,l),
(229,886,l),
(229,263,ls),
(229,234,o),
(235,207,qs),
(276,0,o),
(651,0,qs),
(791,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(788,642,o),
(788,604,qs),
(788,590,o),
(791,577,qs),
(798,539,o),
(829,518,qs),
(870,489,o),
(951,489,q),
(951,263,ls),
(951,143,o),
(791,143,qs),
(651,143,ls),
(513,143,o),
(495,234,qs),
(493,247,o),
(492,263,qs),
(492,936,l),
(318,1060,l),
(393,1118,l),
(612,971,l),
(838,971,ls),
(1033,971,o),
(1127,1036,q),
(1133,1025,l)
);
}
);
width = 1442;
}
);
note = uni1790_17B6;
},
{
glyphname = uni1790_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,587,qs),
(883,593,o),
(882,602,q),
(881,605,l),
(881,626,o),
(898,654,qs),
(916,683,o),
(951,722,q),
(951,582,l),
(916,582,o)
);
},
{
closed = 1;
nodes = (
(1985,1164,qs),
(1985,1536,ls),
(1984,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1630,1752,o),
(1630,1629,q),
(1677,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1723,1189,l),
(1443,1303,l),
(1213,1199,l),
(1213,1210,ls),
(1213,1252,o),
(1206,1286,qs),
(1174,1443,o),
(997,1443,qs),
(911,1443,o),
(882,1421,qs),
(854,1397,o),
(854,1350,q),
(929,1350,o),
(946,1265,qs),
(951,1241,o),
(951,1210,qs),
(950,1114,o),
(848,1114,qs),
(805,1114,l),
(505,1303,l),
(403,1303,l),
(136,1110,l),
(136,959,l),
(229,886,l),
(229,263,ls),
(229,234,o),
(235,207,qs),
(276,0,o),
(651,0,qs),
(791,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(788,642,o),
(788,604,qs),
(788,590,o),
(791,577,qs),
(798,539,o),
(829,518,qs),
(870,489,o),
(951,489,q),
(951,263,ls),
(951,143,o),
(791,143,qs),
(651,143,ls),
(513,143,o),
(495,234,qs),
(493,247,o),
(492,263,qs),
(492,936,l),
(318,1060,l),
(393,1118,l),
(612,971,l),
(838,971,ls),
(1033,971,o),
(1127,1036,q),
(1133,1025,l),
(1339,1113,l),
(1672,968,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1985,1128,o)
);
}
);
width = 1442;
}
);
note = uni1790_17C5;
},
{
glyphname = uni1791_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1110,670,q),
(1111,669,o),
(1111,668,qs),
(1111,667,o),
(1110,665,q),
(1110,637,o),
(1068,637,qs),
(1042,637,l),
(1042,692,o),
(1068,692,qs),
(1106,692,o)
);
},
{
closed = 1;
nodes = (
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l),
(1444,1303,l),
(1163,1177,l),
(1057,1303,o),
(722,1303,qs),
(230,1303,o),
(229,1031,qs),
(229,815,ls),
(230,778,o),
(236,745,qs),
(286,494,o),
(722,494,qs),
(779,494,l),
(779,280,ls),
(779,144,o),
(707,144,qs),
(642,144,o),
(636,176,q),
(636,183,l),
(635,280,ls),
(635,304,o),
(631,324,qs),
(612,420,o),
(499,420,qs),
(323,420,o),
(323,327,q),
(364,327,o),
(371,293,qs),
(372,287,o),
(372,280,qs),
(373,183,l),
(373,176,ls),
(373,162,o),
(376,148,qs),
(405,0,o),
(707,0,qs),
(1042,0,o),
(1042,281,qs),
(1042,494,l),
(1068,494,ls),
(1213,494,o),
(1213,666,qs),
(1213,680,o),
(1211,693,qs),
(1192,786,o),
(1038,786,qs),
(779,786,o),
(779,637,q),
(722,637,ls),
(523,637,o),
(496,770,qs),
(492,791,o),
(492,815,qs),
(492,1031,ls),
(492,1160,o),
(721,1160,qs),
(928,1160,o),
(949,1056,qs),
(951,1044,o),
(951,1031,qs),
(951,1029,ls),
(951,998,o),
(917,998,qs),
(886,998,o),
(882,1018,qs),
(881,1021,o),
(881,1024,q),
(788,1024,o),
(788,954,q),
(789,947,o),
(790,941,qs),
(801,884,o),
(920,884,qs),
(1213,884,o),
(1213,1031,qs),
(1213,1045,o),
(1212,1059,q),
(1340,1113,l)
);
}
);
width = 1442;
}
);
note = uni1791_17B6;
},
{
glyphname = uni1791_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1110,671,q),
(1111,670,o),
(1111,668,qs),
(1111,667,o),
(1110,665,q),
(1110,664,ls),
(1110,637,o),
(1069,637,qs),
(1043,637,l),
(1043,692,o),
(1069,692,qs),
(1106,692,o)
);
},
{
closed = 1;
nodes = (
(1985,1163,qs),
(1985,1536,ls),
(1985,1579,o),
(1979,1613,qs),
(1951,1752,o),
(1809,1752,qs),
(1631,1752,o),
(1630,1629,q),
(1677,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1723,1189,l),
(1444,1303,l),
(1164,1177,l),
(1057,1303,o),
(722,1303,qs),
(230,1303,o),
(229,1031,qs),
(229,815,ls),
(230,778,o),
(236,745,qs),
(286,494,o),
(722,494,qs),
(779,494,l),
(779,280,ls),
(779,144,o),
(707,144,qs),
(642,144,o),
(636,176,q),
(636,183,l),
(635,280,ls),
(635,304,o),
(631,324,qs),
(612,420,o),
(499,420,qs),
(324,420,o),
(324,328,qs),
(324,327,l),
(365,327,o),
(371,295,qs),
(372,290,o),
(372,285,qs),
(372,280,l),
(373,183,l),
(373,176,ls),
(373,162,o),
(376,148,qs),
(405,0,o),
(707,0,qs),
(1042,0,o),
(1042,281,qs),
(1042,494,l),
(1068,494,ls),
(1213,494,o),
(1213,666,qs),
(1213,680,o),
(1211,693,qs),
(1192,786,o),
(1038,786,qs),
(780,786,o),
(780,638,qs),
(780,637,l),
(723,637,ls),
(523,637,o),
(496,771,qs),
(492,791,o),
(492,815,qs),
(492,1031,ls),
(492,1160,o),
(721,1160,qs),
(928,1160,o),
(949,1056,qs),
(951,1044,o),
(951,1031,qs),
(951,1029,ls),
(951,998,o),
(917,998,qs),
(886,998,o),
(882,1018,qs),
(881,1021,o),
(881,1024,q),
(788,1024,o),
(788,954,q),
(789,947,o),
(790,941,qs),
(801,884,o),
(920,884,qs),
(1213,884,o),
(1213,1031,qs),
(1213,1045,o),
(1212,1059,q),
(1340,1113,l),
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1936,1037,l),
(1985,1126,o)
);
}
);
width = 1442;
}
);
note = uni1791_17C5;
},
{
glyphname = uni1792_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,587,q),
(884,593,o),
(882,602,qs),
(881,605,l),
(881,626,o),
(899,654,qs),
(917,683,o),
(951,722,q),
(951,582,l),
(916,582,o)
);
},
{
closed = 1;
nodes = (
(361,1085,l),
(503,1139,l),
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l),
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(136,1117,l),
(136,1005,l),
(229,921,l),
(229,0,l),
(492,0,l),
(721,180,l),
(951,0,l),
(1213,0,l),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(789,644,o),
(789,607,qs),
(789,597,ls),
(789,587,o),
(791,577,qs),
(799,539,o),
(830,518,qs),
(871,489,o),
(952,489,q),
(951,181,l),
(721,360,l),
(492,181,l),
(492,975,l)
);
}
);
width = 1442;
}
);
note = uni1792_17B6;
},
{
glyphname = uni1792_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,587,q),
(884,593,o),
(882,602,qs),
(881,605,l),
(881,626,o),
(899,654,qs),
(917,683,o),
(951,722,q),
(951,582,l),
(916,582,o)
);
},
{
closed = 1;
nodes = (
(1986,1164,qs),
(1985,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1631,1752,o),
(1631,1630,qs),
(1631,1629,l),
(1678,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1724,1174,l),
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(136,1117,l),
(136,1005,l),
(229,921,l),
(229,0,l),
(492,0,l),
(721,180,l),
(951,0,l),
(1213,0,l),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(789,644,o),
(789,607,qs),
(789,597,ls),
(789,587,o),
(791,577,qs),
(799,539,o),
(830,518,qs),
(871,489,o),
(952,489,q),
(951,181,l),
(721,360,l),
(492,181,l),
(492,975,l),
(361,1085,l),
(503,1139,l),
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1986,1128,o)
);
}
);
width = 1442;
}
);
note = uni1792_17C5;
},
{
glyphname = uni1793_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,908,q),
(950,839,l),
(927,839,o),
(916,850,qs),
(908,858,o),
(905,870,qs),
(904,877,o),
(904,884,qs),
(904,896,o),
(916,902,qs),
(928,908,o)
);
},
{
closed = 1;
nodes = (
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l),
(1444,1303,l),
(1173,1182,l),
(1085,1303,o),
(792,1303,qs),
(652,1303,ls),
(230,1303,o),
(229,1051,qs),
(229,931,ls),
(229,909,o),
(233,889,qs),
(242,845,o),
(270,810,qs),
(312,758,o),
(630,591,qs),
(952,423,l),
(951,217,ls),
(951,144,o),
(887,144,qs),
(802,144,o),
(596,356,o),
(492,356,q),
(493,543,l),
(230,543,l),
(229,0,l),
(492,0,l),
(493,213,l),
(570,213,o),
(774,0,o),
(887,0,qs),
(1213,0,o),
(1213,217,qs),
(1213,442,l),
(654,734,ls),
(573,777,o),
(532,825,qs),
(502,860,o),
(494,901,qs),
(491,916,o),
(491,931,qs),
(491,1051,ls),
(491,1160,o),
(651,1160,qs),
(791,1160,ls),
(931,1160,o),
(948,1076,qs),
(950,1064,o),
(950,1051,qs),
(950,1001,l),
(880,1001,o),
(845,972,qs),
(810,942,o),
(810,884,qs),
(810,861,o),
(814,842,qs),
(822,803,o),
(845,780,qs),
(880,745,o),
(950,745,qs),
(1080,745,ls),
(1131,745,o),
(1173,768,qs),
(1213,791,o),
(1214,838,qs),
(1213,1059,l),
(1340,1113,l)
);
}
);
width = 1442;
}
);
note = uni1793_17B6;
},
{
glyphname = uni1793_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,908,q),
(950,839,l),
(927,839,o),
(916,850,qs),
(908,858,o),
(905,870,qs),
(904,877,o),
(904,884,qs),
(904,896,o),
(916,902,qs),
(928,908,o)
);
},
{
closed = 1;
nodes = (
(1985,1163,qs),
(1985,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1630,1752,o),
(1630,1629,q),
(1677,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1723,1189,l),
(1444,1303,l),
(1173,1182,l),
(1085,1303,o),
(792,1303,qs),
(652,1303,ls),
(230,1303,o),
(229,1051,qs),
(229,931,ls),
(229,909,o),
(233,889,qs),
(242,845,o),
(270,810,qs),
(312,758,o),
(630,591,qs),
(952,423,l),
(951,217,ls),
(951,144,o),
(887,144,qs),
(802,144,o),
(596,356,o),
(492,356,q),
(493,543,l),
(230,543,l),
(229,0,l),
(492,0,l),
(493,213,l),
(570,213,o),
(774,0,o),
(887,0,qs),
(1213,0,o),
(1213,217,qs),
(1213,442,l),
(654,734,ls),
(573,777,o),
(532,825,qs),
(502,860,o),
(494,901,qs),
(491,916,o),
(491,931,qs),
(491,1051,ls),
(491,1160,o),
(651,1160,qs),
(791,1160,ls),
(931,1160,o),
(948,1076,qs),
(950,1064,o),
(950,1051,qs),
(950,1001,l),
(880,1001,o),
(845,972,qs),
(810,942,o),
(810,884,qs),
(810,861,o),
(814,842,qs),
(822,803,o),
(845,780,qs),
(880,745,o),
(950,745,qs),
(1080,745,ls),
(1131,745,o),
(1173,768,qs),
(1213,791,o),
(1214,838,qs),
(1213,1059,l),
(1340,1113,l),
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1985,1126,o)
);
}
);
width = 1442;
}
);
note = uni1793_17C5;
},
{
glyphname = uni1794_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(230,254,ls),
(230,231,o),
(234,210,qs),
(276,0,o),
(675,0,qs),
(768,0,ls),
(871,0,o),
(951,44,q),
(951,-96,l),
(1214,-96,l),
(1213,860,l),
(950,860,l),
(951,263,ls),
(951,143,o),
(769,143,qs),
(676,143,ls),
(514,143,o),
(495,237,qs),
(493,249,o),
(493,263,qs),
(492,975,l),
(361,1085,l),
(503,1139,l),
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l),
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(136,1117,l),
(136,1005,l),
(229,921,l),
(230,263,l)
);
}
);
width = 1442;
}
);
note = uni1794_17B6;
},
{
glyphname = uni1794_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1986,1164,qs),
(1985,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1631,1752,o),
(1631,1630,qs),
(1631,1629,l),
(1678,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1724,1174,l),
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(136,1117,l),
(136,1005,l),
(229,921,l),
(230,263,l),
(230,254,ls),
(230,231,o),
(234,210,qs),
(276,0,o),
(675,0,qs),
(768,0,ls),
(871,0,o),
(951,44,q),
(951,-96,l),
(1214,-96,l),
(1213,860,l),
(950,860,l),
(951,263,ls),
(951,143,o),
(769,143,qs),
(676,143,ls),
(514,143,o),
(495,237,qs),
(493,249,o),
(493,263,qs),
(492,975,l),
(361,1085,l),
(503,1139,l),
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1986,1128,o)
);
}
);
width = 1442;
}
);
note = uni1794_17C5;
},
{
glyphname = uni1795_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,587,qs),
(883,593,o),
(882,602,q),
(881,605,l),
(881,626,o),
(898,654,qs),
(916,683,o),
(950,722,q),
(950,582,l),
(916,582,o)
);
},
{
closed = 1;
nodes = (
(1339,1113,l),
(1672,968,l),
(1672,0,l),
(1935,0,l),
(1935,1103,l),
(1443,1303,l),
(1213,1199,l),
(1213,1210,ls),
(1213,1252,o),
(1206,1286,qs),
(1174,1443,o),
(997,1443,qs),
(911,1443,o),
(882,1421,qs),
(854,1397,o),
(854,1350,q),
(929,1350,o),
(946,1265,qs),
(951,1241,o),
(951,1210,qs),
(950,1114,o),
(848,1114,qs),
(805,1114,l),
(505,1303,l),
(403,1303,l),
(136,1110,l),
(136,959,l),
(229,886,l),
(229,0,l),
(492,0,l),
(721,180,l),
(950,0,l),
(1213,0,l),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(788,642,o),
(788,604,qs),
(788,590,o),
(791,577,qs),
(798,539,o),
(829,518,qs),
(870,489,o),
(950,489,q),
(950,181,l),
(721,360,l),
(492,181,l),
(492,936,l),
(318,1060,l),
(393,1118,l),
(612,971,l),
(838,971,ls),
(1033,971,o),
(1127,1036,q),
(1133,1025,l)
);
}
);
width = 1442;
}
);
note = uni1795_17B6;
},
{
glyphname = uni1795_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,587,qs),
(883,593,o),
(882,602,q),
(881,605,l),
(881,626,o),
(898,654,qs),
(916,683,o),
(950,722,q),
(950,582,l),
(916,582,o)
);
},
{
closed = 1;
nodes = (
(1985,1164,qs),
(1985,1536,ls),
(1984,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1630,1752,o),
(1630,1629,q),
(1677,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1723,1189,l),
(1443,1303,l),
(1213,1199,l),
(1213,1210,ls),
(1213,1252,o),
(1206,1286,qs),
(1174,1443,o),
(997,1443,qs),
(911,1443,o),
(882,1421,qs),
(854,1397,o),
(854,1350,q),
(929,1350,o),
(946,1265,qs),
(951,1241,o),
(951,1210,qs),
(950,1114,o),
(848,1114,qs),
(805,1114,l),
(505,1303,l),
(403,1303,l),
(136,1110,l),
(136,959,l),
(229,886,l),
(229,0,l),
(492,0,l),
(721,180,l),
(950,0,l),
(1213,0,l),
(1213,861,l),
(951,861,l),
(878,781,ls),
(832,732,o),
(810,687,qs),
(788,642,o),
(788,604,qs),
(788,590,o),
(791,577,qs),
(798,539,o),
(829,518,qs),
(870,489,o),
(950,489,q),
(950,181,l),
(721,360,l),
(492,181,l),
(492,936,l),
(318,1060,l),
(393,1118,l),
(612,971,l),
(838,971,ls),
(1033,971,o),
(1127,1036,q),
(1133,1025,l),
(1339,1113,l),
(1672,968,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1985,1128,o)
);
}
);
width = 1442;
}
);
note = uni1795_17C5;
},
{
glyphname = uni1796_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(575,328,o),
(578,312,qs),
(579,308,o),
(579,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l),
(1444,1303,l),
(1102,1150,l),
(929,1303,l),
(722,1140,l),
(516,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(682,303,qs),
(682,322,o),
(678,339,qs),
(670,382,o),
(641,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(534,1103,l),
(722,957,l),
(912,1103,l),
(950,1055,l),
(950,0,l),
(1213,0,l),
(1213,1052,l),
(1208,1057,l),
(1340,1113,l)
);
}
);
width = 1442;
}
);
note = uni1796_17B6;
},
{
glyphname = uni1796_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(575,328,o),
(578,312,qs),
(579,308,o),
(579,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(1985,1163,qs),
(1985,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1630,1752,o),
(1630,1629,q),
(1677,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1723,1189,l),
(1444,1303,l),
(1102,1150,l),
(929,1303,l),
(722,1140,l),
(516,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(682,303,qs),
(682,322,o),
(678,339,qs),
(670,382,o),
(641,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(534,1103,l),
(722,957,l),
(912,1103,l),
(950,1055,l),
(950,0,l),
(1213,0,l),
(1213,1052,l),
(1208,1057,l),
(1340,1113,l),
(1673,968,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1985,1126,o)
);
}
);
width = 1442;
}
);
note = uni1796_17C5;
},
{
glyphname = uni1797_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,248,qs),
(185,274,o),
(181,291,qs),
(180,298,o),
(180,303,qs),
(180,307,ls),
(180,327,o),
(190,337,qs),
(203,349,o),
(230,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(652,788,qs),
(792,788,ls),
(931,788,o),
(949,697,qs),
(952,684,o),
(952,668,qs),
(951,0,l),
(1213,0,l),
(1214,668,ls),
(1214,697,o),
(1209,723,qs),
(1167,931,o),
(791,931,qs),
(651,931,ls),
(230,931,o),
(230,669,qs),
(230,668,l),
(229,442,l),
(156,442,o),
(122,408,qs),
(87,373,o),
(87,307,qs),
(87,303,ls),
(87,289,o),
(90,272,qs),
(95,249,o),
(106,222,qs),
(127,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(493,668,ls),
(493,788,o)
);
},
{
closed = 1;
nodes = (
(1340,1303,l),
(1089,1143,l),
(660,1303,l),
(568,1303,l),
(156,1102,l),
(156,1011,l),
(229,971,ls),
(299,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(503,1139,l),
(1006,952,l),
(1038,951,l),
(1267,1103,l),
(1672,976,l),
(1672,0,l),
(1935,0,l),
(1936,1103,l)
);
}
);
width = 1442;
}
);
note = uni1797_17B6;
},
{
glyphname = uni1797_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,248,qs),
(184,274,o),
(181,291,qs),
(179,298,o),
(179,303,qs),
(180,326,o),
(190,337,qs),
(202,349,o),
(229,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(651,788,qs),
(791,788,ls),
(930,788,o),
(948,697,qs),
(951,684,o),
(951,668,qs),
(951,0,l),
(1213,0,l),
(1213,668,ls),
(1213,697,o),
(1208,724,qs),
(1167,931,o),
(792,931,qs),
(652,931,ls),
(230,931,o),
(229,668,qs),
(229,442,l),
(156,442,o),
(121,408,qs),
(86,372,o),
(86,303,qs),
(86,289,o),
(89,274,qs),
(94,250,o),
(106,222,qs),
(128,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(492,668,ls),
(492,788,o)
);
},
{
closed = 1;
nodes = (
(1985,1164,qs),
(1986,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1630,1752,o),
(1630,1629,q),
(1677,1629,o),
(1701,1606,qs),
(1716,1591,o),
(1721,1565,qs),
(1723,1552,o),
(1724,1536,qs),
(1723,1174,l),
(1339,1303,l),
(1088,1143,l),
(659,1303,l),
(567,1303,l),
(156,1102,l),
(157,1011,l),
(230,971,ls),
(299,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(368,1083,l),
(502,1139,l),
(1006,952,l),
(1039,951,l),
(1266,1103,l),
(1673,976,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1985,1128,o)
);
}
);
width = 1442;
}
);
note = uni1797_17C5;
},
{
glyphname = uni1798_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(950,143,o),
(768,143,qs),
(675,143,ls),
(513,143,o),
(495,237,qs),
(492,249,o),
(492,263,qs),
(492,534,l),
(950,534,l),
(950,263,ls)
);
},
{
closed = 1;
nodes = (
(1036,972,l),
(1242,1082,l),
(1672,944,l),
(1672,0,l),
(1935,0,l),
(1935,1083,l),
(1294,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,677,l),
(492,677,l),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,263,ls),
(229,235,o),
(234,210,qs),
(276,0,o),
(675,0,qs),
(768,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,869,l)
);
}
);
width = 1442;
}
);
note = uni1798_17B6;
},
{
glyphname = uni1798_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(950,143,o),
(768,143,qs),
(675,143,ls),
(513,143,o),
(495,237,qs),
(492,249,o),
(492,263,qs),
(492,534,l),
(950,534,l),
(950,263,ls)
);
},
{
closed = 1;
nodes = (
(1985,1164,qs),
(1985,1536,ls),
(1984,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1630,1752,o),
(1630,1629,q),
(1677,1629,o),
(1700,1606,qs),
(1715,1591,o),
(1720,1566,qs),
(1723,1552,o),
(1723,1536,qs),
(1723,1156,l),
(1294,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,677,l),
(492,677,l),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,263,ls),
(229,235,o),
(234,210,qs),
(276,0,o),
(675,0,qs),
(768,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,869,l),
(1036,972,l),
(1242,1082,l),
(1672,944,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1985,1128,o)
);
}
);
width = 1442;
}
);
note = uni1798_17C5;
},
{
glyphname = uni1799_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(542,1072,qs),
(561,1042,o),
(564,1023,qs),
(565,1018,o),
(565,1014,qs),
(565,982,o),
(542,969,qs),
(518,954,o),
(492,954,q),
(492,1143,l),
(518,1110,o)
);
},
{
closed = 1;
nodes = (
(1757,972,l),
(1963,1082,l),
(2393,944,l),
(2393,0,l),
(2656,0,l),
(2656,1083,l),
(2015,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1671,263,ls),
(1671,143,o),
(1489,143,qs),
(1396,143,ls),
(1234,143,o),
(1216,237,qs),
(1213,249,o),
(1213,263,qs),
(1213,869,l),
(973,1009,l),
(1023,1085,l),
(1157,997,o),
(1202,997,qs),
(1299,997,o),
(1336,1187,q),
(1261,1187,o),
(1207,1216,qs),
(1044,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,263,ls),
(950,143,o),
(768,143,qs),
(675,143,ls),
(513,143,o),
(495,237,qs),
(492,249,o),
(492,263,qs),
(492,861,l),
(565,861,o),
(612,897,qs),
(658,933,o),
(658,1013,qs),
(658,1027,o),
(655,1041,qs),
(649,1068,o),
(635,1098,qs),
(612,1145,o),
(492,1303,q),
(229,1303,l),
(229,263,ls),
(229,235,o),
(234,210,qs),
(276,0,o),
(675,0,qs),
(768,0,ls),
(971,0,o),
(1082,55,q),
(1192,0,o),
(1396,0,qs),
(1489,0,ls),
(1934,0,o),
(1934,263,qs),
(1934,869,l)
);
}
);
width = 2164;
}
);
note = uni1799_17B6;
},
{
glyphname = uni1799_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(542,1072,qs),
(561,1042,o),
(564,1023,qs),
(565,1018,o),
(565,1014,qs),
(565,982,o),
(542,969,qs),
(518,954,o),
(492,954,q),
(492,1143,l),
(518,1110,o)
);
},
{
closed = 1;
nodes = (
(2706,1164,qs),
(2706,1536,ls),
(2705,1578,o),
(2699,1612,qs),
(2671,1752,o),
(2529,1752,qs),
(2351,1752,o),
(2351,1629,q),
(2398,1629,o),
(2421,1606,qs),
(2436,1591,o),
(2441,1566,qs),
(2444,1552,o),
(2444,1536,qs),
(2444,1156,l),
(2015,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1671,263,ls),
(1671,143,o),
(1489,143,qs),
(1396,143,ls),
(1234,143,o),
(1216,237,qs),
(1213,249,o),
(1213,263,qs),
(1213,869,l),
(973,1009,l),
(1023,1085,l),
(1157,997,o),
(1202,997,qs),
(1299,997,o),
(1336,1187,q),
(1261,1187,o),
(1207,1216,qs),
(1044,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,263,ls),
(950,143,o),
(768,143,qs),
(675,143,ls),
(513,143,o),
(495,237,qs),
(492,249,o),
(492,263,qs),
(492,861,l),
(565,861,o),
(612,897,qs),
(658,933,o),
(658,1013,qs),
(658,1027,o),
(655,1041,qs),
(649,1068,o),
(635,1098,qs),
(612,1145,o),
(492,1303,q),
(229,1303,l),
(229,263,ls),
(229,235,o),
(234,210,qs),
(276,0,o),
(675,0,qs),
(768,0,ls),
(971,0,o),
(1082,55,q),
(1192,0,o),
(1396,0,qs),
(1489,0,ls),
(1934,0,o),
(1934,263,qs),
(1934,869,l),
(1757,972,l),
(1963,1082,l),
(2393,944,l),
(2393,0,l),
(2656,0,l),
(2656,1037,l),
(2706,1128,o)
);
}
);
width = 2164;
}
);
note = uni1799_17C5;
},
{
glyphname = uni179A_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,248,qs),
(185,274,o),
(181,291,qs),
(180,298,o),
(180,303,qs),
(180,307,ls),
(180,327,o),
(190,337,qs),
(203,349,o),
(230,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(952,968,l),
(951,0,l),
(1214,0,l),
(1215,1103,l),
(753,1303,l),
(561,1190,l),
(520,1197,o),
(483,1216,qs),
(314,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,442,l),
(156,442,o),
(122,408,qs),
(87,373,o),
(87,307,qs),
(87,303,ls),
(87,289,o),
(90,272,qs),
(95,249,o),
(106,222,qs),
(127,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(493,869,l),
(232,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(507,997,o),
(531,1025,q),
(679,1103,l)
);
}
);
width = 721;
}
);
note = uni179A_17B6;
},
{
glyphname = uni179A_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,248,qs),
(184,274,o),
(181,291,qs),
(179,298,o),
(179,303,qs),
(180,326,o),
(190,337,qs),
(202,349,o),
(229,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(1264,1164,qs),
(1265,1536,ls),
(1264,1578,o),
(1257,1612,qs),
(1229,1752,o),
(1087,1752,qs),
(909,1752,o),
(909,1629,q),
(956,1629,o),
(980,1606,qs),
(995,1591,o),
(1000,1565,qs),
(1002,1552,o),
(1003,1536,qs),
(1002,1195,l),
(752,1303,l),
(561,1190,l),
(520,1197,o),
(484,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,442,l),
(156,442,o),
(121,408,qs),
(86,372,o),
(86,303,qs),
(86,289,o),
(89,274,qs),
(94,250,o),
(106,222,qs),
(128,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(507,997,o),
(531,1025,q),
(678,1103,l),
(951,968,l),
(951,0,l),
(1214,0,l),
(1214,1037,l),
(1264,1128,o)
);
}
);
width = 721;
}
);
note = uni179A_17C5;
},
{
glyphname = uni179B_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(574,328,o),
(578,312,q),
(578,303,ls),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(1757,972,l),
(1963,1082,l),
(2393,944,l),
(2393,0,l),
(2656,0,l),
(2656,1083,l),
(2015,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1671,263,ls),
(1671,143,o),
(1489,143,qs),
(1396,143,ls),
(1234,143,o),
(1216,237,qs),
(1213,249,o),
(1213,263,qs),
(1213,1103,l),
(721,1303,l),
(229,1104,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,310,ls),
(681,325,o),
(678,339,qs),
(670,382,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1055,l),
(601,1105,l),
(950,964,l),
(950,263,ls),
(950,235,o),
(955,210,qs),
(997,0,o),
(1396,0,qs),
(1489,0,ls),
(1934,0,o),
(1934,263,qs),
(1934,869,l)
);
}
);
width = 2164;
}
);
note = uni179B_17B6;
},
{
glyphname = uni179B_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(574,328,o),
(578,312,q),
(578,303,ls),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(2706,1164,qs),
(2706,1536,ls),
(2705,1578,o),
(2699,1612,qs),
(2671,1752,o),
(2529,1752,qs),
(2351,1752,o),
(2351,1629,q),
(2398,1629,o),
(2421,1606,qs),
(2436,1591,o),
(2441,1566,qs),
(2444,1552,o),
(2444,1536,qs),
(2444,1156,l),
(2015,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1671,263,ls),
(1671,143,o),
(1489,143,qs),
(1396,143,ls),
(1234,143,o),
(1216,237,qs),
(1213,249,o),
(1213,263,qs),
(1213,1103,l),
(721,1303,l),
(229,1104,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(681,303,qs),
(681,310,ls),
(681,325,o),
(678,339,qs),
(670,382,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1055,l),
(601,1105,l),
(950,964,l),
(950,263,ls),
(950,235,o),
(955,210,qs),
(997,0,o),
(1396,0,qs),
(1489,0,ls),
(1934,0,o),
(1934,263,qs),
(1934,869,l),
(1757,972,l),
(1963,1082,l),
(2393,944,l),
(2393,0,l),
(2656,0,l),
(2656,1037,l),
(2706,1128,o)
);
}
);
width = 2164;
}
);
note = uni179B_17C5;
},
{
glyphname = uni179C_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,248,qs),
(185,274,o),
(181,291,qs),
(180,298,o),
(180,303,qs),
(180,307,ls),
(180,327,o),
(190,337,qs),
(203,349,o),
(230,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(952,968,l),
(951,0,l),
(1214,0,l),
(1215,1103,l),
(753,1303,l),
(611,1220,l),
(614,1246,o),
(614,1275,qs),
(614,1301,ls),
(614,1342,o),
(607,1375,qs),
(599,1419,o),
(579,1447,qs),
(546,1499,o),
(426,1499,qs),
(379,1499,o),
(355,1476,qs),
(333,1453,o),
(332,1386,q),
(402,1386,o),
(437,1358,qs),
(464,1335,o),
(470,1306,qs),
(471,1301,o),
(471,1295,qs),
(471,1290,ls),
(471,1256,o),
(464,1238,q),
(460,1231,o),
(456,1227,q),
(264,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,442,l),
(156,442,o),
(122,408,qs),
(87,373,o),
(87,307,qs),
(87,303,ls),
(87,289,o),
(90,272,qs),
(95,249,o),
(106,222,qs),
(127,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(493,869,l),
(232,1009,l),
(261,1075,l),
(435,997,o),
(481,997,qs),
(519,997,o),
(551,1036,q),
(679,1103,l)
);
}
);
width = 721;
}
);
note = uni179C_17B6;
},
{
glyphname = uni179C_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,248,qs),
(184,274,o),
(181,291,qs),
(179,298,o),
(179,303,qs),
(180,326,o),
(190,337,qs),
(202,349,o),
(229,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(1264,1164,qs),
(1265,1536,ls),
(1264,1578,o),
(1257,1612,qs),
(1229,1752,o),
(1087,1752,qs),
(909,1752,o),
(909,1629,q),
(956,1629,o),
(980,1606,qs),
(995,1591,o),
(1000,1565,qs),
(1002,1552,o),
(1003,1536,qs),
(1002,1195,l),
(752,1303,l),
(611,1220,l),
(614,1253,o),
(614,1290,qs),
(614,1339,o),
(607,1376,qs),
(598,1419,o),
(579,1447,qs),
(545,1499,o),
(425,1499,qs),
(378,1499,o),
(356,1476,qs),
(333,1454,o),
(333,1391,qs),
(333,1386,l),
(403,1386,o),
(436,1358,qs),
(464,1335,o),
(470,1306,qs),
(471,1298,o),
(471,1290,qs),
(471,1283,ls),
(471,1254,o),
(463,1238,q),
(461,1231,o),
(456,1227,q),
(263,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,442,l),
(156,442,o),
(121,408,qs),
(86,372,o),
(86,303,qs),
(86,289,o),
(89,274,qs),
(94,250,o),
(106,222,qs),
(128,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(492,869,l),
(231,1009,l),
(261,1075,l),
(435,997,o),
(481,997,qs),
(519,997,o),
(552,1036,q),
(678,1103,l),
(951,968,l),
(951,0,l),
(1214,0,l),
(1214,1037,l),
(1264,1128,o)
);
}
);
width = 721;
}
);
note = uni179C_17C5;
},
{
glyphname = uni179F_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(575,328,o),
(578,312,qs),
(579,308,o),
(579,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(1757,972,l),
(1963,1082,l),
(2393,944,l),
(2393,0,l),
(2656,0,l),
(2657,1083,l),
(2016,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1672,263,ls),
(1672,143,o),
(1490,143,qs),
(1397,143,ls),
(1235,143,o),
(1216,237,qs),
(1214,246,o),
(1214,256,qs),
(1214,668,ls),
(1214,697,o),
(1209,723,qs),
(1167,931,o),
(791,931,qs),
(654,931,l),
(458,1039,l),
(520,1095,l),
(698,997,o),
(774,997,qs),
(895,997,o),
(931,1187,q),
(827,1187,o),
(760,1216,qs),
(557,1303,l),
(298,1055,l),
(298,965,l),
(412,900,l),
(230,841,o),
(230,670,qs),
(230,668,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(682,303,qs),
(682,322,o),
(678,339,qs),
(670,382,o),
(641,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(493,668,ls),
(493,788,o),
(652,788,qs),
(792,788,ls),
(930,788,o),
(948,697,qs),
(950,684,o),
(951,668,qs),
(951,254,ls),
(951,231,o),
(955,210,qs),
(997,0,o),
(1396,0,qs),
(1489,0,ls),
(1934,0,o),
(1935,263,qs),
(1934,869,l)
);
}
);
width = 2164;
}
);
note = uni179F_17B6;
},
{
glyphname = uni179F_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(575,328,o),
(578,312,qs),
(579,308,o),
(579,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(2706,1163,qs),
(2706,1536,ls),
(2706,1578,o),
(2699,1612,qs),
(2671,1752,o),
(2529,1752,qs),
(2351,1752,o),
(2351,1629,q),
(2398,1629,o),
(2421,1606,qs),
(2436,1591,o),
(2441,1566,qs),
(2444,1552,o),
(2444,1536,qs),
(2444,1156,l),
(2016,1303,l),
(1558,1025,l),
(1558,935,l),
(1671,862,l),
(1672,263,ls),
(1672,143,o),
(1490,143,qs),
(1397,143,ls),
(1235,143,o),
(1216,237,qs),
(1214,246,o),
(1214,256,qs),
(1214,668,ls),
(1214,697,o),
(1209,723,qs),
(1167,931,o),
(791,931,qs),
(654,931,l),
(458,1039,l),
(520,1095,l),
(698,997,o),
(774,997,qs),
(895,997,o),
(931,1187,q),
(827,1187,o),
(760,1216,qs),
(557,1303,l),
(298,1055,l),
(298,965,l),
(412,900,l),
(230,841,o),
(230,670,qs),
(230,668,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(682,303,qs),
(682,322,o),
(678,339,qs),
(670,382,o),
(641,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(493,668,ls),
(493,788,o),
(652,788,qs),
(792,788,ls),
(930,788,o),
(948,697,qs),
(950,684,o),
(951,668,qs),
(951,254,ls),
(951,231,o),
(955,210,qs),
(997,0,o),
(1396,0,qs),
(1489,0,ls),
(1934,0,o),
(1935,263,qs),
(1934,869,l),
(1757,972,l),
(1963,1082,l),
(2393,944,l),
(2393,0,l),
(2656,0,l),
(2656,1037,l),
(2706,1126,o)
);
}
);
width = 2164;
}
);
note = uni179F_17C5;
},
{
glyphname = uni17A0_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2394,968,l),
(2394,0,l),
(2657,0,l),
(2657,1103,l),
(2165,1303,l),
(1794,1136,l),
(1797,1130,l),
(1294,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,263,ls),
(950,143,o),
(768,143,qs),
(675,143,ls),
(513,143,o),
(495,237,qs),
(492,249,o),
(492,263,qs),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,263,ls),
(229,235,o),
(234,210,qs),
(276,0,o),
(675,0,qs),
(768,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,869,l),
(1036,972,l),
(1242,1082,l),
(1672,944,l),
(1672,0,l),
(1935,0,l),
(1935,1059,l),
(2061,1113,l)
);
}
);
width = 2164;
}
);
note = uni17A0_17B6;
},
{
glyphname = uni17A0_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2707,1164,qs),
(2707,1536,ls),
(2706,1578,o),
(2700,1612,qs),
(2672,1752,o),
(2530,1752,qs),
(2352,1752,o),
(2352,1629,q),
(2399,1629,o),
(2422,1606,qs),
(2437,1591,o),
(2442,1566,qs),
(2445,1552,o),
(2445,1536,qs),
(2445,1189,l),
(2165,1303,l),
(1794,1136,l),
(1797,1130,l),
(1294,1303,l),
(837,1025,l),
(837,935,l),
(950,862,l),
(950,263,ls),
(950,143,o),
(768,143,qs),
(675,143,ls),
(513,143,o),
(495,237,qs),
(492,249,o),
(492,263,qs),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,263,ls),
(229,235,o),
(234,210,qs),
(276,0,o),
(675,0,qs),
(768,0,ls),
(1213,0,o),
(1213,263,qs),
(1213,869,l),
(1036,972,l),
(1242,1082,l),
(1672,944,l),
(1672,0,l),
(1935,0,l),
(1935,1059,l),
(2061,1113,l),
(2394,968,l),
(2394,0,l),
(2657,0,l),
(2657,1037,l),
(2707,1128,o)
);
}
);
width = 2164;
}
);
note = uni17A0_17C5;
},
{
glyphname = uni17A1_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1110,670,q),
(1111,669,o),
(1111,668,qs),
(1111,667,o),
(1110,665,q),
(1110,637,o),
(1068,637,qs),
(1042,637,l),
(1042,692,o),
(1068,692,qs),
(1106,692,o)
);
},
{
closed = 1;
nodes = (
(951,998,o),
(917,998,qs),
(886,998,o),
(882,1018,qs),
(881,1021,o),
(881,1024,q),
(788,1024,o),
(788,954,q),
(789,947,o),
(790,941,qs),
(801,884,o),
(920,884,qs),
(1213,884,o),
(1213,1031,qs),
(1213,1040,ls),
(1213,1062,o),
(1209,1083,qs),
(1165,1303,o),
(722,1303,qs),
(230,1303,o),
(229,1031,qs),
(229,815,ls),
(230,778,o),
(236,745,qs),
(286,494,o),
(722,494,qs),
(779,494,l),
(779,280,ls),
(779,144,o),
(707,144,qs),
(642,144,o),
(636,176,q),
(636,183,l),
(635,280,ls),
(635,304,o),
(631,324,qs),
(612,420,o),
(499,420,qs),
(323,420,o),
(323,327,q),
(364,327,o),
(371,293,qs),
(372,287,o),
(372,280,qs),
(373,183,l),
(373,176,ls),
(373,162,o),
(376,148,qs),
(405,0,o),
(707,0,qs),
(1042,0,o),
(1042,281,qs),
(1042,494,l),
(1068,494,ls),
(1213,494,o),
(1213,666,qs),
(1213,680,o),
(1211,693,qs),
(1192,786,o),
(1038,786,qs),
(779,786,o),
(779,637,q),
(722,637,ls),
(523,637,o),
(496,770,qs),
(492,791,o),
(492,815,qs),
(492,1031,ls),
(492,1160,o),
(721,1160,qs),
(928,1160,o),
(949,1056,qs),
(951,1044,o),
(951,1031,qs),
(951,1029,ls)
);
},
{
closed = 1;
nodes = (
(1758,972,l),
(1964,1082,l),
(2394,944,l),
(2394,0,l),
(2657,0,l),
(2658,1083,l),
(2017,1303,l),
(1559,1025,l),
(1559,935,l),
(1672,862,l),
(1672,-480,l),
(1443,-328,l),
(1213,-490,l),
(1213,-93,l),
(950,-93,l),
(881,-161,ls),
(845,-195,o),
(829,-228,qs),
(812,-262,o),
(811,-294,qs),
(811,-300,o),
(812,-306,qs),
(817,-331,o),
(846,-345,qs),
(879,-360,o),
(944,-360,qs),
(950,-360,l),
(950,-673,l),
(1213,-673,l),
(1443,-501,l),
(1672,-673,l),
(1935,-673,l),
(1935,869,l)
);
}
);
width = 2164;
}
);
note = uni17A1_17B6;
},
{
glyphname = uni17A1_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1110,671,q),
(1111,670,o),
(1111,668,qs),
(1111,667,o),
(1110,665,q),
(1110,664,ls),
(1110,637,o),
(1069,637,qs),
(1043,637,l),
(1043,692,o),
(1069,692,qs),
(1106,692,o)
);
},
{
closed = 1;
nodes = (
(951,998,o),
(917,998,qs),
(886,998,o),
(882,1018,qs),
(881,1021,o),
(881,1024,q),
(788,1024,o),
(788,954,q),
(789,947,o),
(790,941,qs),
(801,884,o),
(920,884,qs),
(1213,884,o),
(1213,1031,qs),
(1213,1040,ls),
(1213,1062,o),
(1209,1083,qs),
(1165,1303,o),
(722,1303,qs),
(230,1303,o),
(229,1031,qs),
(229,815,ls),
(230,778,o),
(236,745,qs),
(286,494,o),
(722,494,qs),
(779,494,l),
(779,280,ls),
(779,144,o),
(707,144,qs),
(642,144,o),
(636,176,q),
(636,183,l),
(635,280,ls),
(635,304,o),
(631,324,qs),
(612,420,o),
(499,420,qs),
(324,420,o),
(324,328,qs),
(324,327,l),
(365,327,o),
(371,295,qs),
(372,290,o),
(372,285,qs),
(372,280,l),
(373,183,l),
(373,176,ls),
(373,162,o),
(376,148,qs),
(405,0,o),
(707,0,qs),
(1042,0,o),
(1042,281,qs),
(1042,494,l),
(1068,494,ls),
(1213,494,o),
(1213,666,qs),
(1213,680,o),
(1211,693,qs),
(1192,786,o),
(1038,786,qs),
(780,786,o),
(780,638,qs),
(780,637,l),
(723,637,ls),
(523,637,o),
(496,771,qs),
(492,791,o),
(492,815,qs),
(492,1031,ls),
(492,1160,o),
(721,1160,qs),
(928,1160,o),
(949,1056,qs),
(951,1044,o),
(951,1031,qs),
(951,1029,ls)
);
},
{
closed = 1;
nodes = (
(2707,1163,qs),
(2707,1536,ls),
(2707,1579,o),
(2701,1613,qs),
(2673,1752,o),
(2531,1752,qs),
(2353,1752,o),
(2352,1629,q),
(2399,1629,o),
(2422,1606,qs),
(2437,1591,o),
(2442,1566,qs),
(2445,1552,o),
(2445,1536,qs),
(2445,1156,l),
(2017,1303,l),
(1559,1025,l),
(1559,935,l),
(1673,862,l),
(1672,-480,l),
(1444,-328,l),
(1213,-490,l),
(1214,-93,l),
(951,-93,l),
(881,-161,ls),
(845,-195,o),
(830,-228,qs),
(812,-262,o),
(811,-294,qs),
(811,-300,o),
(812,-305,qs),
(817,-331,o),
(846,-345,qs),
(879,-360,o),
(944,-360,qs),
(950,-360,l),
(951,-673,l),
(1214,-673,l),
(1443,-501,l),
(1673,-673,l),
(1936,-673,l),
(1935,869,l),
(1759,972,l),
(1965,1082,l),
(2394,944,l),
(2394,0,l),
(2657,0,l),
(2658,1037,l),
(2707,1126,o)
);
}
);
width = 2164;
}
);
note = uni17A1_17C5;
},
{
glyphname = uni17A2_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,248,qs),
(185,274,o),
(181,291,qs),
(180,298,o),
(180,303,qs),
(180,307,ls),
(180,327,o),
(190,337,qs),
(203,349,o),
(230,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(929,248,qs),
(916,274,o),
(912,291,qs),
(911,298,o),
(911,303,qs),
(911,307,ls),
(911,327,o),
(921,337,qs),
(934,349,o),
(961,349,q),
(960,192,l),
(945,212,o)
);
},
{
closed = 1;
nodes = (
(1046,972,l),
(1252,1082,l),
(1673,944,l),
(1672,0,l),
(1935,0,l),
(1936,1083,l),
(1305,1303,l),
(847,1025,l),
(847,935,l),
(960,862,l),
(960,677,l),
(492,677,l),
(493,869,l),
(232,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(314,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,442,l),
(156,442,o),
(122,408,qs),
(87,373,o),
(87,307,qs),
(87,303,ls),
(87,289,o),
(90,272,qs),
(95,249,o),
(106,222,qs),
(127,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(493,534,l),
(961,534,l),
(960,442,l),
(887,442,o),
(853,408,qs),
(818,373,o),
(818,307,qs),
(818,303,ls),
(818,289,o),
(821,272,qs),
(826,249,o),
(837,222,qs),
(858,176,o),
(898,117,q),
(960,0,l),
(1223,0,l),
(1224,869,l)
);
}
);
width = 1442;
}
);
note = uni17A2_17B6;
},
{
glyphname = uni17A2_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,248,qs),
(184,274,o),
(181,291,qs),
(179,298,o),
(179,303,qs),
(180,326,o),
(190,337,qs),
(202,349,o),
(229,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(928,248,qs),
(915,274,o),
(912,291,qs),
(910,298,o),
(910,303,qs),
(911,326,o),
(921,337,qs),
(933,349,o),
(960,349,q),
(960,192,l),
(945,212,o)
);
},
{
closed = 1;
nodes = (
(1985,1164,qs),
(1986,1536,ls),
(1985,1578,o),
(1978,1612,qs),
(1950,1752,o),
(1808,1752,qs),
(1630,1752,o),
(1630,1629,q),
(1677,1629,o),
(1701,1606,qs),
(1716,1591,o),
(1721,1565,qs),
(1723,1552,o),
(1724,1536,qs),
(1723,1157,l),
(1304,1303,l),
(847,1025,l),
(847,935,l),
(960,862,l),
(960,677,l),
(492,677,l),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(484,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,442,l),
(156,442,o),
(121,408,qs),
(86,372,o),
(86,303,qs),
(86,289,o),
(89,274,qs),
(94,250,o),
(106,222,qs),
(128,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(492,534,l),
(960,534,l),
(960,442,l),
(887,442,o),
(852,408,qs),
(817,372,o),
(817,303,qs),
(817,289,o),
(820,274,qs),
(825,250,o),
(837,222,qs),
(859,176,o),
(898,117,q),
(960,0,l),
(1223,0,l),
(1223,869,l),
(1046,972,l),
(1252,1082,l),
(1672,944,l),
(1672,0,l),
(1935,0,l),
(1935,1037,l),
(1985,1128,o)
);
}
);
width = 1442;
}
);
note = uni17A2_17C5;
},
{
glyphname = uni17E0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1213,326,qs),
(1213,977,ls),
(1213,1303,o),
(721,1303,qs),
(229,1303,o),
(229,977,qs),
(229,326,ls),
(229,0,o),
(721,0,qs),
(1213,0,o)
);
},
{
closed = 1;
nodes = (
(950,977,qs),
(950,326,ls),
(950,144,o),
(721,144,qs),
(492,144,o),
(492,326,qs),
(492,977,ls),
(492,1160,o),
(721,1160,qs),
(950,1160,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
5 1 2 2 1 97 0 1 1 17 77 0 3 3 0 97 4 1 0 0 19 0 78 11 10 1 0 16 14 10 19 11 19 6 4 0 9 1 9 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E0;
unicode = 6112;
},
{
glyphname = uni17E1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1213,435,qs),
(1213,977,ls),
(1213,1303,o),
(721,1303,qs),
(229,1303,o),
(229,977,qs),
(229,869,ls),
(229,602,o),
(610,602,qs),
(865,602,o),
(865,815,qs),
(865,884,o),
(771,884,qs),
(676,884,o),
(676,815,qs),
(676,746,o),
(610,746,qs),
(492,746,o),
(492,869,qs),
(492,977,ls),
(492,1160,o),
(721,1160,qs),
(951,1160,o),
(951,977,qs),
(951,435,ls),
(951,144,o),
(721,144,qs),
(440,144,o),
(440,380,q),
(229,380,o),
(229,272,qs),
(229,0,o),
(721,0,qs),
(1213,0,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 5 3 4 4 5 114 0 1 6 2 2 1 114 0 4 0 6 1 4 6 106 0 3 3 7 97 0 7 7 17 77 0 2 2 0 98 8 1 0 0 19 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 4 4 5 114 0 1 6 2 6 1 2 128 0 4 0 6 1 4 6 106 0 3 3 7 97 0 7 7 17 77 0 2 2 0 98 8 1 0 0 19 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 3 4 3 5 4 128 0 1 6 2 6 1 2 128 0 4 0 6 1 4 6 106 0 3 3 7 97 0 7 7 17 77 0 2 2 0 98 8 1 0 0 19 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 30 28 25 23 21 19 17 15 12 10 7 5 4 3 0 33 1 33 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E1;
unicode = 6113;
},
{
glyphname = uni17E2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(605,1303,l),
(605,815,ls),
(605,658,o),
(788,658,qs),
(888,658,o),
(888,769,q),
(885,769,ls),
(818,769,o),
(818,815,qs),
(818,1009,l),
(939,912,l),
(1045,996,l),
(1045,247,ls),
(1045,144,o),
(768,144,qs),
(492,144,o),
(492,247,qs),
(492,1391,ls),
(492,1583,o),
(314,1583,qs),
(136,1583,o),
(136,1459,q),
(229,1459,o),
(229,1391,qs),
(229,247,ls),
(229,0,o),
(768,0,qs),
(1307,0,o),
(1307,247,qs),
(1307,1303,l),
(1197,1303,l),
(939,1112,l),
(712,1303,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
22 21 20 3 5 0 1 76 0 3 0 2 0 3 2 105 0 5 0 6 4 5 6 106 7 1 0 0 17 77 0 4 4 1 98 0 1 1 19 1 78 18 34 22 35 33 19 34 17 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1536;
}
);
note = uni17E2;
unicode = 6114;
},
{
glyphname = uni17E3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(636,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l),
(565,73,ls),
(610,117,o),
(632,172,qs),
(655,227,o),
(655,293,qs),
(655,368,o),
(614,405,qs),
(573,442,o),
(492,442,q),
(492,1045,l),
(573,1096,l),
(788,940,l),
(788,0,l),
(1050,0,l),
(1050,1024,l),
(1039,1032,l),
(1129,1099,l),
(1323,967,l),
(1323,0,l),
(1586,0,l),
(1586,1061,l),
(1190,1303,l),
(908,1109,l)
);
},
{
closed = 1;
nodes = (
(544,335,qs),
(562,320,o),
(562,292,qs),
(562,248,o),
(544,208,qs),
(526,168,o),
(492,134,q),
(492,349,l),
(526,349,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
28 1 0 4 1 76 26 25 24 12 11 10 6 5 4 1 10 2 74 0 2 5 1 4 0 2 4 105 3 1 2 0 0 19 0 78 27 27 27 35 27 35 24 20 21 18 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1815;
}
);
note = uni17E3;
unicode = 6115;
},
{
glyphname = uni17E4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1102,747,qs),
(1120,714,o),
(1120,648,qs),
(1120,615,o),
(1102,599,qs),
(1083,583,o),
(1050,583,q),
(1050,780,l),
(1083,780,o)
);
},
{
closed = 1;
nodes = (
(1213,1036,o),
(1213,1303,qs),
(1213,1396,ls),
(1213,1489,o),
(1306,1489,q),
(1306,1613,o),
(1153,1613,qs),
(950,1613,o),
(950,1396,qs),
(950,1303,ls),
(950,1192,o),
(927,1192,q),
(653,1303,l),
(530,1303,l),
(229,1086,l),
(229,267,ls),
(229,0,o),
(610,0,qs),
(1213,0,l),
(1213,177,l),
(1050,369,l),
(1050,489,l),
(1130,489,o),
(1171,530,qs),
(1213,570,o),
(1213,652,qs),
(1213,884,o),
(1000,884,qs),
(788,884,o),
(788,760,qs),
(788,380,l),
(1028,144,l),
(610,144,ls),
(492,144,o),
(492,267,qs),
(492,1089,l),
(617,1166,l),
(949,1036,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
31 10 2 10 7 26 25 15 3 2 4 2 76 0 7 6 10 6 7 10 128 0 10 3 6 10 3 126 0 8 0 9 6 8 9 105 0 3 11 1 1 0 3 1 105 0 0 0 4 2 0 4 105 0 6 6 17 77 0 2 2 5 96 0 5 5 19 5 78 0 0 46 45 42 41 40 38 35 34 33 32 29 27 24 23 19 17 14 12 0 8 0 8 17 12 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E4;
unicode = 6116;
},
{
glyphname = uni17E5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(649,1219,o),
(622,1202,q),
(557,1222,ls),
(523,1233,o),
(489,1274,o),
(489,1305,qs),
(489,1377,o),
(582,1377,qs),
(676,1377,o),
(676,1305,qs),
(676,1271,o)
);
},
{
closed = 1;
nodes = (
(1104,594,qs),
(1120,564,o),
(1120,506,qs),
(1120,474,o),
(1104,458,qs),
(1086,442,o),
(1051,442,q),
(1051,624,l),
(1086,624,o)
);
},
{
closed = 1;
nodes = (
(1213,957,o),
(1213,1203,qs),
(1213,1396,ls),
(1213,1489,o),
(1306,1489,q),
(1306,1613,o),
(1163,1613,qs),
(950,1613,o),
(950,1396,qs),
(951,1203,ls),
(951,1114,o),
(928,1114,q),
(755,1167,l),
(771,1186,o),
(780,1206,qs),
(798,1247,o),
(798,1306,qs),
(798,1489,o),
(582,1489,qs),
(346,1489,o),
(346,1303,qs),
(346,1240,o),
(409,1156,o),
(470,1135,q),
(229,974,l),
(229,267,ls),
(229,0,o),
(610,0,qs),
(1213,0,l),
(1213,201,l),
(1051,313,l),
(1051,349,l),
(1132,349,o),
(1172,391,qs),
(1213,433,o),
(1213,516,qs),
(1213,745,o),
(1021,745,qs),
(788,745,o),
(788,629,qs),
(788,296,l),
(1019,143,l),
(610,143,ls),
(492,144,o),
(492,267,qs),
(492,969,l),
(636,1058,l),
(1000,957,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
54 43 8 3 8 0 42 21 2 11 8 37 36 26 3 3 5 3 76 0 8 0 11 0 8 11 128 0 11 4 0 11 4 126 0 9 0 10 7 9 10 105 0 7 0 0 8 7 0 105 0 4 12 1 2 1 4 2 105 0 1 0 5 3 1 5 105 0 3 3 6 96 0 6 6 19 6 78 11 11 67 66 63 62 61 59 56 55 49 47 40 38 35 34 30 28 25 23 11 19 11 19 25 33 13 7 24 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E5;
unicode = 6117;
},
{
glyphname = uni17E6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,1443,ls),
(492,1613,o),
(302,1613,qs),
(136,1613,o),
(136,1489,q),
(229,1489,o),
(229,1443,qs),
(229,869,l),
(492,869,l),
(492,988,l),
(653,1106,l),
(951,958,l),
(951,326,ls),
(951,144,o),
(721,144,qs),
(492,144,o),
(492,326,qs),
(492,435,ls),
(492,539,o),
(556,539,qs),
(614,539,o),
(614,489,qs),
(614,435,o),
(721,435,qs),
(827,435,o),
(827,489,qs),
(827,682,o),
(556,682,qs),
(229,682,o),
(229,435,qs),
(229,326,ls),
(229,0,o),
(721,0,qs),
(1213,0,o),
(1213,326,qs),
(1213,1054,l),
(721,1303,l),
(492,1148,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
37 27 26 25 1 5 5 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 6 1 6 5 1 128 0 2 3 4 3 2 114 0 7 0 6 5 7 6 105 0 1 0 3 2 1 3 105 0 4 4 0 97 0 0 0 19 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 5 6 1 6 5 1 128 0 2 3 4 3 2 4 128 0 7 0 6 5 7 6 105 0 1 0 3 2 1 3 105 0 4 4 0 97 0 0 0 19 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
33 18 21 35 34 34 35 35 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E6;
unicode = 6118;
},
{
glyphname = uni17E7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(578,326,o),
(578,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(614,119,o),
(681,235,o),
(681,303,qs),
(681,372,o),
(640,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1076,l),
(553,1123,l),
(702,987,l),
(851,1123,l),
(910,1075,l),
(910,0,l),
(1216,0,ls),
(1539,0,o),
(1539,206,qs),
(1539,1443,ls),
(1539,1583,o),
(1350,1583,qs),
(1203,1583,o),
(1203,1489,q),
(1276,1489,o),
(1276,1443,qs),
(1276,206,ls),
(1276,144,o),
(1216,144,qs),
(1173,144,l),
(1173,1052,l),
(848,1303,l),
(702,1170,l),
(555,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
35 34 33 32 31 15 14 13 12 11 10 5 2 2 1 1 0 2 76 0 3 0 2 5 3 2 105 0 5 7 1 0 1 5 0 105 0 1 1 4 95 8 6 2 4 4 19 4 78 10 10 1 0 10 44 10 44 38 36 30 28 25 23 22 21 18 16 0 9 1 9 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1768;
}
);
note = uni17E7;
unicode = 6119;
},
{
glyphname = uni17E8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,643,qs),
(881,659,o),
(881,688,qs),
(881,718,o),
(898,733,qs),
(916,748,o),
(951,748,q),
(951,628,l),
(916,628,o)
);
},
{
closed = 1;
nodes = (
(829,821,qs),
(788,780,o),
(788,698,qs),
(788,617,o),
(829,576,qs),
(869,535,o),
(951,535,q),
(951,184,l),
(721,363,l),
(492,184,l),
(492,1089,l),
(610,1160,l),
(652,1160,l),
(1007,1036,l),
(1213,1036,o),
(1213,1303,qs),
(1213,1396,ls),
(1213,1489,o),
(1306,1489,q),
(1306,1603,o),
(1163,1603,qs),
(950,1603,o),
(950,1396,qs),
(951,1303,ls),
(951,1214,o),
(927,1214,q),
(665,1303,l),
(532,1303,l),
(229,1086,l),
(229,0,l),
(492,0,l),
(721,180,l),
(951,0,l),
(1213,0,l),
(1213,761,ls),
(1213,861,o),
(1001,861,qs),
(869,861,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
35 17 2 9 10 38 37 36 14 4 3 11 2 76 0 6 5 10 5 6 10 128 0 9 10 2 10 9 2 128 0 7 0 8 5 7 8 105 13 1 2 0 0 1 2 0 106 12 1 1 0 11 3 1 11 105 0 10 10 5 95 0 5 5 17 77 4 1 3 3 19 3 78 10 9 0 0 40 39 34 33 32 31 28 27 26 24 21 20 19 18 16 15 13 12 9 46 10 46 0 8 0 8 17 14 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E8;
unicode = 6120;
},
{
glyphname = uni17E9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,344,qs),
(881,361,o),
(881,396,qs),
(881,431,o),
(898,449,qs),
(916,466,o),
(951,466,q),
(951,326,l),
(916,326,o)
);
},
{
closed = 1;
nodes = (
(1001,559,qs),
(869,559,o),
(829,519,qs),
(788,478,o),
(788,396,qs),
(788,315,o),
(829,274,qs),
(869,233,o),
(951,233,q),
(951,144,o),
(776,144,qs),
(492,144,o),
(492,435,qs),
(492,762,o),
(832,762,qs),
(1042,762,o),
(1128,718,qs),
(1165,700,o),
(1186,700,qs),
(1213,700,o),
(1213,761,qs),
(1213,823,o),
(1171,844,qs),
(1042,904,o),
(832,904,qs),
(605,904,o),
(605,1068,qs),
(605,1160,o),
(726,1160,qs),
(951,1160,o),
(951,1031,qs),
(951,977,o),
(1082,977,qs),
(1213,977,o),
(1213,1031,qs),
(1213,1396,ls),
(1213,1583,o),
(1024,1583,qs),
(881,1583,o),
(881,1489,q),
(950,1489,o),
(950,1396,qs),
(951,1242,l),
(902,1303,o),
(726,1303,qs),
(342,1303,o),
(342,1068,qs),
(342,885,o),
(505,845,q),
(367,783,o),
(298,680,qs),
(229,577,o),
(229,435,qs),
(229,0,o),
(776,0,qs),
(1213,0,o),
(1213,326,qs),
(1213,435,ls),
(1213,559,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 114 values pushed */
24 1 7 3 18 1 10 8 2 76 0 6 7 8 7 6 8 128 0 9 10 13 10 9 13 128 0 5 0 4 3 5 4 105 0 8 0 10 9 8 10 105 0 13 0 0 1 13 0 105 14 1 1 0 12 11 1 12 105 0 7 7 3 97 0 3 3 17 77 0 11 11 2 97 0 2 2 19 2 78 0 0 67 65 59 58 57 55 53 51 49 47 43 41 39 37 35 33 30 28 27 26 23 21 13 11 0 8 0 8 17 15 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E9;
unicode = 6121;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1082,278,o),
(1082,567,qs),
(1082,888,ls),
(1082,1176,o),
(815,1477,o),
(589,1477,qs),
(362,1477,o),
(97,1176,o),
(97,888,qs),
(97,567,ls),
(97,278,o),
(363,-21,o),
(591,-21,qs),
(817,-21,o)
);
},
{
closed = 1;
nodes = (
(388,363,o),
(388,539,qs),
(388,918,ls),
(388,1092,o),
(490,1252,o),
(589,1252,qs),
(687,1252,o),
(791,1092,o),
(791,918,qs),
(791,539,ls),
(791,363,o),
(689,203,o),
(591,203,qs),
(491,203,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 1 97 0 1 1 37 77 5 1 2 2 0 97 4 1 0 0 38 0 78 15 14 1 0 22 20 14 27 15 27 8 6 0 13 1 13 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1170;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(602,1456,l),
(62,1358,l),
(62,1191,l),
(311,1191,l),
(311,205,l),
(65,175,l),
(65,0,l),
(848,0,l),
(848,175,l),
(602,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
9 4 3 0 4 0 1 1 76 8 7 2 1 74 0 1 0 1 133 0 0 0 32 0 78 19 17 2 8 24 
CALL[ ]	/* CallFunction */";
};
width = 905;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(844,362,l),
(829,223,l),
(452,223,l),
(450,228,l),
(733,532,ls),
(837,642,o),
(969,812,o),
(1031,965,o),
(1031,1052,qs),
(1031,1178,o),
(915,1370,o),
(700,1477,o),
(550,1477,qs),
(397,1477,o),
(172,1353,o),
(113,1248,qs),
(56,1147,o),
(56,1023,qs),
(56,1010,l),
(58,1004,l),
(342,1004,l),
(342,1119,o),
(446,1250,o),
(547,1250,qs),
(641,1250,o),
(738,1132,o),
(738,1047,qs),
(738,998,o),
(703,899,o),
(621,779,o),
(549,698,qs),
(77,191,l),
(77,0,l),
(1070,0,l),
(1070,362,l)
);
}
);
width = 1136;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(932,83,o),
(1064,275,o),
(1064,408,qs),
(1064,526,o),
(937,704,o),
(816,747,q),
(928,799,o),
(1041,963,o),
(1041,1065,qs),
(1041,1262,o),
(773,1477,o),
(552,1477,qs),
(411,1477,o),
(192,1374,o),
(132,1284,qs),
(75,1197,o),
(75,1088,qs),
(75,1077,l),
(77,1071,l),
(360,1071,l),
(360,1125,o),
(409,1207,o),
(497,1252,o),
(554,1252,qs),
(649,1252,o),
(749,1145,o),
(749,1052,qs),
(749,991,o),
(705,901,o),
(615,852,o),
(545,852,qs),
(381,852,l),
(381,633,l),
(539,633,ls),
(656,633,o),
(772,519,o),
(772,417,qs),
(772,316,o),
(655,203,o),
(554,203,qs),
(489,203,o),
(394,255,o),
(342,345,o),
(342,403,q),
(59,403,l),
(57,397,l),
(57,386,ls),
(57,260,o),
(121,171,qs),
(187,77,o),
(415,-21,o),
(554,-21,qs),
(701,-21,o)
);
}
);
width = 1112;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(939,348,l),
(1104,348,l),
(1104,542,l),
(939,542,l),
(939,1456,l),
(645,1456,l),
(40,491,l),
(54,348,l),
(648,348,l),
(648,205,l),
(492,175,l),
(492,0,l),
(1094,0,l),
(1094,175,l),
(939,205,l)
);
},
{
closed = 1;
nodes = (
(648,542,l),
(312,542,l),
(618,1027,l),
(642,1069,l),
(648,1067,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
19 1 3 2 14 4 3 0 4 0 1 2 76 5 1 3 4 1 1 0 3 1 103 0 2 2 31 77 0 0 0 32 0 78 20 17 17 18 19 17 6 8 28 
CALL[ ]	/* CallFunction */";
};
width = 1158;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(926,106,o),
(1039,327,o),
(1039,467,qs),
(1039,622,o),
(936,842,o),
(838,900,qs),
(742,956,o),
(608,956,qs),
(599,956,ls),
(553,956,o),
(472,937,o),
(402,906,o),
(375,886,q),
(416,1222,l),
(808,1222,l),
(834,1124,l),
(1014,1124,l),
(1014,1456,l),
(176,1456,l),
(92,645,l),
(350,628,l),
(369,681,o),
(458,743,o),
(541,743,qs),
(644,743,o),
(748,591,o),
(748,465,qs),
(748,349,o),
(650,203,o),
(548,203,qs),
(459,203,o),
(349,312,o),
(349,409,q),
(69,395,l),
(67,390,l),
(67,379,ls),
(67,258,o),
(129,170,qs),
(194,78,o),
(415,-21,o),
(548,-21,qs),
(707,-21,o)
);
}
);
width = 1092;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,110,o),
(1102,339,o),
(1102,486,qs),
(1102,629,o),
(1002,851,o),
(814,977,o),
(683,977,qs),
(592,977,o),
(441,919,o),
(392,868,q),
(389,873,l),
(390,1058,o),
(539,1248,o),
(683,1248,qs),
(745,1248,o),
(861,1222,o),
(915,1203,q),
(966,1416,l),
(896,1446,o),
(757,1477,o),
(675,1477,qs),
(504,1477,o),
(240,1322,o),
(91,1031,o),
(91,825,qs),
(91,569,ls),
(91,385,o),
(223,120,o),
(458,-21,o),
(611,-21,qs),
(756,-21,o)
);
},
{
closed = 1;
nodes = (
(382,389,o),
(382,562,qs),
(382,659,l),
(403,689,o),
(465,732,o),
(545,756,o),
(590,756,qs),
(695,756,o),
(810,607,o),
(810,490,qs),
(810,410,o),
(760,279,o),
(668,203,o),
(605,203,qs),
(506,203,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
12 1 2 1 13 1 3 2 19 1 5 3 42 1 4 5 4 76 0 3 0 5 4 3 5 105 0 2 2 1 97 0 1 1 37 77 7 1 4 4 0 97 6 1 0 0 38 0 78 32 31 1 0 39 37 31 45 32 45 24 22 17 15 10 8 0 30 1 30 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1144;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(655,316,o),
(711,594,o),
(807,845,o),
(961,1094,o),
(1078,1231,q),
(1078,1456,l),
(49,1456,l),
(49,1087,l),
(273,1087,l),
(284,1231,l),
(797,1231,l),
(667,1082,o),
(481,743,o),
(367,362,o),
(344,148,qs),
(330,0,l),
(622,0,l),
(636,148,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
12 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 1 0 1 2 114 0 1 1 3 95 0 3 3 31 77 0 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 1 0 1 2 0 128 0 1 1 3 95 0 3 3 31 77 0 0 0 32 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
17 17 21 16 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1107;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(934,76,o),
(1059,263,o),
(1059,398,qs),
(1059,515,o),
(925,697,o),
(809,746,q),
(910,793,o),
(1026,961,o),
(1026,1070,qs),
(1026,1200,o),
(910,1381,o),
(701,1477,o),
(562,1477,qs),
(424,1477,o),
(216,1381,o),
(100,1200,o),
(100,1070,qs),
(100,961,o),
(214,793,o),
(316,746,q),
(201,697,o),
(67,516,o),
(67,398,qs),
(67,263,o),
(192,76,o),
(416,-21,o),
(564,-21,qs),
(712,-21,o)
);
},
{
closed = 1;
nodes = (
(359,318,o),
(359,418,qs),
(359,483,o),
(410,580,o),
(502,634,o),
(562,634,qs),
(623,634,o),
(715,580,o),
(768,484,o),
(768,418,qs),
(768,352,o),
(717,255,o),
(625,203,o),
(564,203,qs),
(471,203,o)
);
},
{
closed = 1;
nodes = (
(393,966,o),
(393,1057,qs),
(393,1147,o),
(482,1252,o),
(562,1252,qs),
(615,1252,o),
(692,1203,o),
(734,1116,o),
(734,1057,qs),
(734,997,o),
(693,908,o),
(616,859,o),
(564,859,qs),
(483,859,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
21 7 2 3 4 1 76 8 1 4 0 3 2 4 3 105 0 5 5 1 97 0 1 1 37 77 7 1 2 2 0 97 6 1 0 0 38 0 78 44 43 29 28 1 0 52 50 43 56 44 56 37 35 28 42 29 42 15 13 0 27 1 27 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1115;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(912,120,o),
(1053,388,o),
(1053,576,qs),
(1053,892,ls),
(1053,1077,o),
(927,1339,o),
(701,1477,o),
(552,1477,qs),
(411,1477,o),
(190,1340,o),
(63,1104,o),
(63,957,qs),
(63,800,o),
(170,576,o),
(365,455,o),
(494,455,qs),
(576,455,o),
(713,520,o),
(762,583,q),
(764,561,l),
(762,377,o),
(616,203,o),
(489,203,qs),
(425,203,o),
(292,228,o),
(229,251,q),
(196,40,l),
(264,10,o),
(425,-21,o),
(501,-21,qs),
(663,-21,o)
);
},
{
closed = 1;
nodes = (
(400,739,o),
(355,869,o),
(355,957,qs),
(355,1038,o),
(406,1173,o),
(495,1252,o),
(554,1252,qs),
(650,1252,o),
(762,1087,o),
(762,926,qs),
(762,770,l),
(730,724,o),
(624,669,o),
(557,669,qs),
(490,669,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
34 1 4 5 11 10 2 2 4 4 1 1 2 3 1 0 1 4 76 7 1 4 0 2 1 4 2 105 0 5 5 3 97 0 3 3 37 77 0 1 1 0 97 6 1 0 0 38 0 78 32 31 1 0 39 37 31 45 32 45 23 21 15 13 8 6 0 30 1 30 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1141;
}
);
note = nine;
unicode = 57;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 700;
}
);
note = space;
unicode = 32;
},
{
glyphname = CR;
layers = (
{
layerId = m01;
width = 1044;
}
);
note = CR;
},
{
glyphname = uni0000;
layers = (
{
layerId = m01;
width = 0;
}
);
note = uni0000;
},
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,0,l),
(922,0,l),
(922,1462,l),
(102,1462,l)
);
},
{
closed = 1;
nodes = (
(201,98,l),
(201,1364,l),
(823,1364,l),
(823,98,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
4 1 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79 0 0 7 6 5 4 0 3 0 3 17 5 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = ".notdef";
},
{
glyphname = uni17D4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,927,qs),
(653,927,o),
(802,1037,qs),
(950,1147,l),
(950,193,ls),
(950,124,o),
(834,124,q),
(834,0,o),
(986,0,qs),
(1213,0,o),
(1213,193,qs),
(1213,1303,l),
(951,1303,l),
(713,1129,ls),
(634,1071,o),
(542,1071,qs),
(492,1071,o),
(492,1141,qs),
(492,1210,o),
(612,1210,q),
(612,1303,o),
(456,1303,qs),
(229,1303,o),
(229,1140,qs),
(229,927,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
20 1 2 1 1 76 0 2 0 6 5 2 6 105 0 1 1 0 97 3 1 0 0 17 77 0 5 5 4 98 0 4 4 19 4 78 36 17 34 18 34 17 33 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D4;
unicode = 6100;
},
{
glyphname = uni17D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1280,58,qs),
(1256,23,o),
(1210,0,q),
(1493,0,o),
(1493,140,qs),
(1493,1303,l),
(1303,1303,l),
(1303,140,ls),
(1303,93,o)
);
},
{
closed = 1;
nodes = (
(492,927,qs),
(653,927,o),
(802,1037,qs),
(950,1147,l),
(950,193,ls),
(950,124,o),
(834,124,q),
(834,0,o),
(986,0,qs),
(1213,0,o),
(1213,193,qs),
(1213,1303,l),
(951,1303,l),
(713,1129,ls),
(634,1071,o),
(542,1071,qs),
(492,1071,o),
(492,1141,qs),
(492,1210,o),
(612,1210,q),
(612,1303,o),
(456,1303,qs),
(229,1303,o),
(229,1140,qs),
(229,927,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
29 1 4 3 1 76 0 4 0 8 7 4 8 105 0 3 3 0 95 5 2 2 0 0 17 77 0 7 7 1 98 6 1 1 1 19 1 78 36 17 34 18 34 17 37 18 17 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1722;
}
);
note = uni17D5;
unicode = 6101;
},
{
glyphname = uni17D6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(433,1150,qs),
(451,1169,o),
(488,1169,qs),
(526,1169,o),
(544,1150,qs),
(564,1131,o),
(564,1094,qs),
(564,1056,o),
(544,1038,qs),
(526,1019,o),
(488,1019,qs),
(451,1019,o),
(433,1038,qs),
(414,1056,o),
(414,1094,qs),
(414,1131,o)
);
},
{
closed = 1;
nodes = (
(684,1251,qs),
(619,1303,o),
(488,1303,qs),
(358,1303,o),
(293,1251,qs),
(229,1199,o),
(229,1094,qs),
(229,989,o),
(293,936,qs),
(358,884,o),
(488,884,qs),
(619,884,o),
(684,936,qs),
(748,989,o),
(748,1094,qs),
(748,1199,o)
);
},
{
closed = 1;
nodes = (
(433,269,qs),
(451,289,o),
(488,289,qs),
(526,289,o),
(544,269,qs),
(564,249,o),
(564,209,qs),
(564,170,o),
(544,150,qs),
(526,130,o),
(488,130,qs),
(451,130,o),
(433,150,qs),
(414,170,o),
(414,209,qs),
(414,249,o)
);
},
{
closed = 1;
nodes = (
(684,367,qs),
(619,419,o),
(488,419,qs),
(358,419,o),
(293,367,qs),
(229,315,o),
(229,209,qs),
(229,104,o),
(293,52,qs),
(358,0,o),
(488,0,qs),
(619,0,o),
(684,52,qs),
(748,104,o),
(748,209,qs),
(748,315,o)
);
},
{
closed = 1;
nodes = (
(136,556,l),
(841,556,l),
(841,746,l),
(136,746,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
0 0 0 2 9 0 2 105 10 1 9 0 8 7 9 8 103 0 7 0 5 4 7 5 105 0 1 1 3 97 0 3 3 17 77 0 4 4 6 97 0 6 6 19 6 78 64 64 64 67 64 67 20 38 38 38 38 38 38 38 35 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 977;
}
);
note = uni17D6;
unicode = 6102;
},
{
glyphname = uni17D7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(610,943,qs),
(610,1024,o),
(555,1024,q),
(555,977,o),
(501,977,qs),
(442,977,o),
(442,1032,q),
(549,1103,l),
(778,941,l),
(951,1103,l),
(951,326,ls),
(951,144,o),
(751,144,qs),
(551,144,o),
(551,321,q),
(340,321,o),
(340,193,qs),
(340,0,o),
(777,0,qs),
(1213,0,o),
(1213,326,qs),
(1213,1302,l),
(975,1302,l),
(776,1128,l),
(532,1303,l),
(384,1235,o),
(321,1167,qs),
(258,1099,o),
(229,1032,q),
(229,812,o),
(501,812,qs),
(610,812,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
24 23 21 7 2 5 6 1 22 1 0 5 2 76 6 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 1 5 5 6 114 0 3 0 4 4 3 114 0 5 7 1 0 3 5 0 106 0 1 1 17 77 0 4 4 2 98 0 2 2 19 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 6 1 5 5 6 114 0 3 0 4 0 3 4 128 0 5 7 1 0 3 5 0 106 0 1 1 17 77 0 4 4 2 98 0 2 2 19 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 29 28 27 25 19 17 16 15 13 11 9 8 0 31 1 31 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D7;
unicode = 6103;
},
{
glyphname = uni17D8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,927,qs),
(653,927,o),
(802,1037,qs),
(950,1147,l),
(950,193,ls),
(950,124,o),
(834,124,q),
(834,0,o),
(986,0,qs),
(1213,0,o),
(1213,193,qs),
(1213,1303,l),
(951,1303,l),
(713,1129,ls),
(634,1071,o),
(542,1071,qs),
(492,1071,o),
(492,1141,qs),
(492,1210,o),
(612,1210,q),
(612,1303,o),
(456,1303,qs),
(229,1303,o),
(229,1140,qs),
(229,927,o)
);
},
{
closed = 1;
nodes = (
(4100,927,qs),
(4261,927,o),
(4410,1037,qs),
(4558,1147,l),
(4558,193,ls),
(4558,124,o),
(4442,124,q),
(4442,0,o),
(4594,0,qs),
(4821,0,o),
(4821,193,qs),
(4821,1303,l),
(4559,1303,l),
(4321,1129,ls),
(4242,1071,o),
(4150,1071,qs),
(4100,1071,o),
(4100,1141,qs),
(4100,1210,o),
(4220,1210,q),
(4220,1303,o),
(4064,1303,qs),
(3837,1303,o),
(3837,1140,qs),
(3837,927,o)
);
},
{
closed = 1;
nodes = (
(2004,337,qs),
(2021,326,o),
(2021,303,qs),
(2021,275,o),
(2007,247,qs),
(1993,220,o),
(1935,151,q),
(1935,349,l),
(1962,349,ls),
(1986,349,o)
);
},
{
closed = 1;
nodes = (
(2839,0,qs),
(2932,0,ls),
(3377,0,o),
(3377,263,qs),
(3377,869,l),
(3137,1009,l),
(3187,1085,l),
(3321,997,o),
(3366,997,qs),
(3463,997,o),
(3500,1187,q),
(3425,1187,o),
(3371,1216,qs),
(3208,1303,l),
(3001,1025,l),
(3001,935,l),
(3114,862,l),
(3114,263,ls),
(3114,143,o),
(2932,143,qs),
(2839,143,ls),
(2656,143,o),
(2656,263,qs),
(2656,1103,l),
(2164,1303,l),
(1672,1104,l),
(1672,0,l),
(1935,0,l),
(2057,119,o),
(2124,235,o),
(2124,303,qs),
(2124,372,o),
(2083,408,qs),
(2043,442,o),
(1962,442,qs),
(1935,442,l),
(1935,1055,l),
(2044,1105,l),
(2393,964,l),
(2393,263,ls),
(2393,0,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
93 76 74 62 45 20 6 2 18 94 85 63 3 19 2 84 61 2 6 19 95 83 2 15 6 52 1 5 14 5 76 86 75 2 0 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
93 76 74 62 45 20 6 2 18 94 85 63 3 19 2 84 61 2 6 19 95 83 2 15 6 52 1 17 14 5 76 86 75 2 0 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 18 0 19 6 18 19 105 9 1 2 13 1 6 15 2 6 105 0 15 21 1 14 5 15 14 105 8 1 1 1 0 97 10 7 3 3 0 0 17 77 17 12 2 5 5 4 98 20 16 11 3 4 4 19 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 18 0 19 6 18 19 105 9 1 2 13 1 6 15 2 6 105 0 15 21 1 14 17 15 14 105 8 1 1 1 0 97 10 7 3 3 0 0 17 77 0 17 17 4 97 20 16 11 3 4 4 19 77 12 1 5 5 4 98 20 16 11 3 4 4 19 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
51 50 100 97 92 90 89 88 81 78 73 72 66 64 50 59 51 59 49 47 43 42 41 39 37 36 34 32 17 34 36 17 34 18 34 17 33 22 7 31 
CALL[ ]	/* CallFunction */";
};
width = 5050;
}
);
note = uni17D8;
unicode = 6104;
},
{
glyphname = uni17D9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1338,163,qs),
(1500,325,o),
(1500,650,qs),
(1500,975,o),
(1338,1138,qs),
(1174,1300,o),
(850,1300,qs),
(526,1300,o),
(363,1138,qs),
(200,975,o),
(200,650,qs),
(200,325,o),
(363,163,qs),
(526,0,o),
(850,0,qs),
(1174,0,o)
);
},
{
closed = 1;
nodes = (
(1361,650,qs),
(1361,139,o),
(850,139,qs),
(339,139,o),
(339,650,qs),
(339,1161,o),
(850,1161,qs),
(1361,1161,o)
);
},
{
closed = 1;
nodes = (
(1129,371,qs),
(1221,464,o),
(1221,650,qs),
(1221,836,o),
(1129,929,qs),
(1037,1021,o),
(850,1021,qs),
(663,1021,o),
(571,929,qs),
(479,836,o),
(479,650,qs),
(479,464,o),
(571,371,qs),
(663,279,o),
(850,279,qs),
(1037,279,o)
);
},
{
closed = 1;
nodes = (
(1024,825,qs),
(1082,766,o),
(1082,650,qs),
(1082,534,o),
(1024,476,qs),
(965,418,o),
(850,418,qs),
(735,418,o),
(676,476,qs),
(618,534,o),
(618,650,qs),
(618,766,o),
(676,825,qs),
(735,882,o),
(850,882,qs),
(965,882,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
0 5 11 1 6 7 5 6 105 0 7 10 1 4 3 7 4 105 9 1 2 2 1 97 0 1 1 17 77 0 3 3 0 97 8 1 0 0 19 0 78 41 40 25 24 17 16 1 0 49 47 40 55 41 55 33 31 24 39 25 39 21 19 16 23 17 23 9 7 0 15 1 15 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1700;
}
);
note = uni17D9;
unicode = 6105;
},
{
glyphname = uni17DA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3132,441,qs),
(3132,439,o),
(3131,438,qs),
(3124,432,o),
(3118,432,qs),
(3111,432,o),
(3106,439,qs),
(3105,441,o),
(3105,444,qs),
(3105,452,o),
(3121,466,q),
(3132,447,o)
);
},
{
closed = 1;
nodes = (
(1781,864,qs),
(1739,920,o),
(1739,951,qs),
(1739,963,o),
(1746,971,qs),
(1772,1001,o),
(1800,1001,qs),
(1823,1001,o),
(1847,980,qs),
(1854,974,o),
(1854,963,qs),
(1854,930,o),
(1793,848,q),
(1786,856,o)
);
},
{
closed = 1;
nodes = (
(2115,306,qs),
(2115,298,o),
(2109,295,q),
(2090,282,o),
(2072,282,qs),
(2050,282,o),
(2031,301,q),
(2027,304,o),
(2027,310,qs),
(2027,332,o),
(2071,380,q),
(2115,328,o)
);
},
{
closed = 1;
nodes = (
(2381,944,qs),
(2381,952,o),
(2386,955,qs),
(2402,965,o),
(2416,965,qs),
(2434,965,o),
(2449,948,qs),
(2451,946,o),
(2451,942,qs),
(2451,926,o),
(2411,882,q),
(2381,926,o)
);
},
{
closed = 1;
nodes = (
(2652,380,qs),
(2652,377,o),
(2650,376,qs),
(2642,372,o),
(2634,372,qs),
(2625,372,o),
(2618,379,qs),
(2617,380,l),
(2617,387,o),
(2638,406,q),
(2652,387,o)
);
},
{
closed = 1;
nodes = (
(2974,868,qs),
(2974,871,o),
(2976,873,qs),
(2986,881,o),
(2995,881,qs),
(3001,881,o),
(3006,876,q),
(3007,876,o),
(3007,875,qs),
(3007,870,o),
(2982,848,q),
(2974,861,o)
);
},
{
closed = 1;
nodes = (
(3114,688,qs),
(3088,717,o),
(3067,740,q),
(3096,770,o),
(3115,797,qs),
(3150,848,o),
(3150,887,qs),
(3150,921,o),
(3126,947,qs),
(3072,1005,o),
(3012,1012,qs),
(3003,1013,o),
(2994,1013,qs),
(2942,1013,o),
(2886,977,qs),
(2840,946,o),
(2840,895,qs),
(2840,872,o),
(2849,844,qs),
(2860,811,o),
(2883,772,q),
(2832,734,o),
(2758,682,qs),
(2699,640,o),
(2653,601,q),
(2618,644,o),
(2574,692,qs),
(2528,741,o),
(2493,781,q),
(2527,823,o),
(2549,860,qs),
(2586,922,o),
(2586,969,qs),
(2586,1009,o),
(2560,1037,qs),
(2503,1101,o),
(2436,1108,q),
(2420,1108,ls),
(2361,1108,o),
(2293,1064,qs),
(2244,1032,o),
(2244,974,qs),
(2244,941,o),
(2260,900,qs),
(2282,842,o),
(2314,791,q),
(2257,740,o),
(2176,674,qs),
(2114,621,o),
(2065,574,q),
(2026,614,o),
(1979,657,qs),
(1926,705,o),
(1884,748,q),
(1920,801,o),
(1943,847,qs),
(1981,923,o),
(1981,979,qs),
(1981,1035,o),
(1944,1071,qs),
(1871,1143,o),
(1799,1143,qs),
(1797,1143,ls),
(1723,1142,o),
(1649,1069,qs),
(1607,1027,o),
(1607,970,qs),
(1607,925,o),
(1632,871,qs),
(1658,815,o),
(1712,748,q),
(1635,657,o),
(1515,532,qs),
(1322,331,o),
(1160,231,qs),
(998,130,o),
(866,130,qs),
(733,130,o),
(667,260,qs),
(601,390,o),
(601,650,qs),
(601,656,ls),
(601,912,o),
(682,1040,qs),
(763,1170,o),
(925,1170,qs),
(1087,1170,o),
(1169,1115,qs),
(1250,1060,o),
(1250,951,qs),
(1250,829,o),
(1191,754,qs),
(1132,679,o),
(1015,653,qs),
(946,637,o),
(946,593,qs),
(946,582,o),
(950,570,qs),
(965,523,o),
(1016,523,qs),
(1033,523,o),
(1054,529,q),
(1227,567,o),
(1314,674,qs),
(1400,781,o),
(1400,957,qs),
(1400,1128,o),
(1282,1214,qs),
(1163,1300,o),
(925,1300,qs),
(688,1300,o),
(569,1137,qs),
(450,975,o),
(450,650,qs),
(450,325,o),
(554,162,qs),
(658,0,o),
(865,0,qs),
(1032,0,o),
(1228,116,qs),
(1423,231,o),
(1646,463,qs),
(1739,560,o),
(1806,643,q),
(1840,609,o),
(1879,574,qs),
(1935,522,o),
(1978,480,q),
(1942,436,o),
(1920,397,qs),
(1888,340,o),
(1888,296,qs),
(1888,252,o),
(1919,220,qs),
(1982,156,o),
(2053,151,qs),
(2059,150,o),
(2066,150,qs),
(2131,150,o),
(2203,198,qs),
(2249,228,o),
(2249,280,qs),
(2249,316,o),
(2226,364,qs),
(2203,411,o),
(2159,467,q),
(2213,516,o),
(2288,578,qs),
(2351,633,o),
(2400,681,q),
(2469,607,ls),
(2519,551,o),
(2555,509,q),
(2531,482,o),
(2514,458,qs),
(2479,405,o),
(2479,364,qs),
(2479,330,o),
(2502,304,qs),
(2554,246,o),
(2615,238,qs),
(2624,237,o),
(2633,237,qs),
(2685,237,o),
(2743,275,qs),
(2785,302,o),
(2785,352,qs),
(2785,383,o),
(2769,423,qs),
(2757,452,o),
(2737,484,q),
(2792,524,o),
(2870,580,qs),
(2926,619,o),
(2972,655,q),
(2987,637,o),
(3005,618,qs),
(3022,597,o),
(3037,578,q),
(2963,526,o),
(2948,474,qs),
(2945,461,o),
(2945,449,qs),
(2945,406,o),
(2984,363,qs),
(3035,308,o),
(3094,302,qs),
(3102,301,o),
(3110,301,qs),
(3161,301,o),
(3218,338,qs),
(3265,369,o),
(3265,423,qs),
(3265,444,o),
(3258,469,qs),
(3249,499,o),
(3229,535,q),
(3295,563,o),
(3381,563,qs),
(3501,563,ls),
(3600,563,o),
(3600,628,qs),
(3600,693,o),
(3505,693,qs),
(3358,693,o),
(3243,666,qs),
(3197,655,o),
(3156,640,q),
(3137,663,o)
);
}
);
width = 3850;
}
);
note = uni17DA;
unicode = 6106;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,510,l),
(695,510,l),
(695,735,l),
(131,735,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 3 0 3 17 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 815;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,-186,l),
(1002,-186,l),
(1002,0,l),
(92,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 3 0 3 17 3 8 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1094;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(579,-256,o),
(466,-98,o),
(382,121,o),
(335,399,o),
(335,568,qs),
(335,594,ls),
(335,763,o),
(382,1041,o),
(466,1259,o),
(579,1417,o),
(644,1466,q),
(591,1612,l),
(585,1612,l),
(489,1571,o),
(311,1391,o),
(171,1125,o),
(89,788,o),
(89,592,qs),
(89,570,ls),
(89,374,o),
(171,37,o),
(311,-229,o),
(489,-409,o),
(585,-450,q),
(591,-450,l),
(644,-307,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
12 0 1 50 
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(400,-226,o),
(546,43,o),
(631,378,o),
(631,570,qs),
(631,592,ls),
(631,783,o),
(546,1118,o),
(400,1388,o),
(218,1572,o),
(121,1612,q),
(115,1612,l),
(61,1470,l),
(125,1421,o),
(236,1260,o),
(321,1041,o),
(370,762,o),
(370,594,qs),
(370,568,ls),
(370,399,o),
(322,119,o),
(237,-99,o),
(126,-258,o),
(61,-307,q),
(115,-450,l),
(121,-450,l),
(218,-410,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 0 1 50 
CALL[ ]	/* CallFunction */";
};
width = 712;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(478,-12,o),
(478,106,qs),
(478,309,ls),
(478,411,o),
(388,572,o),
(298,619,q),
(388,664,o),
(478,825,o),
(478,929,qs),
(478,1132,ls),
(478,1250,o),
(547,1409,o),
(633,1440,q),
(577,1597,l),
(382,1542,o),
(217,1303,o),
(217,1132,qs),
(217,929,ls),
(217,828,o),
(130,719,o),
(39,719,q),
(39,518,l),
(130,518,o),
(217,408,o),
(217,309,qs),
(217,106,ls),
(217,-65,o),
(382,-305,o),
(577,-360,q),
(633,-202,l),
(547,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
24 1 0 1 1 76 17 16 2 1 74 1 1 0 73 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 17 23 2 8 24 
CALL[ ]	/* CallFunction */";
};
width = 673;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(455,-65,o),
(455,106,qs),
(455,309,ls),
(455,408,o),
(541,518,o),
(632,518,q),
(632,719,l),
(541,719,o),
(455,828,o),
(455,929,qs),
(455,1132,ls),
(455,1303,o),
(289,1542,o),
(95,1597,q),
(39,1440,l),
(123,1409,o),
(193,1250,o),
(193,1132,qs),
(193,929,ls),
(193,824,o),
(284,663,o),
(378,618,q),
(284,573,o),
(193,413,o),
(193,309,qs),
(193,106,ls),
(193,-12,o),
(123,-171,o),
(39,-202,q),
(95,-360,l),
(289,-305,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
8 1 1 0 1 76 16 15 2 0 74 1 1 1 73 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 25 24 23 22 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(431,1475,l),
(572,1475,l),
(572,1691,l),
(139,1691,l),
(139,-336,l),
(572,-336,l),
(572,-120,l),
(431,-120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 1 0 2 3 1 2 103 4 1 3 0 0 3 87 4 1 3 3 0 95 0 0 3 0 79 0 0 0 7 0 7 17 17 17 5 8 25 
CALL[ ]	/* CallFunction */";
};
width = 596;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(21,1475,l),
(164,1475,l),
(164,-120,l),
(21,-120,l),
(21,-336,l),
(455,-336,l),
(455,1691,l),
(21,1691,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
4 1 3 0 2 1 3 2 103 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 0 0 0 7 0 7 17 17 17 5 8 25 
CALL[ ]	/* CallFunction */";
};
width = 579;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(284,915,l),
(4,525,l),
(4,506,l),
(284,116,l),
(471,116,l),
(231,515,l),
(471,915,l)
);
},
{
closed = 1;
nodes = (
(679,915,l),
(399,525,l),
(399,506,l),
(679,116,l),
(866,116,l),
(626,515,l),
(866,915,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
10 3 2 0 1 1 76 3 1 1 0 0 1 87 3 1 1 1 0 95 2 1 0 1 0 79 19 18 19 17 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 953;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,950,l),
(64,950,l),
(303,550,l),
(64,151,l),
(251,151,l),
(531,541,l),
(531,560,l)
);
},
{
closed = 1;
nodes = (
(657,950,l),
(470,950,l),
(709,550,l),
(470,151,l),
(657,151,l),
(937,541,l),
(937,560,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
10 3 2 0 1 1 76 3 1 1 0 0 1 87 3 1 1 1 0 95 2 1 0 1 0 79 18 19 18 17 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 973;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,1560,l),
(139,1032,l),
(268,1032,l),
(355,1305,l),
(355,1560,l)
);
},
{
closed = 1;
nodes = (
(476,1560,l),
(476,1032,l),
(605,1032,l),
(692,1305,l),
(692,1560,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
5 0 2 0 1 1 76 2 1 0 0 1 95 3 1 1 1 33 0 78 17 18 17 17 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 786;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,1560,l),
(139,1032,l),
(268,1032,l),
(355,1305,l),
(355,1560,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 1 0 1 1 76 0 0 0 1 95 0 1 1 33 0 78 17 17 2 8 24 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,0,l),
(420,0,l),
(420,256,l),
(129,256,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 32 0 78 0 0 0 3 0 3 17 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = period;
unicode = 46;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(400,-78,o),
(400,39,qs),
(401,243,l),
(139,243,l),
(139,25,ls),
(139,-67,o),
(97,-216,o),
(58,-286,q),
(202,-364,l),
(285,-291,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
1 1 0 73 0 0 0 118 21 1 8 23 
CALL[ ]	/* CallFunction */";
};
width = 503;
}
);
note = comma;
unicode = 44;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,825,l),
(382,825,l),
(382,1081,l),
(91,1081,l)
);
},
{
closed = 1;
nodes = (
(91,0,l),
(382,0,l),
(382,256,l),
(91,256,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 0 1 95 4 1 1 1 34 77 5 1 3 3 2 95 0 2 2 32 2 78 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(370,-78,o),
(370,39,qs),
(371,243,l),
(109,243,l),
(109,25,ls),
(109,-67,o),
(67,-216,o),
(28,-286,q),
(172,-364,l),
(255,-291,o)
);
},
{
closed = 1;
nodes = (
(90,825,l),
(381,825,l),
(381,1081,l),
(90,1081,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
1 1 0 73 0 0 1 0 134 0 1 1 2 95 3 1 2 2 34 1 78 10 10 10 13 10 13 21 21 4 8 24 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,502,l),
(411,502,l),
(411,1456,l),
(119,1456,l)
);
},
{
closed = 1;
nodes = (
(119,0,l),
(411,0,l),
(411,256,l),
(119,256,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 0 1 95 4 1 1 1 31 77 5 1 3 3 2 95 0 2 2 32 2 78 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(638,547,o),
(677,606,o),
(715,638,qs),
(792,703,o),
(909,835,o),
(976,983,o),
(976,1070,qs),
(976,1258,o),
(725,1477,o),
(502,1477,qs),
(365,1477,o),
(156,1386,o),
(98,1300,qs),
(41,1216,o),
(41,1099,qs),
(41,1091,l),
(44,1085,l),
(327,1085,l),
(328,1165,o),
(431,1245,o),
(503,1245,qs),
(589,1245,o),
(684,1148,o),
(684,1062,qs),
(684,1011,o),
(648,915,o),
(580,825,o),
(528,783,qs),
(468,736,o),
(392,662,o),
(351,586,o),
(333,487,o),
(333,414,q),
(625,414,l),
(625,470,o)
);
},
{
closed = 1;
nodes = (
(333,0,l),
(625,0,l),
(625,256,l),
(333,256,l)
);
}
);
width = 986;
}
);
note = question;
unicode = 63;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(829,1223,l),
(538,1103,l),
(558,1456,l),
(370,1456,l),
(388,1109,l),
(91,1232,l),
(34,1055,l),
(336,966,l),
(128,694,l),
(280,588,l),
(453,869,l),
(628,579,l),
(779,689,l),
(579,954,l),
(885,1043,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
14 13 12 9 8 7 6 5 4 3 2 1 12 0 73 0 0 0 31 0 78 26 1 8 23 
CALL[ ]	/* CallFunction */";
};
width = 914;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(570,0,l),
(753,0,l),
(825,410,l),
(1080,410,l),
(1080,579,l),
(854,579,l),
(905,869,l),
(1155,869,l),
(1155,1040,l),
(935,1040,l),
(1009,1456,l),
(825,1456,l),
(752,1040,l),
(560,1040,l),
(633,1456,l),
(450,1456,l),
(376,1040,l),
(115,1040,l),
(115,869,l),
(346,869,l),
(295,579,l),
(39,579,l),
(39,410,l),
(266,410,l),
(194,0,l),
(378,0,l),
(450,410,l),
(642,410,l)
);
},
{
closed = 1;
nodes = (
(479,579,l),
(530,869,l),
(722,869,l),
(671,579,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
15 10 2 2 16 13 11 3 1 0 2 1 103 7 1 5 5 31 77 14 9 2 3 3 4 95 8 6 2 4 4 34 77 12 1 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
8 6 2 4 14 9 2 3 2 4 3 104 15 10 2 2 16 13 11 3 1 0 2 1 103 7 1 5 5 31 77 12 1 0 0 32 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
0 0 31 30 29 28 0 27 0 27 26 25 24 23 22 21 20 19 17 17 17 17 17 17 17 17 17 17 8 31 
CALL[ ]	/* CallFunction */";
};
width = 1198;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-23,-125,l),
(246,-125,l),
(847,1456,l),
(578,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 1 0 134 2 1 1 1 31 1 78 0 0 0 3 0 3 17 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = slash;
unicode = 47;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(620,-125,l),
(908,-125,l),
(300,1456,l),
(12,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 1 0 134 2 1 1 1 31 1 78 0 0 0 3 0 3 17 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 854;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = uni17DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,248,qs),
(179,283,o),
(179,303,qs),
(179,326,o),
(190,337,qs),
(202,349,o),
(229,349,q),
(229,192,l),
(214,212,o)
);
},
{
closed = 1;
nodes = (
(121,408,qs),
(86,372,o),
(86,303,qs),
(86,268,o),
(106,222,qs),
(127,176,o),
(167,117,q),
(229,0,l),
(492,0,l),
(492,534,l),
(605,534,l),
(605,676,l),
(492,676,l),
(492,869,l),
(231,1009,l),
(281,1075,l),
(435,997,o),
(481,997,qs),
(547,997,o),
(605,1187,q),
(539,1187,o),
(483,1216,qs),
(313,1303,l),
(96,1025,l),
(96,945,l),
(229,862,l),
(229,676,l),
(66,676,l),
(66,534,l),
(229,534,l),
(229,442,l),
(156,442,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
25 24 16 3 4 3 26 15 14 3 2 4 0 1 7 0 3 76 17 1 3 74 0 3 0 4 2 3 4 105 5 1 2 6 1 1 8 2 1 103 9 1 8 0 0 7 8 0 105 0 7 7 19 7 78 9 9 9 40 9 40 17 17 20 33 22 17 24 17 10 7 30 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17DB;
unicode = 6107;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(826,3,o),
(1041,212,o),
(1041,385,qs),
(1041,504,o),
(946,667,o),
(753,790,o),
(606,848,qs),
(527,879,o),
(436,942,o),
(398,1018,o),
(398,1070,qs),
(398,1152,o),
(483,1251,o),
(569,1251,qs),
(652,1251,o),
(750,1123,o),
(750,1005,q),
(1034,1005,l),
(1037,1010,l),
(1037,1018,ls),
(1037,1205,o),
(939,1324,qs),
(838,1444,o),
(663,1470,q),
(663,1688,l),
(504,1688,l),
(504,1473,l),
(322,1454,o),
(107,1239,o),
(107,1071,qs),
(107,951,o),
(202,785,o),
(395,664,o),
(543,610,qs),
(619,581,o),
(709,517,o),
(749,437,o),
(749,383,qs),
(749,329,o),
(706,248,o),
(622,204,o),
(561,204,qs),
(498,204,o),
(400,255,o),
(343,365,o),
(343,454,q),
(59,454,l),
(57,449,l),
(57,439,ls),
(57,299,o),
(110,204,qs),
(164,104,o),
(360,-4,o),
(484,-17,q),
(484,-214,l),
(643,-214,l),
(643,-16,l)
);
}
);
width = 1107;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1047,812,l),
(688,812,l),
(688,1206,l),
(411,1206,l),
(411,812,l),
(49,812,l),
(49,560,l),
(411,560,l),
(411,146,l),
(688,146,l),
(688,560,l),
(1047,560,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 3 87 4 1 2 6 5 2 1 0 2 1 103 0 3 3 0 95 0 0 3 0 79 0 0 0 11 0 11 17 17 17 17 17 7 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1098;
}
);
note = plus;
unicode = 43;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,763,l),
(1019,763,l),
(1019,992,l),
(123,992,l)
);
},
{
closed = 1;
nodes = (
(123,332,l),
(1019,332,l),
(1019,561,l),
(123,561,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
4 1 1 0 0 3 1 0 103 5 1 3 2 2 3 87 5 1 3 3 2 95 0 2 3 2 79 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23 
CALL[ ]	/* CallFunction */";
};
width = 1123;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,751,l),
(628,562,l),
(689,545,l),
(689,539,l),
(628,526,l),
(104,330,l),
(104,60,l),
(975,427,l),
(975,654,l),
(104,1020,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
9 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 1031;
}
);
note = greater;
unicode = 62;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(343,550,l),
(397,563,l),
(919,757,l),
(919,1029,l),
(58,663,l),
(58,436,l),
(919,69,l),
(919,341,l),
(397,531,l),
(343,544,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 1012;
}
);
note = less;
unicode = 60;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1133,479,o),
(1214,651,o),
(1214,758,q),
(1012,785,l),
(1012,712,o),
(937,608,o),
(884,608,qs),
(843,608,o),
(768,647,o),
(719,692,qs),
(644,758,o),
(493,825,o),
(412,825,qs),
(320,825,o),
(179,726,o),
(100,556,o),
(100,448,q),
(301,422,l),
(301,493,o),
(374,595,o),
(429,595,qs),
(470,595,o),
(545,555,o),
(595,511,qs),
(673,441,o),
(816,378,o),
(896,378,qs),
(990,378,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 52 values pushed */
24 23 2 3 2 10 9 2 0 1 2 76 0 3 1 0 3 89 0 2 0 1 0 2 1 105 0 3 3 0 97 4 1 0 3 0 81 1 0 21 19 15 13 7 5 0 27 1 27 5 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1323;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,1176,l),
(459,1142,l),
(624,729,l),
(855,729,l),
(556,1456,l),
(344,1456,l),
(45,729,l),
(276,729,l),
(438,1142,l),
(445,1176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
8 1 0 1 1 76 0 1 0 1 133 2 1 0 0 118 17 17 17 3 8 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 884;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1304,58,o),
(1379,194,o),
(1379,280,qs),
(1379,357,ls),
(1379,443,o),
(1303,579,o),
(1162,657,o),
(1062,657,qs),
(963,657,o),
(820,578,o),
(745,442,o),
(745,357,qs),
(745,280,ls),
(745,195,o),
(821,59,o),
(964,-20,o),
(1064,-20,qs),
(1164,-20,o)
);
},
{
closed = 1;
nodes = (
(939,223,o),
(939,280,qs),
(939,357,ls),
(939,414,o),
(1002,495,o),
(1062,495,qs),
(1121,495,o),
(1185,414,o),
(1185,357,qs),
(1185,280,ls),
(1185,218,o),
(1129,142,o),
(1064,142,qs),
(1008,142,o)
);
},
{
closed = 1;
nodes = (
(607,878,o),
(682,1013,o),
(682,1099,qs),
(682,1176,ls),
(682,1263,o),
(607,1399,o),
(466,1477,o),
(365,1477,qs),
(266,1477,o),
(124,1398,o),
(49,1262,o),
(49,1176,qs),
(49,1099,ls),
(49,1013,o),
(125,878,o),
(268,800,o),
(367,800,qs),
(467,800,o)
);
},
{
closed = 1;
nodes = (
(243,1041,o),
(243,1099,qs),
(243,1176,ls),
(243,1234,o),
(306,1315,o),
(365,1315,qs),
(424,1315,o),
(489,1234,o),
(489,1176,qs),
(489,1099,ls),
(489,1041,o),
(425,962,o),
(367,962,qs),
(307,962,o)
);
},
{
closed = 1;
nodes = (
(427,109,l),
(1138,1247,l),
(996,1322,l),
(285,184,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
65 1 6 7 67 1 2 3 66 1 0 2 3 76 11 1 6 10 1 4 1 6 4 105 0 1 0 3 2 1 3 105 0 7 7 5 97 0 5 5 37 77 9 1 2 2 0 97 8 1 0 0 38 0 78 51 50 33 32 19 18 1 0 58 56 50 63 51 63 42 40 32 49 33 49 26 24 18 31 19 31 10 8 0 17 1 17 12 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1429;
}
);
note = percent;
unicode = 37;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1181,-406,o),
(1248,-364,q),
(1210,-217,l),
(1145,-247,o),
(964,-287,o),
(879,-287,qs),
(675,-287,o),
(392,-101,o),
(322,70,qs),
(262,216,o),
(262,410,qs),
(262,443,o),
(264,478,qs),
(274,717,o),
(444,1070,o),
(742,1262,o),
(944,1262,qs),
(1261,1262,o),
(1415,1066,qs),
(1554,889,o),
(1554,586,qs),
(1554,555,o),
(1552,522,qs),
(1544,349,o),
(1408,128,o),
(1304,128,qs),
(1274,128,o),
(1232,158,o),
(1224,194,qs),
(1218,218,o),
(1218,255,qs),
(1218,273,o),
(1219,293,qs),
(1270,866,l),
(1268,870,l),
(1181,926,o),
(1040,976,o),
(947,976,qs),
(812,976,o),
(623,838,o),
(512,590,o),
(496,424,qs),
(492,382,o),
(492,343,qs),
(492,197,o),
(552,102,qs),
(627,-18,o),
(768,-18,qs),
(943,-18,o),
(1031,146,q),
(1055,67,o),
(1174,-21,o),
(1266,-21,qs),
(1414,-21,o),
(1618,126,o),
(1725,373,o),
(1731,522,qs),
(1732,552,o),
(1732,581,qs),
(1732,820,o),
(1652,999,qs),
(1562,1199,o),
(1204,1418,o),
(948,1418,qs),
(689,1418,o),
(301,1186,o),
(79,763,o),
(67,478,qs),
(66,447,o),
(66,418,qs),
(66,167,o),
(149,-19,qs),
(241,-228,o),
(611,-453,o),
(875,-453,qs),
(974,-453,o)
);
},
{
closed = 1;
nodes = (
(741,224,qs),
(718,272,o),
(718,356,qs),
(718,384,o),
(721,416,qs),
(739,611,o),
(855,804,o),
(965,804,qs),
(991,804,o),
(1038,794,o),
(1060,785,q),
(1019,321,ls),
(1017,305,o),
(1016,287,o),
(1015,281,q),
(979,211,o),
(890,158,o),
(840,158,qs),
(770,158,o)
);
}
);
width = 1806;
}
);
note = at;
unicode = 64;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(804,34,o),
(889,89,q),
(966,0,l),
(1290,0,l),
(1292,5,l),
(1084,249,l),
(1154,339,o),
(1222,571,o),
(1222,709,q),
(1004,709,l),
(1004,631,o),
(964,491,o),
(928,431,q),
(652,753,l),
(745,819,ls),
(830,880,o),
(928,1042,o),
(928,1140,qs),
(928,1234,o),
(837,1386,o),
(676,1477,o),
(570,1477,qs),
(450,1477,o),
(271,1383,o),
(173,1213,o),
(173,1097,qs),
(173,1018,o),
(240,866,o),
(308,774,q),
(303,771,o),
(292,763,o),
(287,759,qs),
(165,672,o),
(45,505,o),
(45,392,qs),
(45,269,o),
(162,83,o),
(376,-21,o),
(521,-21,qs),
(624,-21,o)
);
},
{
closed = 1;
nodes = (
(337,318,o),
(337,407,qs),
(337,453,o),
(374,544,o),
(425,592,q),
(444,605,l),
(744,257,l),
(695,230,o),
(589,203,o),
(536,203,qs),
(447,203,o)
);
},
{
closed = 1;
nodes = (
(434,1057,o),
(434,1100,qs),
(434,1165,o),
(504,1252,o),
(569,1252,qs),
(628,1252,o),
(701,1174,o),
(701,1124,qs),
(701,1079,o),
(662,1003,o),
(606,967,qs),
(520,911,l),
(477,966,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
25 1 2 5 44 43 33 26 4 4 2 37 1 0 4 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
25 1 2 5 44 43 33 26 4 4 2 37 1 3 4 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 5 1 97 0 1 1 37 77 0 2 2 0 97 3 6 2 0 0 38 77 7 1 4 4 0 97 3 6 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 1 97 0 1 1 37 77 0 2 2 3 95 0 3 3 32 77 7 1 4 4 0 97 6 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
41 40 1 0 59 57 40 50 41 50 36 34 30 29 18 16 0 39 1 39 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1278;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,-270,l),
(307,-270,l),
(307,1456,l),
(132,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 2 1 1 1 31 0 78 0 0 0 3 0 3 17 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = bar;
unicode = 124;
},
{
glyphname = uni17B7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-895,1536,qs),
(-229,1536,l),
(-229,1659,l),
(-334,1746,ls),
(-440,1832,o),
(-534,1872,qs),
(-630,1912,o),
(-758,1912,qs),
(-1054,1912,o),
(-1054,1659,qs),
(-1054,1536,o)
);
},
{
closed = 1;
nodes = (
(-590,1729,qs),
(-513,1706,o),
(-450,1659,q),
(-845,1659,l),
(-845,1706,o),
(-818,1729,qs),
(-791,1752,o),
(-738,1752,qs),
(-667,1752,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 43 values pushed */
7 1 3 1 75 0 0 4 1 2 3 0 2 105 0 3 1 1 3 87 0 3 3 1 95 0 1 3 1 79 12 11 16 15 11 19 12 19 37 33 5 7 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17B7;
unicode = 6071;
},
{
glyphname = uni17B7_17CD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-147,1730,qs),
(-147,1759,o),
(-227,1759,qs),
(-266,1759,o),
(-266,1730,qs),
(-266,1715,o),
(-295,1713,q),
(-334,1746,ls),
(-337,1749,o),
(-341,1751,q),
(-343,1765,o),
(-343,1783,qs),
(-343,1818,o),
(-334,1835,qs),
(-324,1852,o),
(-305,1852,qs),
(-256,1852,o),
(-198,1806,q),
(-148,1806,o),
(-120,1816,q),
(-62,1850,o),
(-15,1896,qs),
(31,1942,o),
(66,2001,q),
(75,2010,o),
(75,2023,qs),
(75,2037,o),
(21,2132,o),
(6,2132,q),
(-2,2130,l),
(-34,2063,o),
(-81,2018,qs),
(-126,1973,o),
(-185,1950,q),
(-230,1995,o),
(-305,1995,qs),
(-478,1995,o),
(-515,1863,q),
(-525,1868,o),
(-534,1872,qs),
(-630,1912,o),
(-758,1912,qs),
(-1054,1912,o),
(-1054,1659,qs),
(-1054,1536,o),
(-895,1536,qs),
(-229,1536,l),
(-229,1590,l),
(-147,1627,o)
);
},
{
closed = 1;
nodes = (
(-590,1729,qs),
(-513,1706,o),
(-450,1659,q),
(-845,1659,l),
(-845,1706,o),
(-818,1729,qs),
(-791,1752,o),
(-738,1752,qs),
(-667,1752,o)
);
}
);
width = 0;
}
);
note = uni17B7_17CD;
},
{
glyphname = uni17B8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-590,1729,qs),
(-513,1706,o),
(-450,1659,q),
(-845,1659,l),
(-845,1706,o),
(-818,1729,qs),
(-791,1752,o),
(-738,1752,qs),
(-667,1752,o)
);
},
{
closed = 1;
nodes = (
(-534,1872,qs),
(-630,1912,o),
(-758,1912,qs),
(-1054,1912,o),
(-1054,1659,qs),
(-1054,1536,o),
(-895,1536,qs),
(-229,1536,l),
(-229,1958,l),
(-385,1958,l),
(-385,1785,l),
(-463,1842,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
9 1 0 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 4 1 2 112 0 4 5 1 0 1 4 0 105 0 1 3 3 1 87 0 1 1 3 96 0 3 1 3 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 4 2 133 0 4 5 1 0 1 4 0 105 0 1 3 3 1 87 0 1 1 3 96 0 3 1 3 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 18 16 14 12 11 10 5 4 0 8 1 8 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17B8;
unicode = 6072;
},
{
glyphname = uni17B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-267,1728,qs),
(-229,1767,o),
(-229,1860,qs),
(-229,1954,o),
(-267,1992,qs),
(-305,2031,o),
(-418,2031,qs),
(-531,2031,o),
(-569,1992,qs),
(-599,1962,o),
(-605,1895,q),
(-675,1912,o),
(-758,1912,qs),
(-1054,1912,o),
(-1054,1659,qs),
(-1054,1536,o),
(-895,1536,qs),
(-229,1536,l),
(-229,1659,l),
(-291,1711,l),
(-277,1718,o)
);
},
{
closed = 1;
nodes = (
(-590,1729,qs),
(-513,1706,o),
(-450,1659,q),
(-845,1659,l),
(-845,1706,o),
(-818,1729,qs),
(-791,1752,o),
(-738,1752,qs),
(-667,1752,o)
);
},
{
closed = 1;
nodes = (
(-454,1913,qs),
(-437,1930,o),
(-418,1930,qs),
(-399,1930,o),
(-382,1913,qs),
(-364,1895,o),
(-364,1860,qs),
(-364,1825,o),
(-382,1808,qs),
(-399,1791,o),
(-418,1791,qs),
(-437,1791,o),
(-454,1808,qs),
(-472,1825,o),
(-472,1860,qs),
(-472,1895,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 15 values pushed */
9 1 5 1 0 1 4 3 2 76 1 1 4 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 5 1 3 4 5 114 0 2 0 6 1 2 6 105 0 1 7 1 3 4 1 3 105 0 4 0 0 4 87 0 4 4 0 96 0 0 4 0 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 5 1 3 1 5 3 128 0 2 0 6 1 2 6 105 0 1 7 1 3 4 1 3 105 0 4 0 0 4 87 0 4 4 0 96 0 0 4 0 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
22 21 43 41 35 33 26 25 21 29 22 29 36 34 34 8 7 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17B9;
unicode = 6073;
},
{
glyphname = uni17BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-590,1729,qs),
(-513,1706,o),
(-450,1659,q),
(-845,1659,l),
(-845,1706,o),
(-818,1729,qs),
(-791,1752,o),
(-738,1752,qs),
(-667,1752,o)
);
},
{
closed = 1;
nodes = (
(-758,1912,qs),
(-1054,1912,o),
(-1054,1659,qs),
(-1054,1536,o),
(-895,1536,qs),
(-229,1536,l),
(-229,1958,l),
(-385,1958,l),
(-385,1785,l),
(-430,1818,o),
(-472,1841,q),
(-472,2014,l),
(-609,2014,l),
(-609,1896,l),
(-677,1912,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 8 values pushed */
14 12 9 3 0 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 2 133 0 3 5 1 3 112 0 5 6 1 0 1 5 0 105 0 1 4 4 1 87 0 1 1 4 96 0 4 1 4 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 2 133 0 3 5 3 133 0 5 6 1 0 1 5 0 105 0 1 4 4 1 87 0 1 1 4 96 0 4 1 4 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 23 21 19 17 16 15 11 10 5 4 0 8 1 8 7 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17BA;
unicode = 6074;
},
{
glyphname = uni17BB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-383,-100,qs),
(-538,-100,o),
(-538,-223,q),
(-515,-223,o),
(-504,-234,qs),
(-491,-246,o),
(-491,-269,qs),
(-491,-658,l),
(-229,-658,l),
(-229,-223,ls),
(-229,-100,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 0 134 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 33 20 17 3 7 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17BB;
unicode = 6075;
},
{
glyphname = uni17BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-884,-193,q),
(-837,-193,o),
(-837,-211,qs),
(-837,-239,o),
(-885,-273,qs),
(-932,-307,o),
(-1040,-371,o),
(-1040,-441,qs),
(-1040,-507,o),
(-910,-658,o),
(-779,-658,qs),
(-590,-658,o),
(-355,-400,o),
(-297,-253,qs),
(-264,-169,o),
(-251,-157,qs),
(-238,-144,o),
(-238,-123,qs),
(-238,-100,o),
(-351,-100,qs),
(-426,-100,o),
(-461,-132,qs),
(-497,-165,o),
(-523,-231,q),
(-575,-344,o),
(-718,-508,o),
(-779,-510,qs),
(-800,-510,o),
(-820,-501,o),
(-820,-441,q),
(-762,-388,o),
(-689,-313,o),
(-670,-289,qs),
(-634,-240,o),
(-634,-195,qs),
(-634,-100,o),
(-729,-100,qs),
(-884,-100,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
36 34 7 3 1 0 1 76 2 4 2 0 1 0 133 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 1 0 27 25 18 16 11 9 0 37 1 37 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17BC;
unicode = 6076;
},
{
glyphname = uni17BD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-795,-193,q),
(-748,-193,o),
(-748,-211,qs),
(-748,-247,o),
(-865,-351,o),
(-961,-379,q),
(-961,-472,ls),
(-961,-582,o),
(-854,-658,o),
(-737,-658,q),
(-644,-549,l),
(-592,-658,l),
(-429,-639,o),
(-352,-494,q),
(-276,-389,o),
(-238,-193,qs),
(-229,-147,o),
(-229,-123,qs),
(-230,-100,o),
(-326,-100,qs),
(-382,-100,o),
(-405,-123,qs),
(-430,-146,o),
(-440,-194,qs),
(-473,-337,o),
(-507,-418,q),
(-541,-480,o),
(-560,-499,q),
(-620,-426,l),
(-724,-499,l),
(-747,-499,o),
(-759,-482,qs),
(-771,-465,o),
(-771,-431,q),
(-729,-420,o),
(-632,-331,o),
(-576,-241,o),
(-576,-193,qs),
(-576,-100,o),
(-670,-100,qs),
(-795,-100,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 61 values pushed */
39 37 34 11 6 5 1 0 29 1 3 1 2 76 12 1 1 1 75 28 1 3 73 2 4 2 0 1 0 133 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 1 0 31 30 21 19 10 9 0 40 1 40 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17BD;
unicode = 6077;
},
{
glyphname = uni17BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-590,1729,qs),
(-513,1706,o),
(-450,1659,q),
(-845,1659,l),
(-845,1706,o),
(-818,1729,qs),
(-791,1752,o),
(-738,1752,qs),
(-667,1752,o)
);
},
{
closed = 1;
nodes = (
(-534,1872,qs),
(-630,1912,o),
(-758,1912,qs),
(-1054,1912,o),
(-1054,1659,qs),
(-1054,1536,o),
(-895,1536,qs),
(-229,1536,l),
(-229,1958,l),
(-385,1958,l),
(-385,1785,l),
(-463,1842,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
9 1 0 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 4 1 2 112 0 4 5 1 0 1 4 0 105 0 1 3 3 1 87 0 1 1 3 96 0 3 1 3 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 4 2 133 0 4 5 1 0 1 4 0 105 0 1 3 3 1 87 0 1 1 3 96 0 3 1 3 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 18 16 14 12 11 10 5 4 0 8 1 8 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17BE;
unicode = 6078;
},
{
glyphname = uni17C6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-657,1769,qs),
(-634,1792,o),
(-608,1792,qs),
(-581,1792,o),
(-558,1769,qs),
(-534,1745,o),
(-534,1699,qs),
(-534,1652,o),
(-558,1629,qs),
(-581,1606,o),
(-608,1606,qs),
(-634,1606,o),
(-657,1629,qs),
(-681,1652,o),
(-681,1699,qs),
(-681,1745,o)
);
},
{
closed = 1;
nodes = (
(-400,1876,qs),
(-452,1928,o),
(-608,1928,qs),
(-763,1928,o),
(-815,1876,qs),
(-867,1824,o),
(-867,1699,qs),
(-867,1574,o),
(-815,1522,qs),
(-763,1469,o),
(-608,1469,qs),
(-452,1469,o),
(-400,1522,qs),
(-348,1574,o),
(-348,1699,qs),
(-348,1824,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 3 0 1 0 3 1 105 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 38 38 38 35 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17C6;
unicode = 6086;
},
{
glyphname = uni17C9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-898,1925,l),
(-896,1536,l),
(-788,1489,l),
(-682,1536,l),
(-682,1925,l)
);
},
{
closed = 1;
nodes = (
(-530,1925,l),
(-529,1536,l),
(-422,1489,l),
(-314,1536,l),
(-314,1925,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
7 6 5 2 1 0 6 0 73 1 1 0 0 118 20 19 2 7 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17C9;
unicode = 6089;
},
{
glyphname = uni17CA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-232,1357,qs),
(-157,1357,o),
(-104,1502,q),
(-157,1502,ls),
(-204,1502,o),
(-245,1523,qs),
(-430,1618,l),
(-517,1618,l),
(-661,1513,l),
(-860,1618,l),
(-957,1618,l),
(-1274,1461,l),
(-1274,1417,l),
(-1171,1342,l),
(-1140,1322,o),
(-1049,1322,qs),
(-1047,1322,ls),
(-1015,1322,o),
(-967,1384,q),
(-1079,1451,l),
(-1004,1489,l),
(-774,1366,l),
(-694,1366,l),
(-567,1467,l),
(-400,1389,ls),
(-337,1357,o)
);
}
);
width = 0;
}
);
note = uni17CA;
unicode = 6090;
},
{
glyphname = uni17CB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-721,1922,l),
(-721,1555,l),
(-601,1489,l),
(-480,1555,l),
(-480,1922,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
2 1 0 3 0 73 0 0 0 118 19 1 7 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17CB;
unicode = 6091;
},
{
glyphname = uni17CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-721,1706,qs),
(-647,1706,o),
(-589,1670,qs),
(-531,1636,o),
(-469,1566,q),
(-422,1519,o),
(-316,1519,qs),
(-248,1519,o),
(-202,1663,q),
(-375,1663,o),
(-398,1686,qs),
(-422,1709,ls),
(-491,1779,o),
(-561,1813,qs),
(-631,1849,o),
(-721,1849,qs),
(-1027,1849,o),
(-1027,1619,qs),
(-1027,1573,o),
(-992,1549,qs),
(-957,1526,o),
(-837,1526,qs),
(-791,1526,o),
(-791,1479,q),
(-648,1479,l),
(-648,1545,ls),
(-648,1579,o),
(-683,1614,qs),
(-718,1649,o),
(-797,1649,q),
(-797,1706,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 6 0 3 6 105 4 1 0 5 1 2 1 0 2 105 4 1 0 0 1 95 0 1 0 1 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 3 0 6 4 3 6 105 0 0 2 1 0 89 0 4 5 1 2 1 4 2 105 0 0 0 1 95 0 1 0 1 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 33 21 36 33 20 16 7 7 29 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17CC;
unicode = 6092;
},
{
glyphname = uni17CD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-719,1705,qs),
(-707,1722,o),
(-684,1722,qs),
(-625,1722,o),
(-556,1676,q),
(-495,1676,o),
(-461,1686,q),
(-391,1720,o),
(-335,1766,qs),
(-279,1812,o),
(-237,1871,q),
(-226,1880,o),
(-226,1893,qs),
(-226,1907,o),
(-291,2002,o),
(-309,2002,q),
(-319,2000,l),
(-358,1933,o),
(-414,1888,qs),
(-469,1843,o),
(-540,1820,q),
(-594,1865,o),
(-684,1865,qs),
(-950,1865,o),
(-950,1652,qs),
(-950,1439,o),
(-737,1439,qs),
(-494,1439,o),
(-494,1600,qs),
(-494,1629,o),
(-591,1629,qs),
(-637,1629,o),
(-637,1600,qs),
(-637,1583,o),
(-684,1583,qs),
(-707,1583,o),
(-719,1601,qs),
(-730,1618,o),
(-730,1653,qs),
(-730,1688,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 56 values pushed */
18 1 5 3 1 76 0 4 5 1 5 4 1 128 0 0 1 2 1 0 114 0 3 0 5 4 3 5 105 0 1 0 2 1 89 0 1 1 2 97 0 2 1 2 81 37 35 34 33 34 34 34 35 6 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17CD;
unicode = 6093;
},
{
glyphname = uni17CE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-514,1743,l),
(-514,1882,l),
(-707,1882,l),
(-707,1743,l),
(-847,1743,l),
(-847,1609,l),
(-707,1609,l),
(-707,1470,l),
(-514,1470,l),
(-514,1609,l),
(-375,1609,l),
(-375,1743,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 1 4 87 5 1 3 2 1 0 1 3 0 103 0 4 4 1 95 0 1 4 1 79 17 17 17 17 17 16 6 7 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17CE;
unicode = 6094;
},
{
glyphname = uni17CF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-299,1580,qs),
(-299,1701,o),
(-490,1701,qs),
(-525,1701,o),
(-525,1649,qs),
(-525,1597,o),
(-507,1597,qs),
(-464,1597,o),
(-464,1580,qs),
(-464,1551,o),
(-488,1551,qs),
(-515,1551,o),
(-611,1621,q),
(-648,1568,o),
(-685,1551,q),
(-705,1565,o),
(-732,1590,o),
(-750,1615,o),
(-762,1642,o),
(-768,1658,q),
(-677,1738,o),
(-584,1738,qs),
(-497,1738,o),
(-488,1784,q),
(-463,1818,o),
(-351,1847,o),
(-301,1847,qs),
(-255,1847,o),
(-255,1916,qs),
(-255,1985,o),
(-302,1985,qs),
(-395,1985,o),
(-534,1916,o),
(-581,1861,q),
(-827,1831,o),
(-930,1669,q),
(-895,1474,o),
(-747,1408,q),
(-649,1408,o),
(-612,1471,q),
(-566,1408,o),
(-488,1408,qs),
(-299,1408,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
37 33 29 22 6 5 5 6 2 1 0 5 2 76 27 1 5 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 3 6 3 4 6 128 0 6 5 5 6 112 0 2 0 3 4 2 3 105 0 5 0 0 5 89 0 5 5 0 98 1 7 2 0 5 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 6 3 4 6 128 0 6 5 3 6 5 126 0 2 0 3 4 2 3 105 0 5 0 0 5 89 0 5 5 0 98 1 7 2 0 5 0 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 40 38 32 30 21 19 16 14 12 10 4 3 0 42 1 42 8 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17CF;
unicode = 6095;
},
{
glyphname = uni17D0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-887,1665,qs),
(-887,1429,o),
(-554,1429,qs),
(-135,1429,o),
(-135,1770,qs),
(-135,2005,o),
(-355,2005,qs),
(-402,2005,o),
(-402,1944,qs),
(-402,1882,o),
(-355,1882,qs),
(-308,1882,o),
(-308,1770,qs),
(-308,1671,o),
(-390,1622,qs),
(-471,1573,o),
(-554,1573,qs),
(-694,1573,o),
(-703,1665,q),
(-694,1618,o),
(-624,1618,qs),
(-534,1618,o),
(-534,1688,qs),
(-534,1808,o),
(-677,1808,qs),
(-887,1808,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 58 values pushed */
6 1 1 0 1 76 0 4 0 3 0 4 3 105 6 1 0 0 1 2 0 1 105 0 2 5 5 2 89 0 2 2 5 97 0 5 2 5 81 1 0 23 21 19 17 15 13 9 7 5 3 0 25 1 25 7 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D0;
unicode = 6096;
},
{
glyphname = uni17D1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1163,1489,l),
(-280,1489,l),
(-280,1583,l),
(-1163,1583,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 3 0 3 17 3 7 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D1;
unicode = 6097;
},
{
glyphname = uni17D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-791,-326,l),
(-791,-419,l),
(-651,-419,l),
(-651,-559,l),
(-558,-559,l),
(-558,-419,l),
(-419,-419,l),
(-419,-326,l),
(-558,-326,l),
(-558,-186,l),
(-651,-186,l),
(-651,-326,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 3 0 87 5 1 1 4 1 2 3 1 2 103 0 0 0 3 95 0 3 0 3 79 17 17 17 17 17 16 6 7 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D2;
unicode = 6098;
},
{
glyphname = uni17D2_1780;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-508,-282,qs),
(-508,-673,l),
(-288,-673,l),
(-288,-282,ls),
(-288,-93,o),
(-720,-93,qs),
(-1153,-93,o),
(-1153,-281,qs),
(-1153,-673,l),
(-933,-673,l),
(-933,-282,ls),
(-933,-202,o),
(-720,-202,qs),
(-508,-202,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 1 0 1 134 0 2 0 0 2 89 0 2 2 0 97 4 1 0 2 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 0 1 134 4 1 0 0 2 97 0 2 2 18 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 11 10 8 6 4 3 0 13 1 13 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1780;
},
{
glyphname = uni17D2_1781;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-295,-442,q),
(-505,-477,l),
(-505,-565,o),
(-697,-565,qs),
(-931,-565,o),
(-931,-493,q),
(-649,-453,ls),
(-295,-407,o),
(-295,-259,qs),
(-295,-94,o),
(-697,-94,qs),
(-1150,-94,o),
(-1150,-228,qs),
(-1150,-317,o),
(-930,-317,q),
(-930,-202,o),
(-697,-202,qs),
(-507,-202,o),
(-507,-255,qs),
(-507,-331,o),
(-651,-359,q),
(-1088,-411,ls),
(-1150,-420,o),
(-1150,-495,qs),
(-1150,-674,o),
(-697,-674,qs),
(-295,-674,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
25 24 20 3 4 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 4 1 2 114 0 3 0 1 2 3 1 105 0 4 4 0 97 5 1 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 4 1 2 114 0 1 1 3 97 0 3 3 18 77 0 4 4 0 97 5 1 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 1 4 1 2 4 128 0 1 1 3 97 0 3 3 18 77 0 4 4 0 97 5 1 0 0 25 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 4 1 2 4 128 0 4 5 1 0 4 0 101 0 1 1 3 97 0 3 3 18 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 23 21 16 14 12 11 10 8 0 26 1 26 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1781;
},
{
glyphname = uni17D2_1782;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-720,-202,qs),
(-508,-202,o),
(-508,-282,qs),
(-508,-673,l),
(-288,-673,l),
(-288,-282,ls),
(-288,-93,o),
(-720,-93,qs),
(-1153,-93,o),
(-1153,-281,qs),
(-1153,-673,l),
(-933,-673,l),
(-933,-655,l),
(-764,-500,o),
(-720,-500,qs),
(-607,-500,o),
(-607,-408,qs),
(-607,-316,o),
(-700,-316,qs),
(-766,-316,o),
(-860,-428,qs),
(-933,-515,l),
(-933,-282,ls),
(-933,-202,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 3 1 1 76 12 1 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 3 134 0 2 0 4 0 2 4 105 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 3 1 3 134 0 0 0 1 3 0 1 105 0 4 4 2 97 0 2 2 18 4 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
34 18 37 34 35 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1782;
},
{
glyphname = uni17D2_1784;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-288,-138,qs),
(-288,-93,l),
(-445,-93,ls),
(-464,-93,o),
(-486,-115,o),
(-489,-138,q),
(-501,-564,o),
(-814,-564,qs),
(-933,-564,o),
(-933,-450,qs),
(-933,-381,o),
(-840,-381,q),
(-840,-272,o),
(-953,-272,qs),
(-1153,-272,o),
(-1153,-450,qs),
(-1153,-673,o),
(-814,-673,qs),
(-300,-673,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 1 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 1 4 133 0 1 0 2 3 1 2 105 0 3 3 0 98 5 1 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 2 3 1 2 105 0 4 4 18 77 0 3 3 0 98 5 1 0 0 25 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 2 3 1 2 105 0 3 5 1 0 3 0 102 0 4 4 18 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 16 14 11 9 7 6 5 3 0 18 1 18 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1784;
},
{
glyphname = uni17D2_1785;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1106,-418,qs),
(-1153,-424,o),
(-1153,-509,qs),
(-1153,-674,o),
(-814,-674,qs),
(-523,-674,o),
(-360,-457,q),
(-270,-457,o),
(-175,-406,o),
(-175,-342,q),
(-243,-376,o),
(-268,-376,qs),
(-302,-376,l),
(-287,-351,o),
(-287,-324,qs),
(-287,-210,o),
(-488,-210,qs),
(-627,-210,o),
(-627,-334,qs),
(-627,-408,o),
(-546,-438,q),
(-684,-565,o),
(-814,-565,qs),
(-933,-565,o),
(-933,-509,q),
(-627,-398,o),
(-627,-138,qs),
(-627,-94,l),
(-721,-94,ls),
(-827,-94,o),
(-827,-138,qs),
(-827,-383,o)
);
},
{
closed = 1;
nodes = (
(-524,-334,qs),
(-524,-306,o),
(-488,-306,qs),
(-454,-306,o),
(-454,-324,qs),
(-454,-336,o),
(-483,-368,q),
(-524,-359,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
21 1 3 6 10 1 4 3 6 1 1 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 2 0 133 0 2 0 6 3 2 6 105 0 3 0 4 1 3 4 105 0 1 1 5 98 0 5 5 25 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 0 6 3 2 6 105 0 3 0 4 1 3 4 105 0 0 0 18 77 0 1 1 5 98 0 5 5 25 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 6 3 2 6 105 0 3 0 4 1 3 4 105 0 1 0 5 1 5 102 0 0 0 18 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 33 19 35 36 36 33 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1785;
},
{
glyphname = uni17D2_1786;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1153,-139,qs),
(-1153,-371,l),
(-1199,-371,o),
(-1223,-393,qs),
(-1246,-415,o),
(-1246,-460,qs),
(-1246,-513,o),
(-1199,-585,q),
(-1153,-674,l),
(-933,-674,l),
(-933,-480,l),
(-907,-480,ls),
(-860,-480,o),
(-674,-674,o),
(-581,-674,qs),
(-288,-674,o),
(-288,-450,qs),
(-288,-94,l),
(-508,-94,l),
(-601,-226,o),
(-601,-295,qs),
(-601,-325,o),
(-572,-361,o),
(-542,-361,qs),
(-508,-361,l),
(-508,-450,ls),
(-508,-565,o),
(-581,-565,qs),
(-627,-565,o),
(-814,-371,o),
(-907,-371,qs),
(-933,-371,l),
(-933,-94,l),
(-1046,-94,ls),
(-1153,-94,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 1 0 3 1 128 8 1 1 0 6 2 1 6 105 4 9 2 0 0 5 97 7 1 5 5 25 77 0 2 2 5 98 7 1 5 5 25 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 0 1 0 3 1 128 8 1 1 0 6 2 1 6 105 4 9 2 0 0 18 77 0 2 2 5 98 7 1 5 5 25 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 1 0 3 1 128 8 1 1 0 6 2 1 6 105 0 2 5 5 2 89 7 1 5 5 0 97 4 9 2 0 0 18 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 32 31 25 24 23 21 20 18 16 15 11 9 7 5 4 2 0 34 1 34 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1786;
},
{
glyphname = uni17D2_1787;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-284,-343,qs),
(-284,-336,l),
(-241,-322,ls),
(-194,-304,o),
(-194,-254,qs),
(-194,-214,o),
(-222,-214,q),
(-292,-233,l),
(-322,-93,o),
(-550,-93,qs),
(-690,-93,o),
(-690,-227,qs),
(-690,-361,o),
(-550,-361,qs),
(-538,-361,o),
(-515,-360,o),
(-504,-359,q),
(-505,-544,o),
(-550,-544,qs),
(-579,-544,o),
(-723,-405,q),
(-862,-544,o),
(-896,-544,qs),
(-942,-544,o),
(-942,-342,qs),
(-942,-202,o),
(-896,-202,qs),
(-849,-202,o),
(-849,-147,qs),
(-849,-93,o),
(-896,-93,qs),
(-1162,-93,o),
(-1162,-342,qs),
(-1162,-673,o),
(-956,-673,qs),
(-854,-673,o),
(-723,-547,q),
(-599,-673,o),
(-492,-673,qs),
(-284,-673,o)
);
},
{
closed = 1;
nodes = (
(-507,-251,q),
(-508,-252,o),
(-518,-252,qs),
(-552,-252,ls),
(-577,-252,o),
(-577,-227,qs),
(-577,-202,o),
(-550,-202,qs),
(-517,-202,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
31 1 10 8 37 1 6 10 18 1 4 6 2 1 0 4 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 3 10 3 8 10 128 7 1 2 12 9 2 3 8 2 3 105 0 10 0 6 4 10 6 105 5 1 4 4 0 97 1 11 2 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 8 3 10 3 8 10 128 0 10 0 6 4 10 6 105 12 9 2 3 3 2 97 7 1 2 2 18 77 5 1 4 4 0 97 1 11 2 0 0 25 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 8 3 10 3 8 10 128 0 10 0 6 4 10 6 105 5 1 4 1 11 2 0 4 0 101 12 9 2 3 3 2 97 7 1 2 2 18 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
41 40 1 0 45 43 40 48 41 48 33 32 30 28 26 22 21 19 17 15 13 11 9 7 5 3 0 39 1 39 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1787;
},
{
glyphname = uni17D2_1789;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-472,-143,qs),
(-595,-143,o),
(-595,-236,q),
(-502,-236,o),
(-502,-329,qs),
(-502,-495,o),
(-573,-495,qs),
(-661,-495,o),
(-902,-190,o),
(-1093,-190,qs),
(-1233,-190,o),
(-1233,-320,qs),
(-1233,-367,l),
(-1193,-303,o),
(-1113,-303,qs),
(-1069,-303,o),
(-826,-609,o),
(-573,-609,qs),
(-282,-609,o),
(-282,-329,qs),
(-282,-143,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 1 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 5 0 4 1 5 4 105 0 2 0 1 3 2 1 105 0 3 3 0 97 0 0 0 20 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 1 3 2 1 105 0 4 4 5 97 0 5 5 18 77 0 3 3 0 97 0 0 0 20 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 5 0 4 1 5 4 105 0 2 0 1 3 2 1 105 0 3 3 0 97 0 0 0 20 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 1 3 2 1 105 0 4 4 5 97 0 5 5 18 77 0 3 3 0 97 0 0 0 20 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 5 0 4 1 5 4 105 0 2 0 1 3 2 1 105 0 3 3 0 97 0 0 0 20 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 4 1 5 4 105 0 2 0 1 3 2 1 105 0 3 0 0 3 89 0 3 3 0 97 0 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
33 18 33 35 33 33 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1789;
},
{
glyphname = uni17D2_178A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-887,-469,qs),
(-887,-502,o),
(-933,-545,q),
(-933,-450,l),
(-887,-450,o)
);
},
{
closed = 1;
nodes = (
(-720,-202,qs),
(-508,-202,o),
(-508,-282,qs),
(-508,-673,l),
(-288,-673,l),
(-288,-282,ls),
(-288,-93,o),
(-720,-93,qs),
(-1153,-93,o),
(-1153,-282,qs),
(-1153,-673,l),
(-933,-673,l),
(-863,-606,ls),
(-794,-539,o),
(-794,-468,qs),
(-794,-414,o),
(-828,-388,qs),
(-863,-361,o),
(-933,-361,q),
(-933,-282,ls),
(-933,-202,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
3 1 0 3 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 4 1 4 0 1 128 3 1 1 1 132 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 4 1 4 0 1 128 3 1 1 1 132 0 4 4 2 97 0 2 2 18 4 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
34 18 34 22 22 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_178A;
},
{
glyphname = uni17D2_178B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-507,-228,q),
(-730,-228,ls),
(-918,-228,o),
(-1070,-250,qs),
(-1152,-262,o),
(-1152,-317,qs),
(-1152,-374,o),
(-1129,-407,qs),
(-970,-635,ls),
(-944,-673,o),
(-865,-673,qs),
(-825,-673,o),
(-790,-638,qs),
(-705,-552,l),
(-498,-673,l),
(-288,-673,o),
(-288,-590,qs),
(-288,-227,ls),
(-288,-93,o),
(-441,-93,qs),
(-554,-93,o),
(-554,-160,qs),
(-554,-217,o)
);
},
{
closed = 1;
nodes = (
(-922,-368,l),
(-836,-347,o),
(-742,-347,qs),
(-508,-347,l),
(-508,-527,l),
(-720,-406,l),
(-830,-527,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
29 28 24 8 4 1 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 3 3 0 112 0 3 0 4 1 3 4 104 2 1 1 1 25 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 4 1 3 4 104 0 0 0 18 77 2 1 1 1 25 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
2 1 1 4 1 134 0 3 0 4 1 3 4 104 0 0 0 18 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 39 35 19 33 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_178B;
},
{
glyphname = uni17D2_178C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-559,-210,l),
(-508,-234,l),
(-508,-271,ls),
(-508,-320,o),
(-632,-353,qs),
(-1091,-462,ls),
(-1153,-478,o),
(-1153,-523,qs),
(-1153,-651,o),
(-907,-651,qs),
(-651,-651,o),
(-508,-557,q),
(-508,-596,ls),
(-508,-635,o),
(-554,-675,q),
(-335,-675,o),
(-311,-655,qs),
(-288,-635,o),
(-288,-596,qs),
(-288,-413,l),
(-508,-445,l),
(-618,-552,o),
(-907,-552,qs),
(-953,-552,o),
(-953,-524,q),
(-591,-429,l),
(-288,-364,o),
(-288,-271,qs),
(-288,-214,l),
(-534,-95,l),
(-720,-185,l),
(-907,-95,l),
(-1153,-214,l),
(-1153,-313,ls),
(-1153,-373,o),
(-1083,-373,qs),
(-933,-373,l),
(-868,-315,o),
(-868,-283,qs),
(-868,-254,o),
(-933,-254,q),
(-933,-225,l),
(-899,-210,l),
(-720,-296,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
43 1 1 0 23 18 2 2 1 31 1 3 2 3 76 42 41 14 13 12 11 10 1 8 0 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
43 1 1 0 23 18 2 2 1 31 1 4 2 3 76 42 41 14 13 12 11 10 1 8 0 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 2 0 112 0 1 2 1 133 0 2 2 3 98 4 1 3 3 25 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 1 0 133 0 1 2 1 133 0 2 2 3 98 4 1 3 3 25 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 0 1 0 133 0 1 2 1 133 0 2 2 4 98 0 4 4 25 77 0 3 3 25 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 133 0 1 2 1 133 0 3 4 3 134 0 2 4 4 2 89 0 2 2 4 98 0 4 2 4 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 22 43 35 18 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_178C;
},
{
glyphname = uni17D2_178E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2392,-584,q),
(-2392,-450,l),
(-2356,-450,ls),
(-2328,-450,o),
(-2328,-486,qs),
(-2328,-521,o)
);
},
{
closed = 1;
nodes = (
(-1441,-524,l),
(-1212,-673,l),
(-949,-673,l),
(-949,-325,l),
(-774,-249,l),
(-491,-355,l),
(-491,-673,l),
(-228,-673,l),
(-228,-272,l),
(-720,-93,l),
(-1212,-271,l),
(-1212,-526,l),
(-1441,-377,l),
(-1670,-526,l),
(-1670,-272,l),
(-2163,-93,l),
(-2655,-271,l),
(-2655,-673,l),
(-2374,-673,l),
(-2281,-584,o),
(-2258,-517,qs),
(-2252,-500,o),
(-2246,-470,o),
(-2246,-455,qs),
(-2246,-441,o),
(-2252,-417,o),
(-2258,-405,qs),
(-2282,-361,o),
(-2328,-361,qs),
(-2392,-361,l),
(-2392,-323,l),
(-2198,-249,l),
(-1933,-356,l),
(-1933,-673,l),
(-1670,-673,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
27 1 0 1 39 28 26 4 4 2 0 2 76 36 35 34 31 30 29 25 24 23 9 8 7 12 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
6 5 4 3 4 2 0 0 2 113 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
6 5 4 3 4 2 0 2 134 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
6 6 6 40 6 40 20 26 25 39 33 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_178E;
},
{
glyphname = uni17D2_178F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-887,-469,qs),
(-887,-502,o),
(-933,-545,q),
(-933,-450,l),
(-887,-450,o)
);
},
{
closed = 1;
nodes = (
(-720,-202,qs),
(-508,-202,o),
(-508,-282,qs),
(-508,-673,l),
(-288,-673,l),
(-288,-282,ls),
(-288,-93,o),
(-720,-93,qs),
(-1153,-93,o),
(-1153,-282,qs),
(-1153,-673,l),
(-933,-673,l),
(-863,-606,ls),
(-794,-539,o),
(-794,-468,qs),
(-794,-414,o),
(-828,-388,qs),
(-863,-361,o),
(-933,-361,q),
(-933,-282,ls),
(-933,-202,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
3 1 0 3 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 4 1 4 0 1 128 3 1 1 1 132 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 4 1 4 0 1 128 3 1 1 1 132 0 4 4 2 97 0 2 2 18 4 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
34 18 34 22 22 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_178F;
},
{
glyphname = uni17D2_1790;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-937,-652,qs),
(-844,-652,o),
(-804,-559,q),
(-943,-559,o),
(-943,-409,qs),
(-943,-206,o),
(-837,-206,qs),
(-681,-206,o),
(-574,-459,qs),
(-490,-652,o),
(-254,-652,qs),
(-192,-652,o),
(-192,-559,q),
(-295,-559,o),
(-362,-404,qs),
(-496,-93,o),
(-837,-93,qs),
(-1163,-93,o),
(-1163,-409,qs),
(-1163,-652,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 3 1 0 3 105 4 1 1 1 2 97 5 1 2 2 25 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 0 97 0 0 0 18 77 4 1 1 1 2 97 5 1 2 2 25 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
4 1 1 5 1 2 1 2 101 0 3 3 0 97 0 0 0 18 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
33 18 34 33 18 33 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1790;
},
{
glyphname = uni17D2_1791;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1106,-418,qs),
(-1153,-432,o),
(-1153,-504,qs),
(-1153,-673,o),
(-768,-673,qs),
(-604,-673,o),
(-508,-535,q),
(-508,-584,ls),
(-508,-628,o),
(-550,-673,q),
(-288,-673,o),
(-288,-584,qs),
(-288,-227,ls),
(-288,-182,o),
(-409,-182,qs),
(-468,-182,o),
(-489,-258,qs),
(-531,-421,o),
(-666,-564,o),
(-768,-564,qs),
(-933,-564,o),
(-933,-507,q),
(-534,-376,o),
(-534,-182,qs),
(-534,-93,o),
(-647,-93,qs),
(-780,-93,o),
(-780,-182,q),
(-734,-182,o),
(-734,-227,qs),
(-734,-301,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
23 8 2 2 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 0 3 1 0 105 0 3 3 4 97 5 1 4 4 25 77 0 2 2 4 97 5 1 4 4 25 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 97 0 1 1 18 77 0 3 3 4 97 5 1 4 4 25 77 0 2 2 4 97 5 1 4 4 25 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 2 4 3 89 0 2 5 1 4 2 4 101 0 0 0 1 97 0 1 1 18 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 19 35 36 33 17 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1791;
},
{
glyphname = uni17D2_1792;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-631,-93,qs),
(-734,-93,o),
(-734,-158,q),
(-687,-158,o),
(-687,-182,q),
(-744,-263,o),
(-848,-325,qs),
(-953,-388,o),
(-1106,-435,q),
(-1153,-458,o),
(-1153,-524,qs),
(-1153,-673,o),
(-871,-673,qs),
(-674,-673,o),
(-674,-514,q),
(-611,-526,ls),
(-544,-539,o),
(-526,-539,qs),
(-288,-539,o),
(-288,-259,qs),
(-288,-93,o),
(-511,-93,qs),
(-534,-93,o),
(-534,-138,qs),
(-534,-182,o),
(-521,-182,qs),
(-508,-182,o),
(-508,-259,qs),
(-508,-421,o),
(-567,-421,qs),
(-600,-421,o),
(-655,-402,qs),
(-704,-385,l),
(-669,-362,o),
(-627,-321,qs),
(-534,-226,o),
(-534,-159,qs),
(-534,-93,o)
);
},
{
closed = 1;
nodes = (
(-787,-436,q),
(-787,-511,ls),
(-787,-564,o),
(-871,-564,qs),
(-933,-564,o),
(-933,-524,q),
(-809,-451,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
4 1 0 1 43 38 22 3 3 0 2 76 32 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
6 1 2 5 1 1 0 2 1 105 0 0 0 3 7 0 3 105 0 7 7 4 97 0 4 4 25 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 3 7 0 3 105 5 1 1 1 2 97 6 1 2 2 18 77 0 7 7 4 97 0 4 4 25 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 0 3 7 0 3 105 0 5 5 2 97 6 1 2 2 18 77 0 1 1 2 97 6 1 2 2 18 77 0 7 7 4 97 0 4 4 25 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 0 0 3 7 0 3 105 0 7 0 4 7 4 101 0 5 5 2 97 6 1 2 2 18 77 0 1 1 2 97 6 1 2 2 18 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 33 24 36 18 34 34 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1792;
},
{
glyphname = uni17D2_1793;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-508,-539,q),
(-508,-673,o),
(-352,-673,qs),
(-196,-673,o),
(-196,-561,qs),
(-196,-420,o),
(-289,-420,q),
(-289,-282,l),
(-149,-282,l),
(-149,-172,l),
(-289,-172,l),
(-289,-93,l),
(-508,-93,l),
(-508,-172,l),
(-814,-172,ls),
(-1153,-172,o),
(-1153,-383,qs),
(-1153,-568,o),
(-818,-568,qs),
(-792,-568,o)
);
},
{
closed = 1;
nodes = (
(-814,-282,qs),
(-508,-282,l),
(-508,-420,l),
(-782,-449,o),
(-814,-449,qs),
(-933,-449,o),
(-933,-383,qs),
(-933,-282,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
18 1 0 7 1 76 24 1 5 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 2 133 3 1 1 8 1 4 5 1 4 103 0 7 7 0 97 9 1 0 0 20 77 0 5 5 6 98 0 6 6 25 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
3 1 1 8 1 4 5 1 4 103 0 2 2 18 77 0 7 7 0 97 9 1 0 0 20 77 0 5 5 6 98 0 6 6 25 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
3 1 1 8 1 4 5 1 4 103 0 7 9 1 0 6 7 0 105 0 2 2 18 77 0 5 5 6 98 0 6 6 25 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 8 1 4 5 1 4 103 0 7 9 1 0 6 7 0 105 0 5 0 6 5 6 102 0 2 2 18 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 27 25 23 21 17 15 13 12 11 10 9 8 7 6 5 3 0 19 1 19 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1793;
},
{
glyphname = uni17D2_1795;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-531,-316,qs),
(-508,-316,l),
(-508,-546,l),
(-720,-397,l),
(-933,-546,l),
(-933,-93,l),
(-1153,-93,l),
(-1153,-673,l),
(-933,-673,l),
(-720,-524,l),
(-508,-673,l),
(-288,-673,l),
(-288,-93,l),
(-508,-93,l),
(-554,-138,ls),
(-601,-182,o),
(-601,-249,qs),
(-601,-316,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
14 13 12 7 4 1 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 0 1 0 4 1 128 3 1 0 4 1 0 87 3 1 0 0 1 95 2 1 1 0 1 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 4 0 1 0 4 1 128 2 1 1 1 0 95 3 1 0 0 18 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 18 17 19 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1795;
},
{
glyphname = uni17D2_1796;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-893,-491,o),
(-896,-499,qs),
(-933,-584,l),
(-933,-450,l),
(-915,-450,ls),
(-890,-450,o),
(-890,-471,qs),
(-890,-477,o)
);
},
{
closed = 1;
nodes = (
(-907,-93,l),
(-1153,-227,l),
(-1153,-673,l),
(-933,-673,l),
(-840,-584,o),
(-819,-521,qs),
(-805,-481,o),
(-805,-456,qs),
(-805,-428,o),
(-817,-405,qs),
(-841,-361,o),
(-887,-361,qs),
(-933,-361,l),
(-933,-239,l),
(-899,-219,l),
(-720,-317,l),
(-539,-219,l),
(-508,-238,l),
(-508,-673,l),
(-288,-673,l),
(-288,-227,l),
(-534,-93,l),
(-720,-194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
4 1 1 0 1 76 30 29 28 16 15 14 13 12 9 9 2 74 3 1 1 0 1 134 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 23 38 24 17 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1796;
},
{
glyphname = uni17D2_1797;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1200,-478,qs),
(-1200,-450,o),
(-1153,-450,q),
(-1153,-545,l),
(-1200,-502,o)
);
},
{
closed = 1;
nodes = (
(-1259,-389,qs),
(-1293,-419,o),
(-1293,-477,qs),
(-1293,-539,o),
(-1223,-606,qs),
(-1153,-673,l),
(-934,-673,l),
(-934,-282,ls),
(-934,-202,o),
(-721,-202,qs),
(-509,-202,o),
(-509,-282,qs),
(-509,-673,l),
(-289,-673,l),
(-289,-282,ls),
(-289,-93,o),
(-721,-93,qs),
(-1153,-93,o),
(-1153,-282,qs),
(-1153,-361,l),
(-1223,-361,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
4 1 2 0 2 134 0 1 0 3 5 1 3 105 6 1 5 0 0 5 89 6 1 5 5 0 97 0 0 5 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 1 2 0 2 134 6 1 5 0 0 2 5 0 105 0 3 3 1 97 0 1 1 18 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
5 5 5 25 5 25 18 34 18 37 17 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1797;
},
{
glyphname = uni17D2_1798;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-508,-495,q),
(-508,-673,o),
(-251,-673,qs),
(-122,-673,o),
(-122,-539,qs),
(-122,-385,o),
(-288,-385,q),
(-288,-93,l),
(-508,-93,l),
(-508,-385,l),
(-820,-422,o),
(-850,-422,qs),
(-933,-422,o),
(-933,-361,qs),
(-933,-272,l),
(-1153,-272,o),
(-1153,-361,qs),
(-1153,-534,o),
(-886,-534,qs),
(-834,-534,o)
);
},
{
closed = 1;
nodes = (
(-261,-564,qs),
(-288,-564,o),
(-288,-495,q),
(-235,-495,o),
(-235,-539,qs),
(-235,-564,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
9 1 4 18 1 6 2 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 1 3 133 0 1 4 2 1 112 0 4 0 6 0 4 6 105 0 2 8 1 0 7 2 0 106 0 7 7 5 98 0 5 5 25 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 3 4 2 1 114 0 4 0 6 0 4 6 105 0 2 8 1 0 7 2 0 106 0 3 3 18 77 0 7 7 5 98 0 5 5 25 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 3 4 3 1 4 128 0 4 0 6 0 4 6 105 0 2 8 1 0 7 2 0 106 0 3 3 18 77 0 7 7 5 98 0 5 5 25 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 3 4 3 1 4 128 0 4 0 6 0 4 6 105 0 2 8 1 0 7 2 0 106 0 7 0 5 7 5 102 0 3 3 18 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 25 23 22 21 17 15 13 12 11 10 8 6 4 3 0 19 1 19 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1798;
},
{
glyphname = uni17D2_179B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1024,-652,qs),
(-884,-652,o),
(-884,-559,qs),
(-884,-465,o),
(-977,-465,q),
(-977,-539,o),
(-1024,-539,qs),
(-1050,-539,o),
(-1050,-465,qs),
(-1050,-206,o),
(-931,-206,qs),
(-870,-206,o),
(-727,-652,o),
(-485,-652,qs),
(-261,-652,o),
(-164,-93,q),
(-383,-93,l),
(-464,-539,o),
(-505,-539,qs),
(-548,-539,o),
(-690,-93,o),
(-931,-93,qs),
(-1270,-93,o),
(-1270,-465,qs),
(-1270,-652,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 6 4 1 1 6 114 2 1 0 0 4 6 0 4 105 5 1 1 1 3 98 7 1 3 3 25 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 4 1 1 6 114 0 4 4 0 97 2 1 0 0 18 77 5 1 1 1 3 98 7 1 3 3 25 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 6 4 1 1 6 114 5 1 1 7 1 3 1 3 102 0 4 4 0 97 2 1 0 0 18 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 6 4 1 4 6 1 128 5 1 1 7 1 3 1 3 102 0 4 4 0 97 2 1 0 0 18 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 6 4 1 1 6 114 5 1 1 7 1 3 1 3 102 0 4 4 0 97 2 1 0 0 18 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 6 4 1 4 6 1 128 5 1 1 7 1 3 1 3 102 0 4 4 0 97 2 1 0 0 18 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 17 34 33 33 17 33 33 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_179B;
},
{
glyphname = uni17D2_179C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-288,-182,qs),
(-288,-93,l),
(-508,-93,l),
(-613,-227,o),
(-945,-400,o),
(-1153,-401,q),
(-1153,-482,ls),
(-1153,-673,o),
(-814,-673,qs),
(-288,-673,o)
);
},
{
closed = 1;
nodes = (
(-814,-570,qs),
(-933,-570,o),
(-933,-502,q),
(-846,-481,o),
(-744,-433,qs),
(-641,-386,o),
(-510,-269,q),
(-521,-570,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 1 2 14 1 3 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 1 2 133 0 1 3 3 1 112 0 3 3 0 98 4 1 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 2 3 3 1 114 0 2 2 18 77 0 3 3 0 98 4 1 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 3 2 1 3 128 0 2 2 18 77 0 3 3 0 98 4 1 0 0 25 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 2 3 2 1 3 128 0 3 4 1 0 3 0 102 0 2 2 18 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 7 6 4 3 0 9 1 9 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_179C;
},
{
glyphname = uni17D2_17A0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1017,-309,ls),
(-973,-336,o),
(-933,-336,qs),
(-894,-336,o),
(-856,-182,q),
(-884,-182,ls),
(-923,-182,o),
(-960,-160,qs),
(-1070,-93,l),
(-1238,-299,l),
(-1238,-346,l),
(-1167,-414,l),
(-1167,-495,ls),
(-1167,-673,o),
(-884,-673,qs),
(-612,-673,o),
(-612,-495,qs),
(-612,-272,ls),
(-612,-182,o),
(-559,-182,qs),
(-486,-182,o),
(-486,-272,qs),
(-486,-673,l),
(-266,-673,l),
(-266,-272,ls),
(-266,-93,o),
(-559,-93,qs),
(-831,-93,o),
(-831,-272,qs),
(-831,-495,ls),
(-831,-584,o),
(-884,-584,qs),
(-947,-584,o),
(-947,-495,qs),
(-947,-394,l),
(-1124,-305,l),
(-1088,-267,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
36 26 2 6 5 25 24 1 3 0 6 2 76 27 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 3 5 1 3 105 0 5 0 6 0 5 6 105 0 0 0 2 97 4 1 2 2 25 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 105 0 3 3 1 97 0 1 1 18 77 0 0 0 2 97 4 1 2 2 25 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 0 6 0 5 6 105 0 0 4 1 2 0 2 101 0 3 3 1 97 0 1 1 18 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
33 39 35 34 18 35 35 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_17A0;
},
{
glyphname = uni17D2_17A2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1093,-667,q),
(-933,-667,l),
(-933,-459,l),
(-508,-459,l),
(-508,-501,l),
(-531,-501,ls),
(-581,-501,o),
(-581,-563,qs),
(-581,-626,o),
(-488,-667,q),
(-288,-667,l),
(-288,-310,l),
(-459,-252,l),
(-422,-210,l),
(-369,-252,o),
(-330,-252,qs),
(-301,-252,o),
(-274,-149,q),
(-320,-149,o),
(-451,-87,q),
(-581,-211,l),
(-581,-294,l),
(-508,-335,l),
(-508,-377,l),
(-933,-377,l),
(-933,-310,l),
(-1064,-252,l),
(-1027,-218,l),
(-974,-252,o),
(-935,-252,qs),
(-906,-252,o),
(-879,-149,q),
(-924,-149,o),
(-1056,-87,q),
(-1206,-211,l),
(-1206,-294,l),
(-1153,-335,l),
(-1153,-501,l),
(-1186,-501,ls),
(-1206,-501,o),
(-1206,-563,qs),
(-1206,-626,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
27 20 13 6 4 2 1 29 19 18 15 5 4 6 3 2 2 76 28 14 2 2 1 75 21 7 2 1 74 7 1 0 8 6 8 0 6 128 9 1 6 6 132 4 1 1 5 1 2 3 1 2 105 0 3 8 8 3 87 0 3 3 8 95 0 8 3 8 79 40 39 17 35 20 33 21 20 33 21 33 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_17A2;
},
{
glyphname = uni17D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-826,1699,qs),
(-791,1722,o),
(-721,1722,qs),
(-651,1722,o),
(-616,1699,qs),
(-582,1676,o),
(-582,1629,qs),
(-582,1583,o),
(-616,1559,qs),
(-651,1536,o),
(-721,1536,qs),
(-791,1536,o),
(-826,1559,qs),
(-861,1583,o),
(-861,1629,qs),
(-861,1676,o)
);
},
{
closed = 1;
nodes = (
(-547,1769,qs),
(-605,1815,o),
(-721,1815,qs),
(-838,1815,o),
(-895,1769,qs),
(-954,1722,o),
(-954,1629,qs),
(-954,1536,o),
(-895,1489,qs),
(-838,1443,o),
(-721,1443,qs),
(-605,1443,o),
(-547,1489,qs),
(-489,1536,o),
(-489,1629,qs),
(-489,1722,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 3 0 1 0 3 1 105 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 38 38 38 35 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D3;
unicode = 6099;
},
{
glyphname = uni17DD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-645,1651,qs),
(-393,1651,o),
(-393,1470,q),
(-199,1470,l),
(-199,1771,o),
(-644,1771,qs),
(-1089,1771,o),
(-1089,1470,q),
(-898,1470,l),
(-898,1651,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 3 3 0 113 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
2 1 0 3 0 134 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
33 17 33 16 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17DD;
unicode = 6109;
},
{
glyphname = uni17B7.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-895,1686,qs),
(-229,1686,l),
(-229,1809,l),
(-334,1896,ls),
(-440,1982,o),
(-534,2022,qs),
(-630,2062,o),
(-758,2062,qs),
(-1054,2062,o),
(-1054,1809,qs),
(-1054,1686,o)
);
},
{
closed = 1;
nodes = (
(-590,1879,qs),
(-513,1856,o),
(-450,1809,q),
(-845,1809,l),
(-845,1856,o),
(-818,1879,qs),
(-791,1902,o),
(-738,1902,qs),
(-667,1902,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
7 1 3 1 75 0 0 4 1 2 3 0 2 105 0 3 1 1 3 87 0 3 3 1 95 0 1 3 1 79 12 11 16 15 11 19 12 19 37 33 5 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17B7.a;
},
{
glyphname = uni17B8.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-590,1879,qs),
(-513,1856,o),
(-450,1809,q),
(-845,1809,l),
(-845,1856,o),
(-818,1879,qs),
(-791,1902,o),
(-738,1902,qs),
(-667,1902,o)
);
},
{
closed = 1;
nodes = (
(-534,2022,qs),
(-630,2062,o),
(-758,2062,qs),
(-1054,2062,o),
(-1054,1809,qs),
(-1054,1686,o),
(-895,1686,qs),
(-229,1686,l),
(-229,2108,l),
(-385,2108,l),
(-385,1935,l),
(-463,1992,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
9 1 0 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 4 1 2 112 0 4 5 1 0 1 4 0 105 0 1 3 3 1 87 0 1 1 3 96 0 3 1 3 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 4 2 133 0 4 5 1 0 1 4 0 105 0 1 3 3 1 87 0 1 1 3 96 0 3 1 3 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 18 16 14 12 11 10 5 4 0 8 1 8 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17B8.a;
},
{
glyphname = uni17B9.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-267,1861,qs),
(-229,1898,o),
(-229,1988,qs),
(-229,2078,o),
(-267,2114,qs),
(-305,2152,o),
(-418,2152,qs),
(-531,2152,o),
(-569,2114,qs),
(-599,2086,o),
(-605,2021,q),
(-675,2038,o),
(-758,2038,qs),
(-1054,2038,o),
(-1054,1794,qs),
(-1054,1676,o),
(-895,1676,qs),
(-229,1676,l),
(-229,1794,l),
(-291,1844,l),
(-277,1851,o)
);
},
{
closed = 1;
nodes = (
(-590,1862,qs),
(-513,1839,o),
(-450,1794,q),
(-845,1794,l),
(-845,1839,o),
(-818,1862,qs),
(-791,1884,o),
(-738,1884,qs),
(-667,1884,o)
);
},
{
closed = 1;
nodes = (
(-454,2039,qs),
(-437,2055,o),
(-418,2055,qs),
(-399,2055,o),
(-382,2039,qs),
(-364,2021,o),
(-364,1988,qs),
(-364,1954,o),
(-382,1938,qs),
(-399,1921,o),
(-418,1921,qs),
(-437,1921,o),
(-454,1938,qs),
(-472,1954,o),
(-472,1988,qs),
(-472,2021,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
9 1 5 1 0 1 4 3 2 76 1 1 4 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 5 1 3 4 5 114 0 2 0 6 1 2 6 105 0 1 7 1 3 4 1 3 105 0 4 0 0 4 87 0 4 4 0 96 0 0 4 0 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 5 1 3 1 5 3 128 0 2 0 6 1 2 6 105 0 1 7 1 3 4 1 3 105 0 4 0 0 4 87 0 4 4 0 96 0 0 4 0 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
22 21 43 41 35 33 26 25 21 29 22 29 36 34 34 8 7 25 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17B9.a;
},
{
glyphname = uni17BA.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-590,1869,qs),
(-513,1846,o),
(-450,1799,q),
(-845,1799,l),
(-845,1846,o),
(-818,1869,qs),
(-791,1892,o),
(-738,1892,qs),
(-667,1892,o)
);
},
{
closed = 1;
nodes = (
(-758,2052,qs),
(-1054,2052,o),
(-1054,1799,qs),
(-1054,1676,o),
(-895,1676,qs),
(-229,1676,l),
(-229,2098,l),
(-385,2098,l),
(-385,1925,l),
(-430,1958,o),
(-472,1981,q),
(-472,2154,l),
(-609,2154,l),
(-609,2036,l),
(-677,2052,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
14 12 9 3 0 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 2 133 0 3 5 1 3 112 0 5 6 1 0 1 5 0 105 0 1 4 4 1 87 0 1 1 4 96 0 4 1 4 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 2 133 0 3 5 3 133 0 5 6 1 0 1 5 0 105 0 1 4 4 1 87 0 1 1 4 96 0 4 1 4 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 23 21 19 17 16 15 11 10 5 4 0 8 1 8 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17BA.a;
},
{
glyphname = uni17C6.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-677,1979,qs),
(-654,2002,o),
(-628,2002,qs),
(-601,2002,o),
(-578,1979,qs),
(-554,1955,o),
(-554,1909,qs),
(-554,1862,o),
(-578,1839,qs),
(-601,1816,o),
(-628,1816,qs),
(-654,1816,o),
(-677,1839,qs),
(-701,1862,o),
(-701,1909,qs),
(-701,1955,o)
);
},
{
closed = 1;
nodes = (
(-420,2086,qs),
(-472,2138,o),
(-628,2138,qs),
(-783,2138,o),
(-835,2086,qs),
(-887,2034,o),
(-887,1909,qs),
(-887,1784,o),
(-835,1732,qs),
(-783,1679,o),
(-628,1679,qs),
(-472,1679,o),
(-420,1732,qs),
(-368,1784,o),
(-368,1909,qs),
(-368,2034,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 3 0 1 0 3 1 105 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 38 38 38 35 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17C6.a;
},
{
glyphname = uni17CE.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-514,1983,l),
(-514,2122,l),
(-707,2122,l),
(-707,1983,l),
(-847,1983,l),
(-847,1849,l),
(-707,1849,l),
(-707,1710,l),
(-514,1710,l),
(-514,1849,l),
(-375,1849,l),
(-375,1983,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 4 3 1 4 87 5 1 3 2 1 0 1 3 0 103 0 4 4 1 95 0 1 4 1 79 17 17 17 17 17 16 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17CE.a;
},
{
glyphname = uni17D0.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-887,1861,qs),
(-887,1659,o),
(-554,1659,qs),
(-135,1659,o),
(-135,1951,qs),
(-135,2152,o),
(-355,2152,qs),
(-402,2152,o),
(-402,2100,qs),
(-402,2047,o),
(-355,2047,qs),
(-308,2047,o),
(-308,1951,qs),
(-308,1866,o),
(-390,1824,qs),
(-471,1782,o),
(-554,1782,qs),
(-694,1782,o),
(-703,1861,q),
(-694,1821,o),
(-624,1821,qs),
(-534,1821,o),
(-534,1881,qs),
(-534,1983,o),
(-677,1983,qs),
(-887,1983,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
6 1 1 0 1 76 0 4 0 3 0 4 3 105 6 1 0 0 1 2 0 1 105 0 2 5 5 2 89 0 2 2 5 97 0 5 2 5 81 1 0 23 21 19 17 15 13 9 7 5 3 0 25 1 25 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D0.a;
},
{
glyphname = uni17BB.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-443,-750,qs),
(-598,-750,o),
(-598,-873,q),
(-575,-873,o),
(-564,-884,qs),
(-551,-896,o),
(-551,-919,qs),
(-551,-1118,l),
(-289,-1118,l),
(-289,-873,ls),
(-289,-750,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 1 0 113 0 2 2 1 97 0 1 1 21 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 0 134 0 2 2 1 97 0 1 1 21 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
33 20 17 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17BB.b;
},
{
glyphname = uni17BC.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-884,-802,q),
(-837,-802,o),
(-837,-814,qs),
(-837,-833,o),
(-885,-857,qs),
(-932,-880,o),
(-1040,-923,o),
(-1040,-971,qs),
(-1040,-1015,o),
(-910,-1118,o),
(-779,-1118,qs),
(-590,-1118,o),
(-355,-943,o),
(-297,-843,qs),
(-264,-786,o),
(-251,-778,qs),
(-238,-769,o),
(-238,-755,qs),
(-238,-739,o),
(-351,-739,qs),
(-426,-739,o),
(-461,-761,qs),
(-497,-783,o),
(-523,-828,q),
(-575,-905,o),
(-718,-1016,o),
(-779,-1017,qs),
(-800,-1017,o),
(-820,-1011,o),
(-820,-971,q),
(-762,-935,o),
(-689,-884,o),
(-670,-867,qs),
(-634,-834,o),
(-634,-804,qs),
(-634,-739,o),
(-729,-739,qs),
(-884,-739,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
7 1 1 4 1 76 2 5 2 0 0 4 1 0 4 105 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 1 0 36 35 27 25 18 16 11 9 0 37 1 37 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17BC.b;
},
{
glyphname = uni17BD.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-805,-797,q),
(-758,-797,o),
(-758,-810,qs),
(-758,-834,o),
(-875,-906,o),
(-971,-925,q),
(-971,-990,ls),
(-971,-1066,o),
(-864,-1118,o),
(-747,-1118,q),
(-654,-1043,l),
(-602,-1118,l),
(-439,-1105,o),
(-362,-1005,q),
(-286,-932,o),
(-248,-797,qs),
(-239,-765,o),
(-239,-749,qs),
(-240,-733,o),
(-336,-733,qs),
(-392,-733,o),
(-415,-749,qs),
(-440,-765,o),
(-450,-798,qs),
(-483,-897,o),
(-517,-952,q),
(-551,-995,o),
(-570,-1008,q),
(-630,-958,l),
(-734,-1008,l),
(-757,-1008,o),
(-769,-997,qs),
(-781,-985,o),
(-781,-961,q),
(-739,-954,o),
(-642,-892,o),
(-586,-830,o),
(-586,-797,qs),
(-586,-733,o),
(-680,-733,qs),
(-805,-733,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
39 37 34 11 6 5 1 0 29 1 3 1 2 76 12 1 1 1 75 28 1 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
2 4 2 0 1 1 0 112 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
2 4 2 0 1 0 133 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 31 30 21 19 10 9 0 40 1 40 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17BD.b;
},
{
glyphname = uni17BB.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-682,0);
ref = uni17BB;
}
);
width = 0;
}
);
note = uni17BB.n;
},
{
glyphname = uni17BC.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-600,0);
ref = uni17BC;
}
);
width = 0;
}
);
note = uni17BC.n;
},
{
glyphname = uni17BD.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-709,0);
ref = uni17BD;
}
);
width = 0;
}
);
note = uni17BD.n;
},
{
glyphname = uni17BB.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-662,0);
ref = uni17BB.b;
}
);
width = 0;
}
);
note = uni17BB.n2;
},
{
glyphname = uni17BC.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-620,0);
ref = uni17BC.b;
}
);
width = 0;
}
);
note = uni17BC.n2;
},
{
glyphname = uni17BD.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-699,0);
ref = uni17BD.b;
}
);
width = 0;
}
);
note = uni17BD.n2;
},
{
glyphname = uni17B7.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-702,1536,qs),
(-99,1536,l),
(-99,1659,l),
(-194,1746,ls),
(-290,1832,o),
(-375,1872,qs),
(-462,1912,o),
(-578,1912,qs),
(-846,1912,o),
(-846,1659,qs),
(-846,1536,o)
);
},
{
closed = 1;
nodes = (
(-426,1729,qs),
(-356,1706,o),
(-299,1659,q),
(-657,1659,l),
(-657,1706,o),
(-632,1729,qs),
(-608,1752,o),
(-560,1752,qs),
(-496,1752,o)
);
}
);
width = 0;
}
);
note = uni17B7.r;
},
{
glyphname = uni17B8.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-433,1729,qs),
(-362,1706,o),
(-303,1659,q),
(-669,1659,l),
(-669,1706,o),
(-644,1729,qs),
(-619,1752,o),
(-570,1752,qs),
(-504,1752,o)
);
},
{
closed = 1;
nodes = (
(-381,1872,qs),
(-470,1912,o),
(-588,1912,qs),
(-862,1912,o),
(-862,1659,qs),
(-862,1536,o),
(-715,1536,qs),
(-99,1536,l),
(-99,1958,l),
(-243,1958,l),
(-243,1785,l),
(-315,1842,o)
);
}
);
width = 0;
}
);
note = uni17B8.r;
},
{
glyphname = uni17B9.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-365,1968,qs),
(-404,1935,o),
(-411,1868,q),
(-497,1908,o),
(-571,1908,qs),
(-704,1908,o),
(-771,1842,qs),
(-837,1775,o),
(-837,1642,qs),
(-837,1536,o),
(-678,1536,qs),
(-92,1536,l),
(-92,1642,l),
(-162,1701,l),
(-129,1719,o),
(-110,1754,qs),
(-93,1789,o),
(-93,1842,qs),
(-93,1922,o),
(-132,1962,qs),
(-173,2002,o),
(-253,2002,qs),
(-325,2002,o)
);
},
{
closed = 1;
nodes = (
(-403,1722,qs),
(-326,1696,o),
(-263,1642,q),
(-678,1642,l),
(-678,1696,o),
(-651,1722,qs),
(-624,1749,o),
(-571,1749,qs),
(-480,1749,o)
);
},
{
closed = 1;
nodes = (
(-212,1883,qs),
(-198,1869,o),
(-198,1842,qs),
(-198,1815,o),
(-212,1802,qs),
(-226,1788,o),
(-253,1788,qs),
(-269,1788,o),
(-280,1793,qs),
(-287,1797,o),
(-292,1801,qs),
(-306,1815,o),
(-306,1841,qs),
(-306,1868,o),
(-292,1882,qs),
(-279,1896,o),
(-253,1896,qs),
(-226,1896,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
19 1 6 5 8 1 4 3 2 76 9 1 4 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 6 5 3 4 6 114 7 1 0 9 1 5 6 0 5 105 0 2 8 1 3 4 2 3 105 0 4 1 1 4 87 0 4 4 1 96 0 1 4 1 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 5 3 5 6 3 128 7 1 0 9 1 5 6 0 5 105 0 2 8 1 3 4 2 3 105 0 4 1 1 4 87 0 4 4 1 96 0 1 4 1 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
33 32 24 23 1 0 43 42 32 49 33 49 28 27 23 31 24 31 18 16 12 10 0 22 1 22 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17B9.r;
},
{
glyphname = uni17BA.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-797,1563,qs),
(-757,1536,o),
(-678,1536,qs),
(-92,1536,l),
(-92,2014,l),
(-198,2014,l),
(-198,1731,l),
(-253,1775,o),
(-305,1810,q),
(-305,2014,l),
(-412,2014,l),
(-412,1869,l),
(-497,1908,o),
(-571,1908,qs),
(-704,1908,o),
(-771,1842,qs),
(-837,1775,o),
(-837,1642,qs),
(-837,1589,o)
);
},
{
closed = 1;
nodes = (
(-403,1722,qs),
(-326,1695,o),
(-263,1642,q),
(-678,1642,l),
(-678,1695,o),
(-651,1722,qs),
(-624,1748,o),
(-571,1748,qs),
(-480,1748,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
9 6 2 4 0 11 1 5 4 2 76 2 1 1 0 1 133 0 0 6 1 4 5 0 4 105 0 5 3 3 5 87 0 5 5 3 96 0 3 5 3 80 20 19 24 23 19 27 20 27 33 20 18 35 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17BA.r;
},
{
glyphname = uni17C6.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-457,1769,qs),
(-434,1792,o),
(-408,1792,qs),
(-381,1792,o),
(-358,1769,qs),
(-334,1745,o),
(-334,1699,qs),
(-334,1652,o),
(-358,1629,qs),
(-381,1606,o),
(-408,1606,qs),
(-434,1606,o),
(-457,1629,qs),
(-481,1652,o),
(-481,1699,qs),
(-481,1745,o)
);
},
{
closed = 1;
nodes = (
(-200,1876,qs),
(-252,1928,o),
(-408,1928,qs),
(-563,1928,o),
(-615,1876,qs),
(-667,1824,o),
(-667,1699,qs),
(-667,1574,o),
(-615,1522,qs),
(-563,1469,o),
(-408,1469,qs),
(-252,1469,o),
(-200,1522,qs),
(-148,1574,o),
(-148,1699,qs),
(-148,1824,o)
);
}
);
width = 0;
}
);
note = uni17C6.r;
},
{
glyphname = uni17C9.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-768,1925,l),
(-766,1536,l),
(-658,1489,l),
(-552,1536,l),
(-552,1925,l)
);
},
{
closed = 1;
nodes = (
(-400,1925,l),
(-399,1536,l),
(-292,1489,l),
(-184,1536,l),
(-184,1925,l)
);
}
);
width = 0;
}
);
note = uni17C9.r;
},
{
glyphname = uni17CD.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-429,1705,qs),
(-417,1722,o),
(-394,1722,qs),
(-335,1722,o),
(-266,1676,q),
(-205,1676,o),
(-171,1686,q),
(-101,1720,o),
(-45,1766,qs),
(11,1812,o),
(53,1871,q),
(64,1880,o),
(64,1893,qs),
(64,1907,o),
(-1,2002,o),
(-19,2002,q),
(-29,2000,l),
(-68,1933,o),
(-124,1888,qs),
(-179,1843,o),
(-250,1820,q),
(-304,1865,o),
(-394,1865,qs),
(-660,1865,o),
(-660,1652,qs),
(-660,1439,o),
(-447,1439,qs),
(-204,1439,o),
(-204,1600,qs),
(-204,1629,o),
(-301,1629,qs),
(-347,1629,o),
(-347,1600,qs),
(-347,1583,o),
(-394,1583,qs),
(-417,1583,o),
(-429,1601,qs),
(-440,1618,o),
(-440,1653,qs),
(-440,1688,o)
);
}
);
width = 0;
}
);
note = uni17CD.r;
},
{
glyphname = uni17D2_1783_17B6;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-691,-259,q),
(-691,-254,ls),
(-691,-227,o),
(-644,-182,q),
(-644,-271,l),
(-668,-271,ls),
(-688,-271,o)
);
},
{
closed = 1;
nodes = (
(316,972,l),
(522,1082,l),
(952,944,l),
(952,0,l),
(1215,0,l),
(1215,1083,l),
(574,1303,l),
(117,1025,l),
(117,935,l),
(230,862,l),
(230,-495,ls),
(230,-564,o),
(140,-564,qs),
(7,-564,o),
(-4,-507,qs),
(-5,-501,o),
(-6,-495,q),
(-6,-394,l),
(-193,-305,l),
(-156,-266,l),
(-76,-310,ls),
(-32,-336,o),
(8,-336,qs),
(47,-336,o),
(75,-182,q),
(47,-182,ls),
(8,-182,o),
(-28,-160,qs),
(-139,-93,l),
(-346,-299,l),
(-346,-346,l),
(-225,-414,l),
(-225,-495,ls),
(-225,-564,o),
(-325,-564,qs),
(-413,-564,o),
(-423,-511,qs),
(-425,-504,o),
(-425,-496,qs),
(-425,-93,l),
(-644,-93,l),
(-714,-138,o),
(-749,-178,qs),
(-784,-218,o),
(-784,-254,qs),
(-783,-271,o),
(-781,-285,qs),
(-774,-316,o),
(-755,-334,qs),
(-726,-360,o),
(-668,-360,qs),
(-644,-360,l),
(-644,-495,ls),
(-644,-513,o),
(-641,-529,qs),
(-612,-673,o),
(-325,-673,qs),
(-173,-673,o),
(-117,-624,q),
(-71,-673,o),
(140,-673,qs),
(493,-673,o),
(493,-495,qs),
(493,869,l)
);
}
);
width = 1444;
}
);
note = uni17D2_1783_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1783_17C5;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-691,-259,q),
(-691,-254,ls),
(-691,-227,o),
(-644,-182,q),
(-644,-271,l),
(-668,-271,ls),
(-688,-271,o)
);
},
{
closed = 1;
nodes = (
(1265,1164,qs),
(1265,1536,ls),
(1265,1578,o),
(1258,1612,qs),
(1230,1752,o),
(1088,1752,qs),
(910,1752,o),
(910,1629,q),
(957,1629,o),
(980,1606,qs),
(995,1591,o),
(1000,1565,qs),
(1003,1552,o),
(1003,1536,qs),
(1003,1156,l),
(574,1303,l),
(117,1025,l),
(117,935,l),
(230,862,l),
(230,-495,ls),
(230,-564,o),
(140,-564,qs),
(7,-564,o),
(-4,-507,qs),
(-5,-501,o),
(-6,-495,q),
(-6,-394,l),
(-193,-305,l),
(-156,-266,l),
(-76,-310,ls),
(-32,-336,o),
(8,-336,qs),
(47,-336,o),
(75,-182,q),
(47,-182,ls),
(8,-182,o),
(-28,-160,qs),
(-139,-93,l),
(-346,-299,l),
(-346,-346,l),
(-225,-414,l),
(-225,-495,ls),
(-225,-564,o),
(-325,-564,qs),
(-413,-564,o),
(-423,-511,qs),
(-425,-504,o),
(-425,-496,qs),
(-425,-93,l),
(-644,-93,l),
(-714,-138,o),
(-749,-178,qs),
(-784,-218,o),
(-784,-254,qs),
(-783,-271,o),
(-781,-285,qs),
(-774,-316,o),
(-755,-334,qs),
(-726,-360,o),
(-668,-360,qs),
(-644,-360,l),
(-644,-495,ls),
(-644,-513,o),
(-641,-529,qs),
(-612,-673,o),
(-325,-673,qs),
(-173,-673,o),
(-117,-624,q),
(-71,-673,o),
(140,-673,qs),
(493,-673,o),
(493,-495,qs),
(493,869,l),
(316,972,l),
(522,1082,l),
(952,944,l),
(952,0,l),
(1215,0,l),
(1215,1037,l),
(1265,1128,o)
);
}
);
width = 1444;
}
);
note = uni17D2_1783_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1788_17B6;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,972,l),
(522,1082,l),
(952,944,l),
(952,0,l),
(1215,0,l),
(1215,1083,l),
(574,1303,l),
(117,1025,l),
(117,935,l),
(230,862,l),
(230,-495,ls),
(230,-564,o),
(122,-564,qs),
(5,-564,o),
(-5,-511,qs),
(-6,-506,o),
(-6,-501,qs),
(-6,-394,l),
(-193,-305,l),
(-166,-266,l),
(-95,-310,ls),
(-52,-336,o),
(-12,-336,qs),
(28,-336,o),
(75,-182,q),
(48,-182,ls),
(8,-182,o),
(-28,-160,qs),
(-139,-93,l),
(-346,-299,l),
(-346,-346,l),
(-225,-414,l),
(-225,-494,ls),
(-225,-564,o),
(-325,-564,qs),
(-413,-564,o),
(-423,-511,qs),
(-424,-506,o),
(-424,-501,qs),
(-424,-271,ls),
(-424,-253,o),
(-427,-237,qs),
(-456,-93,o),
(-744,-93,qs),
(-1063,-93,o),
(-1063,-270,qs),
(-1063,-673,l),
(-843,-673,l),
(-797,-606,ls),
(-750,-538,o),
(-750,-495,qs),
(-750,-490,o),
(-751,-485,qs),
(-758,-450,o),
(-820,-450,qs),
(-843,-450,l),
(-843,-271,ls),
(-843,-202,o),
(-744,-202,qs),
(-656,-202,o),
(-646,-255,qs),
(-644,-263,o),
(-644,-271,qs),
(-644,-495,ls),
(-644,-513,o),
(-641,-529,qs),
(-612,-673,o),
(-325,-673,qs),
(-184,-673,o),
(-114,-619,q),
(-45,-673,o),
(122,-673,qs),
(493,-673,o),
(493,-495,qs),
(493,869,l)
);
}
);
width = 1444;
}
);
note = uni17D2_1788_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1788_17C5;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1265,1164,qs),
(1265,1536,ls),
(1265,1578,o),
(1258,1612,qs),
(1230,1752,o),
(1088,1752,qs),
(910,1752,o),
(910,1629,q),
(957,1629,o),
(980,1606,qs),
(995,1591,o),
(1000,1565,qs),
(1003,1552,o),
(1003,1536,qs),
(1003,1156,l),
(574,1303,l),
(117,1025,l),
(117,935,l),
(230,862,l),
(230,-495,ls),
(230,-564,o),
(122,-564,qs),
(5,-564,o),
(-5,-511,qs),
(-6,-506,o),
(-6,-501,qs),
(-6,-394,l),
(-193,-305,l),
(-166,-266,l),
(-95,-310,ls),
(-52,-336,o),
(-12,-336,qs),
(28,-336,o),
(75,-182,q),
(48,-182,ls),
(8,-182,o),
(-28,-160,qs),
(-139,-93,l),
(-346,-299,l),
(-346,-346,l),
(-225,-414,l),
(-225,-494,ls),
(-225,-564,o),
(-325,-564,qs),
(-413,-564,o),
(-423,-511,qs),
(-424,-506,o),
(-424,-501,qs),
(-424,-271,ls),
(-424,-253,o),
(-427,-237,qs),
(-456,-93,o),
(-744,-93,qs),
(-1063,-93,o),
(-1063,-270,qs),
(-1063,-673,l),
(-843,-673,l),
(-797,-606,ls),
(-750,-538,o),
(-750,-495,qs),
(-750,-490,o),
(-751,-485,qs),
(-758,-450,o),
(-820,-450,qs),
(-843,-450,l),
(-843,-271,ls),
(-843,-202,o),
(-744,-202,qs),
(-656,-202,o),
(-646,-255,qs),
(-644,-263,o),
(-644,-271,qs),
(-644,-495,ls),
(-644,-513,o),
(-641,-529,qs),
(-612,-673,o),
(-325,-673,qs),
(-184,-673,o),
(-114,-619,q),
(-45,-673,o),
(122,-673,qs),
(493,-673,o),
(493,-495,qs),
(493,869,l),
(316,972,l),
(522,1082,l),
(952,944,l),
(952,0,l),
(1215,0,l),
(1215,1037,l),
(1265,1128,o)
);
}
);
width = 1444;
}
);
note = uni17D2_1788_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_178D_17B6;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-894,-491,o),
(-897,-499,qs),
(-934,-584,l),
(-933,-450,l),
(-915,-450,ls),
(-894,-450,o),
(-891,-465,q),
(-891,-471,ls),
(-891,-477,o)
);
},
{
closed = 1;
nodes = (
(315,972,l),
(521,1082,l),
(951,944,l),
(952,0,l),
(1215,0,l),
(1214,1083,l),
(573,1303,l),
(117,1025,l),
(117,935,l),
(229,862,l),
(230,-495,ls),
(229,-564,o),
(176,-564,qs),
(97,-564,o),
(-98,-370,o),
(-186,-370,qs),
(-288,-370,l),
(-289,-227,l),
(-535,-93,l),
(-721,-194,l),
(-908,-93,l),
(-1154,-227,l),
(-1154,-673,l),
(-934,-673,l),
(-841,-584,o),
(-820,-521,qs),
(-806,-481,o),
(-806,-456,qs),
(-806,-443,o),
(-808,-431,qs),
(-811,-417,o),
(-817,-405,qs),
(-842,-361,o),
(-888,-361,qs),
(-934,-361,l),
(-934,-239,l),
(-900,-219,l),
(-721,-317,l),
(-540,-219,l),
(-509,-238,l),
(-509,-673,l),
(-289,-673,l),
(-289,-479,l),
(-187,-479,ls),
(-137,-479,o),
(56,-673,o),
(176,-673,qs),
(492,-673,o),
(492,-494,qs),
(492,869,l)
);
}
);
width = 1444;
}
);
note = uni17D2_178D_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_178D_17C5;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-894,-491,o),
(-897,-499,qs),
(-934,-584,l),
(-933,-450,l),
(-915,-450,ls),
(-894,-450,o),
(-891,-465,q),
(-891,-471,ls),
(-891,-477,o)
);
},
{
closed = 1;
nodes = (
(1264,1164,qs),
(1264,1536,ls),
(1264,1578,o),
(1257,1612,qs),
(1229,1752,o),
(1087,1752,qs),
(909,1752,o),
(909,1629,q),
(956,1629,o),
(979,1606,qs),
(994,1591,o),
(1000,1565,qs),
(1002,1552,o),
(1002,1536,qs),
(1002,1156,l),
(573,1303,l),
(117,1025,l),
(117,935,l),
(229,862,l),
(230,-495,ls),
(229,-564,o),
(176,-564,qs),
(97,-564,o),
(-98,-370,o),
(-186,-370,qs),
(-288,-370,l),
(-289,-227,l),
(-535,-93,l),
(-721,-194,l),
(-908,-93,l),
(-1154,-227,l),
(-1154,-673,l),
(-934,-673,l),
(-841,-584,o),
(-820,-521,qs),
(-806,-481,o),
(-806,-456,qs),
(-806,-443,o),
(-808,-431,qs),
(-811,-417,o),
(-817,-405,qs),
(-842,-361,o),
(-888,-361,qs),
(-934,-361,l),
(-934,-239,l),
(-900,-219,l),
(-721,-317,l),
(-540,-219,l),
(-509,-238,l),
(-509,-673,l),
(-289,-673,l),
(-289,-479,l),
(-187,-479,ls),
(-137,-479,o),
(56,-673,o),
(176,-673,qs),
(492,-673,o),
(492,-494,qs),
(492,869,l),
(315,972,l),
(521,1082,l),
(951,944,l),
(952,0,l),
(1215,0,l),
(1214,1037,l),
(1264,1128,o)
);
}
);
width = 1444;
}
);
note = uni17D2_178D_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1794_17B6;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,972,l),
(522,1082,l),
(952,944,l),
(952,0,l),
(1215,0,l),
(1215,1083,l),
(574,1303,l),
(117,1025,l),
(117,935,l),
(230,862,l),
(230,-517,l),
(1,-345,l),
(-228,-517,l),
(-228,-316,l),
(-205,-316,ls),
(-135,-316,o),
(-135,-249,qs),
(-135,-232,o),
(-138,-216,qs),
(-147,-171,o),
(-182,-138,qs),
(-228,-93,l),
(-468,-93,l),
(-468,-673,l),
(-228,-673,l),
(1,-501,l),
(230,-673,l),
(493,-673,l),
(493,869,l)
);
}
);
width = 1444;
}
);
note = uni17D2_1794_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1794_17C5;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1266,1164,qs),
(1265,1536,ls),
(1265,1578,o),
(1258,1612,qs),
(1230,1752,o),
(1088,1752,qs),
(911,1752,o),
(911,1630,qs),
(911,1629,l),
(958,1629,o),
(980,1606,qs),
(995,1591,o),
(1000,1566,qs),
(1003,1552,o),
(1003,1536,qs),
(1003,1156,l),
(575,1303,l),
(117,1025,l),
(117,935,l),
(230,862,l),
(231,-517,l),
(1,-345,l),
(-227,-517,l),
(-227,-316,l),
(-204,-316,ls),
(-135,-316,o),
(-135,-251,qs),
(-135,-242,ls),
(-135,-228,o),
(-138,-215,qs),
(-147,-170,o),
(-182,-138,qs),
(-228,-93,l),
(-468,-93,l),
(-468,-673,l),
(-228,-673,l),
(2,-501,l),
(230,-673,l),
(493,-673,l),
(494,869,l),
(316,972,l),
(522,1082,l),
(953,944,l),
(952,0,l),
(1215,0,l),
(1215,1037,l),
(1266,1128,o)
);
}
);
width = 1444;
}
);
note = uni17D2_1794_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1799_17B6;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,972,l),
(522,1082,l),
(952,944,l),
(952,0,l),
(1215,0,l),
(1215,1083,l),
(574,1303,l),
(117,1025,l),
(117,935,l),
(230,862,l),
(230,-485,ls),
(230,-564,o),
(1,-564,qs),
(-213,-564,o),
(-227,-495,qs),
(-228,-490,o),
(-228,-485,qs),
(-228,-316,l),
(-205,-316,ls),
(-135,-316,o),
(-135,-249,qs),
(-135,-232,o),
(-138,-216,qs),
(-147,-171,o),
(-182,-138,qs),
(-228,-93,l),
(-468,-93,l),
(-468,-485,ls),
(-468,-499,o),
(-465,-512,qs),
(-433,-673,o),
(1,-673,qs),
(493,-673,o),
(493,-485,qs),
(493,869,l)
);
}
);
width = 1444;
}
);
note = uni17D2_1799_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1799_17C5;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1265,1164,qs),
(1265,1536,ls),
(1265,1578,o),
(1258,1612,qs),
(1230,1752,o),
(1088,1752,qs),
(910,1752,o),
(910,1629,q),
(957,1629,o),
(980,1606,qs),
(995,1591,o),
(1000,1565,qs),
(1003,1552,o),
(1003,1536,qs),
(1003,1156,l),
(574,1303,l),
(117,1025,l),
(117,935,l),
(230,862,l),
(230,-485,ls),
(230,-564,o),
(1,-564,qs),
(-213,-564,o),
(-227,-495,qs),
(-228,-490,o),
(-228,-485,qs),
(-228,-316,l),
(-205,-316,ls),
(-135,-316,o),
(-135,-249,qs),
(-135,-232,o),
(-138,-216,qs),
(-147,-171,o),
(-182,-138,qs),
(-228,-93,l),
(-468,-93,l),
(-468,-485,ls),
(-468,-499,o),
(-465,-512,qs),
(-433,-673,o),
(1,-673,qs),
(493,-673,o),
(493,-485,qs),
(493,869,l),
(316,972,l),
(522,1082,l),
(952,944,l),
(952,0,l),
(1215,0,l),
(1215,1037,l),
(1265,1128,o)
);
}
);
width = 1444;
}
);
note = uni17D2_1799_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_179F_17B6;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,972,l),
(523,1082,l),
(952,944,l),
(952,0,l),
(1215,0,l),
(1216,1083,l),
(575,1303,l),
(117,1025,l),
(117,935,l),
(231,862,l),
(231,143,l),
(92,143,l),
(91,0,l),
(230,0,l),
(230,-485,ls),
(230,-564,o),
(1,-564,qs),
(-213,-564,o),
(-227,-495,qs),
(-228,-490,o),
(-228,-485,qs),
(-227,-93,l),
(-467,-93,l),
(-513,-138,ls),
(-560,-182,o),
(-561,-249,qs),
(-561,-259,o),
(-559,-268,qs),
(-550,-316,o),
(-491,-316,qs),
(-468,-316,l),
(-468,-485,ls),
(-468,-499,o),
(-465,-512,qs),
(-433,-673,o),
(2,-673,qs),
(493,-673,o),
(493,-486,qs),
(493,0,l),
(656,0,o),
(657,93,qs),
(657,121,o),
(653,141,qs),
(643,190,o),
(610,190,q),
(610,189,ls),
(610,143,o),
(494,143,q),
(493,869,l)
);
}
);
width = 1444;
}
);
note = uni17D2_179F_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_179F_17C5;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1265,1163,qs),
(1265,1536,ls),
(1265,1579,o),
(1259,1613,qs),
(1231,1752,o),
(1089,1752,qs),
(911,1752,o),
(910,1629,q),
(957,1629,o),
(980,1606,qs),
(995,1591,o),
(1000,1566,qs),
(1003,1552,o),
(1003,1536,qs),
(1003,1156,l),
(575,1303,l),
(117,1025,l),
(117,935,l),
(231,862,l),
(231,143,l),
(92,143,l),
(91,0,l),
(230,0,l),
(230,-485,ls),
(230,-564,o),
(1,-564,qs),
(-213,-564,o),
(-227,-495,qs),
(-228,-490,o),
(-228,-485,qs),
(-227,-93,l),
(-467,-93,l),
(-513,-138,ls),
(-560,-182,o),
(-561,-249,qs),
(-561,-259,o),
(-559,-268,qs),
(-550,-316,o),
(-491,-316,qs),
(-468,-316,l),
(-468,-485,ls),
(-468,-499,o),
(-465,-512,qs),
(-433,-673,o),
(2,-673,qs),
(493,-673,o),
(493,-486,qs),
(493,0,l),
(656,0,o),
(657,93,qs),
(657,121,o),
(653,141,qs),
(643,190,o),
(610,190,q),
(610,189,ls),
(610,143,o),
(494,143,q),
(493,869,l),
(317,972,l),
(523,1082,l),
(952,944,l),
(952,0,l),
(1215,0,l),
(1216,1037,l),
(1265,1126,o)
);
}
);
width = 1444;
}
);
note = uni17D2_179F_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D21783;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-691,-254,qs),
(-691,-227,o),
(-644,-182,q),
(-644,-271,l),
(-668,-271,ls),
(-691,-271,o)
);
},
{
closed = 1;
nodes = (
(282,1075,l),
(436,997,o),
(482,997,qs),
(548,997,o),
(606,1187,q),
(540,1187,o),
(484,1216,qs),
(314,1303,l),
(97,1025,l),
(97,945,l),
(230,862,l),
(230,-495,ls),
(230,-564,o),
(140,-564,qs),
(-6,-564,o),
(-6,-495,qs),
(-6,-394,l),
(-193,-305,l),
(-156,-266,l),
(-76,-310,ls),
(-32,-336,o),
(8,-336,qs),
(47,-336,o),
(75,-182,q),
(47,-182,ls),
(8,-182,o),
(-28,-160,qs),
(-139,-93,l),
(-346,-299,l),
(-346,-346,l),
(-225,-414,l),
(-225,-495,ls),
(-225,-564,o),
(-325,-564,qs),
(-425,-564,o),
(-425,-496,qs),
(-425,-93,l),
(-644,-93,l),
(-714,-138,o),
(-749,-178,qs),
(-784,-218,o),
(-784,-254,qs),
(-784,-308,o),
(-755,-334,qs),
(-726,-360,o),
(-668,-360,qs),
(-644,-360,l),
(-644,-495,ls),
(-644,-673,o),
(-325,-673,qs),
(-173,-673,o),
(-117,-624,q),
(-71,-673,o),
(140,-673,qs),
(493,-673,o),
(493,-495,qs),
(493,869,l),
(232,1009,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
63 62 54 3 10 9 53 52 6 3 4 10 44 4 2 0 6 45 34 33 3 3 0 46 32 2 5 3 11 1 1 5 6 76 35 1 4 2 1 6 2 75 55 1 9 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
63 62 54 3 10 9 53 52 6 3 4 10 44 4 2 0 6 45 34 2 7 0 33 1 3 7 46 32 2 5 3 11 1 1 5 7 76 35 1 4 2 1 6 2 75 55 1 9 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 10 6 10 4 6 128 0 9 0 10 4 9 10 105 0 6 0 3 6 89 0 0 7 1 3 5 0 3 105 8 1 5 5 1 98 2 1 1 1 25 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 9 0 10 4 9 10 105 0 6 0 3 6 89 0 0 7 1 3 5 0 3 105 0 4 4 18 77 8 1 5 5 1 98 2 1 1 1 25 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 4 9 10 105 0 6 0 7 3 6 7 105 0 0 0 3 5 0 3 105 0 4 4 18 77 8 1 5 5 1 98 2 1 1 1 25 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 9 0 10 4 9 10 105 0 6 0 7 3 6 7 105 0 0 0 3 5 0 3 105 8 1 5 2 1 1 5 1 102 0 4 4 18 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
61 59 58 57 38 33 39 34 23 34 34 39 16 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D21783;
subCategory = Spacing;
},
{
glyphname = uni17D21788;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,1075,l),
(436,997,o),
(482,997,qs),
(548,997,o),
(606,1187,q),
(540,1187,o),
(484,1216,qs),
(314,1303,l),
(97,1025,l),
(97,945,l),
(230,862,l),
(230,-495,ls),
(230,-564,o),
(122,-564,qs),
(-6,-564,o),
(-6,-501,qs),
(-6,-394,l),
(-193,-305,l),
(-166,-266,l),
(-95,-310,ls),
(-52,-336,o),
(-12,-336,qs),
(28,-336,o),
(75,-182,q),
(48,-182,ls),
(8,-182,o),
(-28,-160,qs),
(-139,-93,l),
(-346,-299,l),
(-346,-346,l),
(-225,-414,l),
(-225,-494,ls),
(-225,-564,o),
(-325,-564,qs),
(-424,-564,o),
(-424,-496,qs),
(-424,-271,ls),
(-424,-93,o),
(-744,-93,qs),
(-1063,-93,o),
(-1063,-270,qs),
(-1063,-673,l),
(-843,-673,l),
(-797,-606,ls),
(-750,-538,o),
(-750,-495,qs),
(-750,-450,o),
(-820,-450,qs),
(-843,-450,l),
(-843,-271,ls),
(-843,-202,o),
(-744,-202,qs),
(-644,-202,o),
(-644,-271,qs),
(-644,-495,ls),
(-644,-673,o),
(-325,-673,qs),
(-184,-673,o),
(-114,-619,q),
(-45,-673,o),
(122,-673,qs),
(493,-673,o),
(493,-495,qs),
(493,869,l),
(232,1009,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
64 63 55 3 11 10 54 53 0 3 5 11 46 45 35 3 8 2 47 34 33 3 3 8 5 1 0 6 5 76 36 1 5 1 75 56 1 10 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 8 6 8 3 6 128 0 10 0 11 5 10 11 105 0 5 0 2 8 5 2 105 0 7 0 8 3 7 8 105 9 1 6 6 0 97 4 1 2 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 8 6 8 3 6 128 0 10 0 11 5 10 11 105 0 7 0 8 3 7 8 105 0 2 2 5 97 0 5 5 18 77 9 1 6 6 0 97 4 1 2 0 0 25 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 8 6 8 3 6 128 0 10 0 11 5 10 11 105 0 7 0 8 3 7 8 105 9 1 6 4 1 2 0 6 0 101 0 2 2 5 97 0 5 5 18 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
62 60 59 58 51 49 33 39 35 34 20 34 35 34 34 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D21788;
subCategory = Spacing;
},
{
glyphname = uni17D2178D;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-893,-491,o),
(-896,-499,qs),
(-933,-584,l),
(-933,-450,l),
(-915,-450,ls),
(-890,-450,o),
(-890,-471,qs),
(-890,-477,o)
);
},
{
closed = 1;
nodes = (
(57,-673,o),
(177,-673,qs),
(493,-673,o),
(493,-494,qs),
(493,869,l),
(232,1009,l),
(282,1075,l),
(436,997,o),
(482,997,qs),
(548,997,o),
(606,1187,q),
(540,1187,o),
(484,1216,qs),
(314,1303,l),
(97,1025,l),
(97,945,l),
(230,862,l),
(230,-495,ls),
(230,-564,o),
(177,-564,qs),
(98,-564,o),
(-98,-370,o),
(-186,-370,qs),
(-288,-370,l),
(-288,-227,l),
(-534,-93,l),
(-720,-194,l),
(-907,-93,l),
(-1153,-227,l),
(-1153,-673,l),
(-933,-673,l),
(-840,-584,o),
(-819,-521,qs),
(-805,-481,o),
(-805,-456,qs),
(-805,-428,o),
(-817,-405,qs),
(-841,-361,o),
(-887,-361,qs),
(-933,-361,l),
(-933,-239,l),
(-899,-219,l),
(-720,-317,l),
(-539,-219,l),
(-508,-238,l),
(-508,-673,l),
(-288,-673,l),
(-288,-479,l),
(-186,-479,ls),
(-136,-479,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
51 50 42 3 8 7 52 41 40 32 31 30 29 28 16 15 14 13 12 13 3 8 4 1 2 6 3 76 43 1 7 74 0 7 0 8 3 7 8 105 0 0 1 3 0 89 5 1 3 10 1 1 6 3 1 105 0 6 2 2 6 89 0 6 6 2 95 9 4 2 2 6 2 79 9 8 56 54 49 47 46 45 38 36 35 33 27 26 19 17 11 10 8 57 9 57 17 11 7 23 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D2178D;
subCategory = Spacing;
},
{
glyphname = uni17D21794;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,1075,l),
(436,997,o),
(482,997,qs),
(548,997,o),
(606,1187,q),
(540,1187,o),
(484,1216,qs),
(314,1303,l),
(97,1025,l),
(97,945,l),
(230,862,l),
(230,-517,l),
(1,-345,l),
(-228,-517,l),
(-228,-316,l),
(-205,-316,ls),
(-135,-316,o),
(-135,-249,qs),
(-135,-182,o),
(-182,-138,qs),
(-228,-93,l),
(-468,-93,l),
(-468,-673,l),
(-228,-673,l),
(1,-501,l),
(230,-673,l),
(493,-673,l),
(493,869,l),
(232,1009,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
28 27 19 3 5 4 18 17 0 3 2 5 16 15 14 3 4 0 3 3 76 20 1 4 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 2 0 2 3 0 128 0 4 0 5 2 4 5 105 0 2 3 0 2 87 0 2 2 0 95 1 1 0 2 0 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 3 2 0 2 3 0 128 0 4 0 5 2 4 5 105 1 1 0 0 2 95 0 2 2 18 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
33 25 36 17 18 17 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D21794;
subCategory = Spacing;
},
{
glyphname = uni17D21799;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,1075,l),
(436,997,o),
(482,997,qs),
(548,997,o),
(606,1187,q),
(540,1187,o),
(484,1216,qs),
(314,1303,l),
(97,1025,l),
(97,945,l),
(230,862,l),
(230,-485,ls),
(230,-564,o),
(1,-564,qs),
(-228,-564,o),
(-228,-485,qs),
(-228,-316,l),
(-205,-316,ls),
(-135,-316,o),
(-135,-249,qs),
(-135,-182,o),
(-182,-138,qs),
(-228,-93,l),
(-468,-93,l),
(-468,-485,ls),
(-468,-673,o),
(1,-673,qs),
(493,-673,o),
(493,-485,qs),
(493,869,l),
(232,1009,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
30 29 21 3 5 4 20 19 0 3 1 5 2 76 22 1 4 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 5 2 5 1 2 128 0 2 3 5 2 3 126 0 4 0 5 1 4 5 105 0 3 3 0 98 0 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 1 3 1 2 3 128 0 4 0 5 1 4 5 105 0 1 1 18 77 0 3 3 0 98 0 0 0 25 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 3 1 2 3 128 0 4 0 5 1 4 5 105 0 3 0 0 3 0 102 0 1 1 18 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
33 23 34 36 18 34 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D21799;
subCategory = Spacing;
},
{
glyphname = uni17D2179A;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,1075,l),
(436,997,o),
(482,997,qs),
(548,997,o),
(606,1187,q),
(540,1187,o),
(484,1216,qs),
(314,1303,l),
(97,1025,l),
(97,945,l),
(230,862,l),
(230,-416,ls),
(230,-659,o),
(722,-659,qs),
(1214,-659,o),
(1214,-416,qs),
(1214,-93,l),
(975,-93,l),
(975,-416,ls),
(975,-545,o),
(722,-545,qs),
(493,-545,o),
(493,-416,qs),
(493,869,l),
(232,1009,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
24 23 15 3 4 3 14 13 0 3 1 4 2 76 16 1 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 4 0 4 1 0 128 0 3 0 4 1 3 4 105 0 0 0 2 98 0 2 2 25 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 3 0 4 1 3 4 105 0 1 1 18 77 0 0 0 2 98 0 2 2 25 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 4 1 3 4 105 0 0 0 2 0 2 102 0 1 1 18 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
33 23 34 18 34 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D2179A;
subCategory = Spacing;
},
{
glyphname = uni17D2179F;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,1075,l),
(436,997,o),
(482,997,qs),
(548,997,o),
(606,1187,q),
(540,1187,o),
(484,1216,qs),
(314,1303,l),
(97,1025,l),
(97,945,l),
(230,862,l),
(230,143,l),
(91,143,l),
(91,0,l),
(230,0,l),
(230,-485,ls),
(230,-564,o),
(1,-564,qs),
(-228,-564,o),
(-228,-485,qs),
(-228,-93,l),
(-468,-93,l),
(-514,-138,ls),
(-561,-182,o),
(-561,-249,qs),
(-561,-316,o),
(-491,-316,qs),
(-468,-316,l),
(-468,-485,ls),
(-468,-673,o),
(1,-673,qs),
(493,-673,o),
(493,-485,qs),
(493,0,l),
(656,0,o),
(656,93,qs),
(656,190,o),
(610,190,q),
(610,143,o),
(493,143,q),
(493,869,l),
(232,1009,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
41 40 32 3 10 9 31 30 0 3 1 10 2 76 33 1 9 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 10 0 0 1 114 0 5 2 4 2 5 4 128 0 4 6 2 4 6 126 0 9 0 10 1 9 10 105 8 1 0 0 2 98 7 1 2 2 19 77 0 6 6 3 98 0 3 3 25 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 10 0 0 1 114 0 4 5 6 5 4 6 128 0 9 0 10 1 9 10 105 8 1 0 0 2 98 7 1 2 2 19 77 0 5 5 18 77 0 6 6 3 98 0 3 3 25 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 10 0 0 1 114 0 4 5 6 5 4 6 128 0 9 0 10 1 9 10 105 0 6 0 3 6 3 102 8 1 0 0 2 98 7 1 2 2 19 77 0 5 5 18 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
39 37 36 35 17 18 34 20 34 34 18 17 17 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D2179F;
subCategory = Spacing;
},
{
glyphname = uni17D2179A.b;
lastChange = "2022-11-15 14:44:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,1075,l),
(436,997,o),
(482,997,qs),
(548,997,o),
(606,1187,q),
(540,1187,o),
(484,1216,qs),
(314,1303,l),
(97,1025,l),
(97,945,l),
(230,862,l),
(230,-877,ls),
(230,-1120,o),
(722,-1120,qs),
(1214,-1120,o),
(1214,-877,qs),
(1214,-744,l),
(975,-744,l),
(975,-877,ls),
(975,-1006,o),
(722,-1006,qs),
(493,-1006,o),
(493,-877,qs),
(493,869,l),
(232,1009,l)
);
}
);
width = 721;
}
);
note = uni17D2179A.b;
subCategory = Spacing;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,1287,l),
(550,1287,l),
(351,1560,l),
(42,1560,l),
(40,1554,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 3 2 0 4 1 4 3 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 590;
}
);
note = grave;
unicode = 96;
},
{
glyphname = cho.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = cho.half;
},
{
glyphname = coeng_1789khmer.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1186,-85,l),
(-1326,-165,l),
(-1465,-85,l),
(-1718,-211,l),
(-1718,-387,l),
(-1498,-387,l),
(-1465,-347,o),
(-1465,-285,qs),
(-1465,-246,o),
(-1498,-246,q),
(-1498,-228,l),
(-1468,-199,l),
(-1326,-280,l),
(-1184,-199,l),
(-1143,-230,l),
(-1143,-387,l),
(-903,-387,l),
(-903,-269,l),
(-783,-211,l),
(-508,-292,l),
(-508,-387,l),
(-288,-387,l),
(-288,-212,l),
(-720,-85,l),
(-1007,-182,l)
);
},
{
closed = 1;
nodes = (
(-468,-427,qs),
(-581,-427,o),
(-581,-506,q),
(-508,-506,o),
(-508,-536,qs),
(-508,-566,o),
(-674,-566,qs),
(-860,-566,o),
(-1232,-447,o),
(-1419,-447,qs),
(-1718,-447,o),
(-1718,-598,qs),
(-1718,-637,l),
(-1582,-566,o),
(-1419,-566,qs),
(-1270,-566,o),
(-907,-665,o),
(-674,-665,qs),
(-288,-665,o),
(-288,-546,qs),
(-288,-427,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
32 1 3 6 1 76 24 23 22 21 20 13 12 11 10 9 6 5 4 1 14 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
2 1 2 0 5 0 133 0 7 4 5 7 89 8 1 5 5 4 97 0 4 4 20 77 0 6 6 3 97 0 3 3 25 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
2 1 2 0 5 0 133 0 7 4 5 7 89 8 1 5 0 4 6 5 4 105 0 6 6 3 97 0 3 3 25 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
2 1 2 0 8 0 133 0 8 0 7 4 8 7 105 0 5 0 4 6 5 4 105 0 6 6 3 97 0 3 3 25 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
2 1 2 0 8 0 133 0 8 0 7 4 8 7 105 0 5 0 4 6 5 4 105 0 6 3 3 6 89 0 6 6 3 97 0 3 6 3 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
33 18 33 35 33 39 26 20 18 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = coeng_1789khmer.a;
},
{
glyphname = coeng_178Akhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-655,0);
ref = uni17D2_178A;
}
);
width = 0;
}
);
note = coeng_178Akhmer.n;
},
{
glyphname = coeng_178Akhmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (415,0);
ref = uni17D2_178A;
}
);
width = 0;
}
);
note = coeng_178Akhmer.r;
},
{
glyphname = coeng_178Bkhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-656,0);
ref = uni17D2_178B;
}
);
width = 0;
}
);
note = coeng_178Bkhmer.n;
},
{
glyphname = coeng_178Ckhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-665,0);
ref = uni17D2_178C;
}
);
width = 0;
}
);
note = coeng_178Ckhmer.n;
},
{
glyphname = coeng_1797khmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (406,0);
ref = uni17D2_1797;
}
);
width = 0;
}
);
note = coeng_1797khmer.r;
},
{
glyphname = coeng_1798khmer.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-508,-959,q),
(-508,-1120,o),
(-251,-1120,qs),
(-122,-1120,o),
(-122,-998,qs),
(-122,-859,o),
(-288,-859,q),
(-288,-724,l),
(-508,-724,l),
(-508,-859,l),
(-820,-892,o),
(-850,-892,qs),
(-933,-892,o),
(-933,-837,qs),
(-933,-756,l),
(-1153,-756,o),
(-1153,-837,qs),
(-1153,-994,o),
(-886,-994,qs),
(-834,-994,o)
);
},
{
closed = 1;
nodes = (
(-261,-1021,qs),
(-288,-1021,o),
(-288,-959,q),
(-235,-959,o),
(-235,-998,qs),
(-235,-1021,o)
);
}
);
width = 0;
}
);
note = coeng_1798khmer.b;
},
{
glyphname = coeng_1798khmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (323,0);
ref = uni17D2_1798;
}
);
width = 0;
}
);
note = coeng_1798khmer.r;
},
{
glyphname = coeng_17A0khmer.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1167,-945,ls),
(-1167,-1123,o),
(-884,-1123,qs),
(-612,-1123,o),
(-612,-945,qs),
(-612,-912,ls),
(-612,-822,o),
(-559,-822,qs),
(-486,-822,o),
(-486,-912,qs),
(-486,-1123,l),
(-266,-1123,l),
(-266,-912,ls),
(-266,-733,o),
(-559,-733,qs),
(-831,-733,o),
(-831,-912,qs),
(-831,-945,ls),
(-831,-1034,o),
(-884,-1034,qs),
(-947,-1034,o),
(-947,-945,qs),
(-947,-733,l),
(-1167,-733,l)
);
}
);
width = 0;
}
);
note = coeng_17A0khmer.b;
},
{
glyphname = coeng_17A0khmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-700,0);
ref = uni17D2_17A0;
}
);
width = 0;
}
);
note = coeng_17A0khmer.n;
},
{
glyphname = iMark_17CDkhmer.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-121,1676,qs),
(-62,1676,o),
(7,1629,q),
(39,1629,o),
(72,1639,q),
(213,1707,o),
(296,1825,q),
(308,1834,o),
(308,1847,qs),
(308,1860,o),
(294,1879,qs),
(272,1906,o),
(255,1906,q),
(244,1904,l),
(165,1770,o),
(24,1723,q),
(-30,1769,o),
(-121,1769,qs),
(-275,1769,o),
(-301,1656,q),
(-413,1722,o),
(-502,1722,qs),
(-735,1722,o),
(-735,1489,qs),
(-735,1396,o),
(-595,1396,qs),
(-83,1396,l),
(-83,1448,l),
(19,1465,o),
(19,1554,qs),
(19,1583,o),
(-28,1583,qs),
(-74,1583,o),
(-74,1554,qs),
(-74,1537,o),
(-121,1537,qs),
(-167,1537,o),
(-167,1607,qs),
(-167,1676,o)
);
},
{
closed = 1;
nodes = (
(-296,1533,q),
(-287,1507,o),
(-271,1489,q),
(-595,1489,l),
(-595,1583,o),
(-502,1583,qs),
(-386,1583,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
22 1 3 4 18 1 5 6 10 1 2 8 3 76 0 5 6 7 6 5 7 128 0 1 7 0 7 1 0 128 0 0 8 8 0 112 0 4 0 6 5 4 6 105 0 3 9 1 7 1 3 7 105 0 8 2 2 8 87 0 8 8 2 96 0 2 8 2 80 40 39 42 41 39 45 40 45 33 29 34 34 36 34 33 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = iMark_17CDkhmer.r;
},
{
glyphname = nyo_17B6khmer.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(575,328,o),
(578,312,qs),
(579,308,o),
(579,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(2395,968,l),
(2394,0,l),
(2657,0,l),
(2658,1103,l),
(2166,1303,l),
(1794,1136,l),
(1802,1121,l),
(1444,1303,l),
(1129,1126,l),
(929,1303,l),
(722,1140,l),
(516,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(682,303,qs),
(682,322,o),
(678,339,qs),
(670,382,o),
(641,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(534,1103,l),
(722,957,l),
(912,1103,l),
(950,1055,l),
(950,0,l),
(1213,0,l),
(1213,1014,l),
(1373,1095,l),
(1672,941,l),
(1672,0,l),
(1935,0,l),
(1935,1054,l),
(1929,1057,l),
(2062,1113,l)
);
}
);
width = 2164;
}
);
note = nyo_17B6khmer.a;
},
{
glyphname = nyo_17C5khmer.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,337,qs),
(575,328,o),
(578,312,qs),
(579,308,o),
(579,303,qs),
(578,275,o),
(564,247,qs),
(550,220,o),
(492,151,q),
(492,349,l),
(519,349,ls),
(543,349,o)
);
},
{
closed = 1;
nodes = (
(2707,1163,qs),
(2707,1536,ls),
(2707,1578,o),
(2700,1612,qs),
(2672,1752,o),
(2530,1752,qs),
(2352,1752,o),
(2352,1629,q),
(2399,1629,o),
(2422,1606,qs),
(2437,1591,o),
(2442,1566,qs),
(2445,1552,o),
(2445,1536,qs),
(2445,1189,l),
(2166,1303,l),
(1794,1136,l),
(1802,1121,l),
(1444,1303,l),
(1129,1126,l),
(929,1303,l),
(722,1140,l),
(516,1303,l),
(229,1056,l),
(229,0,l),
(492,0,l),
(614,119,o),
(681,235,o),
(682,303,qs),
(682,322,o),
(678,339,qs),
(670,382,o),
(641,408,qs),
(600,442,o),
(519,442,qs),
(492,442,l),
(492,1056,l),
(534,1103,l),
(722,957,l),
(912,1103,l),
(950,1055,l),
(950,0,l),
(1213,0,l),
(1213,1014,l),
(1373,1095,l),
(1672,941,l),
(1672,0,l),
(1935,0,l),
(1935,1054,l),
(1929,1057,l),
(2062,1113,l),
(2395,968,l),
(2394,0,l),
(2657,0,l),
(2657,1037,l),
(2707,1126,o)
);
}
);
width = 2164;
}
);
note = nyo_17C5khmer.a;
},
{
glyphname = ru.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ru.half;
},
{
glyphname = ruu.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ruu.half;
},
{
glyphname = ta.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ta.half;
}
);
instances = (
{
customParameters = (
{
name = styleMapFamilyName;
value = Khmer;
}
);
instanceInterpolations = {
m01 = 1;
};
isBold = 1;
name = Bold;
properties = (
{
key = postscriptFullName;
value = "Khmer Bold";
},
{
key = postscriptFontName;
value = "Khmer-Bold";
}
);
weightClass = 700;
}
);
kerningLTR = {
m01 = {
A = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -123;
U = -41;
V = -164;
W = -143;
Y = -143;
asterisk = -143;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
question = -123;
quotedbl = -164;
quotesingle = -164;
u = -41;
v = -123;
w = -61;
y = -102;
};
B = {
A = -41;
T = -41;
V = -82;
W = -61;
X = -41;
Y = -82;
Z = -41;
asterisk = -41;
question = -41;
w = -20;
y = -41;
};
D = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
E = {
V = -41;
W = -41;
Y = -41;
};
F = {
A = -143;
a = -82;
c = -82;
d = -82;
e = -82;
g = -82;
o = -82;
q = -82;
};
G = {
T = -41;
V = -41;
W = -41;
Y = -41;
question = -41;
};
K = {
C = -41;
G = -41;
O = -41;
Q = -41;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
u = -41;
w = -61;
y = -61;
};
L = {
T = -143;
V = -102;
W = -102;
Y = -123;
asterisk = -164;
question = -143;
quotedbl = -123;
quotesingle = -123;
};
O = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
P = {
A = -102;
comma = -246;
period = -246;
};
Q = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
R = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -41;
U = -20;
V = -61;
W = -61;
Y = -61;
asterisk = -41;
question = -41;
w = -41;
y = -41;
};
S = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -41;
question = -41;
w = -20;
y = -41;
};
T = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -61;
c = -61;
comma = -184;
d = -61;
e = -61;
g = -61;
o = -61;
period = -184;
q = -61;
};
U = {
A = -41;
};
V = {
A = -164;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -123;
c = -123;
comma = -225;
d = -123;
e = -123;
g = -123;
o = -123;
period = -225;
q = -123;
s = -82;
};
W = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -102;
c = -123;
comma = -184;
d = -123;
e = -123;
g = -123;
o = -123;
period = -184;
q = -123;
};
X = {
C = -41;
G = -41;
O = -41;
Q = -41;
S = -20;
w = -61;
y = -102;
};
Y = {
A = -143;
C = -61;
G = -61;
O = -61;
Q = -61;
S = -41;
a = -123;
c = -143;
comma = -164;
d = -143;
e = -143;
g = -143;
o = -143;
period = -164;
q = -143;
s = -123;
};
a = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
asterisk = {
A = -102;
comma = -246;
period = -246;
};
b = {
y = -41;
};
f = {
asterisk = 164;
braceright = 184;
bracketright = 184;
parenright = 184;
quotedbl = 164;
quotesingle = 164;
};
h = {
quotedbl = -82;
y = -41;
};
k = {
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
};
n = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
o = {
y = -41;
};
p = {
y = -41;
};
quotedbl = {
A = -164;
g = -82;
};
quotesingle = {
A = -164;
g = -82;
};
r = {
a = -41;
asterisk = 61;
};
v = {
comma = -102;
period = -143;
};
w = {
comma = -143;
period = -143;
};
y = {
comma = -184;
period = -184;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2020 The Khmer Project Authors (https://github.com/danhhong/Khmer)";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Danh Hong";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Danh Hong";
}
);
},
{
key = designerURL;
value = "http://www.nextspell.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 2048;
versionMajor = 8;
versionMinor = 0;
}
