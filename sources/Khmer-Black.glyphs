{
.appVersion = "3141";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = MONO;
},
{
name = panose;
value = (
2,
2,
6,
0,
6,
5,
0,
2,
2,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
9,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
43,
44,
45,
46,
60,
62,
64,
67,
69
);
},
{
name = codePageRanges;
value = (
"1252"
);
}
);
date = "2020-10-31 04:20:23 +0000";
familyName = "Khmer OS";
featurePrefixes = (
{
code = "lookup SUB_0 {
	sub uni17B7 by uni17B7.r;
	sub uni17B8 by uni17B8.r;
	sub uni17B9 by uni17B9.r;
	sub uni17BA by uni17BA.r;
	sub uni17BE by uni17B8.r;
	sub uni17C6 by uni17C6.r;
	sub uni17C9 by uni17C9.r;
	sub uni17CD by uni17CD.r;
	sub uni17B7_17CD by iMark_17CDkhmer.r;
} SUB_0;
lookup SUB_1 {
	sub uni17B7 by uni17B7.a;
	sub uni17B8 by uni17B8.a;
	sub uni17B9 by uni17B9.a;
	sub uni17BA by uni17BA.a;
	sub uni17BE by uni17B8.a;
	sub uni17C6 by uni17C6.a;
	sub uni17CE by uni17CE.a;
	sub uni17D0 by uni17D0.a;
} SUB_1;
lookup SUB_10 {
	sub uni17C9 uni17B6 by uni17C9;
	sub uni17C9 uni17C4 by uni17C9;
	sub uni17C9 uni17C5 by uni17C9;
	sub uni17CA uni17B6 by uni17CA;
	sub uni17CA uni17C4 by uni17CA;
	sub uni17CA uni17C5 by uni17CA;
	sub uni17CC uni17B6 by uni17CC;
	sub uni17CC uni17C4 by uni17CC;
	sub uni17CC uni17C5 by uni17CC;
	sub uni17C9.r uni17B6 by uni17C9.r;
	sub uni17C9.r uni17C4 by uni17C9.r;
	sub uni17C9.r uni17C5 by uni17C9.r;
} SUB_10;
lookup SUB_11 {
	sub uni17D2_178A by coeng_178Akhmer.r;
	sub uni17D2_178F by coeng_178Akhmer.r;
	sub uni17D2_1797 by coeng_1797khmer.r;
	sub uni17D2_1798 by coeng_1798khmer.r;
} SUB_11;
lookup SUB_12 {
	sub uni17BB by uni17BB.b;
	sub uni17BC by uni17BC.b;
	sub uni17BD by uni17BD.b;
} SUB_12;
lookup SUB_13 {
	sub uni17BF by uni17BF.b;
	sub uni17C0 by uni17C0.b;
} SUB_13;
lookup SUB_14 {
	sub uni17CA by uni17BB;
} SUB_14;
lookup SUB_15 {
	sub uni17C9 by uni17BB;
	sub uni17C9.r by uni17BB;
} SUB_15;
lookup SUB_16 {
	sub uni1789 by uni1789.a;
} SUB_16;
lookup SUB_17 {
	sub uni17D2_1789 by coeng_1789khmer.a;
} SUB_17;
lookup SUB_18 {
	sub uni17D2_178A by coeng_178Akhmer.n;
	sub uni17D2_178B by coeng_178Bkhmer.n;
	sub uni17D2_178C by coeng_178Ckhmer.n;
	sub uni17D2_178F by coeng_178Akhmer.n;
	sub uni17D2_17A0 by coeng_17A0khmer.n;
} SUB_18;
lookup SUB_2 {
	sub uni17BB by uni17BB.n;
	sub uni17BC by uni17BC.n;
	sub uni17BD by uni17BD.n;
} SUB_2;
lookup SUB_3 {
	sub uni17BB.b by uni17BB.n2;
	sub uni17BC.b by uni17BC.n2;
	sub uni17BD.b by uni17BD.n2;
} SUB_3;
lookup SUB_4 {
	sub uni1780 by uni1780_17B6;
	sub uni1781 by uni1781_17B6;
	sub uni1782 by uni1782_17B6;
	sub uni1783 by uni1783_17B6;
	sub uni1784 by uni1784_17B6;
	sub uni1785 by uni1785_17B6;
	sub uni1786 by uni1786_17B6;
	sub uni1787 by uni1787_17B6;
	sub uni1788 by uni1788_17B6;
	sub uni1789 by uni1789_17B6;
	sub uni178A by uni178A_17B6;
	sub uni178B by uni178B_17B6;
	sub uni178C by uni178C_17B6;
	sub uni178D by uni178D_17B6;
	sub uni178E by uni178E_17B6;
	sub uni178F by uni178F_17B6;
	sub uni1790 by uni1790_17B6;
	sub uni1791 by uni1791_17B6;
	sub uni1792 by uni1792_17B6;
	sub uni1793 by uni1793_17B6;
	sub uni1794 by uni1794_17B6;
	sub uni1795 by uni1795_17B6;
	sub uni1796 by uni1796_17B6;
	sub uni1797 by uni1797_17B6;
	sub uni1798 by uni1798_17B6;
	sub uni1799 by uni1799_17B6;
	sub uni179A by uni179A_17B6;
	sub uni179B by uni179B_17B6;
	sub uni179C by uni179C_17B6;
	sub uni179F by uni179F_17B6;
	sub uni17A0 by uni17A0_17B6;
	sub uni17A1 by uni17A1_17B6;
	sub uni17A2 by uni17A2_17B6;
	sub uni1789.a by nyo_17B6khmer.a;
} SUB_4;
lookup SUB_5 {
	sub uni1780 by uni1780_17C5;
	sub uni1781 by uni1781_17C5;
	sub uni1782 by uni1782_17C5;
	sub uni1783 by uni1783_17C5;
	sub uni1784 by uni1784_17C5;
	sub uni1785 by uni1785_17C5;
	sub uni1786 by uni1786_17C5;
	sub uni1787 by uni1787_17C5;
	sub uni1788 by uni1788_17C5;
	sub uni1789 by uni1789_17C5;
	sub uni178A by uni178A_17C5;
	sub uni178B by uni178B_17C5;
	sub uni178C by uni178C_17C5;
	sub uni178D by uni178D_17C5;
	sub uni178E by uni178E_17C5;
	sub uni178F by uni178F_17C5;
	sub uni1790 by uni1790_17C5;
	sub uni1791 by uni1791_17C5;
	sub uni1792 by uni1792_17C5;
	sub uni1793 by uni1793_17C5;
	sub uni1794 by uni1794_17C5;
	sub uni1795 by uni1795_17C5;
	sub uni1796 by uni1796_17C5;
	sub uni1797 by uni1797_17C5;
	sub uni1798 by uni1798_17C5;
	sub uni1799 by uni1799_17C5;
	sub uni179A by uni179A_17C5;
	sub uni179B by uni179B_17C5;
	sub uni179C by uni179C_17C5;
	sub uni179F by uni179F_17C5;
	sub uni17A0 by uni17A0_17C5;
	sub uni17A1 by uni17A1_17C5;
	sub uni17A2 by uni17A2_17C5;
	sub uni1789.a by nyo_17C5khmer.a;
} SUB_5;
lookup SUB_6 {
	sub uni17B6 by uni17B6.space;
	sub uni17C4 by uni17B6.space;
	sub uni17C5 by uni17B6.space;
} SUB_6;
lookup SUB_7 {
	sub uni17D2_1798 by coeng_1798khmer.b;
	sub uni17D2_17A0 by coeng_17A0khmer.b;
} SUB_7;
lookup SUB_8 {
	sub uni17D2179A by uni17D2179A.b;
} SUB_8;
lookup SUB_9 {
	sub uni17D21799 by uni17D2_1799_17B6;
} SUB_9;
";
name = Prefix;
}
);
features = (
{
code = "script khmr;
language dflt;
lookup SUB_19 {
	sub uni17B7 uni17CD by uni17B7_17CD;
} SUB_19;
lookup SUB_20 {
	@SUB_20_0_IN_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17C9 uni17CD uni17B7_17CD];
	sub [uni179A uni179C] @SUB_20_0_IN_0' lookup SUB_0;
	@SUB_20_1_BT_0 = [uni17BB coeng_178Akhmer.r coeng_1797khmer.r coeng_1798khmer.r];
	@SUB_20_1_IN_1 = [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD];
	sub [uni179A uni179C] @SUB_20_1_BT_0 @SUB_20_1_IN_1' lookup SUB_0;
	@SUB_20_2_IN_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17CE uni17D0];
	sub uni17CA @SUB_20_2_IN_0' lookup SUB_1;
} SUB_20;
";
tag = abvs;
},
{
code = "script khmr;
language dflt;
lookup SUB_21 {
	sub uni17D2 uni1780 by uni17D2_1780;
	sub uni17D2 uni1781 by uni17D2_1781;
	sub uni17D2 uni1782 by uni17D2_1782;
	sub uni17D2 uni1784 by uni17D2_1784;
	sub uni17D2 uni1785 by uni17D2_1785;
	sub uni17D2 uni1786 by uni17D2_1786;
	sub uni17D2 uni1787 by uni17D2_1787;
	sub uni17D2 uni1789 by uni17D2_1789;
	sub uni17D2 uni178A by uni17D2_178A;
	sub uni17D2 uni178B by uni17D2_178B;
	sub uni17D2 uni178C by uni17D2_178C;
	sub uni17D2 uni178E by uni17D2_178E;
	sub uni17D2 uni178F by uni17D2_178F;
	sub uni17D2 uni1790 by uni17D2_1790;
	sub uni17D2 uni1791 by uni17D2_1791;
	sub uni17D2 uni1792 by uni17D2_1792;
	sub uni17D2 uni1793 by uni17D2_1793;
	sub uni17D2 uni1795 by uni17D2_1795;
	sub uni17D2 uni1796 by uni17D2_1796;
	sub uni17D2 uni1797 by uni17D2_1797;
	sub uni17D2 uni1798 by uni17D2_1798;
	sub uni17D2 uni179B by uni17D2_179B;
	sub uni17D2 uni179C by uni17D2_179C;
	sub uni17D2 uni17A0 by uni17D2_17A0;
	sub uni17D2 uni17A2 by uni17D2_17A2;
} SUB_21;
lookup SUB_22 {
	@SUB_22_0_IN_0 = [uni17D2_178A uni17D2_178F uni17D2_1797 uni17D2_1798];
	sub [uni179A uni179C] @SUB_22_0_IN_0' lookup SUB_11;
	@SUB_22_1_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_22_1_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_22_2_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_22_2_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni17A1 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_22_6_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_22_6_BT_0 [uni17BF uni17C0]' lookup SUB_13;
	sub [uni1789 uni17A1] [uni17BF uni17C0]' lookup SUB_13;
	@SUB_22_8_LA_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE];
	sub [uni179F uni17A0] uni17CA' lookup SUB_14 @SUB_22_8_LA_0;
	@SUB_22_9_LA_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17D0];
	sub [uni17C9 uni17C9.r]' lookup SUB_15 @SUB_22_9_LA_0;
	sub [uni17C9 uni17C9.r]' lookup SUB_15 uni17B6 uni17C6;
	sub [uni179F uni17A0] uni17CA' lookup SUB_14 uni17B6 uni17C6;
} SUB_22;
";
tag = blwf;
},
{
code = "script khmr;
language dflt;
lookup SUB_23 {
	sub uni17D21783 uni17B6 by uni17D2_1783_17B6;
	sub uni17D21783 uni17C4 by uni17D2_1783_17B6;
	sub uni17D21783 uni17C5 by uni17D2_1783_17C5;
	sub uni17D21788 uni17B6 by uni17D2_1788_17B6;
	sub uni17D21788 uni17C4 by uni17D2_1788_17B6;
	sub uni17D21788 uni17C5 by uni17D2_1788_17C5;
	sub uni17D2178D uni17B6 by uni17D2_178D_17B6;
	sub uni17D2178D uni17C4 by uni17D2_178D_17B6;
	sub uni17D2178D uni17C5 by uni17D2_178D_17C5;
	sub uni17D21794 uni17B6 by uni17D2_1794_17B6;
	sub uni17D21794 uni17C4 by uni17D2_1794_17B6;
	sub uni17D21794 uni17C5 by uni17D2_1794_17C5;
	sub uni17D21799 uni17B6 by uni17D2_1799_17B6;
	sub uni17D21799 uni17C4 by uni17D2_1799_17B6;
	sub uni17D21799 uni17C5 by uni17D2_1799_17C5;
	sub uni17D2179F uni17B6 by uni17D2_179F_17B6;
	sub uni17D2179F uni17C4 by uni17D2_179F_17B6;
	sub uni17D2179F uni17C5 by uni17D2_179F_17C5;
} SUB_23;
lookup SUB_24 {
	@SUB_24_0_LA_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D21783 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D21788 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2178D uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D21794 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D21799 uni17D2_179B uni17D2_179C uni17D2179F uni17D2_17A0 uni17D2_17A2];
	sub uni1789' lookup SUB_16 @SUB_24_0_LA_0;
	sub uni1789.a uni17D2_1789' lookup SUB_17;
	@SUB_24_2_IN_0 = [uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178F uni17D2_17A0];
	sub [uni178E uni178E_17B6 uni178E_17C5] @SUB_24_2_IN_0' lookup SUB_18;
	sub uni178E [uni17BB uni17BC uni17BD]' lookup SUB_2;
	@SUB_24_4_BT_0 = [coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_4_BT_0 [uni17BB.b uni17BC.b uni17BD.b]' lookup SUB_3;
	@SUB_24_5_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	sub @SUB_24_5_IN_0' lookup SUB_4 [uni17B6 uni17C4];
	@SUB_24_6_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_6_LA_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_6_IN_0' lookup SUB_4 @SUB_24_6_LA_1 [uni17B6 uni17C4];
	@SUB_24_7_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_7_LA_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_7_IN_0' lookup SUB_4 @SUB_24_7_LA_1 [uni17B6 uni17C4];
	@SUB_24_8_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	sub @SUB_24_8_IN_0' lookup SUB_5 uni17C5;
	@SUB_24_9_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_9_LA_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_9_IN_0' lookup SUB_5 @SUB_24_9_LA_1 uni17C5;
	@SUB_24_10_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_10_LA_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_10_IN_0' lookup SUB_5 @SUB_24_10_LA_1 uni17C5;
	@SUB_24_11_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	sub @SUB_24_11_BT_0 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_12_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_12_BT_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_12_BT_0 @SUB_24_12_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_13_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_13_BT_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_13_BT_0 @SUB_24_13_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	sub [uni17A1 uni17D2179F] [uni17D2_1798 uni17D2_17A0]' lookup SUB_7;
	@SUB_24_15_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_15_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_15_IN_0' lookup SUB_4 @SUB_24_15_LA_1 uni17B6;
	@SUB_24_16_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_16_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_16_IN_0' lookup SUB_4 @SUB_24_16_LA_1 uni17C4;
	@SUB_24_17_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_17_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_17_IN_0' lookup SUB_5 @SUB_24_17_LA_1 uni17C5;
	@SUB_24_18_LA_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub uni1789.a' lookup SUB_4 @SUB_24_18_LA_0 [uni17B6 uni17C4];
	@SUB_24_19_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_19_BT_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_19_BT_0 @SUB_24_19_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_20_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_20_BT_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_20_BT_0 @SUB_24_20_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_21_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_21_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_24_22_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_24_22_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni17A1 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789_17B6 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789_17B6 uni17BB.b uni17B6' lookup SUB_6;
} SUB_24;
";
tag = clig;
},
{
code = "script khmr;
language dflt;
lookup SUB_25 {
	sub uni17D2 uni179A by uni17D2179A;
} SUB_25;
lookup SUB_26 {
	@SUB_26_0_LA_0 = [uni1780 uni1781 uni1782 uni1784 uni1785 uni1786 uni1787 uni178A uni178B uni178C uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni17A2];
	@SUB_26_0_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub uni17D2179A' lookup SUB_8 @SUB_26_0_LA_0 @SUB_26_0_LA_1;
	sub [uni17C9 uni17C9.r]' lookup SUB_15 uni17B6.space uni17C6;
} SUB_26;
";
tag = pref;
},
{
code = "script khmr;
language dflt;
lookup SUB_27 {
	sub uni17D2 uni1783 by uni17D21783;
	sub uni17D2 uni1788 by uni17D21788;
	sub uni17D2 uni178D by uni17D2178D;
	sub uni17D2 uni1794 by uni17D21794;
	sub uni17D2 uni1799 by uni17D21799;
	sub uni17D2 uni179F by uni17D2179F;
} SUB_27;
lookup SUB_28 {
	@SUB_28_0_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_28_0_BT_0 [uni17BF uni17C0]' lookup SUB_13;
	sub uni17D21799' lookup SUB_9 uni17C9 uni17B6;
	@SUB_28_2_BT_0 = [uni17D2_1783_17B6 uni17D2_1788_17B6 uni17D2_178D_17B6 uni17D2_1794_17B6 uni17D2_1799_17B6 uni17D2_179F_17B6 uni17D2_1783_17C5 uni17D2_1788_17C5 uni17D2_178D_17C5 uni17D2_1794_17C5 uni17D2_1799_17C5 uni17D2_179F_17C5];
	@SUB_28_2_IN_1 = [uni17C9 uni17CA uni17CC uni17C9.r];
	sub @SUB_28_2_BT_0 @SUB_28_2_IN_1' lookup SUB_10 [uni17B6 uni17C4 uni17C5]' lookup SUB_10;
} SUB_28;
";
tag = pstf;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 2150;
},
{
name = typoDescender;
value = -1120;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2150;
},
{
name = winDescent;
value = 1120;
},
{
name = hheaAscender;
value = 2150;
},
{
name = hheaDescender;
value = -1120;
},
{
name = strikeoutPosition;
value = 498;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01240 22 2 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01229 8 15 7 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01237 6 22 5 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\0121920 1024 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\01264 64 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 6 values pushed */\01231 6 17 5 2 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    263,\012    263,\012    143,\012    143,\012    1303,\012    \"-93\",\012    0,\012    \"-609\",\012    \"-888\",\012    1303,\012    \"-93\",\012    0,\012    \"-659\",\012    \"-888\",\012    291,\012    291,\012    224,\012    224,\012    1456,\012    0,\012    1560,\012    1082,\012    0,\012    \"-416\",\012    1477,\012    \"-21\",\012    1581,\012    1102,\012    \"-21\",\012    \"-437\"\012)";
}
);
id = m01;
metricValues = (
{
pos = 2150;
},
{
pos = 1462;
},
{
pos = 1098;
},
{
},
{
pos = -1120;
},
{
}
);
name = Black;
}
);
glyphs = (
{
glyphname = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(568,205,l),
(473,223,l),
(515,381,l),
(983,381,l),
(1027,223,l),
(932,205,l),
(932,0,l),
(1476,0,l),
(1476,205,l),
(1374,220,l),
(939,1456,l),
(559,1456,l),
(125,220,l),
(23,205,l),
(23,0,l),
(568,0,l)
);
},
{
closed = 1;
nodes = (
(744,1119,l),
(750,1119,l),
(766,1068,l),
(908,627,l),
(589,627,l),
(727,1063,l)
);
}
);
width = 1499;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1045,0,o),
(1331,218,o),
(1331,432,qs),
(1331,507,o),
(1279,636,o),
(1169,727,o),
(1082,746,q),
(1184,788,o),
(1282,951,o),
(1282,1054,qs),
(1282,1254,o),
(974,1456,o),
(699,1456,qs),
(191,1456,l),
(40,1456,l),
(40,1250,l),
(191,1218,l),
(191,237,l),
(40,205,l),
(40,0,l),
(773,0,ls)
);
},
{
closed = 1;
nodes = (
(790,620,ls),
(858,620,o),
(942,579,o),
(982,496,o),
(982,433,qs),
(982,349,o),
(877,267,o),
(773,267,qs),
(542,267,l),
(542,620,l)
);
},
{
closed = 1;
nodes = (
(699,1188,ls),
(816,1188,o),
(931,1105,o),
(931,1014,qs),
(931,931,o),
(808,852,o),
(684,852,qs),
(542,852,l),
(542,1188,l)
);
}
);
width = 1358;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1201,68,o),
(1288,128,q),
(1288,495,l),
(1032,495,l),
(997,289,l),
(940,268,o),
(818,243,o),
(759,243,qs),
(648,243,o),
(479,357,o),
(385,560,o),
(385,694,qs),
(385,763,ls),
(385,906,o),
(476,1107,o),
(642,1213,o),
(753,1213,qs),
(802,1213,o),
(887,1195,o),
(962,1161,o),
(996,1138,q),
(1031,923,l),
(1286,923,l),
(1286,1298,l),
(1168,1396,o),
(893,1477,o),
(741,1477,qs),
(523,1477,o),
(206,1294,o),
(35,971,o),
(35,761,qs),
(35,694,ls),
(35,466,o),
(221,147,o),
(547,-21,o),
(755,-21,qs),
(931,-21,o)
);
}
);
width = 1340;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(919,0,o),
(1223,182,o),
(1395,505,o),
(1395,716,qs),
(1395,739,ls),
(1395,950,o),
(1223,1273,o),
(919,1456,o),
(722,1456,qs),
(193,1456,l),
(40,1456,l),
(40,1250,l),
(193,1212,l),
(193,242,l),
(40,205,l),
(40,0,l),
(722,0,ls)
);
},
{
closed = 1;
nodes = (
(704,1189,ls),
(815,1189,o),
(965,1077,o),
(1042,875,o),
(1042,740,qs),
(1042,716,ls),
(1042,581,o),
(965,378,o),
(815,266,o),
(704,266,qs),
(544,266,l),
(544,1189,l)
);
}
);
width = 1470;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1219,428,l),
(957,428,l),
(949,271,l),
(542,271,l),
(542,618,l),
(1007,618,l),
(1007,887,l),
(542,887,l),
(542,1186,l),
(930,1186,l),
(938,1036,l),
(1203,1036,l),
(1203,1456,l),
(40,1456,l),
(40,1250,l),
(191,1218,l),
(191,237,l),
(40,205,l),
(40,0,l),
(1219,0,l)
);
}
);
width = 1309;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(693,205,l),
(542,237,l),
(542,581,l),
(1037,581,l),
(1037,849,l),
(542,849,l),
(542,1186,l),
(967,1186,l),
(974,1027,l),
(1239,1027,l),
(1239,1456,l),
(40,1456,l),
(40,1250,l),
(191,1218,l),
(191,237,l),
(40,205,l),
(40,0,l),
(693,0,l)
);
}
);
width = 1271;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1200,54,o),
(1318,130,q),
(1318,734,l),
(802,734,l),
(802,492,l),
(966,472,l),
(966,284,l),
(931,268,o),
(807,242,o),
(744,242,qs),
(624,242,o),
(460,348,o),
(375,542,o),
(375,674,qs),
(375,742,ls),
(375,882,o),
(456,1094,o),
(618,1213,o),
(738,1213,qs),
(816,1213,o),
(941,1167,o),
(975,1132,q),
(1028,947,l),
(1278,947,l),
(1278,1288,l),
(1164,1386,o),
(864,1477,o),
(715,1477,qs),
(497,1477,o),
(189,1289,o),
(27,957,o),
(27,740,qs),
(27,674,ls),
(27,468,o),
(191,155,o),
(504,-21,o),
(730,-21,qs),
(903,-21,o)
);
}
);
width = 1390;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(693,205,l),
(542,237,l),
(542,581,l),
(1072,581,l),
(1072,237,l),
(921,205,l),
(921,0,l),
(1573,0,l),
(1573,205,l),
(1422,237,l),
(1422,1218,l),
(1573,1250,l),
(1573,1456,l),
(1422,1456,l),
(1072,1456,l),
(921,1456,l),
(921,1250,l),
(1072,1218,l),
(1072,850,l),
(542,850,l),
(542,1218,l),
(693,1250,l),
(693,1456,l),
(40,1456,l),
(40,1250,l),
(191,1218,l),
(191,237,l),
(40,205,l),
(40,0,l),
(693,0,l)
);
}
);
width = 1613;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(692,205,l),
(541,237,l),
(541,1218,l),
(692,1250,l),
(692,1456,l),
(40,1456,l),
(40,1250,l),
(191,1218,l),
(191,237,l),
(40,205,l),
(40,0,l),
(692,0,l)
);
}
);
width = 732;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(956,93,o),
(1070,305,o),
(1070,452,qs),
(1070,1218,l),
(1222,1250,l),
(1222,1456,l),
(523,1456,l),
(523,1251,l),
(721,1218,l),
(721,452,ls),
(721,380,o),
(667,291,o),
(584,251,o),
(539,251,qs),
(461,251,o),
(358,348,o),
(348,489,q),
(21,489,l),
(19,483,l),
(25,310,o),
(164,87,o),
(413,-21,o),
(584,-21,qs),
(739,-21,o)
);
}
);
width = 1222;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1514,1250,l),
(1514,1456,l),
(834,1456,l),
(834,1250,l),
(999,1239,l),
(998,1237,l),
(272,522,l),
(451,317,l),
(1377,1221,l)
);
},
{
closed = 1;
nodes = (
(680,205,l),
(542,237,l),
(542,1218,l),
(680,1250,l),
(680,1456,l),
(40,1456,l),
(40,1250,l),
(191,1218,l),
(191,237,l),
(40,205,l),
(40,0,l),
(680,0,l)
);
},
{
closed = 1;
nodes = (
(1567,205,l),
(1418,230,l),
(908,912,l),
(663,695,l),
(1013,216,l),
(1011,216,l),
(865,205,l),
(865,0,l),
(1567,0,l)
);
}
);
width = 1573;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1164,472,l),
(896,472,l),
(888,269,l),
(542,269,l),
(542,1218,l),
(726,1250,l),
(726,1456,l),
(542,1456,l),
(191,1456,l),
(40,1456,l),
(40,1250,l),
(191,1218,l),
(191,237,l),
(40,205,l),
(40,0,l),
(1164,0,l)
);
}
);
width = 1194;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(685,205,l),
(516,237,l),
(516,475,l),
(492,1099,l),
(499,1100,l),
(917,0,l),
(1193,0,l),
(1605,1113,l),
(1611,1112,l),
(1603,427,l),
(1603,237,l),
(1446,205,l),
(1446,0,l),
(2098,0,l),
(2098,205,l),
(1947,237,l),
(1947,1218,l),
(2098,1250,l),
(2098,1456,l),
(1419,1456,l),
(1077,497,l),
(1071,497,l),
(719,1456,l),
(182,1456,l),
(32,1456,l),
(32,1250,l),
(182,1218,l),
(182,237,l),
(32,205,l),
(32,0,l),
(685,0,l)
);
}
);
width = 2118;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(692,205,l),
(500,237,l),
(500,912,l),
(506,912,l),
(1101,0,l),
(1447,0,l),
(1447,1218,l),
(1598,1250,l),
(1598,1456,l),
(1447,1456,l),
(945,1456,l),
(945,1250,l),
(1136,1218,l),
(1136,524,l),
(1130,524,l),
(546,1456,l),
(189,1456,l),
(39,1456,l),
(39,1250,l),
(189,1218,l),
(189,237,l),
(39,205,l),
(39,0,l),
(692,0,l)
);
}
);
width = 1611;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1154,90,o),
(1344,290,o),
(1450,559,o),
(1450,717,qs),
(1450,740,ls),
(1450,897,o),
(1344,1165,o),
(1153,1365,o),
(899,1477,o),
(751,1477,qs),
(600,1477,o),
(348,1365,o),
(163,1165,o),
(62,897,o),
(62,740,qs),
(62,717,ls),
(62,559,o),
(163,290,o),
(349,90,o),
(602,-21,o),
(753,-21,qs),
(900,-21,o)
);
},
{
closed = 1;
nodes = (
(486,362,o),
(413,575,o),
(413,717,qs),
(413,742,ls),
(413,884,o),
(485,1094,o),
(634,1210,o),
(751,1210,qs),
(862,1210,o),
(1018,1092,o),
(1101,881,o),
(1101,742,qs),
(1101,717,ls),
(1101,575,o),
(1019,363,o),
(863,245,o),
(753,245,qs),
(637,245,o)
);
}
);
width = 1505;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(693,205,l),
(542,237,l),
(542,493,l),
(748,493,ls),
(922,493,o),
(1178,613,o),
(1317,829,o),
(1317,973,qs),
(1317,1117,o),
(1178,1334,o),
(922,1456,o),
(748,1456,qs),
(191,1456,l),
(40,1456,l),
(40,1250,l),
(191,1218,l),
(191,237,l),
(40,205,l),
(40,0,l),
(693,0,l)
);
},
{
closed = 1;
nodes = (
(748,1188,ls),
(855,1188,o),
(966,1066,o),
(966,971,qs),
(966,879,o),
(855,762,o),
(748,762,qs),
(542,762,l),
(542,1188,l)
);
}
);
width = 1342;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1171,120,l),
(1290,219,o),
(1454,532,o),
(1454,717,qs),
(1454,740,ls),
(1454,897,o),
(1348,1166,o),
(1157,1366,o),
(903,1477,o),
(755,1477,qs),
(604,1477,o),
(351,1366,o),
(166,1166,o),
(65,897,o),
(65,740,qs),
(65,717,ls),
(65,558,o),
(166,289,o),
(351,90,o),
(605,-21,o),
(757,-21,qs),
(786,-21,o),
(848,-16,o),
(880,-13,q),
(1328,-303,l),
(1492,-67,l)
);
},
{
closed = 1;
nodes = (
(490,362,o),
(416,575,o),
(416,717,qs),
(416,742,ls),
(416,884,o),
(487,1094,o),
(637,1210,o),
(755,1210,qs),
(866,1210,o),
(1022,1092,o),
(1105,881,o),
(1105,742,qs),
(1105,717,ls),
(1105,575,o),
(1025,363,o),
(870,245,o),
(757,245,qs),
(642,245,o)
);
}
);
width = 1494;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(693,205,l),
(542,237,l),
(542,528,l),
(785,525,ls),
(940,524,o),
(1182,657,o),
(1321,877,o),
(1321,1005,qs),
(1321,1144,o),
(1183,1347,o),
(929,1457,o),
(756,1457,qs),
(40,1457,l),
(40,1250,l),
(191,1218,l),
(191,237,l),
(40,205,l),
(40,0,l),
(693,0,l)
);
},
{
closed = 1;
nodes = (
(1386,204,l),
(1248,239,l),
(1071,672,l),
(766,568,l),
(962,0,l),
(1386,0,l)
);
},
{
closed = 1;
nodes = (
(756,1188,ls),
(860,1188,o),
(972,1075,o),
(972,982,qs),
(972,892,o),
(862,797,o),
(760,797,qs),
(542,797,l),
(542,1188,l)
);
}
);
width = 1422;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1093,74,o),
(1233,255,o),
(1233,384,qs),
(1233,572,o),
(976,791,o),
(728,864,q),
(624,904,o),
(508,965,o),
(462,1026,o),
(462,1065,qs),
(462,1113,o),
(517,1177,o),
(612,1209,o),
(673,1209,qs),
(744,1209,o),
(870,1181,o),
(904,1164,q),
(945,969,l),
(1205,969,l),
(1205,1320,l),
(1100,1400,o),
(826,1479,o),
(648,1475,qs),
(492,1472,o),
(250,1368,o),
(112,1187,o),
(112,1066,qs),
(112,940,o),
(229,770,o),
(469,646,o),
(656,586,q),
(739,554,o),
(837,493,o),
(880,425,o),
(880,382,qs),
(880,337,o),
(834,273,o),
(744,240,o),
(677,240,qs),
(581,240,o),
(419,289,o),
(387,325,q),
(357,519,l),
(86,519,l),
(86,141,l),
(223,47,o),
(499,-21,o),
(677,-21,qs),
(843,-21,o)
);
}
);
width = 1272;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1016,205,l),
(864,237,l),
(864,1184,l),
(1091,1184,l),
(1099,1027,l),
(1367,1027,l),
(1367,1456,l),
(14,1456,l),
(14,1027,l),
(279,1027,l),
(288,1184,l),
(513,1184,l),
(513,237,l),
(361,205,l),
(361,0,l),
(1016,0,l)
);
}
);
width = 1379;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1250,102,o),
(1406,337,o),
(1406,503,qs),
(1406,1218,l),
(1557,1250,l),
(1557,1456,l),
(905,1456,l),
(905,1250,l),
(1055,1218,l),
(1055,503,ls),
(1055,415,o),
(994,300,o),
(875,244,o),
(787,244,qs),
(702,244,o),
(583,300,o),
(521,415,o),
(521,503,qs),
(521,1218,l),
(672,1250,l),
(672,1456,l),
(20,1456,l),
(20,1250,l),
(170,1218,l),
(170,503,ls),
(170,334,o),
(322,100,o),
(601,-21,o),
(789,-21,qs),
(973,-21,o)
);
}
);
width = 1575;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1397,1234,l),
(1539,1250,l),
(1539,1456,l),
(929,1456,l),
(929,1250,l),
(1085,1230,l),
(832,409,l),
(819,355,l),
(813,355,l),
(799,412,l),
(538,1230,l),
(668,1250,l),
(668,1456,l),
(15,1456,l),
(15,1250,l),
(153,1234,l),
(609,0,l),
(989,0,l)
);
}
);
width = 1552;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1090,747,l),
(1129,857,l),
(1135,857,l),
(1166,753,l),
(1417,0,l),
(1730,0,l),
(2081,1235,l),
(2236,1250,l),
(2236,1456,l),
(1592,1456,l),
(1592,1250,l),
(1759,1227,l),
(1589,536,l),
(1572,473,l),
(1566,473,l),
(1545,536,l),
(1245,1456,l),
(1003,1456,l),
(718,577,l),
(694,482,l),
(688,482,l),
(665,576,l),
(506,1227,l),
(668,1250,l),
(668,1456,l),
(11,1456,l),
(11,1250,l),
(176,1235,l),
(512,0,l),
(835,0,l)
);
}
);
width = 2247;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(623,205,l),
(508,217,l),
(741,523,l),
(965,217,l),
(849,205,l),
(849,0,l),
(1497,0,l),
(1497,205,l),
(1353,232,l),
(947,752,l),
(1306,1223,l),
(1432,1250,l),
(1432,1456,l),
(818,1456,l),
(818,1250,l),
(951,1237,l),
(737,948,l),
(531,1237,l),
(671,1250,l),
(671,1456,l),
(42,1456,l),
(42,1250,l),
(154,1223,l),
(524,710,l),
(137,231,l),
(8,205,l),
(8,0,l),
(623,0,l)
);
}
);
width = 1505;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1094,205,l),
(942,237,l),
(942,508,l),
(1360,1229,l),
(1514,1250,l),
(1514,1456,l),
(896,1456,l),
(896,1250,l),
(1048,1234,l),
(814,832,l),
(790,784,l),
(781,784,l),
(758,835,l),
(558,1234,l),
(648,1250,l),
(648,1456,l),
(18,1456,l),
(18,1250,l),
(170,1229,l),
(592,480,l),
(592,237,l),
(441,205,l),
(441,0,l),
(1094,0,l)
);
}
);
width = 1537;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1230,441,l),
(968,441,l),
(940,268,l),
(503,268,l),
(1186,1245,l),
(1186,1456,l),
(108,1456,l),
(89,1002,l),
(352,1002,l),
(378,1187,l),
(745,1187,l),
(64,219,l),
(64,0,l),
(1201,0,l)
);
}
);
width = 1244;
}
);
note = Z;
unicode = 90;
},
{
glyphname = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(642,47,o),
(691,108,q),
(697,78,o),
(727,18,o),
(740,0,q),
(1150,0,l),
(1150,205,l),
(1033,225,l),
(1029,245,o),
(1028,289,o),
(1028,312,qs),
(1028,711,ls),
(1028,899,o),
(768,1102,o),
(547,1102,qs),
(423,1102,o),
(222,1042,o),
(130,1001,q),
(135,700,l),
(382,700,l),
(406,838,l),
(430,854,o),
(489,871,o),
(523,871,qs),
(603,871,o),
(677,780,o),
(677,715,qs),
(677,651,l),
(564,651,ls),
(399,651,o),
(180,562,o),
(71,406,o),
(71,305,qs),
(71,157,o),
(269,-21,o),
(426,-21,qs),
(520,-21,o)
);
},
{
closed = 1;
nodes = (
(420,283,o),
(420,332,qs),
(420,383,o),
(497,445,o),
(568,445,qs),
(677,445,l),
(677,289,l),
(649,258,o),
(572,227,o),
(534,227,qs),
(484,227,o)
);
}
);
width = 1167;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1040,111,o),
(1133,354,o),
(1133,518,qs),
(1133,539,ls),
(1133,711,o),
(1040,964,o),
(861,1102,o),
(732,1102,qs),
(647,1102,o),
(518,1036,o),
(474,975,q),
(474,1560,l),
(-26,1560,l),
(-26,1354,l),
(124,1322,l),
(124,0,l),
(427,0,l),
(450,129,l),
(496,56,o),
(629,-21,o),
(726,-21,qs),
(859,-21,o)
);
},
{
closed = 1;
nodes = (
(500,278,o),
(474,312,q),
(474,747,l),
(495,787,o),
(570,833,o),
(619,833,qs),
(679,833,o),
(751,764,o),
(784,633,o),
(784,539,qs),
(784,518,ls),
(784,382,o),
(709,248,o),
(614,248,qs),
(571,248,o)
);
}
);
width = 1203;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(904,64,o),
(1006,235,o),
(1030,364,q),
(1026,370,l),
(732,370,l),
(713,309,o),
(644,246,o),
(581,246,qs),
(540,246,o),
(462,298,o),
(411,421,o),
(411,528,qs),
(411,551,ls),
(411,654,o),
(449,786,o),
(537,851,o),
(612,851,qs),
(631,851,o),
(688,829,o),
(705,812,q),
(747,616,l),
(1008,616,l),
(1014,957,l),
(950,1008,o),
(729,1102,o),
(574,1102,qs),
(420,1102,o),
(189,962,o),
(60,714,o),
(60,551,qs),
(60,528,ls),
(60,369,o),
(184,121,o),
(416,-21,o),
(577,-21,qs),
(723,-21,o)
);
}
);
width = 1092;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(693,58,o),
(742,134,q),
(768,0,l),
(1198,0,l),
(1198,205,l),
(1072,237,l),
(1072,1560,l),
(721,1560,l),
(569,1560,l),
(569,1354,l),
(721,1322,l),
(721,967,l),
(674,1031,o),
(549,1102,o),
(463,1102,qs),
(339,1102,o),
(158,961,o),
(60,708,o),
(60,539,qs),
(60,518,ls),
(60,356,o),
(157,113,o),
(340,-21,o),
(467,-21,qs),
(559,-21,o)
);
},
{
closed = 1;
nodes = (
(411,389,o),
(411,518,qs),
(411,539,ls),
(411,627,o),
(444,759,o),
(518,833,o),
(578,833,qs),
(623,833,o),
(696,790,o),
(721,749,q),
(721,316,l),
(696,282,o),
(620,248,o),
(576,248,qs),
(483,248,o)
);
}
);
width = 1208;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(929,47,o),
(1002,99,q),
(922,311,l),
(849,277,o),
(718,246,o),
(650,246,qs),
(581,246,o),
(487,292,o),
(434,371,o),
(426,422,q),
(427,429,l),
(1022,429,l),
(1022,610,ls),
(1022,770,o),
(916,989,o),
(713,1102,o),
(566,1102,qs),
(403,1103,o),
(179,960,o),
(63,706,o),
(63,541,qs),
(63,504,ls),
(63,354,o),
(194,116,o),
(431,-21,o),
(590,-21,qs),
(719,-21,o)
);
},
{
closed = 1;
nodes = (
(429,708,o),
(458,797,o),
(521,848,o),
(574,848,qs),
(623,848,o),
(679,808,o),
(702,730,o),
(702,672,qs),
(702,646,l),
(427,646,l),
(423,651,l)
);
}
);
width = 1090;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(757,205,l),
(563,237,l),
(563,840,l),
(814,840,l),
(814,1082,l),
(563,1082,l),
(563,1191,ls),
(563,1249,o),
(631,1311,o),
(700,1311,qs),
(735,1311,o),
(797,1303,o),
(825,1295,q),
(851,1554,l),
(817,1564,o),
(697,1581,o),
(643,1581,qs),
(439,1581,o),
(212,1379,o),
(212,1191,qs),
(212,1082,l),
(56,1082,l),
(56,840,l),
(212,840,l),
(212,237,l),
(85,205,l),
(85,0,l),
(757,0,l)
);
}
);
width = 845;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(941,-317,o),
(1072,-101,o),
(1072,43,qs),
(1072,1082,l),
(763,1082,l),
(741,946,l),
(694,1020,o),
(562,1102,o),
(468,1102,qs),
(341,1102,o),
(158,961,o),
(60,708,o),
(60,539,qs),
(60,518,ls),
(60,356,o),
(159,113,o),
(347,-21,o),
(479,-21,qs),
(556,-21,o),
(675,40,o),
(720,96,q),
(720,45,ls),
(720,-58,o),
(619,-177,o),
(511,-177,qs),
(445,-177,o),
(284,-144,o),
(205,-113,q),
(149,-355,l),
(232,-395,o),
(450,-437,o),
(535,-437,qs),
(700,-437,o)
);
},
{
closed = 1;
nodes = (
(411,389,o),
(411,518,qs),
(411,539,ls),
(411,628,o),
(444,760,o),
(519,833,o),
(582,833,qs),
(626,833,o),
(698,796,o),
(720,760,q),
(720,307,l),
(698,277,o),
(626,248,o),
(582,248,qs),
(485,248,o)
);
},
{
closed = 1;
nodes = (
(1195,1082,l),
(873,1082,l),
(1031,840,l),
(1195,875,l)
);
}
);
width = 1224;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(625,205,l),
(522,237,l),
(522,766,l),
(546,801,o),
(620,833,o),
(666,833,qs),
(733,833,o),
(804,754,o),
(804,648,qs),
(804,237,l),
(701,205,l),
(701,0,l),
(1281,0,l),
(1281,205,l),
(1155,237,l),
(1155,646,ls),
(1155,879,o),
(965,1102,o),
(809,1102,qs),
(714,1102,o),
(570,1021,o),
(522,948,q),
(522,1560,l),
(21,1560,l),
(21,1354,l),
(173,1322,l),
(173,237,l),
(46,205,l),
(46,0,l),
(625,0,l)
);
}
);
width = 1294;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(650,205,l),
(524,237,l),
(524,1082,l),
(22,1082,l),
(22,876,l),
(173,844,l),
(173,237,l),
(46,205,l),
(46,0,l),
(650,0,l)
);
},
{
closed = 1;
nodes = (
(524,1560,l),
(163,1560,l),
(163,1287,l),
(524,1287,l)
);
}
);
width = 667;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(551,-215,o),
(551,-10,qs),
(551,1082,l),
(50,1082,l),
(50,876,l),
(202,844,l),
(202,-10,ls),
(202,-86,o),
(141,-169,o),
(85,-169,qs),
(53,-169,o),
(14,-162,o),
(-12,-156,q),
(-28,-421,l),
(13,-430,o),
(89,-437,o),
(136,-437,qs),
(333,-437,o)
);
},
{
closed = 1;
nodes = (
(547,1560,l),
(186,1560,l),
(186,1287,l),
(547,1287,l)
);
}
);
width = 647;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(616,205,l),
(513,237,l),
(513,1560,l),
(12,1560,l),
(12,1354,l),
(164,1322,l),
(164,237,l),
(36,205,l),
(36,0,l),
(616,0,l)
);
},
{
closed = 1;
nodes = (
(1295,205,l),
(1174,241,l),
(870,651,l),
(632,439,l),
(785,218,l),
(787,214,l),
(721,191,l),
(721,0,l),
(1295,0,l)
);
},
{
closed = 1;
nodes = (
(1275,876,l),
(1275,1082,l),
(652,1082,l),
(652,879,l),
(760,861,l),
(760,860,l),
(290,453,l),
(472,285,l),
(1135,835,l)
);
}
);
width = 1334;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(642,205,l),
(515,237,l),
(515,1560,l),
(12,1560,l),
(12,1354,l),
(164,1322,l),
(164,237,l),
(36,205,l),
(36,0,l),
(642,0,l)
);
}
);
width = 653;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(618,205,l),
(515,237,l),
(515,764,l),
(543,798,o),
(617,833,o),
(662,833,qs),
(720,833,o),
(778,765,o),
(778,670,qs),
(778,237,l),
(688,205,l),
(688,0,l),
(1217,0,l),
(1217,205,l),
(1127,237,l),
(1127,765,l),
(1155,798,o),
(1229,833,o),
(1275,833,qs),
(1331,833,o),
(1390,765,o),
(1390,670,qs),
(1390,237,l),
(1287,205,l),
(1287,0,l),
(1868,0,l),
(1868,205,l),
(1740,237,l),
(1740,670,ls),
(1740,890,o),
(1560,1102,o),
(1403,1102,qs),
(1298,1102,o),
(1143,1010,o),
(1094,926,q),
(1057,1015,o),
(912,1102,o),
(811,1102,qs),
(711,1102,o),
(559,1016,o),
(506,938,q),
(495,1082,l),
(14,1082,l),
(14,876,l),
(166,844,l),
(166,237,l),
(38,205,l),
(38,0,l),
(618,0,l)
);
}
);
width = 1880;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(605,205,l),
(515,237,l),
(515,763,l),
(541,798,o),
(611,833,o),
(660,833,qs),
(725,833,o),
(795,760,o),
(795,673,qs),
(795,237,l),
(693,205,l),
(693,0,l),
(1273,0,l),
(1273,205,l),
(1147,237,l),
(1147,672,ls),
(1147,896,o),
(971,1102,o),
(819,1102,qs),
(719,1102,o),
(562,1012,o),
(508,931,q),
(496,1082,l),
(14,1082,l),
(14,876,l),
(164,844,l),
(164,237,l),
(38,205,l),
(38,0,l),
(605,0,l)
);
}
);
width = 1285;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(989,119,o),
(1114,368,o),
(1114,531,qs),
(1114,551,ls),
(1114,714,o),
(989,962,o),
(754,1102,o),
(587,1102,qs),
(421,1102,o),
(185,961,o),
(60,713,o),
(60,551,qs),
(60,531,ls),
(60,367,o),
(185,118,o),
(422,-21,o),
(589,-21,qs),
(754,-21,o)
);
},
{
closed = 1;
nodes = (
(445,314,o),
(411,442,o),
(411,531,qs),
(411,551,ls),
(411,636,o),
(445,763,o),
(523,834,o),
(587,834,qs),
(652,834,o),
(730,763,o),
(765,636,o),
(765,551,qs),
(765,531,ls),
(765,443,o),
(730,315,o),
(653,246,o),
(589,246,qs),
(523,246,o)
);
}
);
width = 1174;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(668,-210,l),
(546,-178,l),
(546,97,l),
(590,39,o),
(711,-21,o),
(791,-21,qs),
(922,-21,o),
(1108,113,o),
(1207,356,o),
(1207,518,qs),
(1207,539,ls),
(1207,707,o),
(1108,961,o),
(924,1102,o),
(796,1102,qs),
(706,1102,o),
(582,1028,o),
(538,960,q),
(526,1082,l),
(45,1082,l),
(45,876,l),
(197,844,l),
(197,-178,l),
(63,-210,l),
(63,-416,l),
(668,-416,l)
);
},
{
closed = 1;
nodes = (
(567,279,o),
(546,312,q),
(546,753,l),
(567,793,o),
(640,833,o),
(685,833,qs),
(747,833,o),
(822,760,o),
(856,628,o),
(856,539,qs),
(856,518,ls),
(856,389,o),
(782,246,o),
(687,246,qs),
(641,246,o)
);
}
);
width = 1267;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1191,-208,l),
(1074,-178,l),
(1074,1082,l),
(769,1082,l),
(742,945,l),
(695,1019,o),
(566,1102,o),
(470,1102,qs),
(342,1102,o),
(158,961,o),
(60,708,o),
(60,539,qs),
(60,518,ls),
(60,356,o),
(158,113,o),
(343,-21,o),
(473,-21,qs),
(556,-21,o),
(677,39,o),
(723,99,q),
(723,-178,l),
(547,-216,l),
(547,-416,l),
(1191,-416,l)
);
},
{
closed = 1;
nodes = (
(411,388,o),
(411,518,qs),
(411,539,ls),
(411,628,o),
(444,761,o),
(520,834,o),
(582,834,qs),
(628,834,o),
(700,794,o),
(723,754,q),
(723,312,l),
(700,278,o),
(625,246,o),
(580,246,qs),
(484,246,o)
);
}
);
width = 1167;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(696,205,l),
(570,237,l),
(570,715,l),
(600,746,o),
(659,773,o),
(711,771,qs),
(861,764,l),
(896,1086,l),
(865,1095,o),
(805,1102,o),
(783,1102,qs),
(703,1102,o),
(596,1015,o),
(560,923,q),
(558,950,l),
(550,1082,l),
(69,1082,l),
(69,876,l),
(219,844,l),
(219,237,l),
(93,205,l),
(93,0,l),
(696,0,l)
);
}
);
width = 906;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(983,166,o),
(983,326,qs),
(983,475,o),
(796,621,o),
(611,662,qs),
(534,679,o),
(454,719,o),
(427,763,o),
(427,785,qs),
(427,823,o),
(489,871,o),
(556,871,qs),
(592,871,o),
(650,855,o),
(673,839,q),
(703,699,l),
(939,699,l),
(940,1025,l),
(869,1057,o),
(648,1099,o),
(526,1099,qs),
(366,1099,o),
(175,1004,o),
(91,850,o),
(91,759,qs),
(91,625,o),
(271,446,o),
(461,409,qs),
(580,387,o),
(653,330,o),
(653,296,qs),
(653,261,o),
(589,215,o),
(504,215,qs),
(458,215,o),
(392,234,o),
(371,247,q),
(331,404,l),
(94,404,l),
(98,67,l),
(187,26,o),
(408,-21,o),
(536,-21,qs),
(754,-21,o)
);
}
);
width = 1041;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(650,-8,o),
(696,5,q),
(672,267,l),
(654,264,o),
(618,260,o),
(600,260,qs),
(558,260,o),
(510,302,o),
(510,355,qs),
(510,840,l),
(687,840,l),
(687,1082,l),
(510,1082,l),
(510,1349,l),
(161,1349,l),
(161,1082,l),
(26,1082,l),
(26,840,l),
(161,840,l),
(161,354,ls),
(161,158,o),
(338,-23,o),
(508,-23,qs),
(557,-23,o)
);
}
);
width = 738;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(746,53,o),
(798,123,q),
(821,0,l),
(1261,0,l),
(1261,205,l),
(1126,237,l),
(1126,1082,l),
(775,1082,l),
(657,1082,l),
(657,876,l),
(775,844,l),
(775,306,l),
(745,277,o),
(668,248,o),
(629,248,qs),
(562,248,o),
(495,331,o),
(495,411,qs),
(495,1082,l),
(144,1082,l),
(28,1082,l),
(28,876,l),
(144,844,l),
(144,413,ls),
(144,191,o),
(336,-21,o),
(504,-21,qs),
(597,-21,o)
);
}
);
width = 1293;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1132,852,l),
(1256,876,l),
(1256,1082,l),
(688,1082,l),
(688,877,l),
(813,856,l),
(662,444,l),
(635,362,l),
(629,362,l),
(607,444,l),
(492,857,l),
(589,877,l),
(589,1082,l),
(20,1082,l),
(20,876,l),
(140,856,l),
(431,0,l),
(804,0,l)
);
}
);
width = 1272;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(877,464,l),
(901,550,l),
(907,550,l),
(932,465,l),
(1117,0,l),
(1399,0,l),
(1671,847,l),
(1801,876,l),
(1801,1082,l),
(1242,1082,l),
(1242,877,l),
(1362,853,l),
(1265,493,l),
(1252,445,l),
(1246,445,l),
(1231,493,l),
(1021,1082,l),
(806,1082,l),
(593,508,l),
(576,453,l),
(570,453,l),
(559,508,l),
(489,855,l),
(591,877,l),
(591,1082,l),
(21,1082,l),
(21,876,l),
(160,845,l),
(391,0,l),
(706,0,l)
);
}
);
width = 1821;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(656,192,l),
(579,205,l),
(701,362,l),
(824,207,l),
(753,192,l),
(753,0,l),
(1367,0,l),
(1367,205,l),
(1221,220,l),
(930,557,l),
(1197,862,l),
(1324,876,l),
(1324,1082,l),
(745,1082,l),
(745,889,l),
(824,874,l),
(704,713,l),
(587,875,l),
(656,889,l),
(656,1082,l),
(51,1082,l),
(51,876,l),
(196,862,l),
(475,539,l),
(173,220,l),
(23,205,l),
(23,0,l),
(656,0,l)
);
}
);
width = 1391;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(667,-358,o),
(765,-231,o),
(794,-158,qs),
(1199,858,l),
(1327,876,l),
(1327,1082,l),
(736,1082,l),
(736,876,l),
(860,859,l),
(689,410,l),
(683,410,l),
(681,418,l),
(536,856,l),
(670,876,l),
(670,1082,l),
(20,1082,l),
(20,876,l),
(165,855,l),
(513,-33,l),
(503,-71,ls),
(490,-120,o),
(391,-167,o),
(327,-167,qs),
(307,-167,o),
(270,-162,o),
(250,-157,q),
(208,-408,l),
(257,-422,o),
(350,-437,o),
(396,-437,qs),
(511,-437,o)
);
}
);
width = 1343;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1064,455,l),
(823,455,l),
(769,246,l),
(559,246,l),
(1051,862,l),
(1051,1082,l),
(119,1082,l),
(119,659,l),
(374,659,l),
(412,846,l),
(635,846,l),
(88,193,l),
(88,0,l),
(1064,0,l)
);
}
);
width = 1154;
}
);
note = z;
unicode = 122;
},
{
glyphname = uni1780;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1161,962,qs),
(1280,962,o),
(1336,1182,q),
(1280,1182,ls),
(1224,1182,o),
(1181,1212,qs),
(993,1350,l),
(902,1350,l),
(750,1198,l),
(541,1350,l),
(439,1350,l),
(106,1123,l),
(106,1059,l),
(214,950,l),
(247,921,o),
(343,921,qs),
(345,921,ls),
(378,921,o),
(429,1010,q),
(311,1108,l),
(370,1148,l),
(632,954,l),
(689,954,l),
(836,1120,l),
(999,999,ls),
(1049,962,o)
);
},
{
closed = 1;
nodes = (
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,0,l),
(1253,0,l),
(1253,658,ls),
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,0,l),
(532,0,l),
(532,658,ls)
);
}
);
width = 1442;
}
);
note = uni1780;
unicode = 6016;
},
{
glyphname = uni1781;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(829,775,o),
(189,488,q),
(189,272,ls),
(189,0,o),
(651,0,qs),
(791,0,ls),
(1253,0,o),
(1253,272,qs),
(1253,585,l),
(911,495,l),
(911,272,ls),
(911,198,o),
(791,198,qs),
(651,198,ls),
(532,198,o),
(532,272,qs),
(532,438,l),
(1131,715,o),
(1253,892,o),
(1253,965,qs),
(1253,1089,ls),
(1253,1350,o),
(791,1350,qs),
(651,1350,ls),
(189,1350,o),
(189,1089,qs),
(189,868,ls),
(189,820,o),
(230,796,qs),
(271,772,o),
(362,772,qs),
(532,772,ls),
(602,772,o),
(637,808,qs),
(672,844,o),
(672,916,qs),
(672,976,o),
(637,1007,qs),
(602,1037,o),
(532,1037,q),
(532,1089,ls),
(532,1152,o),
(651,1152,qs),
(791,1152,ls),
(911,1152,o),
(911,1089,qs),
(911,965,ls),
(910,903,o)
);
}
);
width = 1442;
}
);
note = uni1781;
unicode = 6017;
},
{
glyphname = uni1782;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1161,962,qs),
(1280,962,o),
(1336,1182,q),
(1280,1182,ls),
(1224,1182,o),
(1181,1212,qs),
(993,1350,l),
(902,1350,l),
(750,1198,l),
(541,1350,l),
(439,1350,l),
(106,1123,l),
(106,1059,l),
(214,950,l),
(247,921,o),
(343,921,qs),
(345,921,ls),
(378,921,o),
(429,1010,q),
(311,1108,l),
(370,1148,l),
(632,954,l),
(689,954,l),
(836,1120,l),
(999,999,ls),
(1049,962,o)
);
},
{
closed = 1;
nodes = (
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,0,l),
(1253,0,l),
(1253,658,ls),
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,0,l),
(532,0,l),
(532,65,l),
(557,110,ls),
(592,173,o),
(626,202,qs),
(660,229,o),
(724,229,qs),
(788,229,o),
(811,287,qs),
(821,311,o),
(821,370,qs),
(821,428,o),
(800,453,qs),
(765,497,o),
(708,498,qs),
(661,498,o),
(615,468,qs),
(586,450,o),
(532,344,q),
(532,658,ls)
);
}
);
width = 1442;
}
);
note = uni1782;
unicode = 6018;
},
{
glyphname = uni1783;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,292,qs),
(1253,900,l),
(970,1039,l),
(1000,1088,l),
(1146,1013,o),
(1242,1013,qs),
(1329,1013,o),
(1366,1230,q),
(1261,1230,o),
(1199,1260,qs),
(1014,1350,l),
(807,1062,l),
(807,911,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,1350,l),
(189,1350,l),
(90,1186,o),
(66,1138,qs),
(43,1090,o),
(43,1050,qs),
(43,892,o),
(189,892,q),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(965,0,o),
(1082,48,q),
(1199,0,o),
(1396,0,qs),
(1489,0,ls),
(1974,0,o),
(1974,292,qs),
(1974,900,l),
(1691,1039,l),
(1721,1088,l),
(1867,1013,o),
(1963,1013,qs),
(2050,1013,o),
(2087,1230,q),
(1982,1230,o),
(1920,1260,qs),
(1735,1350,l),
(1528,1062,l),
(1528,911,l),
(1631,861,l),
(1631,292,ls)
);
}
);
width = 2164;
}
);
note = uni1783;
unicode = 6019;
},
{
glyphname = uni1784;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(324,1536,qs),
(116,1536,o),
(116,1420,q),
(189,1420,o),
(189,1341,qs),
(189,1206,ls),
(189,965,o),
(598,965,qs),
(807,965,l),
(910,872,l),
(910,238,l),
(721,403,l),
(532,238,l),
(532,868,l),
(189,868,l),
(66,732,o),
(66,602,qs),
(66,482,o),
(189,482,q),
(189,0,l),
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,940,l),
(1014,1076,l),
(1069,1132,o),
(1069,1184,qs),
(1069,1267,o),
(1026,1309,qs),
(983,1350,o),
(848,1350,qs),
(762,1350,o),
(719,1309,qs),
(675,1267,o),
(675,1217,qs),
(675,1182,o),
(690,1163,q),
(598,1163,ls),
(532,1163,o),
(532,1206,qs),
(532,1341,ls),
(532,1536,o)
);
}
);
width = 1442;
}
);
note = uni1784;
unicode = 6020;
},
{
glyphname = uni1785;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,912,l),
(289,1096,l),
(370,1148,l),
(632,954,l),
(689,954,l),
(836,1120,l),
(999,999,ls),
(1049,962,o),
(1161,962,qs),
(1280,962,o),
(1336,1182,q),
(1280,1182,ls),
(1224,1182,o),
(1181,1212,qs),
(993,1350,l),
(902,1350,l),
(750,1198,l),
(541,1350,l),
(439,1350,l),
(106,1143,l),
(106,992,l),
(189,918,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(910,526,q),
(910,292,ls)
);
}
);
width = 1442;
}
);
note = uni1785;
unicode = 6021;
},
{
glyphname = uni1786;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(289,1096,l),
(370,1148,l),
(632,954,l),
(689,954,l),
(836,1120,l),
(999,999,ls),
(1049,962,o),
(1161,962,qs),
(1280,962,o),
(1336,1182,q),
(1280,1182,ls),
(1224,1182,o),
(1181,1212,qs),
(993,1350,l),
(902,1350,l),
(750,1198,l),
(541,1350,l),
(439,1350,l),
(106,1143,l),
(106,992,l),
(189,918,l),
(189,489,l),
(139,479,o),
(89,407,o),
(89,286,qs),
(89,164,o),
(209,0,q),
(532,0,l),
(532,306,l),
(601,306,o),
(601,217,qs),
(601,0,o),
(927,0,qs),
(1253,0,o),
(1253,233,qs),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(911,526,q),
(911,424,l),
(910,424,l),
(910,233,ls),
(910,193,o),
(857,193,qs),
(804,193,o),
(804,217,qs),
(804,489,o),
(532,489,q),
(532,912,l)
);
}
);
width = 1442;
}
);
note = uni1786;
unicode = 6022;
},
{
glyphname = uni1787;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(721,403,l),
(532,238,l),
(532,959,l),
(308,1086,l),
(379,1131,l),
(642,985,l),
(838,985,ls),
(1253,985,o),
(1253,1254,qs),
(1253,1487,o),
(997,1487,qs),
(911,1487,o),
(814,1441,o),
(814,1394,q),
(910,1394,o),
(911,1254,qs),
(910,1185,o),
(848,1185,qs),
(805,1185,l),
(505,1350,l),
(403,1350,l),
(106,1150,l),
(106,944,l),
(189,897,l),
(189,0,l),
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,892,l),
(910,892,l),
(910,238,l)
);
}
);
width = 1442;
}
);
note = uni1787;
unicode = 6023;
},
{
glyphname = uni1788;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,282,qs),
(1253,1143,l),
(721,1350,l),
(189,1144,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1093,l),
(601,1119,l),
(910,999,l),
(910,282,ls),
(910,0,o),
(1396,0,qs),
(1489,0,ls),
(1686,0,o),
(1803,46,q),
(1920,0,o),
(2117,0,qs),
(2210,0,ls),
(2695,0,o),
(2695,282,qs),
(2695,900,l),
(2412,1039,l),
(2442,1088,l),
(2588,1013,o),
(2684,1013,qs),
(2771,1013,o),
(2808,1230,q),
(2703,1230,o),
(2641,1260,qs),
(2456,1350,l),
(2249,1062,l),
(2249,911,l),
(2352,861,l),
(2352,282,ls),
(2352,198,o),
(2210,198,qs),
(2117,198,ls),
(1974,198,o),
(1974,282,qs),
(1974,900,l),
(1691,1039,l),
(1721,1088,l),
(1867,1013,o),
(1963,1013,qs),
(2050,1013,o),
(2087,1230,q),
(1982,1230,o),
(1920,1260,qs),
(1735,1350,l),
(1528,1062,l),
(1528,911,l),
(1631,861,l),
(1631,282,ls)
);
}
);
width = 2885;
}
);
note = uni1788;
unicode = 6024;
},
{
glyphname = uni1789;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1743,-93,qs),
(1634,-93,o),
(1516,-170,o),
(1516,-216,q),
(1632,-216,o),
(1632,-279,qs),
(1632,-385,o),
(1522,-385,qs),
(1444,-385,o),
(959,-140,o),
(687,-140,qs),
(415,-140,o),
(189,-223,o),
(189,-270,qs),
(189,-347,l),
(248,-305,o),
(405,-263,o),
(481,-263,qs),
(611,-263,o),
(1096,-559,o),
(1522,-559,qs),
(1809,-559,o),
(1892,-489,qs),
(1975,-419,o),
(1975,-279,qs),
(1975,-93,o)
);
},
{
closed = 1;
nodes = (
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,0,l),
(1253,0,l),
(1253,1022,l),
(1373,1084,l),
(1632,955,l),
(1632,0,l),
(1975,0,l),
(1975,1092,l),
(1443,1350,l),
(1149,1179,l),
(948,1350,l)
);
}
);
width = 2164;
}
);
note = uni1789;
unicode = 6025;
},
{
glyphname = uni178A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,1487,qs),
(861,1487,o),
(837,1464,qs),
(814,1440,o),
(814,1394,q),
(910,1394,o),
(910,1265,qs),
(910,1153,o),
(768,1153,qs),
(675,1153,ls),
(532,1153,o),
(532,1185,qs),
(532,1212,o),
(556,1212,qs),
(579,1212,o),
(579,1185,q),
(626,1185,o),
(648,1203,qs),
(672,1222,o),
(672,1257,qs),
(672,1350,o),
(504,1350,qs),
(189,1350,o),
(189,1185,qs),
(189,955,o),
(675,955,qs),
(768,955,ls),
(1253,955,o),
(1253,1265,qs),
(1253,1487,o)
);
},
{
closed = 1;
nodes = (
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,871,l),
(910,871,l),
(910,238,l),
(721,403,l),
(532,238,l),
(532,871,l),
(189,871,l),
(189,0,l)
);
}
);
width = 1442;
}
);
note = uni178A;
unicode = 6026;
},
{
glyphname = uni178B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1103,973,l),
(952,1045,l),
(986,1092,l),
(1137,1013,o),
(1202,1013,qs),
(1259,1013,o),
(1355,1173,o),
(1355,1316,qs),
(1355,1421,o),
(1266,1545,o),
(1166,1545,qs),
(1099,1545,o),
(1053,1469,o),
(1053,1412,q),
(1123,1412,o),
(1157,1384,qs),
(1192,1355,o),
(1192,1316,qs),
(1192,1290,o),
(1179,1272,q),
(994,1350,l),
(787,1062,l),
(787,921,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,1350,l),
(189,1350,l),
(90,1186,o),
(66,1138,qs),
(43,1090,o),
(43,1050,qs),
(43,892,o),
(189,892,q),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,900,l)
);
}
);
width = 1442;
}
);
note = uni178B;
unicode = 6027;
},
{
glyphname = uni178C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,838,ls),
(189,742,o),
(361,742,qs),
(532,742,o),
(532,838,qs),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(911,1013,l),
(911,965,ls),
(910,903,o),
(829,775,o),
(189,488,q),
(189,263,ls),
(189,0,o),
(520,0,qs),
(644,1,l),
(911,190,l),
(911,117,ls),
(911,70,o),
(834,70,q),
(834,-47,o),
(1001,-47,qs),
(1253,-47,o),
(1253,115,qs),
(1253,555,l),
(911,555,l),
(911,407,l),
(610,194,l),
(610,193,l),
(532,193,o),
(532,263,qs),
(532,438,l),
(1131,715,o),
(1253,892,o),
(1253,965,qs),
(1253,1090,l)
);
}
);
width = 1442;
}
);
note = uni178C;
unicode = 6028;
},
{
glyphname = uni178D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1691,1039,l),
(1721,1088,l),
(1867,1013,o),
(1963,1013,qs),
(2050,1013,o),
(2087,1230,q),
(1982,1230,o),
(1920,1260,qs),
(1735,1350,l),
(1528,1062,l),
(1528,911,l),
(1631,861,l),
(1631,233,ls),
(1631,193,o),
(1578,193,qs),
(1525,193,o),
(1525,217,qs),
(1525,489,o),
(1253,489,q),
(1253,1090,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,489,l),
(860,479,o),
(810,407,o),
(810,286,qs),
(810,164,o),
(930,0,q),
(1253,0,l),
(1253,306,l),
(1322,306,o),
(1322,217,qs),
(1322,0,o),
(1648,0,qs),
(1974,0,o),
(1974,233,qs),
(1974,900,l)
);
}
);
width = 2164;
}
);
note = uni178D;
unicode = 6029;
},
{
glyphname = uni178E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1443,166,l),
(1632,0,l),
(1975,0,l),
(1975,1068,l),
(2076,1107,l),
(2353,999,l),
(2353,0,l),
(2696,0,l),
(2696,1143,l),
(2164,1350,l),
(1632,1144,l),
(1632,238,l),
(1443,403,l),
(1254,238,l),
(1254,1143,l),
(721,1350,l),
(189,1144,l),
(189,0,l),
(532,0,l),
(691,163,o),
(691,314,qs),
(691,458,o),
(532,458,q),
(532,1067,l),
(631,1107,l),
(911,999,l),
(911,0,l),
(1254,0,l)
);
}
);
width = 2885;
}
);
note = uni178E;
unicode = 6030;
},
{
glyphname = uni178F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1161,962,qs),
(1280,962,o),
(1336,1182,q),
(1280,1182,ls),
(1224,1182,o),
(1181,1212,qs),
(993,1350,l),
(902,1350,l),
(750,1198,l),
(541,1350,l),
(439,1350,l),
(106,1123,l),
(106,1059,l),
(214,950,l),
(247,921,o),
(343,921,qs),
(345,921,ls),
(378,921,o),
(429,1010,q),
(311,1108,l),
(370,1148,l),
(632,954,l),
(689,954,l),
(836,1120,l),
(999,999,ls),
(1049,962,o)
);
},
{
closed = 1;
nodes = (
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,658,ls),
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,0,l),
(1253,0,l),
(1253,658,ls),
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,0,l)
);
}
);
width = 1442;
}
);
note = uni178F;
unicode = 6031;
},
{
glyphname = uni1790;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,959,l),
(308,1086,l),
(379,1131,l),
(642,985,l),
(838,985,ls),
(1253,985,o),
(1253,1254,qs),
(1253,1487,o),
(997,1487,qs),
(911,1487,o),
(814,1441,o),
(814,1394,q),
(910,1394,o),
(911,1254,qs),
(910,1185,o),
(848,1185,qs),
(805,1185,l),
(505,1350,l),
(403,1350,l),
(106,1150,l),
(106,944,l),
(189,897,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(910,526,q),
(910,292,ls)
);
}
);
width = 1442;
}
);
note = uni1790;
unicode = 6032;
},
{
glyphname = uni1791;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(848,988,qs),
(848,916,o),
(1051,916,qs),
(1253,916,o),
(1253,1068,qs),
(1253,1350,o),
(721,1350,qs),
(189,1350,o),
(189,1068,qs),
(189,844,ls),
(189,512,o),
(722,512,qs),
(779,512,l),
(779,290,ls),
(779,199,o),
(707,199,qs),
(635,199,o),
(635,240,qs),
(635,290,ls),
(635,455,o),
(439,455,qs),
(243,455,o),
(243,339,q),
(292,339,o),
(292,290,qs),
(292,240,ls),
(292,0,o),
(707,0,qs),
(1122,0,o),
(1122,291,qs),
(1122,512,l),
(1253,512,o),
(1253,663,qs),
(1253,814,o),
(1016,814,qs),
(779,814,o),
(779,710,q),
(722,710,ls),
(532,710,o),
(532,844,qs),
(532,1068,ls),
(532,1162,o),
(721,1162,qs),
(911,1162,o),
(911,1068,q),
(848,1061,o)
);
}
);
width = 1442;
}
);
note = uni1791;
unicode = 6033;
},
{
glyphname = uni1792;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(910,526,q),
(910,238,l),
(721,403,l),
(532,238,l),
(532,912,l),
(289,1096,l),
(370,1148,l),
(632,954,l),
(689,954,l),
(836,1120,l),
(999,999,ls),
(1049,962,o),
(1161,962,qs),
(1280,962,o),
(1336,1182,q),
(1280,1182,ls),
(1224,1182,o),
(1181,1212,qs),
(993,1350,l),
(902,1350,l),
(750,1198,l),
(541,1350,l),
(439,1350,l),
(106,1143,l),
(106,992,l),
(189,918,l),
(189,0,l)
);
}
);
width = 1442;
}
);
note = uni1792;
unicode = 6034;
},
{
glyphname = uni1793;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,903,o),
(531,965,qs),
(531,1089,ls),
(531,1152,o),
(651,1152,qs),
(791,1152,ls),
(910,1152,o),
(910,1089,qs),
(910,1037,l),
(880,1037,o),
(845,1007,qs),
(810,976,o),
(810,916,qs),
(810,844,o),
(845,808,qs),
(880,772,o),
(950,772,qs),
(1120,772,ls),
(1171,772,o),
(1212,796,qs),
(1253,820,o),
(1253,868,qs),
(1253,1089,ls),
(1253,1350,o),
(791,1350,qs),
(651,1350,ls),
(189,1350,o),
(189,1089,qs),
(189,965,ls),
(189,892,o),
(271,765,o),
(911,438,q),
(911,245,ls),
(911,199,o),
(857,199,qs),
(802,199,o),
(596,389,o),
(532,389,q),
(532,563,l),
(189,563,l),
(189,0,l),
(532,0,l),
(532,191,l),
(569,191,o),
(774,0,o),
(887,0,qs),
(1253,0,o),
(1253,245,qs),
(1253,458,l),
(603,805,o)
);
}
);
width = 1442;
}
);
note = uni1793;
unicode = 6035;
},
{
glyphname = uni1794;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1253,292,qs),
(1253,900,l),
(970,1039,l),
(1000,1088,l),
(1146,1013,o),
(1242,1013,qs),
(1329,1013,o),
(1366,1230,q),
(1261,1230,o),
(1199,1260,qs),
(1014,1350,l),
(807,1062,l),
(807,911,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,900,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o)
);
}
);
width = 1442;
}
);
note = uni1794;
unicode = 6036;
},
{
glyphname = uni1795;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(910,526,q),
(910,238,l),
(721,403,l),
(532,238,l),
(532,959,l),
(308,1086,l),
(379,1131,l),
(642,985,l),
(838,985,ls),
(1253,985,o),
(1253,1254,qs),
(1253,1487,o),
(997,1487,qs),
(911,1487,o),
(814,1441,o),
(814,1394,q),
(910,1394,o),
(911,1254,qs),
(910,1185,o),
(848,1185,qs),
(805,1185,l),
(505,1350,l),
(403,1350,l),
(106,1150,l),
(106,944,l),
(189,897,l),
(189,0,l),
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,888,l)
);
}
);
width = 1442;
}
);
note = uni1795;
unicode = 6037;
},
{
glyphname = uni1796;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,0,l),
(1253,0,l),
(1253,1090,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l)
);
}
);
width = 1442;
}
);
note = uni1796;
unicode = 6038;
},
{
glyphname = uni1797;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1161,962,qs),
(1280,962,o),
(1336,1182,q),
(1280,1182,ls),
(1224,1182,o),
(1181,1212,qs),
(993,1350,l),
(902,1350,l),
(750,1198,l),
(541,1350,l),
(439,1350,l),
(106,1123,l),
(106,1059,l),
(214,950,l),
(247,921,o),
(343,921,qs),
(345,921,ls),
(378,921,o),
(429,1010,q),
(311,1108,l),
(370,1148,l),
(632,954,l),
(689,954,l),
(836,1120,l),
(999,999,ls),
(1049,962,o)
);
},
{
closed = 1;
nodes = (
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,0,l),
(1253,0,l),
(1253,658,ls),
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,658,ls)
);
}
);
width = 1442;
}
);
note = uni1797;
unicode = 6039;
},
{
glyphname = uni1798;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,900,l),
(970,1039,l),
(1000,1088,l),
(1146,1013,o),
(1242,1013,qs),
(1329,1013,o),
(1366,1230,q),
(1261,1230,o),
(1199,1260,qs),
(1014,1350,l),
(807,1062,l),
(807,911,l),
(910,861,l),
(910,749,l),
(532,749,l)
);
},
{
closed = 1;
nodes = (
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,551,l),
(910,551,l),
(910,292,ls)
);
}
);
width = 1442;
}
);
note = uni1798;
unicode = 6040;
},
{
glyphname = uni1799;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(189,0,o),
(675,0,qs),
(768,0,ls),
(965,0,o),
(1082,48,q),
(1199,0,o),
(1396,0,qs),
(1489,0,ls),
(1974,0,o),
(1974,292,qs),
(1974,900,l),
(1691,1039,l),
(1721,1088,l),
(1867,1013,o),
(1963,1013,qs),
(2050,1013,o),
(2087,1230,q),
(1982,1230,o),
(1920,1260,qs),
(1735,1350,l),
(1528,1062,l),
(1528,911,l),
(1631,861,l),
(1631,292,ls),
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,292,qs),
(1253,900,l),
(970,1039,l),
(1000,1088,l),
(1146,1013,o),
(1242,1013,qs),
(1329,1013,o),
(1366,1230,q),
(1261,1230,o),
(1199,1260,qs),
(1014,1350,l),
(807,1062,l),
(807,911,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,892,l),
(678,892,o),
(678,1050,qs),
(678,1090,o),
(655,1138,qs),
(631,1186,o),
(532,1350,q),
(189,1350,l),
(189,292,ls)
);
}
);
width = 2164;
}
);
note = uni1799;
unicode = 6041;
},
{
glyphname = uni179A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,900,l)
);
}
);
width = 721;
}
);
note = uni179A;
unicode = 6042;
},
{
glyphname = uni179B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1691,1039,l),
(1721,1088,l),
(1867,1013,o),
(1963,1013,qs),
(2050,1013,o),
(2087,1230,q),
(1982,1230,o),
(1920,1260,qs),
(1735,1350,l),
(1528,1062,l),
(1528,911,l),
(1631,861,l),
(1631,282,ls),
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,282,qs),
(1253,1143,l),
(721,1350,l),
(189,1144,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1093,l),
(601,1119,l),
(910,999,l),
(910,282,ls),
(910,0,o),
(1396,0,qs),
(1489,0,ls),
(1974,0,o),
(1974,282,qs),
(1974,900,l)
);
}
);
width = 2164;
}
);
note = uni179B;
unicode = 6043;
},
{
glyphname = uni179C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,1062,l),
(66,921,l),
(189,861,l),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(538,1013,o),
(634,1173,o),
(634,1316,qs),
(634,1421,o),
(545,1545,o),
(445,1545,qs),
(378,1545,o),
(332,1469,o),
(332,1412,q),
(402,1412,o),
(436,1384,qs),
(471,1355,o),
(471,1316,qs),
(471,1290,o),
(458,1272,q),
(273,1350,l)
);
}
);
width = 721;
}
);
note = uni179C;
unicode = 6044;
},
{
glyphname = uni179D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1161,962,qs),
(1280,962,o),
(1336,1182,q),
(1280,1182,ls),
(1224,1182,o),
(1181,1212,qs),
(993,1350,l),
(902,1350,l),
(750,1198,l),
(541,1350,l),
(439,1350,l),
(106,1123,l),
(106,1059,l),
(214,950,l),
(247,921,o),
(343,921,qs),
(345,921,ls),
(378,921,o),
(429,1010,q),
(311,1108,l),
(370,1148,l),
(632,954,l),
(689,954,l),
(836,1120,l),
(999,999,ls),
(1049,962,o)
);
},
{
closed = 1;
nodes = (
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,0,l),
(532,0,l),
(532,65,l),
(557,110,ls),
(592,173,o),
(626,202,qs),
(660,229,o),
(724,229,qs),
(788,229,o),
(811,287,qs),
(821,311,o),
(821,370,qs),
(821,428,o),
(800,453,qs),
(765,497,o),
(708,498,qs),
(661,498,o),
(615,468,qs),
(586,450,o),
(532,344,q),
(532,658,ls),
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,469,l),
(831,469,l),
(831,276,l),
(911,276,l),
(911,0,l),
(1253,0,l),
(1253,276,l),
(1270,276,ls),
(1337,276,o),
(1383,346,o),
(1383,515,q),
(1360,469,o),
(1270,469,qs),
(1253,469,l),
(1253,658,ls)
);
}
);
width = 1442;
}
);
note = uni179D;
unicode = 6045;
},
{
glyphname = uni179E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,509,l),
(1270,509,ls),
(1336,509,o),
(1360,544,qs),
(1383,578,o),
(1383,738,q),
(1360,692,o),
(1270,692,qs),
(1253,692,l),
(1253,900,l),
(970,1039,l),
(1000,1088,l),
(1146,1013,o),
(1242,1013,qs),
(1329,1013,o),
(1366,1230,q),
(1261,1230,o),
(1199,1260,qs),
(1014,1350,l),
(807,1062,l),
(807,911,l),
(910,861,l),
(910,692,l),
(783,692,l),
(783,509,l),
(910,509,l),
(910,292,ls)
);
}
);
width = 1442;
}
);
note = uni179E;
unicode = 6046;
},
{
glyphname = uni179F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,1106,l),
(728,1016,o),
(855,1016,qs),
(991,1016,o),
(1040,1245,q),
(901,1245,o),
(818,1272,qs),
(573,1350,l),
(298,1099,l),
(298,968,l),
(477,919,l),
(189,874,o),
(189,658,qs),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,658,ls),
(532,738,o),
(651,738,qs),
(791,738,ls),
(910,738,o),
(910,658,qs),
(910,282,ls),
(910,0,o),
(1396,0,qs),
(1489,0,ls),
(1974,0,o),
(1974,282,qs),
(1974,900,l),
(1691,1039,l),
(1721,1088,l),
(1867,1013,o),
(1963,1013,qs),
(2050,1013,o),
(2087,1230,q),
(1982,1230,o),
(1920,1260,qs),
(1735,1350,l),
(1528,1062,l),
(1528,911,l),
(1631,861,l),
(1631,282,ls),
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,282,qs),
(1253,658,ls),
(1253,919,o),
(832,930,q),
(485,1064,l)
);
}
);
width = 2164;
}
);
note = uni179F;
unicode = 6047;
},
{
glyphname = uni17A0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1192,1073,l),
(1632,925,l),
(1632,0,l),
(1975,0,l),
(1975,1122,l),
(1294,1350,l),
(807,1031,l),
(807,910,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,900,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,900,l),
(1070,992,l)
);
}
);
width = 2164;
}
);
note = uni17A0;
unicode = 6048;
},
{
glyphname = uni17A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(848,988,qs),
(848,916,o),
(1051,916,qs),
(1253,916,o),
(1253,1068,qs),
(1253,1350,o),
(721,1350,qs),
(189,1350,o),
(189,1068,qs),
(189,844,ls),
(189,512,o),
(722,512,qs),
(779,512,l),
(779,290,ls),
(779,199,o),
(707,199,qs),
(635,199,o),
(635,240,qs),
(635,290,ls),
(635,455,o),
(439,455,qs),
(243,455,o),
(243,339,q),
(292,339,o),
(292,290,qs),
(292,240,ls),
(292,0,o),
(707,0,qs),
(1122,0,o),
(1122,291,qs),
(1122,512,l),
(1253,512,o),
(1253,663,qs),
(1253,814,o),
(1016,814,qs),
(779,814,o),
(779,710,q),
(722,710,ls),
(532,710,o),
(532,844,qs),
(532,1068,ls),
(532,1162,o),
(721,1162,qs),
(911,1162,o),
(911,1068,q),
(848,1061,o)
);
},
{
closed = 1;
nodes = (
(1691,1039,l),
(1721,1088,l),
(1867,1013,o),
(1963,1013,qs),
(2050,1013,o),
(2087,1230,q),
(1982,1230,o),
(1920,1260,qs),
(1735,1350,l),
(1528,1062,l),
(1528,911,l),
(1631,861,l),
(1631,-430,l),
(1442,-278,l),
(1252,-430,l),
(1252,-93,l),
(909,-93,l),
(840,-161,ls),
(804,-195,o),
(788,-228,qs),
(770,-262,o),
(770,-294,qs),
(770,-328,o),
(805,-345,qs),
(838,-360,o),
(903,-360,qs),
(909,-360,l),
(909,-673,l),
(1252,-673,l),
(1442,-511,l),
(1631,-673,l),
(1974,-673,l),
(1974,900,l)
);
}
);
width = 2164;
}
);
note = uni17A1;
unicode = 6049;
},
{
glyphname = uni17A2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(970,1039,l),
(1000,1088,l),
(1146,1013,o),
(1242,1013,qs),
(1329,1013,o),
(1366,1230,q),
(1261,1230,o),
(1199,1260,qs),
(1014,1350,l),
(807,1062,l),
(807,911,l),
(910,861,l),
(910,749,l),
(532,749,l),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,551,l),
(910,551,l),
(910,458,l),
(787,458,o),
(787,314,qs),
(787,208,o),
(910,0,q),
(1253,0,l),
(1253,900,l)
);
}
);
width = 1442;
}
);
note = uni17A2;
unicode = 6050;
},
{
glyphname = uni17A5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,658,ls),
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,0,l),
(1253,0,l),
(1253,658,ls),
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,0,l)
);
},
{
closed = 1;
nodes = (
(308,1086,l),
(379,1131,l),
(642,985,l),
(838,985,ls),
(1253,985,o),
(1253,1254,qs),
(1253,1487,o),
(997,1487,qs),
(911,1487,o),
(814,1441,o),
(814,1394,q),
(910,1394,o),
(911,1254,qs),
(910,1185,o),
(848,1185,qs),
(805,1185,l),
(505,1350,l),
(403,1350,l),
(106,1150,l),
(106,944,l),
(230,875,l),
(512,973,l)
);
}
);
width = 1442;
}
);
note = uni17A5;
unicode = 6053;
},
{
glyphname = uni17A6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1253,0,l),
(1253,1143,l),
(721,1350,l),
(189,1144,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1093,l),
(601,1119,l),
(910,999,l),
(910,0,l)
);
},
{
closed = 1;
nodes = (
(1824,973,l),
(1673,1045,l),
(1707,1092,l),
(1858,1013,o),
(1923,1013,qs),
(1980,1013,o),
(2076,1173,o),
(2076,1316,qs),
(2076,1421,o),
(1987,1545,o),
(1887,1545,qs),
(1820,1545,o),
(1774,1469,o),
(1774,1412,q),
(1844,1412,o),
(1878,1384,qs),
(1913,1355,o),
(1913,1316,qs),
(1913,1290,o),
(1900,1272,q),
(1715,1350,l),
(1508,1062,l),
(1508,921,l),
(1631,861,l),
(1631,-445,ls),
(1631,-505,o),
(1433,-505,qs),
(1234,-505,o),
(1234,-445,qs),
(1234,-302,ls),
(1234,-93,o),
(722,-93,qs),
(209,-93,o),
(209,-302,qs),
(209,-673,l),
(529,-673,l),
(648,-539,o),
(648,-468,qs),
(648,-414,o),
(614,-388,qs),
(579,-361,o),
(529,-361,q),
(529,-302,ls),
(529,-262,o),
(722,-262,qs),
(914,-262,o),
(914,-302,qs),
(914,-445,ls),
(914,-673,o),
(1433,-673,qs),
(1974,-673,o),
(1974,-445,qs),
(1974,900,l)
);
}
);
width = 2164;
}
);
note = uni17A6;
unicode = 6054;
},
{
glyphname = uni17A7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,263,qs),
(532,438,l),
(1131,715,o),
(1253,892,o),
(1253,965,qs),
(1253,1089,ls),
(1253,1350,o),
(791,1350,qs),
(651,1350,ls),
(189,1350,o),
(189,1089,qs),
(189,868,ls),
(189,820,o),
(230,796,qs),
(271,772,o),
(362,772,qs),
(532,772,ls),
(602,772,o),
(637,808,qs),
(672,844,o),
(672,916,qs),
(672,976,o),
(637,1007,qs),
(602,1037,o),
(532,1037,q),
(532,1089,ls),
(532,1152,o),
(651,1152,qs),
(791,1152,ls),
(911,1152,o),
(911,1089,qs),
(911,965,ls),
(910,903,o),
(829,775,o),
(189,488,q),
(189,263,ls),
(189,0,o),
(520,0,qs),
(644,1,l),
(911,190,l),
(911,117,ls),
(911,70,o),
(834,70,q),
(834,-47,o),
(1001,-47,qs),
(1253,-47,o),
(1253,115,qs),
(1253,555,l),
(911,555,l),
(911,407,l),
(610,194,l),
(610,193,l),
(532,193,o)
);
}
);
width = 1442;
}
);
note = uni17A7;
unicode = 6055;
},
{
glyphname = uni17A8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,263,qs),
(532,438,l),
(1131,715,o),
(1253,892,o),
(1253,965,qs),
(1253,1089,ls),
(1253,1350,o),
(791,1350,qs),
(651,1350,ls),
(189,1350,o),
(189,1089,qs),
(189,868,ls),
(189,820,o),
(230,796,qs),
(271,772,o),
(362,772,qs),
(532,772,ls),
(602,772,o),
(637,808,qs),
(672,844,o),
(672,916,qs),
(672,976,o),
(637,1007,qs),
(602,1037,o),
(532,1037,q),
(532,1089,ls),
(532,1152,o),
(651,1152,qs),
(791,1152,ls),
(911,1152,o),
(911,1089,qs),
(911,965,ls),
(910,903,o),
(829,775,o),
(189,488,q),
(189,263,ls),
(189,0,o),
(520,0,qs),
(644,1,l),
(911,190,l),
(911,117,ls),
(911,70,o),
(834,70,q),
(834,-47,o),
(1001,-47,qs),
(1253,-47,o),
(1253,115,qs),
(1253,555,l),
(911,555,l),
(911,407,l),
(610,194,l),
(610,193,l),
(532,193,o)
);
},
{
closed = 1;
nodes = (
(1161,1392,qs),
(1280,1392,o),
(1336,1612,q),
(1280,1612,ls),
(1224,1612,o),
(1181,1642,qs),
(993,1780,l),
(902,1780,l),
(750,1628,l),
(541,1780,l),
(439,1780,l),
(106,1553,l),
(106,1489,l),
(214,1380,l),
(247,1351,o),
(343,1351,qs),
(345,1351,ls),
(378,1351,o),
(429,1440,q),
(311,1538,l),
(370,1578,l),
(632,1384,l),
(689,1384,l),
(836,1550,l),
(999,1429,ls),
(1049,1392,o)
);
}
);
width = 1442;
}
);
note = uni17A8;
unicode = 6056;
},
{
glyphname = uni17A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1279,-6,qs),
(1262,-47,o),
(1227,-47,q),
(1227,-70,o),
(1262,-93,o),
(1377,-93,qs),
(1453,-93,o),
(1476,-46,qs),
(1500,2,o),
(1500,97,qs),
(1500,555,l),
(1297,555,l),
(1297,99,ls),
(1297,35,o)
);
},
{
closed = 1;
nodes = (
(532,263,qs),
(532,438,l),
(1131,715,o),
(1253,892,o),
(1253,965,qs),
(1253,1089,ls),
(1253,1350,o),
(791,1350,qs),
(651,1350,ls),
(189,1350,o),
(189,1089,qs),
(189,868,ls),
(189,820,o),
(230,796,qs),
(271,772,o),
(362,772,qs),
(532,772,ls),
(602,772,o),
(637,808,qs),
(672,844,o),
(672,916,qs),
(672,976,o),
(637,1007,qs),
(602,1037,o),
(532,1037,q),
(532,1089,ls),
(532,1152,o),
(651,1152,qs),
(791,1152,ls),
(911,1152,o),
(911,1089,qs),
(911,965,ls),
(910,903,o),
(829,775,o),
(189,488,q),
(189,263,ls),
(189,0,o),
(520,0,qs),
(644,1,l),
(911,190,l),
(911,117,ls),
(911,70,o),
(834,70,q),
(834,-47,o),
(1001,-47,qs),
(1203,-47,o),
(1203,115,qs),
(1203,555,l),
(911,555,l),
(911,407,l),
(610,194,l),
(610,193,l),
(532,193,o)
);
}
);
width = 1442;
}
);
note = uni17A9;
unicode = 6057;
},
{
glyphname = uni17AA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,263,qs),
(532,438,l),
(1131,715,o),
(1253,892,o),
(1253,965,qs),
(1253,1089,ls),
(1253,1350,o),
(791,1350,qs),
(651,1350,ls),
(189,1350,o),
(189,1089,qs),
(189,868,ls),
(189,820,o),
(230,796,qs),
(271,772,o),
(362,772,qs),
(532,772,ls),
(602,772,o),
(637,808,qs),
(672,844,o),
(672,916,qs),
(672,976,o),
(637,1007,qs),
(602,1037,o),
(532,1037,q),
(532,1089,ls),
(532,1152,o),
(651,1152,qs),
(791,1152,ls),
(911,1152,o),
(911,1089,qs),
(911,965,ls),
(910,903,o),
(829,775,o),
(189,488,q),
(189,263,ls),
(189,0,o),
(520,0,qs),
(644,1,l),
(911,190,l),
(911,117,ls),
(911,70,o),
(834,70,q),
(834,-47,o),
(1001,-47,qs),
(1253,-47,o),
(1253,115,qs),
(1253,555,l),
(911,555,l),
(911,407,l),
(610,194,l),
(610,193,l),
(532,193,o)
);
},
{
closed = 1;
nodes = (
(308,1526,l),
(379,1571,l),
(642,1425,l),
(838,1425,ls),
(1253,1425,o),
(1253,1694,qs),
(1253,1927,o),
(997,1927,qs),
(911,1927,o),
(814,1881,o),
(814,1834,q),
(910,1834,o),
(911,1694,qs),
(910,1625,o),
(848,1625,qs),
(805,1625,l),
(505,1790,l),
(403,1790,l),
(106,1590,l),
(106,1384,l),
(230,1315,l),
(512,1413,l)
);
}
);
width = 1442;
}
);
note = uni17AA;
unicode = 6058;
},
{
glyphname = uni17AB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1047,-93,qs),
(841,-93,o),
(841,-216,q),
(910,-216,o),
(910,-263,qs),
(910,-429,o),
(589,-429,qs),
(219,-429,o),
(96,-391,q),
(153,-481,o),
(404,-622,o),
(628,-622,qs),
(1253,-622,o),
(1253,-263,qs),
(1253,-93,o)
);
},
{
closed = 1;
nodes = (
(1253,292,qs),
(1253,900,l),
(970,1039,l),
(1000,1088,l),
(1146,1013,o),
(1242,1013,qs),
(1329,1013,o),
(1366,1230,q),
(1261,1230,o),
(1199,1260,qs),
(1014,1350,l),
(807,1062,l),
(807,911,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,900,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o)
);
}
);
width = 1442;
}
);
note = uni17AB;
unicode = 6059;
},
{
glyphname = uni17AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1253,-263,qs),
(1253,-93,o),
(1047,-93,qs),
(841,-93,o),
(841,-216,q),
(910,-216,o),
(910,-263,qs),
(910,-429,o),
(589,-429,qs),
(219,-429,o),
(96,-391,q),
(153,-481,o),
(404,-622,o),
(628,-622,qs),
(860,-622,o),
(1006,-572,q),
(1032,-593,o),
(1061,-605,qs),
(1101,-622,o),
(1181,-622,qs),
(1261,-622,o),
(1346,-537,o),
(1346,-415,q),
(1268,-415,o),
(1225,-398,q),
(1253,-339,o)
);
},
{
closed = 1;
nodes = (
(1253,292,qs),
(1253,900,l),
(970,1039,l),
(1000,1088,l),
(1146,1013,o),
(1242,1013,qs),
(1329,1013,o),
(1366,1230,q),
(1261,1230,o),
(1199,1260,qs),
(1014,1350,l),
(807,1062,l),
(807,911,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,900,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o)
);
}
);
width = 1442;
}
);
note = uni17AC;
unicode = 6060;
},
{
glyphname = uni17AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1047,-93,qs),
(841,-93,o),
(841,-216,q),
(910,-216,o),
(910,-263,qs),
(910,-429,o),
(589,-429,qs),
(219,-429,o),
(96,-391,q),
(153,-481,o),
(404,-622,o),
(628,-622,qs),
(1253,-622,o),
(1253,-263,qs),
(1253,-93,o)
);
},
{
closed = 1;
nodes = (
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,0,l),
(1253,0,l),
(1253,1090,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l)
);
}
);
width = 1442;
}
);
note = uni17AD;
unicode = 6061;
},
{
glyphname = uni17AE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1253,-263,qs),
(1253,-93,o),
(1047,-93,qs),
(841,-93,o),
(841,-216,q),
(910,-216,o),
(910,-263,qs),
(910,-429,o),
(589,-429,qs),
(219,-429,o),
(96,-391,q),
(153,-481,o),
(404,-622,o),
(628,-622,qs),
(860,-622,o),
(1006,-572,q),
(1032,-593,o),
(1061,-605,qs),
(1101,-622,o),
(1181,-622,qs),
(1261,-622,o),
(1346,-537,o),
(1346,-415,q),
(1268,-415,o),
(1225,-398,q),
(1253,-339,o)
);
},
{
closed = 1;
nodes = (
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,0,l),
(1253,0,l),
(1253,1090,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l)
);
}
);
width = 1442;
}
);
note = uni17AE;
unicode = 6062;
},
{
glyphname = uni17AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(721,1353,l),
(532,1248,l),
(532,1341,ls),
(532,1536,o),
(324,1536,qs),
(116,1536,o),
(116,1420,q),
(189,1420,o),
(189,1341,qs),
(189,1164,ls),
(189,997,o),
(365,997,qs),
(432,998,o),
(482,1025,qs),
(627,1103,l),
(910,978,l),
(910,238,l),
(721,403,l),
(532,238,l),
(532,838,l),
(189,838,l),
(66,702,o),
(66,572,qs),
(66,452,o),
(189,452,q),
(189,0,l),
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,1153,l)
);
}
);
width = 1442;
}
);
note = uni17AF;
unicode = 6063;
},
{
glyphname = uni17B0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(189,-539,qs),
(189,-608,o),
(267,-643,qs),
(344,-678,o),
(554,-678,qs),
(668,-678,o),
(724,-632,qs),
(780,-585,o),
(780,-491,q),
(863,-508,ls),
(918,-518,o),
(964,-518,qs),
(1253,-518,o),
(1253,-246,qs),
(1253,-27,l),
(970,-27,l),
(753,-218,o),
(437,-381,o),
(248,-430,q),
(189,-451,o)
);
},
{
closed = 1;
nodes = (
(922,-386,qs),
(908,-386,o),
(892,-382,qs),
(752,-342,l),
(875,-284,o),
(970,-205,q),
(970,-246,ls),
(970,-386,o)
);
},
{
closed = 1;
nodes = (
(473,-509,qs),
(473,-481,l),
(526,-464,o),
(651,-404,q),
(651,-488,ls),
(651,-517,o),
(597,-555,o),
(554,-555,qs),
(473,-555,o)
);
},
{
closed = 1;
nodes = (
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,0,l),
(1253,0,l),
(1253,1090,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l)
);
}
);
width = 1442;
}
);
note = uni17B0;
unicode = 6064;
},
{
glyphname = uni17B1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(560,1617,o),
(650,1592,qs),
(738,1567,o),
(826,1516,qs),
(917,1463,ls),
(1020,1403,o),
(1170,1403,qs),
(1322,1403,o),
(1322,1630,q),
(1218,1630,o),
(1145,1673,qs),
(966,1778,ls),
(863,1840,o),
(755,1870,qs),
(646,1900,o),
(535,1900,q),
(86,1590,l),
(86,1467,l),
(222,1375,ls),
(264,1345,o),
(326,1332,q),
(428,1471,l),
(295,1541,l),
(404,1617,l)
);
},
{
closed = 1;
nodes = (
(532,263,qs),
(532,438,l),
(1131,715,o),
(1253,892,o),
(1253,965,qs),
(1253,1089,ls),
(1253,1350,o),
(791,1350,qs),
(651,1350,ls),
(189,1350,o),
(189,1089,qs),
(189,868,ls),
(189,820,o),
(230,796,qs),
(271,772,o),
(362,772,qs),
(532,772,ls),
(602,772,o),
(637,808,qs),
(672,844,o),
(672,916,qs),
(672,976,o),
(637,1007,qs),
(602,1037,o),
(532,1037,q),
(532,1089,ls),
(532,1152,o),
(651,1152,qs),
(791,1152,ls),
(911,1152,o),
(911,1089,qs),
(911,965,ls),
(910,903,o),
(829,775,o),
(189,488,q),
(189,263,ls),
(189,0,o),
(520,0,qs),
(644,1,l),
(911,190,l),
(911,117,ls),
(911,70,o),
(834,70,q),
(834,-47,o),
(1001,-47,qs),
(1253,-47,o),
(1253,115,qs),
(1253,555,l),
(911,555,l),
(911,407,l),
(610,194,l),
(610,193,l),
(532,193,o)
);
}
);
width = 1442;
}
);
note = uni17B1;
unicode = 6065;
},
{
glyphname = uni17B2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(911,272,qs),
(911,198,o),
(792,198,qs),
(651,198,ls),
(532,198,o),
(532,272,qs),
(532,1063,l),
(677,1133,l),
(1060,993,l),
(1253,1143,l),
(721,1350,l),
(189,1144,l),
(189,272,ls),
(189,0,o),
(651,0,qs),
(792,0,ls),
(1253,0,o),
(1253,272,qs),
(1253,427,o),
(1086,443,q),
(1253,545,o),
(1253,676,qs),
(1253,943,o),
(935,943,qs),
(616,943,o),
(616,731,qs),
(616,563,o),
(782,563,qs),
(867,563,o),
(867,676,q),
(809,676,o),
(809,731,qs),
(809,777,o),
(860,777,qs),
(911,777,o),
(911,676,qs),
(911,571,o),
(764,469,qs),
(617,366,l),
(617,245,o),
(736,245,q),
(850,338,l),
(859,338,ls),
(911,338,o)
);
}
);
width = 1442;
}
);
note = uni17B2;
unicode = 6066;
},
{
glyphname = uni17B3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(737,1842,qs),
(627,1871,o),
(549,1871,q),
(96,1577,l),
(96,1461,l),
(233,1373,ls),
(276,1344,o),
(338,1332,q),
(441,1464,l),
(307,1530,l),
(416,1603,l),
(540,1603,o),
(630,1579,qs),
(720,1555,o),
(808,1507,qs),
(900,1457,ls),
(1004,1399,o),
(1156,1399,qs),
(1309,1399,o),
(1309,1615,q),
(1269,1615,o),
(1233,1622,q),
(1211,1669,o),
(1211,1724,qs),
(1211,1778,o),
(1232,1836,q),
(1266,1965,o),
(1369,1965,qs),
(1423,1965,o),
(1423,2023,qs),
(1423,2082,o),
(1300,2082,qs),
(1052,2081,o),
(990,1927,qs),
(951,1831,o),
(951,1756,qs),
(951,1754,l),
(950,1755,l),
(846,1814,o)
);
},
{
closed = 1;
nodes = (
(532,263,qs),
(532,438,l),
(1131,715,o),
(1253,892,o),
(1253,965,qs),
(1253,1089,ls),
(1253,1350,o),
(791,1350,qs),
(651,1350,ls),
(189,1350,o),
(189,1089,qs),
(189,868,ls),
(189,820,o),
(230,796,qs),
(271,772,o),
(362,772,qs),
(532,772,ls),
(602,772,o),
(637,808,qs),
(672,844,o),
(672,916,qs),
(672,976,o),
(637,1007,qs),
(602,1037,o),
(532,1037,q),
(532,1089,ls),
(532,1152,o),
(651,1152,qs),
(791,1152,ls),
(911,1152,o),
(911,1089,qs),
(911,965,ls),
(910,903,o),
(829,775,o),
(189,488,q),
(189,263,ls),
(189,0,o),
(520,0,qs),
(644,1,l),
(911,190,l),
(911,117,ls),
(911,70,o),
(834,70,q),
(834,-47,o),
(1001,-47,qs),
(1253,-47,o),
(1253,115,qs),
(1253,555,l),
(911,555,l),
(911,407,l),
(610,194,l),
(610,193,l),
(532,193,o)
);
}
);
width = 1442;
}
);
note = uni17B3;
unicode = 6067;
},
{
glyphname = uni17A3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(970,1039,l),
(1000,1088,l),
(1146,1013,o),
(1242,1013,qs),
(1329,1013,o),
(1366,1230,q),
(1261,1230,o),
(1199,1260,qs),
(1014,1350,l),
(807,1062,l),
(807,911,l),
(910,861,l),
(910,749,l),
(532,749,l),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,551,l),
(910,551,l),
(910,458,l),
(787,458,o),
(787,314,qs),
(787,208,o),
(910,0,q),
(1253,0,l),
(1253,900,l)
);
}
);
width = 1442;
}
);
note = uni17A3;
unicode = 6051;
},
{
glyphname = uni17A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1070,992,l),
(1192,1073,l),
(1632,925,l),
(1632,0,l),
(1975,0,l),
(1975,1122,l),
(1294,1350,l),
(807,1031,l),
(807,910,l),
(910,861,l),
(910,749,l),
(532,749,l),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,551,l),
(910,551,l),
(910,458,l),
(787,458,o),
(787,314,qs),
(787,208,o),
(910,0,q),
(1253,0,l),
(1253,900,l)
);
}
);
width = 2164;
}
);
note = uni17A4;
unicode = 6052;
},
{
glyphname = uni17B4;
layers = (
{
layerId = m01;
width = 1204;
}
);
note = uni17B4;
unicode = 6068;
},
{
glyphname = uni17B5;
layers = (
{
layerId = m01;
width = 1204;
}
);
note = uni17B5;
unicode = 6069;
},
{
glyphname = uni17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-103,1053,l),
(190,928,l),
(190,0,l),
(533,0,l),
(533,1103,l),
(1,1350,l),
(-370,1136,l),
(-309,975,l)
);
}
);
width = 721;
}
);
note = uni17B6;
unicode = 6070;
},
{
glyphname = uni17BF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,1712,q),
(-264,1712,l),
(-264,1805,o),
(-157,1805,qs),
(5,1805,o)
);
},
{
closed = 1;
nodes = (
(176,2041,l),
(176,1885,l),
(138,1910,o),
(99,1929,q),
(99,2067,l),
(-78,2067,l),
(-78,1987,l),
(-127,1995,o),
(-177,1995,qs),
(-533,1995,o),
(-533,1712,qs),
(-533,1569,o),
(-374,1569,qs),
(73,1569,ls),
(131,1569,o),
(161,1522,qs),
(189,1476,o),
(189,1383,qs),
(189,-326,ls),
(189,-415,o),
(87,-415,qs),
(-86,-415,ls),
(-189,-415,o),
(-189,-326,qs),
(-189,-93,l),
(-532,-93,l),
(-532,-326,ls),
(-532,-609,o),
(-86,-609,qs),
(87,-609,ls),
(532,-609,o),
(532,-326,qs),
(532,1383,ls),
(532,1475,o),
(486,1545,qs),
(455,1591,o),
(382,1627,q),
(382,2041,l)
);
}
);
width = 721;
}
);
note = uni17BF;
unicode = 6079;
},
{
glyphname = uni17C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(87,-415,qs),
(-86,-415,ls),
(-189,-415,o),
(-189,-326,qs),
(-189,-93,l),
(-532,-93,l),
(-532,-326,ls),
(-532,-609,o),
(-86,-609,qs),
(87,-609,ls),
(532,-609,o),
(532,-326,qs),
(532,1374,ls),
(532,1694,o),
(103,1694,qs),
(-120,1694,ls),
(-186,1694,o),
(-186,1767,qs),
(-186,1880,ls),
(-186,2090,o),
(-417,2090,qs),
(-622,2090,o),
(-622,1927,q),
(-529,1927,o),
(-529,1880,qs),
(-529,1767,ls),
(-529,1500,o),
(-120,1500,qs),
(103,1500,ls),
(189,1500,o),
(189,1374,qs),
(189,-326,ls),
(189,-415,o)
);
}
);
width = 721;
}
);
note = uni17C0;
unicode = 6080;
},
{
glyphname = uni17C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(624,1016,qs),
(685,1016,o),
(699,1237,q),
(659,1237,ls),
(609,1237,o),
(478,1350,q),
(189,1350,l),
(189,0,l),
(532,0,l),
(656,215,o),
(656,314,qs),
(656,458,o),
(533,458,q),
(533,1043,l),
(563,1016,o)
);
}
);
width = 721;
}
);
note = uni17C1;
unicode = 6081;
},
{
glyphname = uni17C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(187,1759,qs),
(39,1759,o),
(39,1613,qs),
(39,1446,o),
(325,1446,qs),
(704,1446,o),
(704,1729,qs),
(704,2022,o),
(464,2022,qs),
(264,2022,o),
(264,1869,q),
(380,1869,o),
(380,1729,qs),
(380,1589,o),
(325,1589,qs),
(283,1589,o),
(283,1613,qs),
(283,1636,o),
(334,1636,q),
(334,1759,o)
);
},
{
closed = 1;
nodes = (
(624,1016,qs),
(685,1016,o),
(699,1237,q),
(659,1237,ls),
(609,1237,o),
(478,1350,q),
(189,1350,l),
(189,0,l),
(532,0,l),
(656,215,o),
(656,314,qs),
(656,458,o),
(533,458,q),
(533,1043,l),
(563,1016,o)
);
}
);
width = 721;
}
);
note = uni17C2;
unicode = 6082;
},
{
glyphname = uni17C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,1589,qs),
(77,1446,o),
(362,1446,qs),
(709,1446,o),
(709,1683,qs),
(709,1919,o),
(452,1919,qs),
(410,1919,l),
(410,2126,o),
(217,2126,qs),
(23,2126,o),
(23,1993,q),
(97,1993,o),
(97,1919,qs),
(97,1746,o),
(320,1746,qs),
(362,1746,ls),
(425,1746,o),
(425,1683,qs),
(425,1589,o),
(388,1589,qs),
(350,1589,o),
(350,1683,q),
(77,1683,o)
);
},
{
closed = 1;
nodes = (
(624,1016,qs),
(685,1016,o),
(699,1237,q),
(659,1237,ls),
(609,1237,o),
(478,1350,q),
(189,1350,l),
(189,0,l),
(532,0,l),
(656,215,o),
(656,314,qs),
(656,458,o),
(533,458,q),
(533,1043,l),
(563,1016,o)
);
}
);
width = 721;
}
);
note = uni17C3;
unicode = 6083;
},
{
glyphname = uni17C4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-103,1053,l),
(190,928,l),
(190,0,l),
(533,0,l),
(533,1103,l),
(1,1350,l),
(-370,1136,l),
(-309,975,l)
);
}
);
width = 721;
}
);
note = uni17C4;
unicode = 6084;
},
{
glyphname = uni17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(579,1148,o),
(579,1196,qs),
(579,1578,ls),
(579,1800,o),
(362,1800,qs),
(144,1800,o),
(144,1674,q),
(191,1674,o),
(214,1650,qs),
(237,1626,o),
(237,1578,qs),
(237,1164,l),
(523,1002,l)
);
},
{
closed = 1;
nodes = (
(-103,1053,l),
(190,928,l),
(190,0,l),
(533,0,l),
(533,1103,l),
(1,1350,l),
(-370,1136,l),
(-309,975,l)
);
}
);
width = 721;
}
);
note = uni17C5;
unicode = 6085;
},
{
glyphname = uni17C7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(434,1189,qs),
(452,1208,o),
(489,1208,qs),
(527,1208,o),
(545,1189,qs),
(565,1170,o),
(565,1133,qs),
(565,1095,o),
(545,1077,qs),
(527,1058,o),
(489,1058,qs),
(452,1058,o),
(434,1077,qs),
(415,1095,o),
(415,1133,qs),
(415,1170,o)
);
},
{
closed = 1;
nodes = (
(715,1296,qs),
(640,1350,o),
(488,1350,qs),
(338,1350,o),
(263,1296,qs),
(189,1242,o),
(189,1133,qs),
(189,1025,o),
(263,970,qs),
(338,916,o),
(488,916,qs),
(640,916,o),
(715,970,qs),
(789,1025,o),
(789,1133,qs),
(789,1242,o)
);
},
{
closed = 1;
nodes = (
(434,273,qs),
(452,292,o),
(489,292,qs),
(527,292,o),
(545,273,qs),
(565,254,o),
(565,217,qs),
(565,180,o),
(545,161,qs),
(527,142,o),
(489,142,qs),
(452,142,o),
(434,161,qs),
(415,180,o),
(415,217,qs),
(415,254,o)
);
},
{
closed = 1;
nodes = (
(715,380,qs),
(640,434,o),
(488,434,qs),
(338,434,o),
(263,380,qs),
(189,326,o),
(189,217,qs),
(189,108,o),
(263,54,qs),
(338,0,o),
(488,0,qs),
(640,0,o),
(715,54,qs),
(789,108,o),
(789,217,qs),
(789,326,o)
);
}
);
width = 977;
}
);
note = uni17C7;
unicode = 6087;
},
{
glyphname = uni17C8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,46,qs),
(657,93,o),
(692,183,q),
(620,141,o),
(585,141,qs),
(549,141,o),
(549,183,qs),
(549,279,o),
(505,324,qs),
(461,373,o),
(370,373,qs),
(281,373,o),
(237,327,qs),
(192,280,o),
(192,186,qs),
(192,93,o),
(237,46,qs),
(281,0,o),
(370,0,qs),
(494,0,o)
);
},
{
closed = 1;
nodes = (
(576,973,qs),
(657,1020,o),
(692,1111,q),
(620,1068,o),
(585,1068,qs),
(549,1068,o),
(549,1111,qs),
(549,1206,o),
(505,1252,qs),
(461,1300,o),
(370,1300,qs),
(281,1300,o),
(237,1254,qs),
(192,1207,o),
(192,1113,qs),
(192,1020,o),
(237,973,qs),
(281,927,o),
(370,927,qs),
(494,927,o)
);
}
);
width = 791;
}
);
note = uni17C8;
unicode = 6088;
},
{
glyphname = uni17DC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1150,182,o),
(1150,359,qs),
(1150,513,o),
(914,658,o),
(675,658,qs),
(576,658,o),
(455,684,o),
(388,764,o),
(388,842,qs),
(388,941,o),
(534,1055,o),
(675,1055,qs),
(817,1055,o),
(963,979,o),
(963,910,qs),
(963,851,o),
(922,851,qs),
(862,851,o),
(862,793,qs),
(862,734,o),
(922,734,qs),
(1001,734,o),
(1099,763,o),
(1150,840,o),
(1150,910,qs),
(1150,1057,o),
(911,1210,o),
(675,1210,qs),
(440,1210,o),
(200,1019,o),
(200,842,qs),
(200,688,o),
(436,543,o),
(675,543,qs),
(775,543,o),
(895,518,o),
(963,438,o),
(963,360,qs),
(963,260,o),
(817,146,o),
(675,146,qs),
(533,146,o),
(388,222,o),
(388,292,qs),
(388,350,o),
(429,350,qs),
(458,350,o),
(489,380,o),
(489,408,qs),
(489,468,o),
(429,468,qs),
(350,468,o),
(251,439,o),
(200,363,o),
(200,293,qs),
(200,145,o),
(438,-10,o),
(675,-10,qs),
(910,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
0 5 0 8 7 5 8 105 0 7 0 6 9 7 6 105 0 9 0 4 1 9 4 105 0 1 0 2 3 1 2 105 0 3 3 0 97 10 1 0 0 19 0 78 1 0 54 52 47 45 42 40 38 36 31 29 25 23 18 16 13 11 8 6 0 58 1 58 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1350;
}
);
note = uni17DC;
unicode = 6108;
},
{
glyphname = uni1789.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,0,l),
(1253,0,l),
(1253,1022,l),
(1373,1084,l),
(1632,955,l),
(1632,0,l),
(1975,0,l),
(1975,1092,l),
(1443,1350,l),
(1149,1179,l),
(948,1350,l)
);
}
);
width = 2164;
}
);
note = uni1789.a;
},
{
glyphname = uni17BF.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,1712,q),
(-264,1712,l),
(-264,1805,o),
(-157,1805,qs),
(5,1805,o)
);
},
{
closed = 1;
nodes = (
(176,2041,l),
(176,1885,l),
(138,1910,o),
(99,1929,q),
(99,2067,l),
(-78,2067,l),
(-78,1987,l),
(-127,1995,o),
(-177,1995,qs),
(-533,1995,o),
(-533,1712,qs),
(-533,1569,o),
(-374,1569,qs),
(73,1569,ls),
(131,1569,o),
(161,1522,qs),
(189,1476,o),
(189,1383,qs),
(189,-837,ls),
(189,-926,o),
(87,-926,qs),
(-86,-926,ls),
(-189,-926,o),
(-189,-837,qs),
(-189,-704,l),
(-532,-704,l),
(-532,-837,ls),
(-532,-1120,o),
(-86,-1120,qs),
(87,-1120,ls),
(532,-1120,o),
(532,-837,qs),
(532,1383,ls),
(532,1475,o),
(486,1545,qs),
(455,1591,o),
(382,1627,q),
(382,2041,l)
);
}
);
width = 721;
}
);
note = uni17BF.b;
},
{
glyphname = uni17C0.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(87,-926,qs),
(-86,-926,ls),
(-189,-926,o),
(-189,-837,qs),
(-189,-704,l),
(-532,-704,l),
(-532,-837,ls),
(-532,-1120,o),
(-86,-1120,qs),
(87,-1120,ls),
(532,-1120,o),
(532,-837,qs),
(532,1374,ls),
(532,1694,o),
(103,1694,qs),
(-120,1694,ls),
(-186,1694,o),
(-186,1767,qs),
(-186,1880,ls),
(-186,2090,o),
(-417,2090,qs),
(-622,2090,o),
(-622,1927,q),
(-529,1927,o),
(-529,1880,qs),
(-529,1767,ls),
(-529,1500,o),
(-120,1500,qs),
(103,1500,ls),
(189,1500,o),
(189,1374,qs),
(189,-837,ls),
(189,-926,o)
);
}
);
width = 721;
}
);
note = uni17C0.b;
},
{
glyphname = uni17B6.space;
layers = (
{
layerId = m01;
width = 721;
}
);
note = uni17B6.space;
},
{
glyphname = uni1780_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1102,l),
(106,1011,l),
(183,972,ls),
(259,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(453,1119,l),
(926,952,l),
(988,951,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1133,l)
);
},
{
closed = 1;
nodes = (
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,0,l),
(1253,0,l),
(1253,658,ls),
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,0,l),
(532,0,l),
(532,658,ls)
);
}
);
width = 1442;
}
);
note = uni1780_17B6;
},
{
glyphname = uni1780_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,0,l),
(1253,0,l),
(1253,658,ls),
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,0,l),
(532,0,l),
(532,658,ls)
);
},
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1235,l),
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1102,l),
(106,1011,l),
(183,972,ls),
(259,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(453,1119,l),
(926,952,l),
(988,951,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1780_17C5;
},
{
glyphname = uni1781_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1103,l),
(1442,1350,l),
(1214,1219,l),
(1119,1350,o),
(791,1350,qs),
(651,1350,ls),
(189,1350,o),
(189,1089,qs),
(189,868,ls),
(189,820,o),
(230,796,qs),
(271,772,o),
(362,772,qs),
(532,772,ls),
(602,772,o),
(637,808,qs),
(672,844,o),
(672,916,qs),
(672,976,o),
(637,1007,qs),
(602,1037,o),
(532,1037,q),
(532,1089,ls),
(532,1152,o),
(651,1152,qs),
(791,1152,ls),
(911,1152,o),
(911,1089,qs),
(911,965,ls),
(910,903,o),
(829,775,o),
(189,488,q),
(189,272,ls),
(189,0,o),
(651,0,qs),
(791,0,ls),
(1253,0,o),
(1253,272,qs),
(1253,585,l),
(911,495,l),
(911,272,ls),
(911,198,o),
(791,198,qs),
(651,198,ls),
(532,198,o),
(532,272,qs),
(532,438,l),
(1131,715,o),
(1253,892,o),
(1253,965,qs),
(1253,1021,l),
(1338,1053,l)
);
}
);
width = 1442;
}
);
note = uni1781_17B6;
},
{
glyphname = uni1781_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1239,l),
(1442,1350,l),
(1214,1219,l),
(1119,1350,o),
(791,1350,qs),
(651,1350,ls),
(189,1350,o),
(189,1089,qs),
(189,868,ls),
(189,820,o),
(230,796,qs),
(271,772,o),
(362,772,qs),
(532,772,ls),
(602,772,o),
(637,808,qs),
(672,844,o),
(672,916,qs),
(672,976,o),
(637,1007,qs),
(602,1037,o),
(532,1037,q),
(532,1089,ls),
(532,1152,o),
(651,1152,qs),
(791,1152,ls),
(911,1152,o),
(911,1089,qs),
(911,965,ls),
(910,903,o),
(829,775,o),
(189,488,q),
(189,272,ls),
(189,0,o),
(651,0,qs),
(791,0,ls),
(1253,0,o),
(1253,272,qs),
(1253,585,l),
(911,495,l),
(911,272,ls),
(911,198,o),
(791,198,qs),
(651,198,ls),
(532,198,o),
(532,272,qs),
(532,438,l),
(1131,715,o),
(1253,892,o),
(1253,965,qs),
(1253,1021,l),
(1338,1053,l),
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1781_17C5;
},
{
glyphname = uni1782_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,0,l),
(1253,0,l),
(1253,658,ls),
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,0,l),
(532,0,l),
(532,65,l),
(557,110,ls),
(592,173,o),
(626,202,qs),
(660,229,o),
(724,229,qs),
(788,229,o),
(811,287,qs),
(821,311,o),
(821,370,qs),
(821,428,o),
(800,453,qs),
(765,497,o),
(708,498,qs),
(661,498,o),
(615,468,qs),
(586,450,o),
(532,344,q),
(532,658,ls)
);
},
{
closed = 1;
nodes = (
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1102,l),
(106,1011,l),
(183,972,ls),
(259,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(453,1119,l),
(926,952,l),
(988,951,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1133,l)
);
}
);
width = 1442;
}
);
note = uni1782_17B6;
},
{
glyphname = uni1782_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,0,l),
(1253,0,l),
(1253,658,ls),
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,0,l),
(532,0,l),
(532,65,l),
(557,110,ls),
(592,173,o),
(626,202,qs),
(660,229,o),
(724,229,qs),
(788,229,o),
(811,287,qs),
(821,311,o),
(821,370,qs),
(821,428,o),
(800,453,qs),
(765,497,o),
(708,498,qs),
(661,498,o),
(615,468,qs),
(586,450,o),
(532,344,q),
(532,658,ls)
);
},
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1235,l),
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1102,l),
(106,1011,l),
(183,972,ls),
(259,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(453,1119,l),
(926,952,l),
(988,951,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1782_17C5;
},
{
glyphname = uni1783_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1791,992,l),
(1913,1073,l),
(2353,925,l),
(2353,0,l),
(2696,0,l),
(2696,1122,l),
(2015,1350,l),
(1528,1031,l),
(1528,910,l),
(1631,861,l),
(1631,292,ls),
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,292,qs),
(1253,900,l),
(970,1039,l),
(1000,1088,l),
(1146,1013,o),
(1242,1013,qs),
(1329,1013,o),
(1366,1230,q),
(1261,1230,o),
(1199,1260,qs),
(1014,1350,l),
(807,1062,l),
(807,911,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,1350,l),
(189,1350,l),
(90,1186,o),
(66,1138,qs),
(43,1090,o),
(43,1050,qs),
(43,892,o),
(189,892,q),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(965,0,o),
(1082,48,q),
(1199,0,o),
(1396,0,qs),
(1489,0,ls),
(1974,0,o),
(1974,292,qs),
(1974,900,l)
);
}
);
width = 2164;
}
);
note = uni1783_17B6;
},
{
glyphname = uni1783_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2746,1196,qs),
(2746,1578,ls),
(2746,1800,o),
(2529,1800,qs),
(2311,1800,o),
(2311,1674,q),
(2358,1674,o),
(2381,1650,qs),
(2404,1626,o),
(2404,1578,qs),
(2404,1220,l),
(2015,1350,l),
(1528,1031,l),
(1528,910,l),
(1631,861,l),
(1631,292,ls),
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,292,qs),
(1253,900,l),
(970,1039,l),
(1000,1088,l),
(1146,1013,o),
(1242,1013,qs),
(1329,1013,o),
(1366,1230,q),
(1261,1230,o),
(1199,1260,qs),
(1014,1350,l),
(807,1062,l),
(807,911,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,1350,l),
(189,1350,l),
(90,1186,o),
(66,1138,qs),
(43,1090,o),
(43,1050,qs),
(43,892,o),
(189,892,q),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(965,0,o),
(1082,48,q),
(1199,0,o),
(1396,0,qs),
(1489,0,ls),
(1974,0,o),
(1974,292,qs),
(1974,900,l),
(1791,992,l),
(1913,1073,l),
(2353,925,l),
(2353,0,l),
(2696,0,l),
(2696,1018,l),
(2746,1151,o)
);
}
);
width = 2164;
}
);
note = uni1783_17C5;
},
{
glyphname = uni1784_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1103,l),
(1442,1350,l),
(1071,1136,l),
(1116,1018,l),
(1014,1076,l),
(1069,1132,o),
(1069,1184,qs),
(1069,1267,o),
(1026,1309,qs),
(983,1350,o),
(848,1350,qs),
(762,1350,o),
(719,1309,qs),
(675,1267,o),
(675,1217,qs),
(675,1182,o),
(690,1163,q),
(598,1163,ls),
(532,1163,o),
(532,1206,qs),
(532,1341,ls),
(532,1536,o),
(324,1536,qs),
(116,1536,o),
(116,1420,q),
(189,1420,o),
(189,1341,qs),
(189,1206,ls),
(189,965,o),
(598,965,qs),
(807,965,l),
(910,872,l),
(910,238,l),
(721,403,l),
(532,238,l),
(532,868,l),
(189,868,l),
(66,732,o),
(66,602,qs),
(66,482,o),
(189,482,q),
(189,0,l),
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,940,l),
(1168,989,l),
(1338,1053,l)
);
}
);
width = 1442;
}
);
note = uni1784_17B6;
},
{
glyphname = uni1784_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1239,l),
(1442,1350,l),
(1071,1136,l),
(1116,1018,l),
(1014,1076,l),
(1069,1132,o),
(1069,1184,qs),
(1069,1267,o),
(1026,1309,qs),
(983,1350,o),
(848,1350,qs),
(762,1350,o),
(719,1309,qs),
(675,1267,o),
(675,1217,qs),
(675,1182,o),
(690,1163,q),
(598,1163,ls),
(532,1163,o),
(532,1206,qs),
(532,1341,ls),
(532,1536,o),
(324,1536,qs),
(116,1536,o),
(116,1420,q),
(189,1420,o),
(189,1341,qs),
(189,1206,ls),
(189,965,o),
(598,965,qs),
(807,965,l),
(910,872,l),
(910,238,l),
(721,403,l),
(532,238,l),
(532,868,l),
(189,868,l),
(66,732,o),
(66,602,qs),
(66,482,o),
(189,482,q),
(189,0,l),
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,940,l),
(1168,989,l),
(1338,1053,l),
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1784_17C5;
},
{
glyphname = uni1785_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,962,l),
(319,1079,l),
(451,1126,l),
(926,952,l),
(988,952,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1133,l),
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1143,l),
(106,992,l),
(189,918,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(910,526,q),
(910,292,ls)
);
}
);
width = 1442;
}
);
note = uni1785_17B6;
},
{
glyphname = uni1785_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1235,l),
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1143,l),
(106,992,l),
(189,918,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(910,526,q),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,962,l),
(319,1079,l),
(451,1126,l),
(926,952,l),
(988,952,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1785_17C5;
},
{
glyphname = uni1786_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,1079,l),
(451,1126,l),
(926,952,l),
(988,952,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1133,l),
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1143,l),
(106,992,l),
(189,918,l),
(189,489,l),
(139,479,o),
(89,407,o),
(89,286,qs),
(89,164,o),
(209,0,q),
(532,0,l),
(532,306,l),
(601,306,o),
(601,217,qs),
(601,0,o),
(927,0,qs),
(1253,0,o),
(1253,233,qs),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(911,526,q),
(911,424,l),
(910,424,l),
(910,233,ls),
(910,193,o),
(857,193,qs),
(804,193,o),
(804,217,qs),
(804,489,o),
(532,489,q),
(532,962,l)
);
}
);
width = 1442;
}
);
note = uni1786_17B6;
},
{
glyphname = uni1786_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1235,l),
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1143,l),
(106,992,l),
(189,918,l),
(189,489,l),
(139,479,o),
(89,407,o),
(89,286,qs),
(89,164,o),
(209,0,q),
(532,0,l),
(532,306,l),
(601,306,o),
(601,217,qs),
(601,0,o),
(927,0,qs),
(1253,0,o),
(1253,233,qs),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(911,526,q),
(911,424,l),
(910,424,l),
(910,233,ls),
(910,193,o),
(857,193,qs),
(804,193,o),
(804,217,qs),
(804,489,o),
(532,489,q),
(532,962,l),
(319,1079,l),
(451,1126,l),
(926,952,l),
(988,952,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1786_17C5;
},
{
glyphname = uni1787_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1103,l),
(1442,1350,l),
(1252,1277,l),
(1240,1487,o),
(997,1487,qs),
(911,1487,o),
(814,1441,o),
(814,1394,q),
(910,1394,o),
(911,1254,qs),
(910,1185,o),
(848,1185,qs),
(805,1185,l),
(505,1350,l),
(403,1350,l),
(106,1150,l),
(106,944,l),
(189,897,l),
(189,0,l),
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,892,l),
(910,892,l),
(910,238,l),
(721,403,l),
(532,238,l),
(532,959,l),
(308,1086,l),
(379,1131,l),
(642,985,l),
(838,985,ls),
(1013,985,o),
(1115,1033,q),
(1338,1053,l)
);
}
);
width = 1442;
}
);
note = uni1787_17B6;
},
{
glyphname = uni1787_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1239,l),
(1442,1350,l),
(1252,1277,l),
(1240,1487,o),
(997,1487,qs),
(911,1487,o),
(814,1441,o),
(814,1394,q),
(910,1394,o),
(911,1254,qs),
(910,1185,o),
(848,1185,qs),
(805,1185,l),
(505,1350,l),
(403,1350,l),
(106,1150,l),
(106,944,l),
(189,897,l),
(189,0,l),
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,892,l),
(910,892,l),
(910,238,l),
(721,403,l),
(532,238,l),
(532,959,l),
(308,1086,l),
(379,1131,l),
(642,985,l),
(838,985,ls),
(1013,985,o),
(1115,1033,q),
(1338,1053,l),
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1787_17C5;
},
{
glyphname = uni1788_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2512,992,l),
(2634,1073,l),
(3074,925,l),
(3074,0,l),
(3417,0,l),
(3417,1122,l),
(2736,1350,l),
(2249,1031,l),
(2249,910,l),
(2352,861,l),
(2352,282,ls),
(2352,198,o),
(2210,198,qs),
(2117,198,ls),
(1974,198,o),
(1974,282,qs),
(1974,900,l),
(1691,1039,l),
(1721,1088,l),
(1867,1013,o),
(1963,1013,qs),
(2050,1013,o),
(2087,1230,q),
(1982,1230,o),
(1920,1260,qs),
(1735,1350,l),
(1528,1062,l),
(1528,911,l),
(1631,861,l),
(1631,282,ls),
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,282,qs),
(1253,1143,l),
(721,1350,l),
(189,1144,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1093,l),
(601,1119,l),
(910,999,l),
(910,282,ls),
(910,0,o),
(1396,0,qs),
(1489,0,ls),
(1686,0,o),
(1803,46,q),
(1920,0,o),
(2117,0,qs),
(2210,0,ls),
(2695,0,o),
(2695,282,qs),
(2695,900,l)
);
}
);
width = 2885;
}
);
note = uni1788_17B6;
},
{
glyphname = uni1788_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3467,1196,qs),
(3467,1578,ls),
(3467,1800,o),
(3250,1800,qs),
(3032,1800,o),
(3032,1674,q),
(3079,1674,o),
(3102,1650,qs),
(3125,1626,o),
(3125,1578,qs),
(3125,1220,l),
(2736,1350,l),
(2249,1031,l),
(2249,910,l),
(2352,861,l),
(2352,282,ls),
(2352,198,o),
(2210,198,qs),
(2117,198,ls),
(1974,198,o),
(1974,282,qs),
(1974,900,l),
(1691,1039,l),
(1721,1088,l),
(1867,1013,o),
(1963,1013,qs),
(2050,1013,o),
(2087,1230,q),
(1982,1230,o),
(1920,1260,qs),
(1735,1350,l),
(1528,1062,l),
(1528,911,l),
(1631,861,l),
(1631,282,ls),
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,282,qs),
(1253,1143,l),
(721,1350,l),
(189,1144,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1093,l),
(601,1119,l),
(910,999,l),
(910,282,ls),
(910,0,o),
(1396,0,qs),
(1489,0,ls),
(1686,0,o),
(1803,46,q),
(1920,0,o),
(2117,0,qs),
(2210,0,ls),
(2695,0,o),
(2695,282,qs),
(2695,900,l),
(2512,992,l),
(2634,1073,l),
(3074,925,l),
(3074,0,l),
(3417,0,l),
(3417,1018,l),
(3467,1151,o)
);
}
);
width = 2885;
}
);
note = uni1788_17C5;
},
{
glyphname = uni1789_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1743,-93,qs),
(1634,-93,o),
(1516,-170,o),
(1516,-216,q),
(1632,-216,o),
(1632,-279,qs),
(1632,-385,o),
(1522,-385,qs),
(1444,-385,o),
(959,-140,o),
(687,-140,qs),
(415,-140,o),
(189,-223,o),
(189,-270,qs),
(189,-347,l),
(248,-305,o),
(405,-263,o),
(481,-263,qs),
(611,-263,o),
(1096,-559,o),
(1522,-559,qs),
(1809,-559,o),
(1892,-489,qs),
(1975,-419,o),
(1975,-279,qs),
(1975,-93,o)
);
},
{
closed = 1;
nodes = (
(2353,928,l),
(2353,0,l),
(2696,0,l),
(2696,1103,l),
(2164,1350,l),
(1835,1160,l),
(1443,1350,l),
(1149,1179,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,0,l),
(1253,0,l),
(1253,1022,l),
(1373,1084,l),
(1632,955,l),
(1632,0,l),
(1975,0,l),
(1975,1021,l),
(2060,1053,l)
);
}
);
width = 2164;
}
);
note = uni1789_17B6;
},
{
glyphname = uni1789_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1743,-93,qs),
(1634,-93,o),
(1516,-170,o),
(1516,-216,q),
(1632,-216,o),
(1632,-279,qs),
(1632,-385,o),
(1522,-385,qs),
(1444,-385,o),
(959,-140,o),
(687,-140,qs),
(415,-140,o),
(189,-223,o),
(189,-270,qs),
(189,-347,l),
(248,-305,o),
(405,-263,o),
(481,-263,qs),
(611,-263,o),
(1096,-559,o),
(1522,-559,qs),
(1809,-559,o),
(1892,-489,qs),
(1975,-419,o),
(1975,-279,qs),
(1975,-93,o)
);
},
{
closed = 1;
nodes = (
(2746,1196,qs),
(2746,1578,ls),
(2746,1800,o),
(2529,1800,qs),
(2311,1800,o),
(2311,1674,q),
(2358,1674,o),
(2381,1650,qs),
(2404,1626,o),
(2404,1578,qs),
(2404,1239,l),
(2164,1350,l),
(1835,1160,l),
(1443,1350,l),
(1149,1179,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,0,l),
(1253,0,l),
(1253,1022,l),
(1373,1084,l),
(1632,955,l),
(1632,0,l),
(1975,0,l),
(1975,1021,l),
(2060,1053,l),
(2353,928,l),
(2353,0,l),
(2696,0,l),
(2696,1018,l),
(2746,1151,o)
);
}
);
width = 2164;
}
);
note = uni1789_17C5;
},
{
glyphname = uni178A_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,871,l),
(910,871,l),
(910,238,l),
(721,403,l),
(532,238,l),
(532,871,l),
(189,871,l),
(189,0,l)
);
},
{
closed = 1;
nodes = (
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1103,l),
(1442,1350,l),
(1253,1277,l),
(1245,1487,o),
(977,1487,qs),
(861,1487,o),
(837,1464,qs),
(814,1440,o),
(814,1394,q),
(910,1394,o),
(910,1265,qs),
(910,1153,o),
(768,1153,qs),
(675,1153,ls),
(532,1153,o),
(532,1185,qs),
(532,1212,o),
(556,1212,qs),
(579,1212,o),
(579,1185,q),
(626,1185,o),
(648,1203,qs),
(672,1222,o),
(672,1257,qs),
(672,1350,o),
(504,1350,qs),
(189,1350,o),
(189,1185,qs),
(189,955,o),
(675,955,qs),
(768,955,ls),
(1014,955,o),
(1135,1035,q),
(1338,1053,l)
);
}
);
width = 1442;
}
);
note = uni178A_17B6;
},
{
glyphname = uni178A_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,871,l),
(910,871,l),
(910,238,l),
(721,403,l),
(532,238,l),
(532,871,l),
(189,871,l),
(189,0,l)
);
},
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1239,l),
(1442,1350,l),
(1253,1277,l),
(1245,1487,o),
(977,1487,qs),
(861,1487,o),
(837,1464,qs),
(814,1440,o),
(814,1394,q),
(910,1394,o),
(910,1265,qs),
(910,1153,o),
(768,1153,qs),
(675,1153,ls),
(532,1153,o),
(532,1185,qs),
(532,1212,o),
(556,1212,qs),
(579,1212,o),
(579,1185,q),
(626,1185,o),
(648,1203,qs),
(672,1222,o),
(672,1257,qs),
(672,1350,o),
(504,1350,qs),
(189,1350,o),
(189,1185,qs),
(189,955,o),
(675,955,qs),
(768,955,ls),
(1014,955,o),
(1135,1035,q),
(1338,1053,l),
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni178A_17C5;
},
{
glyphname = uni178B_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1103,l),
(1442,1350,l),
(1355,1304,l),
(1355,1316,ls),
(1355,1421,o),
(1266,1545,o),
(1166,1545,qs),
(1099,1545,o),
(1053,1469,o),
(1053,1412,q),
(1123,1412,o),
(1157,1384,qs),
(1192,1355,o),
(1192,1316,qs),
(1192,1290,o),
(1179,1272,q),
(994,1350,l),
(787,1062,l),
(787,921,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,1350,l),
(189,1350,l),
(90,1186,o),
(66,1138,qs),
(43,1090,o),
(43,1050,qs),
(43,892,o),
(189,892,q),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,900,l),
(1103,973,l),
(952,1045,l),
(986,1092,l),
(1137,1013,o),
(1202,1013,qs),
(1220,1013,o),
(1238,1021,q),
(1338,1053,l)
);
}
);
width = 1442;
}
);
note = uni178B_17B6;
},
{
glyphname = uni178B_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1239,l),
(1442,1350,l),
(1355,1304,l),
(1355,1316,ls),
(1355,1421,o),
(1266,1545,o),
(1166,1545,qs),
(1099,1545,o),
(1053,1469,o),
(1053,1412,q),
(1123,1412,o),
(1157,1384,qs),
(1192,1355,o),
(1192,1316,qs),
(1192,1290,o),
(1179,1272,q),
(994,1350,l),
(787,1062,l),
(787,921,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,1350,l),
(189,1350,l),
(90,1186,o),
(66,1138,qs),
(43,1090,o),
(43,1050,qs),
(43,892,o),
(189,892,q),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,900,l),
(1103,973,l),
(952,1045,l),
(986,1092,l),
(1137,1013,o),
(1202,1013,qs),
(1220,1013,o),
(1238,1021,q),
(1338,1053,l),
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni178B_17C5;
},
{
glyphname = uni178C_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1103,l),
(1442,1350,l),
(1147,1180,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,838,ls),
(189,742,o),
(361,742,qs),
(532,742,o),
(532,838,qs),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(911,1013,l),
(911,965,ls),
(910,903,o),
(829,775,o),
(189,488,q),
(189,263,ls),
(189,0,o),
(520,0,qs),
(644,1,l),
(911,190,l),
(911,117,ls),
(911,70,o),
(834,70,q),
(834,-47,o),
(1001,-47,qs),
(1253,-47,o),
(1253,115,qs),
(1253,555,l),
(911,555,l),
(911,407,l),
(610,194,l),
(610,193,l),
(532,193,o),
(532,263,qs),
(532,438,l),
(1131,715,o),
(1253,892,o),
(1253,965,qs),
(1253,1021,l),
(1338,1053,l)
);
}
);
width = 1442;
}
);
note = uni178C_17B6;
},
{
glyphname = uni178C_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1239,l),
(1442,1350,l),
(1147,1180,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,838,ls),
(189,742,o),
(361,742,qs),
(532,742,o),
(532,838,qs),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(911,1013,l),
(911,965,ls),
(910,903,o),
(829,775,o),
(189,488,q),
(189,263,ls),
(189,0,o),
(520,0,qs),
(644,1,l),
(911,190,l),
(911,117,ls),
(911,70,o),
(834,70,q),
(834,-47,o),
(1001,-47,qs),
(1253,-47,o),
(1253,115,qs),
(1253,555,l),
(911,555,l),
(911,407,l),
(610,194,l),
(610,193,l),
(532,193,o),
(532,263,qs),
(532,438,l),
(1131,715,o),
(1253,892,o),
(1253,965,qs),
(1253,1021,l),
(1338,1053,l),
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni178C_17C5;
},
{
glyphname = uni178D_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1791,992,l),
(1913,1073,l),
(2353,925,l),
(2353,0,l),
(2696,0,l),
(2696,1122,l),
(2015,1350,l),
(1528,1031,l),
(1528,910,l),
(1631,861,l),
(1631,233,ls),
(1631,193,o),
(1578,193,qs),
(1525,193,o),
(1525,217,qs),
(1525,489,o),
(1253,489,q),
(1253,1090,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,489,l),
(860,479,o),
(810,407,o),
(810,286,qs),
(810,164,o),
(930,0,q),
(1253,0,l),
(1253,306,l),
(1322,306,o),
(1322,217,qs),
(1322,0,o),
(1648,0,qs),
(1974,0,o),
(1974,233,qs),
(1974,900,l)
);
}
);
width = 2164;
}
);
note = uni178D_17B6;
},
{
glyphname = uni178D_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2746,1196,qs),
(2746,1578,ls),
(2746,1800,o),
(2529,1800,qs),
(2311,1800,o),
(2311,1674,q),
(2358,1674,o),
(2381,1650,qs),
(2404,1626,o),
(2404,1578,qs),
(2404,1220,l),
(2015,1350,l),
(1528,1031,l),
(1528,910,l),
(1631,861,l),
(1631,233,ls),
(1631,193,o),
(1578,193,qs),
(1525,193,o),
(1525,217,qs),
(1525,489,o),
(1253,489,q),
(1253,1090,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,489,l),
(860,479,o),
(810,407,o),
(810,286,qs),
(810,164,o),
(930,0,q),
(1253,0,l),
(1253,306,l),
(1322,306,o),
(1322,217,qs),
(1322,0,o),
(1648,0,qs),
(1974,0,o),
(1974,233,qs),
(1974,900,l),
(1791,992,l),
(1913,1073,l),
(2353,925,l),
(2353,0,l),
(2696,0,l),
(2696,1018,l),
(2746,1151,o)
);
}
);
width = 2164;
}
);
note = uni178D_17C5;
},
{
glyphname = uni178E_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3074,928,l),
(3074,0,l),
(3417,0,l),
(3417,1103,l),
(2885,1350,l),
(2595,1182,l),
(2164,1350,l),
(1632,1144,l),
(1632,238,l),
(1443,403,l),
(1254,238,l),
(1254,1143,l),
(721,1350,l),
(189,1144,l),
(189,0,l),
(532,0,l),
(691,163,o),
(691,314,qs),
(691,458,o),
(532,458,q),
(532,1067,l),
(631,1107,l),
(911,999,l),
(911,0,l),
(1254,0,l),
(1443,166,l),
(1632,0,l),
(1975,0,l),
(1975,1068,l),
(2076,1107,l),
(2353,999,l),
(2353,0,l),
(2696,0,l),
(2696,1021,l),
(2781,1053,l)
);
}
);
width = 2885;
}
);
note = uni178E_17B6;
},
{
glyphname = uni178E_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3467,1196,qs),
(3467,1578,ls),
(3467,1800,o),
(3250,1800,qs),
(3032,1800,o),
(3032,1674,q),
(3079,1674,o),
(3102,1650,qs),
(3125,1626,o),
(3125,1578,qs),
(3125,1239,l),
(2885,1350,l),
(2595,1182,l),
(2164,1350,l),
(1632,1144,l),
(1632,238,l),
(1443,403,l),
(1254,238,l),
(1254,1143,l),
(721,1350,l),
(189,1144,l),
(189,0,l),
(532,0,l),
(691,163,o),
(691,314,qs),
(691,458,o),
(532,458,q),
(532,1067,l),
(631,1107,l),
(911,999,l),
(911,0,l),
(1254,0,l),
(1443,166,l),
(1632,0,l),
(1975,0,l),
(1975,1068,l),
(2076,1107,l),
(2353,999,l),
(2353,0,l),
(2696,0,l),
(2696,1021,l),
(2781,1053,l),
(3074,928,l),
(3074,0,l),
(3417,0,l),
(3417,1018,l),
(3467,1151,o)
);
}
);
width = 2885;
}
);
note = uni178E_17C5;
},
{
glyphname = uni178F_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,658,ls),
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,0,l),
(1253,0,l),
(1253,658,ls),
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,0,l)
);
},
{
closed = 1;
nodes = (
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1102,l),
(106,1011,l),
(183,972,ls),
(259,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(453,1119,l),
(926,952,l),
(988,951,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1133,l)
);
}
);
width = 1442;
}
);
note = uni178F_17B6;
},
{
glyphname = uni178F_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,658,ls),
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,0,l),
(1253,0,l),
(1253,658,ls),
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,0,l)
);
},
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1235,l),
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1102,l),
(106,1011,l),
(183,972,ls),
(259,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(453,1119,l),
(926,952,l),
(988,951,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni178F_17C5;
},
{
glyphname = uni1790_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1338,1053,l),
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1103,l),
(1442,1350,l),
(1253,1270,l),
(1244,1487,o),
(997,1487,qs),
(911,1487,o),
(814,1441,o),
(814,1394,q),
(910,1394,o),
(911,1254,qs),
(910,1185,o),
(848,1185,qs),
(805,1185,l),
(505,1350,l),
(403,1350,l),
(106,1150,l),
(106,944,l),
(189,897,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(910,526,q),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,959,l),
(308,1086,l),
(379,1131,l),
(642,985,l),
(838,985,ls),
(979,985,o),
(1072,1016,q),
(1072,1015,l)
);
}
);
width = 1442;
}
);
note = uni1790_17B6;
},
{
glyphname = uni1790_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1239,l),
(1442,1350,l),
(1253,1270,l),
(1244,1487,o),
(997,1487,qs),
(911,1487,o),
(814,1441,o),
(814,1394,q),
(910,1394,o),
(911,1254,qs),
(910,1185,o),
(848,1185,qs),
(805,1185,l),
(505,1350,l),
(403,1350,l),
(106,1150,l),
(106,944,l),
(189,897,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(910,526,q),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,959,l),
(308,1086,l),
(379,1131,l),
(642,985,l),
(838,985,ls),
(979,985,o),
(1072,1016,q),
(1072,1015,l),
(1338,1053,l),
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1790_17C5;
},
{
glyphname = uni1791_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1103,l),
(1442,1350,l),
(1204,1213,l),
(1092,1350,o),
(721,1350,qs),
(189,1350,o),
(189,1068,qs),
(189,844,ls),
(189,512,o),
(722,512,qs),
(779,512,l),
(779,290,ls),
(779,199,o),
(707,199,qs),
(635,199,o),
(635,240,qs),
(635,290,ls),
(635,455,o),
(439,455,qs),
(243,455,o),
(243,339,q),
(292,339,o),
(292,290,qs),
(292,240,ls),
(292,0,o),
(707,0,qs),
(1122,0,o),
(1122,291,qs),
(1122,512,l),
(1253,512,o),
(1253,663,qs),
(1253,814,o),
(1016,814,qs),
(779,814,o),
(779,710,q),
(722,710,ls),
(532,710,o),
(532,844,qs),
(532,1068,ls),
(532,1162,o),
(721,1162,qs),
(911,1162,o),
(911,1068,q),
(848,1061,o),
(848,988,qs),
(848,916,o),
(1051,916,qs),
(1217,916,o),
(1246,1018,q),
(1338,1053,l)
);
}
);
width = 1442;
}
);
note = uni1791_17B6;
},
{
glyphname = uni1791_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1239,l),
(1442,1350,l),
(1204,1213,l),
(1092,1350,o),
(721,1350,qs),
(189,1350,o),
(189,1068,qs),
(189,844,ls),
(189,512,o),
(722,512,qs),
(779,512,l),
(779,290,ls),
(779,199,o),
(707,199,qs),
(635,199,o),
(635,240,qs),
(635,290,ls),
(635,455,o),
(439,455,qs),
(243,455,o),
(243,339,q),
(292,339,o),
(292,290,qs),
(292,240,ls),
(292,0,o),
(707,0,qs),
(1122,0,o),
(1122,291,qs),
(1122,512,l),
(1253,512,o),
(1253,663,qs),
(1253,814,o),
(1016,814,qs),
(779,814,o),
(779,710,q),
(722,710,ls),
(532,710,o),
(532,844,qs),
(532,1068,ls),
(532,1162,o),
(721,1162,qs),
(911,1162,o),
(911,1068,q),
(848,1061,o),
(848,988,qs),
(848,916,o),
(1051,916,qs),
(1217,916,o),
(1246,1018,q),
(1338,1053,l),
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1791_17C5;
},
{
glyphname = uni1792_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,1079,l),
(451,1126,l),
(926,952,l),
(988,952,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1133,l),
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1143,l),
(106,992,l),
(189,918,l),
(189,0,l),
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(910,526,q),
(910,238,l),
(721,403,l),
(532,238,l),
(532,962,l)
);
}
);
width = 1442;
}
);
note = uni1792_17B6;
},
{
glyphname = uni1792_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1235,l),
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1143,l),
(106,992,l),
(189,918,l),
(189,0,l),
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(910,526,q),
(910,238,l),
(721,403,l),
(532,238,l),
(532,962,l),
(319,1079,l),
(451,1126,l),
(926,952,l),
(988,952,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1792_17C5;
},
{
glyphname = uni1793_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1103,l),
(1442,1350,l),
(1214,1219,l),
(1119,1350,o),
(791,1350,qs),
(651,1350,ls),
(189,1350,o),
(189,1089,qs),
(189,965,ls),
(189,892,o),
(271,765,o),
(911,438,q),
(911,245,ls),
(911,199,o),
(857,199,qs),
(802,199,o),
(596,389,o),
(532,389,q),
(532,563,l),
(189,563,l),
(189,0,l),
(532,0,l),
(532,191,l),
(569,191,o),
(774,0,o),
(887,0,qs),
(1253,0,o),
(1253,245,qs),
(1253,458,l),
(603,805,o),
(532,903,o),
(531,965,qs),
(531,1089,ls),
(531,1152,o),
(651,1152,qs),
(791,1152,ls),
(910,1152,o),
(910,1089,qs),
(910,1037,l),
(880,1037,o),
(845,1007,qs),
(810,976,o),
(810,916,qs),
(810,844,o),
(845,808,qs),
(880,772,o),
(950,772,qs),
(1120,772,ls),
(1171,772,o),
(1212,796,qs),
(1253,820,o),
(1253,868,qs),
(1253,1021,l),
(1338,1053,l)
);
}
);
width = 1442;
}
);
note = uni1793_17B6;
},
{
glyphname = uni1793_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1239,l),
(1442,1350,l),
(1214,1219,l),
(1119,1350,o),
(791,1350,qs),
(651,1350,ls),
(189,1350,o),
(189,1089,qs),
(189,965,ls),
(189,892,o),
(271,765,o),
(911,438,q),
(911,245,ls),
(911,199,o),
(857,199,qs),
(802,199,o),
(596,389,o),
(532,389,q),
(532,563,l),
(189,563,l),
(189,0,l),
(532,0,l),
(532,191,l),
(569,191,o),
(774,0,o),
(887,0,qs),
(1253,0,o),
(1253,245,qs),
(1253,458,l),
(603,805,o),
(532,903,o),
(531,965,qs),
(531,1089,ls),
(531,1152,o),
(651,1152,qs),
(791,1152,ls),
(910,1152,o),
(910,1089,qs),
(910,1037,l),
(880,1037,o),
(845,1007,qs),
(810,976,o),
(810,916,qs),
(810,844,o),
(845,808,qs),
(880,772,o),
(950,772,qs),
(1120,772,ls),
(1171,772,o),
(1212,796,qs),
(1253,820,o),
(1253,868,qs),
(1253,1021,l),
(1338,1053,l),
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1793_17C5;
},
{
glyphname = uni1794_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(189,0,o),
(675,0,qs),
(768,0,ls),
(845,0,o),
(910,7,q),
(910,-100,l),
(1253,-100,l),
(1253,860,l),
(910,860,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,962,l),
(319,1079,l),
(451,1126,l),
(926,952,l),
(988,952,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1133,l),
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1143,l),
(106,992,l),
(189,918,l),
(189,292,ls)
);
}
);
width = 1442;
}
);
note = uni1794_17B6;
},
{
glyphname = uni1794_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1235,l),
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1143,l),
(106,992,l),
(189,918,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(845,0,o),
(910,7,q),
(910,-100,l),
(1253,-100,l),
(1253,860,l),
(910,860,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,962,l),
(319,1079,l),
(451,1126,l),
(926,952,l),
(988,952,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1794_17C5;
},
{
glyphname = uni1795_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1103,l),
(1442,1350,l),
(1252,1277,l),
(1240,1487,o),
(997,1487,qs),
(911,1487,o),
(814,1441,o),
(814,1394,q),
(910,1394,o),
(911,1254,qs),
(910,1185,o),
(848,1185,qs),
(805,1185,l),
(505,1350,l),
(403,1350,l),
(106,1150,l),
(106,944,l),
(189,897,l),
(189,0,l),
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(910,526,q),
(910,238,l),
(721,403,l),
(532,238,l),
(532,959,l),
(308,1086,l),
(379,1131,l),
(642,985,l),
(838,985,ls),
(1013,985,o),
(1115,1033,q),
(1338,1053,l)
);
}
);
width = 1442;
}
);
note = uni1795_17B6;
},
{
glyphname = uni1795_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1239,l),
(1442,1350,l),
(1252,1277,l),
(1240,1487,o),
(997,1487,qs),
(911,1487,o),
(814,1441,o),
(814,1394,q),
(910,1394,o),
(911,1254,qs),
(910,1185,o),
(848,1185,qs),
(805,1185,l),
(505,1350,l),
(403,1350,l),
(106,1150,l),
(106,944,l),
(189,897,l),
(189,0,l),
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,888,l),
(911,888,l),
(768,759,o),
(768,641,qs),
(768,526,o),
(910,526,q),
(910,238,l),
(721,403,l),
(532,238,l),
(532,959,l),
(308,1086,l),
(379,1131,l),
(642,985,l),
(838,985,ls),
(1013,985,o),
(1115,1033,q),
(1338,1053,l),
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1795_17C5;
},
{
glyphname = uni1796_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1103,l),
(1442,1350,l),
(1147,1180,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,0,l),
(1253,0,l),
(1253,1021,l),
(1338,1053,l)
);
}
);
width = 1442;
}
);
note = uni1796_17B6;
},
{
glyphname = uni1796_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1239,l),
(1442,1350,l),
(1147,1180,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,0,l),
(1253,0,l),
(1253,1021,l),
(1338,1053,l),
(1631,928,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1796_17C5;
},
{
glyphname = uni1797_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,0,l),
(1253,0,l),
(1253,658,ls),
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,658,ls)
);
},
{
closed = 1;
nodes = (
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1102,l),
(106,1011,l),
(183,972,ls),
(259,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(453,1119,l),
(926,952,l),
(988,951,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1133,l)
);
}
);
width = 1442;
}
);
note = uni1797_17B6;
},
{
glyphname = uni1797_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,738,o),
(651,738,qs),
(791,738,ls),
(911,738,o),
(911,658,qs),
(911,0,l),
(1253,0,l),
(1253,658,ls),
(1253,931,o),
(791,931,qs),
(651,931,ls),
(189,931,o),
(189,658,qs),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,658,ls)
);
},
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1235,l),
(1350,1350,l),
(1109,1183,l),
(660,1350,l),
(568,1350,l),
(106,1102,l),
(106,1011,l),
(183,972,ls),
(259,932,o),
(361,932,qs),
(363,932,ls),
(395,932,o),
(443,1025,q),
(369,1083,l),
(453,1119,l),
(926,952,l),
(988,951,l),
(1187,1083,l),
(1631,936,l),
(1631,0,l),
(1974,0,l),
(1974,1018,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1797_17C5;
},
{
glyphname = uni1798_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,551,l),
(910,551,l),
(910,292,ls)
);
},
{
closed = 1;
nodes = (
(1070,992,l),
(1192,1073,l),
(1632,925,l),
(1632,0,l),
(1975,0,l),
(1975,1122,l),
(1294,1350,l),
(807,1031,l),
(807,910,l),
(910,861,l),
(910,749,l),
(532,749,l),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,900,l)
);
}
);
width = 1442;
}
);
note = uni1798_17B6;
},
{
glyphname = uni1798_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,551,l),
(910,551,l),
(910,292,ls)
);
},
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1220,l),
(1294,1350,l),
(807,1031,l),
(807,910,l),
(910,861,l),
(910,749,l),
(532,749,l),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,900,l),
(1070,992,l),
(1192,1073,l),
(1632,925,l),
(1632,0,l),
(1975,0,l),
(1975,1020,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni1798_17C5;
},
{
glyphname = uni1799_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1791,992,l),
(1913,1073,l),
(2353,925,l),
(2353,0,l),
(2696,0,l),
(2696,1122,l),
(2015,1350,l),
(1528,1031,l),
(1528,910,l),
(1631,861,l),
(1631,292,ls),
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,292,qs),
(1253,900,l),
(970,1039,l),
(1000,1088,l),
(1146,1013,o),
(1242,1013,qs),
(1329,1013,o),
(1366,1230,q),
(1261,1230,o),
(1199,1260,qs),
(1014,1350,l),
(807,1062,l),
(807,911,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,892,l),
(678,892,o),
(678,1050,qs),
(678,1090,o),
(655,1138,qs),
(631,1186,o),
(532,1350,q),
(189,1350,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(965,0,o),
(1082,48,q),
(1199,0,o),
(1396,0,qs),
(1489,0,ls),
(1974,0,o),
(1974,292,qs),
(1974,900,l)
);
}
);
width = 2164;
}
);
note = uni1799_17B6;
},
{
glyphname = uni1799_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2746,1196,qs),
(2746,1578,ls),
(2746,1800,o),
(2529,1800,qs),
(2311,1800,o),
(2311,1674,q),
(2358,1674,o),
(2381,1650,qs),
(2404,1626,o),
(2404,1578,qs),
(2404,1220,l),
(2015,1350,l),
(1528,1031,l),
(1528,910,l),
(1631,861,l),
(1631,292,ls),
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,292,qs),
(1253,900,l),
(970,1039,l),
(1000,1088,l),
(1146,1013,o),
(1242,1013,qs),
(1329,1013,o),
(1366,1230,q),
(1261,1230,o),
(1199,1260,qs),
(1014,1350,l),
(807,1062,l),
(807,911,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,892,l),
(678,892,o),
(678,1050,qs),
(678,1090,o),
(655,1138,qs),
(631,1186,o),
(532,1350,q),
(189,1350,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(965,0,o),
(1082,48,q),
(1199,0,o),
(1396,0,qs),
(1489,0,ls),
(1974,0,o),
(1974,292,qs),
(1974,900,l),
(1791,992,l),
(1913,1073,l),
(2353,925,l),
(2353,0,l),
(2696,0,l),
(2696,1018,l),
(2746,1151,o)
);
}
);
width = 2164;
}
);
note = uni1799_17C5;
},
{
glyphname = uni179A_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(910,928,l),
(910,0,l),
(1253,0,l),
(1253,1103,l),
(811,1350,l),
(591,1232,l),
(541,1238,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(505,1013,o),
(526,1027,q),
(667,1083,l)
);
}
);
width = 721;
}
);
note = uni179A_17B6;
},
{
glyphname = uni179A_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1303,1196,qs),
(1303,1578,ls),
(1303,1800,o),
(1086,1800,qs),
(868,1800,o),
(868,1674,q),
(915,1674,o),
(938,1650,qs),
(961,1626,o),
(961,1578,qs),
(961,1266,l),
(811,1350,l),
(591,1232,l),
(541,1238,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(505,1013,o),
(526,1027,q),
(667,1083,l),
(910,928,l),
(910,0,l),
(1253,0,l),
(1253,1018,l),
(1303,1151,o)
);
}
);
width = 721;
}
);
note = uni179A_17C5;
},
{
glyphname = uni179B_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1791,992,l),
(1913,1073,l),
(2353,925,l),
(2353,0,l),
(2696,0,l),
(2696,1122,l),
(2015,1350,l),
(1528,1031,l),
(1528,910,l),
(1631,861,l),
(1631,282,ls),
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,282,qs),
(1253,1143,l),
(721,1350,l),
(189,1144,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1093,l),
(601,1119,l),
(910,999,l),
(910,282,ls),
(910,0,o),
(1396,0,qs),
(1489,0,ls),
(1974,0,o),
(1974,282,qs),
(1974,900,l)
);
}
);
width = 2164;
}
);
note = uni179B_17B6;
},
{
glyphname = uni179B_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2746,1196,qs),
(2746,1578,ls),
(2746,1800,o),
(2529,1800,qs),
(2311,1800,o),
(2311,1674,q),
(2358,1674,o),
(2381,1650,qs),
(2404,1626,o),
(2404,1578,qs),
(2404,1220,l),
(2015,1350,l),
(1528,1031,l),
(1528,910,l),
(1631,861,l),
(1631,282,ls),
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,282,qs),
(1253,1143,l),
(721,1350,l),
(189,1144,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1093,l),
(601,1119,l),
(910,999,l),
(910,282,ls),
(910,0,o),
(1396,0,qs),
(1489,0,ls),
(1974,0,o),
(1974,282,qs),
(1974,900,l),
(1791,992,l),
(1913,1073,l),
(2353,925,l),
(2353,0,l),
(2696,0,l),
(2696,1018,l),
(2746,1151,o)
);
}
);
width = 2164;
}
);
note = uni179B_17C5;
},
{
glyphname = uni179C_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(910,928,l),
(910,0,l),
(1253,0,l),
(1253,1103,l),
(721,1350,l),
(634,1304,l),
(634,1316,ls),
(634,1421,o),
(545,1545,o),
(445,1545,qs),
(378,1545,o),
(332,1469,o),
(332,1412,q),
(402,1412,o),
(436,1384,qs),
(471,1355,o),
(471,1316,qs),
(471,1290,o),
(458,1272,q),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(499,1013,o),
(517,1021,q),
(617,1053,l)
);
}
);
width = 721;
}
);
note = uni179C_17B6;
},
{
glyphname = uni179C_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1303,1196,qs),
(1303,1578,ls),
(1303,1800,o),
(1086,1800,qs),
(868,1800,o),
(868,1674,q),
(915,1674,o),
(938,1650,qs),
(961,1626,o),
(961,1578,qs),
(961,1239,l),
(721,1350,l),
(634,1304,l),
(634,1316,ls),
(634,1421,o),
(545,1545,o),
(445,1545,qs),
(378,1545,o),
(332,1469,o),
(332,1412,q),
(402,1412,o),
(436,1384,qs),
(471,1355,o),
(471,1316,qs),
(471,1290,o),
(458,1272,q),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(499,1013,o),
(517,1021,q),
(617,1053,l),
(910,928,l),
(910,0,l),
(1253,0,l),
(1253,1018,l),
(1303,1151,o)
);
}
);
width = 721;
}
);
note = uni179C_17C5;
},
{
glyphname = uni179F_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1791,992,l),
(1913,1073,l),
(2353,925,l),
(2353,0,l),
(2696,0,l),
(2696,1122,l),
(2015,1350,l),
(1528,1031,l),
(1528,910,l),
(1631,861,l),
(1631,282,ls),
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,282,qs),
(1253,658,ls),
(1253,919,o),
(832,930,q),
(485,1064,l),
(535,1106,l),
(728,1016,o),
(855,1016,qs),
(991,1016,o),
(1040,1245,q),
(901,1245,o),
(818,1272,qs),
(573,1350,l),
(298,1099,l),
(298,968,l),
(477,919,l),
(189,874,o),
(189,658,qs),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,658,ls),
(532,738,o),
(651,738,qs),
(791,738,ls),
(910,738,o),
(910,658,qs),
(910,282,ls),
(910,0,o),
(1396,0,qs),
(1489,0,ls),
(1974,0,o),
(1974,282,qs),
(1974,900,l)
);
}
);
width = 2164;
}
);
note = uni179F_17B6;
},
{
glyphname = uni179F_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2746,1196,qs),
(2746,1578,ls),
(2746,1800,o),
(2529,1800,qs),
(2311,1800,o),
(2311,1674,q),
(2358,1674,o),
(2381,1650,qs),
(2404,1626,o),
(2404,1578,qs),
(2404,1220,l),
(2015,1350,l),
(1528,1031,l),
(1528,910,l),
(1631,861,l),
(1631,282,ls),
(1631,198,o),
(1489,198,qs),
(1396,198,ls),
(1253,198,o),
(1253,282,qs),
(1253,658,ls),
(1253,919,o),
(832,930,q),
(485,1064,l),
(535,1106,l),
(728,1016,o),
(855,1016,qs),
(991,1016,o),
(1040,1245,q),
(901,1245,o),
(818,1272,qs),
(573,1350,l),
(298,1099,l),
(298,968,l),
(477,919,l),
(189,874,o),
(189,658,qs),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,658,ls),
(532,738,o),
(651,738,qs),
(791,738,ls),
(910,738,o),
(910,658,qs),
(910,282,ls),
(910,0,o),
(1396,0,qs),
(1489,0,ls),
(1974,0,o),
(1974,282,qs),
(1974,900,l),
(1791,992,l),
(1913,1073,l),
(2353,925,l),
(2353,0,l),
(2696,0,l),
(2696,1018,l),
(2746,1151,o)
);
}
);
width = 2164;
}
);
note = uni179F_17C5;
},
{
glyphname = uni17A0_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2353,928,l),
(2353,0,l),
(2696,0,l),
(2696,1103,l),
(2164,1350,l),
(1844,1166,l),
(1294,1350,l),
(807,1031,l),
(807,910,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,900,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,900,l),
(1070,992,l),
(1192,1073,l),
(1632,925,l),
(1632,0,l),
(1975,0,l),
(1975,1021,l),
(2060,1053,l)
);
}
);
width = 2164;
}
);
note = uni17A0_17B6;
},
{
glyphname = uni17A0_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2746,1196,qs),
(2746,1578,ls),
(2746,1800,o),
(2529,1800,qs),
(2311,1800,o),
(2311,1674,q),
(2358,1674,o),
(2381,1650,qs),
(2404,1626,o),
(2404,1578,qs),
(2404,1239,l),
(2164,1350,l),
(1844,1166,l),
(1294,1350,l),
(807,1031,l),
(807,910,l),
(910,861,l),
(910,292,ls),
(910,198,o),
(768,198,qs),
(675,198,ls),
(532,198,o),
(532,292,qs),
(532,900,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,292,ls),
(189,0,o),
(675,0,qs),
(768,0,ls),
(1253,0,o),
(1253,292,qs),
(1253,900,l),
(1070,992,l),
(1192,1073,l),
(1632,925,l),
(1632,0,l),
(1975,0,l),
(1975,1021,l),
(2060,1053,l),
(2353,928,l),
(2353,0,l),
(2696,0,l),
(2696,1018,l),
(2746,1151,o)
);
}
);
width = 2164;
}
);
note = uni17A0_17C5;
},
{
glyphname = uni17A1_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(848,988,qs),
(848,916,o),
(1051,916,qs),
(1253,916,o),
(1253,1068,qs),
(1253,1350,o),
(721,1350,qs),
(189,1350,o),
(189,1068,qs),
(189,844,ls),
(189,512,o),
(722,512,qs),
(779,512,l),
(779,290,ls),
(779,199,o),
(707,199,qs),
(635,199,o),
(635,240,qs),
(635,290,ls),
(635,455,o),
(439,455,qs),
(243,455,o),
(243,339,q),
(292,339,o),
(292,290,qs),
(292,240,ls),
(292,0,o),
(707,0,qs),
(1122,0,o),
(1122,291,qs),
(1122,512,l),
(1253,512,o),
(1253,663,qs),
(1253,814,o),
(1016,814,qs),
(779,814,o),
(779,710,q),
(722,710,ls),
(532,710,o),
(532,844,qs),
(532,1068,ls),
(532,1162,o),
(721,1162,qs),
(911,1162,o),
(911,1068,q),
(848,1061,o)
);
},
{
closed = 1;
nodes = (
(1791,992,l),
(1913,1073,l),
(2353,925,l),
(2353,0,l),
(2696,0,l),
(2696,1122,l),
(2015,1350,l),
(1528,1031,l),
(1528,910,l),
(1631,861,l),
(1631,-430,l),
(1442,-278,l),
(1252,-430,l),
(1252,-93,l),
(909,-93,l),
(840,-161,ls),
(804,-195,o),
(788,-228,qs),
(770,-262,o),
(770,-294,qs),
(770,-328,o),
(805,-345,qs),
(838,-360,o),
(903,-360,qs),
(909,-360,l),
(909,-673,l),
(1252,-673,l),
(1442,-511,l),
(1631,-673,l),
(1974,-673,l),
(1974,900,l)
);
}
);
width = 2164;
}
);
note = uni17A1_17B6;
},
{
glyphname = uni17A1_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(848,988,qs),
(848,916,o),
(1051,916,qs),
(1253,916,o),
(1253,1068,qs),
(1253,1350,o),
(721,1350,qs),
(189,1350,o),
(189,1068,qs),
(189,844,ls),
(189,512,o),
(722,512,qs),
(779,512,l),
(779,290,ls),
(779,199,o),
(707,199,qs),
(635,199,o),
(635,240,qs),
(635,290,ls),
(635,455,o),
(439,455,qs),
(243,455,o),
(243,339,q),
(292,339,o),
(292,290,qs),
(292,240,ls),
(292,0,o),
(707,0,qs),
(1122,0,o),
(1122,291,qs),
(1122,512,l),
(1253,512,o),
(1253,663,qs),
(1253,814,o),
(1016,814,qs),
(779,814,o),
(779,710,q),
(722,710,ls),
(532,710,o),
(532,844,qs),
(532,1068,ls),
(532,1162,o),
(721,1162,qs),
(911,1162,o),
(911,1068,q),
(848,1061,o)
);
},
{
closed = 1;
nodes = (
(2746,1196,qs),
(2746,1578,ls),
(2746,1800,o),
(2529,1800,qs),
(2311,1800,o),
(2311,1674,q),
(2358,1674,o),
(2381,1650,qs),
(2404,1626,o),
(2404,1578,qs),
(2404,1220,l),
(2015,1350,l),
(1528,1031,l),
(1528,910,l),
(1631,861,l),
(1631,-430,l),
(1442,-278,l),
(1252,-430,l),
(1252,-93,l),
(909,-93,l),
(840,-161,ls),
(804,-195,o),
(788,-228,qs),
(770,-262,o),
(770,-294,qs),
(770,-328,o),
(805,-345,qs),
(838,-360,o),
(903,-360,qs),
(909,-360,l),
(909,-673,l),
(1252,-673,l),
(1442,-511,l),
(1631,-673,l),
(1974,-673,l),
(1974,900,l),
(1791,992,l),
(1913,1073,l),
(2353,925,l),
(2353,0,l),
(2696,0,l),
(2696,1018,l),
(2746,1151,o)
);
}
);
width = 2164;
}
);
note = uni17A1_17C5;
},
{
glyphname = uni17A2_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1070,992,l),
(1192,1073,l),
(1632,925,l),
(1632,0,l),
(1975,0,l),
(1975,1122,l),
(1294,1350,l),
(807,1031,l),
(807,910,l),
(910,861,l),
(910,749,l),
(532,749,l),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,551,l),
(910,551,l),
(910,458,l),
(787,458,o),
(787,314,qs),
(787,208,o),
(910,0,q),
(1253,0,l),
(1253,900,l)
);
}
);
width = 1442;
}
);
note = uni17A2_17B6;
},
{
glyphname = uni17A2_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2024,1196,qs),
(2024,1578,ls),
(2024,1800,o),
(1807,1800,qs),
(1589,1800,o),
(1589,1674,q),
(1636,1674,o),
(1659,1650,qs),
(1682,1626,o),
(1682,1578,qs),
(1682,1220,l),
(1294,1350,l),
(807,1031,l),
(807,910,l),
(910,861,l),
(910,749,l),
(532,749,l),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,458,l),
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,551,l),
(910,551,l),
(910,458,l),
(787,458,o),
(787,314,qs),
(787,208,o),
(910,0,q),
(1253,0,l),
(1253,900,l),
(1070,992,l),
(1192,1073,l),
(1632,925,l),
(1632,0,l),
(1975,0,l),
(1975,1020,l),
(2024,1151,o)
);
}
);
width = 1442;
}
);
note = uni17A2_17C5;
},
{
glyphname = uni17E0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1253,338,qs),
(1253,1012,ls),
(1253,1350,o),
(721,1350,qs),
(189,1350,o),
(189,1012,qs),
(189,338,ls),
(189,0,o),
(721,0,qs),
(1253,0,o)
);
},
{
closed = 1;
nodes = (
(910,1012,qs),
(910,338,ls),
(910,199,o),
(721,199,qs),
(532,199,o),
(532,338,qs),
(532,1012,ls),
(532,1152,o),
(721,1152,qs),
(910,1152,o)
);
}
);
width = 1442;
}
);
note = uni17E0;
unicode = 6112;
},
{
glyphname = uni17E1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1253,451,qs),
(1253,1012,ls),
(1253,1350,o),
(721,1350,qs),
(189,1350,o),
(189,1012,qs),
(189,900,ls),
(189,604,o),
(610,604,qs),
(865,604,o),
(865,844,qs),
(865,916,o),
(771,916,qs),
(676,916,o),
(676,844,qs),
(676,803,o),
(610,803,qs),
(532,803,o),
(532,900,qs),
(532,1012,ls),
(532,1152,o),
(721,1152,qs),
(911,1152,o),
(911,1012,qs),
(911,451,ls),
(911,199,o),
(721,199,qs),
(480,199,o),
(480,394,q),
(189,394,o),
(189,282,qs),
(189,0,o),
(721,0,qs),
(1253,0,o)
);
}
);
width = 1442;
}
);
note = uni17E1;
unicode = 6113;
},
{
glyphname = uni17E2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(189,0,o),
(768,0,qs),
(1347,0,o),
(1347,296,qs),
(1347,1350,l),
(1197,1350,l),
(939,1152,l),
(712,1350,l),
(605,1350,l),
(605,844,ls),
(605,682,o),
(788,682,qs),
(888,682,o),
(888,797,q),
(885,797,ls),
(818,797,o),
(818,844,qs),
(818,1045,l),
(939,945,l),
(1005,1002,l),
(1005,296,ls),
(1005,199,o),
(768,199,qs),
(532,199,o),
(532,296,qs),
(532,1391,ls),
(532,1583,o),
(314,1583,qs),
(96,1583,o),
(96,1459,q),
(189,1459,o),
(189,1391,qs),
(189,296,ls)
);
}
);
width = 1536;
}
);
note = uni17E2;
unicode = 6114;
},
{
glyphname = uni17E3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(636,1350,l),
(189,1094,l),
(189,0,l),
(492,0,l),
(565,76,ls),
(610,121,o),
(632,178,qs),
(655,235,o),
(655,304,qs),
(655,381,o),
(614,420,qs),
(573,458,o),
(532,458,q),
(532,1060,l),
(573,1086,l),
(748,962,l),
(748,0,l),
(1090,0,l),
(1090,1063,l),
(1129,1089,l),
(1283,980,l),
(1283,0,l),
(1626,0,l),
(1626,1099,l),
(1190,1350,l),
(908,1161,l)
);
}
);
width = 1815;
}
);
note = uni17E3;
unicode = 6115;
},
{
glyphname = uni17E4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1253,1536,o),
(1346,1536,q),
(1346,1660,o),
(1128,1660,qs),
(910,1660,o),
(910,1443,qs),
(910,1300,ls),
(910,1235,o),
(887,1235,q),
(653,1350,l),
(530,1350,l),
(189,1125,l),
(189,277,ls),
(189,0,o),
(610,0,qs),
(1253,0,l),
(1253,243,l),
(1140,382,l),
(1140,507,l),
(1253,507,o),
(1253,676,qs),
(1253,916,o),
(1006,916,qs),
(798,916,o),
(798,787,qs),
(798,394,l),
(1028,199,l),
(610,199,ls),
(532,199,o),
(532,277,qs),
(532,1078,l),
(617,1158,l),
(949,1023,l),
(1253,1023,o),
(1253,1300,qs),
(1253,1443,ls)
);
}
);
width = 1442;
}
);
note = uni17E4;
unicode = 6116;
},
{
glyphname = uni17E5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1253,907,o),
(1253,1203,qs),
(1253,1396,ls),
(1253,1489,o),
(1346,1489,q),
(1346,1613,o),
(1163,1613,qs),
(910,1613,o),
(910,1396,qs),
(911,1203,ls),
(911,1134,o),
(888,1134,q),
(755,1167,l),
(771,1186,o),
(780,1206,qs),
(798,1247,o),
(798,1306,qs),
(798,1489,o),
(582,1489,qs),
(346,1489,o),
(346,1303,qs),
(346,1240,o),
(409,1156,o),
(450,1135,q),
(189,974,l),
(189,267,ls),
(189,0,o),
(610,0,qs),
(1253,0,l),
(1253,221,l),
(1131,313,l),
(1131,349,l),
(1172,349,o),
(1212,391,qs),
(1253,433,o),
(1253,516,qs),
(1253,775,o),
(1021,775,qs),
(788,775,o),
(788,629,qs),
(788,346,l),
(1019,199,l),
(610,199,ls),
(532,199,o),
(532,267,qs),
(532,919,l),
(636,1008,l),
(1000,907,l)
);
}
);
width = 1442;
}
);
note = uni17E5;
unicode = 6117;
},
{
glyphname = uni17E6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,900,l),
(532,984,l),
(653,1096,l),
(911,963,l),
(911,338,ls),
(911,199,o),
(721,199,qs),
(532,199,o),
(532,338,qs),
(532,451,ls),
(532,538,o),
(573,538,qs),
(614,538,o),
(614,507,qs),
(614,451,o),
(721,451,qs),
(827,451,o),
(827,507,qs),
(827,737,o),
(556,737,qs),
(189,737,o),
(189,451,qs),
(189,338,ls),
(189,0,o),
(721,0,qs),
(1253,0,o),
(1253,338,qs),
(1253,1092,l),
(721,1350,l),
(532,1189,l),
(532,1489,ls),
(532,1659,o),
(302,1659,qs),
(96,1659,o),
(96,1535,q),
(189,1535,o),
(189,1489,qs),
(189,900,l)
);
}
);
width = 1442;
}
);
note = uni17E6;
unicode = 6118;
},
{
glyphname = uni17E7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1276,149,o),
(1213,149,q),
(1213,1090,l),
(848,1350,l),
(702,1212,l),
(555,1350,l),
(189,1094,l),
(189,0,l),
(492,0,l),
(614,123,o),
(681,243,o),
(681,314,qs),
(681,385,o),
(640,423,qs),
(600,458,o),
(532,458,q),
(532,1065,l),
(573,1094,l),
(702,973,l),
(831,1094,l),
(870,1064,l),
(870,0,l),
(1216,0,ls),
(1579,0,o),
(1579,213,qs),
(1579,1474,ls),
(1579,1614,o),
(1350,1614,qs),
(1203,1614,o),
(1203,1520,q),
(1276,1520,o),
(1276,1474,qs),
(1276,213,ls)
);
}
);
width = 1768;
}
);
note = uni17E7;
unicode = 6119;
},
{
glyphname = uni17E8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(910,238,l),
(721,403,l),
(532,238,l),
(532,1078,l),
(610,1152,l),
(652,1152,l),
(1007,1023,l),
(1253,1023,o),
(1253,1350,qs),
(1253,1443,ls),
(1253,1536,o),
(1346,1536,q),
(1346,1650,o),
(1163,1650,qs),
(910,1650,o),
(910,1443,qs),
(910,1350,ls),
(910,1258,o),
(887,1258,q),
(665,1350,l),
(532,1350,l),
(189,1125,l),
(189,0,l),
(532,0,l),
(721,166,l),
(910,0,l),
(1253,0,l),
(1253,788,ls),
(1253,892,o),
(1001,892,qs),
(869,892,o),
(829,851,qs),
(788,808,o),
(788,723,qs),
(788,639,o),
(829,597,qs),
(869,554,o),
(911,554,q),
(911,486,l),
(910,486,l)
);
}
);
width = 1442;
}
);
note = uni17E8;
unicode = 6120;
},
{
glyphname = uni17E9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(862,1350,o),
(726,1350,qs),
(302,1350,o),
(302,1117,qs),
(302,917,o),
(465,875,q),
(327,811,o),
(258,705,qs),
(189,598,o),
(189,451,qs),
(189,0,o),
(776,0,qs),
(1253,0,o),
(1253,338,qs),
(1253,451,ls),
(1253,579,o),
(1041,579,qs),
(869,579,o),
(829,538,qs),
(788,495,o),
(788,410,qs),
(788,326,o),
(829,284,qs),
(869,241,o),
(911,241,q),
(911,199,o),
(776,199,qs),
(532,199,o),
(532,451,qs),
(532,739,o),
(832,739,qs),
(1082,739,o),
(1168,694,qs),
(1205,675,o),
(1226,675,qs),
(1253,675,o),
(1253,778,qs),
(1253,853,o),
(1211,874,qs),
(1082,937,o),
(832,937,qs),
(645,937,o),
(645,1077,qs),
(645,1152,o),
(726,1152,qs),
(910,1152,o),
(910,1068,qs),
(910,1012,o),
(1082,1012,qs),
(1253,1012,o),
(1253,1068,qs),
(1253,1442,ls),
(1253,1629,o),
(1024,1629,qs),
(841,1629,o),
(841,1535,q),
(910,1535,o),
(910,1442,qs),
(910,1287,l)
);
}
);
width = 1442;
}
);
note = uni17E9;
unicode = 6121;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1103,279,o),
(1103,574,qs),
(1103,881,ls),
(1103,1175,o),
(826,1477,o),
(593,1477,qs),
(358,1477,o),
(82,1175,o),
(82,881,qs),
(82,574,ls),
(82,279,o),
(358,-21,o),
(595,-21,qs),
(828,-21,o)
);
},
{
closed = 1;
nodes = (
(431,386,o),
(431,554,qs),
(431,903,ls),
(431,1068,o),
(513,1209,o),
(593,1209,qs),
(670,1209,o),
(754,1067,o),
(754,903,qs),
(754,554,ls),
(754,387,o),
(672,246,o),
(595,246,qs),
(513,246,o)
);
}
);
width = 1171;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,205,l),
(639,237,l),
(639,1456,l),
(28,1354,l),
(28,1160,l),
(289,1157,l),
(289,237,l),
(30,205,l),
(30,0,l),
(898,0,l)
);
}
);
width = 943;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1089,387,l),
(826,387,l),
(811,266,l),
(522,266,l),
(520,271,l),
(740,504,ls),
(856,626,o),
(995,798,o),
(1056,949,o),
(1056,1039,qs),
(1056,1171,o),
(935,1368,o),
(710,1477,o),
(553,1477,qs),
(396,1477,o),
(164,1349,o),
(41,1131,o),
(44,996,q),
(46,990,l),
(389,990,l),
(389,1089,o),
(469,1206,o),
(552,1206,qs),
(628,1206,o),
(704,1107,o),
(704,1036,qs),
(704,993,o),
(671,901,o),
(597,791,o),
(534,719,q),
(65,225,l),
(65,0,l),
(1089,0,l)
);
}
);
width = 1139;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(967,83,o),
(1107,276,o),
(1107,409,qs),
(1107,530,o),
(970,704,o),
(855,747,q),
(969,802,o),
(1084,957,o),
(1084,1066,qs),
(1084,1262,o),
(799,1477,o),
(565,1477,qs),
(420,1477,o),
(192,1376,o),
(65,1194,o),
(69,1074,q),
(71,1068,l),
(412,1068,l),
(412,1110,o),
(453,1173,o),
(524,1209,o),
(569,1209,qs),
(648,1209,o),
(733,1115,o),
(733,1043,qs),
(733,992,o),
(691,915,o),
(610,872,o),
(551,872,qs),
(392,872,l),
(392,613,l),
(541,613,ls),
(646,613,o),
(756,508,o),
(756,426,qs),
(756,346,o),
(655,246,o),
(569,246,qs),
(514,246,o),
(433,292,o),
(389,369,o),
(389,415,q),
(47,415,l),
(46,409,l),
(43,270,o),
(185,78,o),
(426,-21,o),
(569,-21,qs),
(724,-21,o)
);
}
);
width = 1116;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1105,205,l),
(955,237,l),
(955,355,l),
(1097,355,l),
(1097,574,l),
(955,574,l),
(955,1456,l),
(607,1456,l),
(25,518,l),
(48,355,l),
(605,355,l),
(605,237,l),
(453,205,l),
(453,0,l),
(1105,0,l)
);
},
{
closed = 1;
nodes = (
(599,1002,l),
(605,1000,l),
(605,574,l),
(337,574,l),
(572,967,l)
);
}
);
width = 1140;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(956,110,o),
(1074,333,o),
(1074,469,qs),
(1074,627,o),
(972,847,o),
(773,961,o),
(629,958,qs),
(586,958,o),
(505,941,o),
(436,913,o),
(410,895,q),
(448,1185,l),
(813,1185,l),
(843,1097,l),
(1043,1097,l),
(1043,1456,l),
(162,1456,l),
(78,638,l),
(395,621,l),
(411,662,o),
(490,719,o),
(552,719,qs),
(643,719,o),
(725,583,o),
(725,467,qs),
(725,374,o),
(652,246,o),
(564,246,qs),
(487,246,o),
(394,341,o),
(394,425,q),
(50,402,l),
(48,398,l),
(45,272,o),
(187,83,o),
(425,-21,o),
(564,-21,qs),
(728,-21,o)
);
}
);
width = 1099;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(991,111,o),
(1124,339,o),
(1124,483,qs),
(1124,629,o),
(1027,855,o),
(841,983,o),
(709,983,qs),
(620,983,o),
(476,927,o),
(432,877,q),
(429,882,l),
(428,1037,o),
(556,1202,o),
(694,1202,qs),
(750,1202,o),
(869,1178,o),
(927,1161,q),
(986,1415,l),
(903,1448,o),
(769,1477,o),
(682,1477,qs),
(503,1477,o),
(228,1327,o),
(72,1051,o),
(72,860,qs),
(72,567,ls),
(72,385,o),
(207,121,o),
(449,-21,o),
(609,-21,qs),
(759,-21,o)
);
},
{
closed = 1;
nodes = (
(422,413,o),
(422,567,qs),
(422,652,l),
(441,673,o),
(493,701,o),
(554,716,o),
(585,716,qs),
(677,716,o),
(773,591,o),
(773,490,qs),
(773,423,o),
(729,312,o),
(652,246,o),
(600,246,qs),
(518,246,o)
);
}
);
width = 1144;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(677,142,ls),
(694,307,o),
(748,582,o),
(838,827,o),
(981,1063,o),
(1089,1188,q),
(1089,1456,l),
(32,1456,l),
(32,1058,l),
(291,1058,l),
(300,1188,l),
(754,1188,l),
(630,1052,o),
(453,722,o),
(346,347,o),
(326,142,qs),
(313,0,l),
(664,0,l)
);
}
);
width = 1094;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(944,77,o),
(1071,266,o),
(1071,400,qs),
(1071,514,o),
(948,692,o),
(838,744,q),
(934,794,o),
(1043,960,o),
(1043,1066,qs),
(1043,1197,o),
(923,1380,o),
(706,1477,o),
(561,1477,qs),
(417,1477,o),
(200,1380,o),
(80,1197,o),
(80,1066,qs),
(80,960,o),
(188,794,o),
(285,744,q),
(176,692,o),
(51,516,o),
(51,400,qs),
(51,266,o),
(181,77,o),
(412,-21,o),
(563,-21,qs),
(715,-21,o)
);
},
{
closed = 1;
nodes = (
(402,345,o),
(402,430,qs),
(402,486,o),
(442,567,o),
(513,610,o),
(561,610,qs),
(609,610,o),
(681,567,o),
(721,487,o),
(721,430,qs),
(721,374,o),
(682,291,o),
(611,246,o),
(563,246,qs),
(490,246,o)
);
},
{
closed = 1;
nodes = (
(432,969,o),
(432,1048,qs),
(432,1124,o),
(497,1209,o),
(561,1209,qs),
(604,1209,o),
(662,1170,o),
(692,1098,o),
(692,1048,qs),
(692,996,o),
(662,920,o),
(605,879,o),
(563,879,qs),
(497,879,o)
);
}
);
width = 1105;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(920,117,o),
(1070,366,o),
(1070,530,qs),
(1070,879,ls),
(1070,1064,o),
(939,1332,o),
(710,1477,o),
(563,1477,qs),
(412,1477,o),
(180,1337,o),
(50,1101,o),
(50,956,qs),
(50,801,o),
(155,576,o),
(342,454,o),
(463,454,qs),
(540,454,o),
(673,514,o),
(728,575,q),
(728,542,ls),
(728,394,o),
(593,246,o),
(475,246,qs),
(421,246,o),
(284,271,o),
(220,291,q),
(185,41,l),
(256,11,o),
(419,-21,o),
(495,-21,qs),
(661,-21,o)
);
},
{
closed = 1;
nodes = (
(435,765,o),
(401,879,o),
(401,956,qs),
(401,1022,o),
(440,1138,o),
(512,1209,o),
(562,1209,qs),
(630,1209,o),
(720,1062,o),
(720,922,qs),
(720,764,l),
(689,735,o),
(606,704,o),
(565,704,qs),
(507,704,o)
);
}
);
width = 1133;
}
);
note = nine;
unicode = 57;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 700;
}
);
note = space;
unicode = 32;
},
{
glyphname = CR;
layers = (
{
layerId = m01;
width = 1044;
}
);
note = CR;
},
{
glyphname = uni0000;
layers = (
{
layerId = m01;
width = 0;
}
);
note = uni0000;
},
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,0,l),
(922,0,l),
(922,1462,l),
(102,1462,l)
);
},
{
closed = 1;
nodes = (
(201,98,l),
(201,1364,l),
(823,1364,l),
(823,98,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
4 1 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79 0 0 7 6 5 4 0 3 0 3 17 5 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = ".notdef";
},
{
glyphname = uni17D4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(462,910,qs),
(653,910,o),
(910,1138,q),
(910,200,ls),
(910,128,o),
(794,128,q),
(794,0,o),
(986,0,qs),
(1253,0,o),
(1253,200,qs),
(1253,1350,l),
(911,1350,l),
(634,1130,o),
(582,1130,qs),
(532,1130,o),
(532,1182,qs),
(532,1254,o),
(652,1254,q),
(652,1350,o),
(456,1350,qs),
(189,1350,o),
(189,1130,qs),
(189,910,o)
);
}
);
width = 1442;
}
);
note = uni17D4;
unicode = 6100;
},
{
glyphname = uni17D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1310,60,qs),
(1286,24,o),
(1240,0,q),
(1603,0,o),
(1603,145,qs),
(1603,1350,l),
(1333,1350,l),
(1333,145,ls),
(1333,96,o)
);
},
{
closed = 1;
nodes = (
(462,910,qs),
(653,910,o),
(910,1138,q),
(910,200,ls),
(910,128,o),
(794,128,q),
(794,0,o),
(986,0,qs),
(1253,0,o),
(1253,200,qs),
(1253,1350,l),
(911,1350,l),
(634,1130,o),
(582,1130,qs),
(532,1130,o),
(532,1182,qs),
(532,1254,o),
(652,1254,q),
(652,1350,o),
(456,1350,qs),
(189,1350,o),
(189,1130,qs),
(189,910,o)
);
}
);
width = 1722;
}
);
note = uni17D5;
unicode = 6101;
},
{
glyphname = uni17D6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(136,576,l),
(841,576,l),
(841,773,l),
(136,773,l)
);
},
{
closed = 1;
nodes = (
(434,1189,qs),
(452,1208,o),
(489,1208,qs),
(527,1208,o),
(545,1189,qs),
(565,1170,o),
(565,1133,qs),
(565,1095,o),
(545,1077,qs),
(527,1058,o),
(489,1058,qs),
(452,1058,o),
(434,1077,qs),
(415,1095,o),
(415,1133,qs),
(415,1170,o)
);
},
{
closed = 1;
nodes = (
(715,1296,qs),
(640,1350,o),
(488,1350,qs),
(338,1350,o),
(263,1296,qs),
(189,1242,o),
(189,1133,qs),
(189,1025,o),
(263,970,qs),
(338,916,o),
(488,916,qs),
(640,916,o),
(715,970,qs),
(789,1025,o),
(789,1133,qs),
(789,1242,o)
);
},
{
closed = 1;
nodes = (
(434,273,qs),
(452,292,o),
(489,292,qs),
(527,292,o),
(545,273,qs),
(565,254,o),
(565,217,qs),
(565,180,o),
(545,161,qs),
(527,142,o),
(489,142,qs),
(452,142,o),
(434,161,qs),
(415,180,o),
(415,217,qs),
(415,254,o)
);
},
{
closed = 1;
nodes = (
(715,380,qs),
(640,434,o),
(488,434,qs),
(338,434,o),
(263,380,qs),
(189,326,o),
(189,217,qs),
(189,108,o),
(263,54,qs),
(338,0,o),
(488,0,qs),
(640,0,o),
(715,54,qs),
(789,108,o),
(789,217,qs),
(789,326,o)
);
}
);
width = 977;
}
);
note = uni17D6;
unicode = 6102;
},
{
glyphname = uni17D7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(610,977,qs),
(610,1061,o),
(555,1061,q),
(555,1012,o),
(501,1012,qs),
(442,1012,o),
(442,1069,q),
(549,1143,l),
(778,975,l),
(911,1103,l),
(911,338,ls),
(911,199,o),
(751,199,qs),
(551,199,o),
(551,333,q),
(340,333,o),
(340,200,qs),
(340,0,o),
(777,0,qs),
(1253,0,o),
(1253,338,qs),
(1253,1349,l),
(935,1349,l),
(776,1169,l),
(532,1350,l),
(384,1280,o),
(218,1139,o),
(189,1069,q),
(189,841,o),
(501,841,qs),
(610,841,o)
);
}
);
width = 1442;
}
);
note = uni17D7;
unicode = 6103;
},
{
glyphname = uni17D8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4070,910,qs),
(4261,910,o),
(4518,1138,q),
(4518,200,ls),
(4518,128,o),
(4402,128,q),
(4402,0,o),
(4594,0,qs),
(4861,0,o),
(4861,200,qs),
(4861,1350,l),
(4519,1350,l),
(4242,1130,o),
(4190,1130,qs),
(4140,1130,o),
(4140,1182,qs),
(4140,1254,o),
(4260,1254,q),
(4260,1350,o),
(4064,1350,qs),
(3797,1350,o),
(3797,1130,qs),
(3797,910,o)
);
},
{
closed = 1;
nodes = (
(462,910,qs),
(653,910,o),
(910,1138,q),
(910,200,ls),
(910,128,o),
(794,128,q),
(794,0,o),
(986,0,qs),
(1253,0,o),
(1253,200,qs),
(1253,1350,l),
(911,1350,l),
(634,1130,o),
(582,1130,qs),
(532,1130,o),
(532,1182,qs),
(532,1254,o),
(652,1254,q),
(652,1350,o),
(456,1350,qs),
(189,1350,o),
(189,1130,qs),
(189,910,o)
);
},
{
closed = 1;
nodes = (
(3134,1039,l),
(3164,1088,l),
(3310,1013,o),
(3406,1013,qs),
(3493,1013,o),
(3530,1230,q),
(3425,1230,o),
(3363,1260,qs),
(3178,1350,l),
(2971,1062,l),
(2971,911,l),
(3074,861,l),
(3074,282,ls),
(3074,198,o),
(2932,198,qs),
(2839,198,ls),
(2696,198,o),
(2696,282,qs),
(2696,1143,l),
(2164,1350,l),
(1632,1144,l),
(1632,0,l),
(1975,0,l),
(2124,171,o),
(2124,314,qs),
(2124,458,o),
(1975,458,q),
(1975,1093,l),
(2044,1119,l),
(2353,999,l),
(2353,282,ls),
(2353,0,o),
(2839,0,qs),
(2932,0,ls),
(3417,0,o),
(3417,282,qs),
(3417,900,l)
);
}
);
width = 5050;
}
);
note = uni17D8;
unicode = 6104;
},
{
glyphname = uni17D9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1357,169,qs),
(1525,338,o),
(1525,675,qs),
(1525,1013,o),
(1357,1182,qs),
(1186,1350,o),
(850,1350,qs),
(514,1350,o),
(344,1182,qs),
(175,1013,o),
(175,675,qs),
(175,338,o),
(344,169,qs),
(514,0,o),
(850,0,qs),
(1186,0,o)
);
},
{
closed = 1;
nodes = (
(1381,675,qs),
(1381,144,o),
(850,144,qs),
(319,144,o),
(319,675,qs),
(319,1206,o),
(850,1206,qs),
(1381,1206,o)
);
},
{
closed = 1;
nodes = (
(1140,385,qs),
(1235,482,o),
(1235,675,qs),
(1235,868,o),
(1140,965,qs),
(1044,1060,o),
(850,1060,qs),
(656,1060,o),
(560,965,qs),
(465,868,o),
(465,675,qs),
(465,482,o),
(560,385,qs),
(656,290,o),
(850,290,qs),
(1044,290,o)
);
},
{
closed = 1;
nodes = (
(1031,857,qs),
(1091,795,o),
(1091,675,qs),
(1091,555,o),
(1031,494,qs),
(969,434,o),
(850,434,qs),
(731,434,o),
(669,494,qs),
(609,555,o),
(609,675,qs),
(609,795,o),
(669,857,qs),
(731,916,o),
(850,916,qs),
(969,916,o)
);
}
);
width = 1700;
}
);
note = uni17D9;
unicode = 6105;
},
{
glyphname = uni17DA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3132,441,qs),
(3132,439,o),
(3131,438,qs),
(3124,432,o),
(3118,432,qs),
(3111,432,o),
(3106,439,qs),
(3105,441,o),
(3105,444,qs),
(3105,452,o),
(3121,466,q),
(3132,447,o)
);
},
{
closed = 1;
nodes = (
(1781,864,qs),
(1739,920,o),
(1739,951,qs),
(1739,963,o),
(1746,971,qs),
(1772,1001,o),
(1800,1001,qs),
(1823,1001,o),
(1847,980,qs),
(1854,974,o),
(1854,963,qs),
(1854,930,o),
(1793,848,q),
(1786,856,o)
);
},
{
closed = 1;
nodes = (
(2115,306,qs),
(2115,298,o),
(2109,295,q),
(2090,282,o),
(2072,282,qs),
(2050,282,o),
(2031,301,q),
(2027,304,o),
(2027,310,qs),
(2027,332,o),
(2071,380,q),
(2115,328,o)
);
},
{
closed = 1;
nodes = (
(2381,944,qs),
(2381,952,o),
(2386,955,qs),
(2402,965,o),
(2416,965,qs),
(2434,965,o),
(2449,948,qs),
(2451,946,o),
(2451,942,qs),
(2451,926,o),
(2411,882,q),
(2381,926,o)
);
},
{
closed = 1;
nodes = (
(2652,380,qs),
(2652,377,o),
(2650,376,qs),
(2642,372,o),
(2634,372,qs),
(2625,372,o),
(2618,379,qs),
(2617,380,l),
(2617,387,o),
(2638,406,q),
(2652,387,o)
);
},
{
closed = 1;
nodes = (
(2974,868,qs),
(2974,871,o),
(2976,873,qs),
(2986,881,o),
(2995,881,qs),
(3001,881,o),
(3006,876,q),
(3007,876,o),
(3007,875,qs),
(3007,870,o),
(2982,848,q),
(2974,861,o)
);
},
{
closed = 1;
nodes = (
(3114,688,qs),
(3088,717,o),
(3067,740,q),
(3096,770,o),
(3115,797,qs),
(3150,848,o),
(3150,887,qs),
(3150,921,o),
(3126,947,qs),
(3072,1005,o),
(3012,1012,qs),
(3003,1013,o),
(2994,1013,qs),
(2942,1013,o),
(2886,977,qs),
(2840,946,o),
(2840,895,qs),
(2840,872,o),
(2849,844,qs),
(2860,811,o),
(2883,772,q),
(2832,734,o),
(2758,682,qs),
(2699,640,o),
(2653,601,q),
(2618,644,o),
(2574,692,qs),
(2528,741,o),
(2493,781,q),
(2527,823,o),
(2549,860,qs),
(2586,922,o),
(2586,969,qs),
(2586,1009,o),
(2560,1037,qs),
(2503,1101,o),
(2436,1108,q),
(2420,1108,ls),
(2361,1108,o),
(2293,1064,qs),
(2244,1032,o),
(2244,974,qs),
(2244,941,o),
(2260,900,qs),
(2282,842,o),
(2314,791,q),
(2257,740,o),
(2176,674,qs),
(2114,621,o),
(2065,574,q),
(2026,614,o),
(1979,657,qs),
(1926,705,o),
(1884,748,q),
(1920,801,o),
(1943,847,qs),
(1981,923,o),
(1981,979,qs),
(1981,1035,o),
(1944,1071,qs),
(1871,1143,o),
(1799,1143,qs),
(1797,1143,ls),
(1723,1142,o),
(1649,1069,qs),
(1607,1027,o),
(1607,970,qs),
(1607,925,o),
(1632,871,qs),
(1658,815,o),
(1712,748,q),
(1635,657,o),
(1515,532,qs),
(1322,331,o),
(1160,231,qs),
(998,130,o),
(866,130,qs),
(733,130,o),
(667,260,qs),
(601,390,o),
(601,650,qs),
(601,656,ls),
(601,912,o),
(682,1040,qs),
(763,1170,o),
(925,1170,qs),
(1087,1170,o),
(1169,1115,qs),
(1250,1060,o),
(1250,951,qs),
(1250,829,o),
(1191,754,qs),
(1132,679,o),
(1015,653,qs),
(946,637,o),
(946,593,qs),
(946,582,o),
(950,570,qs),
(965,523,o),
(1016,523,qs),
(1033,523,o),
(1054,529,q),
(1227,567,o),
(1314,674,qs),
(1400,781,o),
(1400,957,qs),
(1400,1128,o),
(1282,1214,qs),
(1163,1300,o),
(925,1300,qs),
(688,1300,o),
(569,1137,qs),
(450,975,o),
(450,650,qs),
(450,325,o),
(554,162,qs),
(658,0,o),
(865,0,qs),
(1032,0,o),
(1228,116,qs),
(1423,231,o),
(1646,463,qs),
(1739,560,o),
(1806,643,q),
(1840,609,o),
(1879,574,qs),
(1935,522,o),
(1978,480,q),
(1942,436,o),
(1920,397,qs),
(1888,340,o),
(1888,296,qs),
(1888,252,o),
(1919,220,qs),
(1982,156,o),
(2053,151,qs),
(2059,150,o),
(2066,150,qs),
(2131,150,o),
(2203,198,qs),
(2249,228,o),
(2249,280,qs),
(2249,316,o),
(2226,364,qs),
(2203,411,o),
(2159,467,q),
(2213,516,o),
(2288,578,qs),
(2351,633,o),
(2400,681,q),
(2469,607,ls),
(2519,551,o),
(2555,509,q),
(2531,482,o),
(2514,458,qs),
(2479,405,o),
(2479,364,qs),
(2479,330,o),
(2502,304,qs),
(2554,246,o),
(2615,238,qs),
(2624,237,o),
(2633,237,qs),
(2685,237,o),
(2743,275,qs),
(2785,302,o),
(2785,352,qs),
(2785,383,o),
(2769,423,qs),
(2757,452,o),
(2737,484,q),
(2792,524,o),
(2870,580,qs),
(2926,619,o),
(2972,655,q),
(2987,637,o),
(3005,618,qs),
(3022,597,o),
(3037,578,q),
(2963,526,o),
(2948,474,qs),
(2945,461,o),
(2945,449,qs),
(2945,406,o),
(2984,363,qs),
(3035,308,o),
(3094,302,qs),
(3102,301,o),
(3110,301,qs),
(3161,301,o),
(3218,338,qs),
(3265,369,o),
(3265,423,qs),
(3265,444,o),
(3258,469,qs),
(3249,499,o),
(3229,535,q),
(3295,563,o),
(3381,563,qs),
(3501,563,ls),
(3600,563,o),
(3600,628,qs),
(3600,693,o),
(3505,693,qs),
(3358,693,o),
(3243,666,qs),
(3197,655,o),
(3156,640,q),
(3137,663,o)
);
}
);
width = 3850;
}
);
note = uni17DA;
unicode = 6106;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(727,762,l),
(117,762,l),
(117,493,l),
(727,493,l)
);
}
);
width = 826;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(978,0,l),
(75,0,l),
(75,-206,l),
(978,-206,l)
);
}
);
width = 1048;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(640,-277,l),
(577,-231,o),
(471,-83,o),
(393,125,o),
(350,394,o),
(350,561,qs),
(350,595,ls),
(350,761,o),
(393,1030,o),
(471,1238,o),
(577,1387,o),
(640,1433,q),
(577,1598,l),
(571,1597,l),
(470,1560,o),
(290,1385,o),
(152,1123,o),
(73,788,o),
(73,593,qs),
(73,563,ls),
(73,367,o),
(152,32,o),
(290,-230,o),
(470,-405,o),
(571,-442,q),
(577,-442,l)
);
}
);
width = 699;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,-406,o),
(453,-225,o),
(599,42,o),
(683,375,o),
(683,563,qs),
(683,593,ls),
(683,780,o),
(599,1112,o),
(453,1380,o),
(266,1561,o),
(163,1597,q),
(157,1597,l),
(92,1434,l),
(155,1388,o),
(261,1238,o),
(339,1030,o),
(382,761,o),
(382,595,qs),
(382,561,ls),
(382,395,o),
(339,126,o),
(260,-81,o),
(155,-230,o),
(92,-277,q),
(157,-442,l),
(163,-442,l)
);
}
);
width = 748;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(539,-146,o),
(484,0,o),
(484,109,qs),
(484,311,ls),
(484,412,o),
(391,573,o),
(297,621,q),
(391,666,o),
(484,828,o),
(484,931,qs),
(484,1132,ls),
(484,1242,o),
(539,1387,o),
(609,1415,q),
(543,1597,l),
(348,1542,o),
(183,1303,o),
(183,1132,qs),
(183,931,ls),
(183,837,o),
(106,737,o),
(24,737,q),
(24,502,l),
(106,502,o),
(183,402,o),
(183,311,qs),
(183,109,ls),
(183,-63,o),
(348,-302,o),
(543,-358,q),
(609,-175,l)
);
}
);
width = 655;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(473,-63,o),
(473,109,qs),
(473,311,ls),
(473,402,o),
(549,502,o),
(630,502,q),
(630,737,l),
(549,737,o),
(473,837,o),
(473,931,qs),
(473,1132,ls),
(473,1303,o),
(306,1542,o),
(112,1597,q),
(46,1415,l),
(115,1387,o),
(170,1242,o),
(170,1132,qs),
(170,931,ls),
(170,828,o),
(263,667,o),
(357,619,q),
(263,573,o),
(170,413,o),
(170,311,qs),
(170,109,ls),
(170,0,o),
(115,-146,o),
(46,-175,q),
(112,-358,l),
(306,-302,o)
);
}
);
width = 665;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(591,-97,l),
(479,-97,l),
(479,1454,l),
(591,1454,l),
(591,1708,l),
(128,1708,l),
(128,-351,l),
(591,-351,l)
);
}
);
width = 611;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,1708,l),
(20,1708,l),
(20,1454,l),
(135,1454,l),
(135,-97,l),
(20,-97,l),
(20,-351,l),
(484,-351,l)
);
}
);
width = 596;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,515,l),
(452,916,l),
(241,916,l),
(-30,525,l),
(-30,506,l),
(241,115,l),
(452,115,l)
);
},
{
closed = 1;
nodes = (
(654,515,l),
(885,916,l),
(674,916,l),
(403,525,l),
(403,506,l),
(674,115,l),
(885,115,l)
);
}
);
width = 964;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(520,541,l),
(520,560,l),
(250,951,l),
(39,951,l),
(268,550,l),
(39,150,l),
(250,150,l)
);
},
{
closed = 1;
nodes = (
(964,541,l),
(964,560,l),
(694,951,l),
(483,951,l),
(712,550,l),
(483,150,l),
(694,150,l)
);
}
);
width = 995;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375,1285,l),
(375,1560,l),
(122,1560,l),
(122,1313,l),
(122,1017,l),
(271,1017,l)
);
},
{
closed = 1;
nodes = (
(729,1285,l),
(729,1560,l),
(476,1560,l),
(476,1313,l),
(476,1017,l),
(625,1017,l)
);
}
);
width = 796;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375,1285,l),
(375,1560,l),
(122,1560,l),
(122,1313,l),
(122,1017,l),
(271,1017,l)
);
}
);
width = 442;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(468,290,l),
(119,290,l),
(119,0,l),
(468,0,l)
);
}
);
width = 540;
}
);
note = period;
unicode = 46;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(453,-111,o),
(453,19,qs),
(454,257,l),
(152,257,l),
(152,-2,ls),
(152,-99,o),
(114,-248,o),
(80,-316,q),
(244,-397,l),
(327,-323,o)
);
}
);
width = 564;
}
);
note = comma;
unicode = 44;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(406,290,l),
(57,290,l),
(57,0,l),
(406,0,l)
);
},
{
closed = 1;
nodes = (
(406,1081,l),
(57,1081,l),
(57,791,l),
(406,791,l)
);
}
);
width = 477;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,1081,l),
(55,1081,l),
(55,791,l),
(404,791,l)
);
},
{
closed = 1;
nodes = (
(386,-111,o),
(386,19,qs),
(387,257,l),
(85,257,l),
(85,-2,ls),
(85,-99,o),
(47,-248,o),
(13,-316,q),
(177,-397,l),
(260,-323,o)
);
}
);
width = 471;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(455,1456,l),
(104,1456,l),
(104,517,l),
(455,517,l)
);
},
{
closed = 1;
nodes = (
(455,288,l),
(104,288,l),
(104,0,l),
(455,0,l)
);
}
);
width = 522;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(667,470,o),
(683,547,o),
(726,607,o),
(766,636,qs),
(838,688,o),
(957,814,o),
(1029,966,o),
(1029,1054,qs),
(1029,1247,o),
(758,1477,o),
(519,1477,qs),
(372,1477,o),
(148,1384,o),
(24,1203,o),
(26,1071,q),
(28,1065,l),
(371,1065,l),
(372,1136,o),
(460,1204,o),
(521,1204,qs),
(595,1204,o),
(678,1118,o),
(678,1044,qs),
(678,995,o),
(641,904,o),
(579,827,o),
(539,798,qs),
(474,750,o),
(388,672,o),
(339,592,o),
(317,490,o),
(317,417,q),
(667,417,l)
);
},
{
closed = 1;
nodes = (
(663,286,l),
(317,286,l),
(317,0,l),
(663,0,l)
);
}
);
width = 1006;
}
);
note = question;
unicode = 63;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(572,942,l),
(880,1031,l),
(819,1226,l),
(529,1100,l),
(556,1456,l),
(351,1456,l),
(374,1106,l),
(76,1236,l),
(14,1045,l),
(320,956,l),
(106,685,l),
(270,571,l),
(441,853,l),
(612,562,l),
(776,680,l)
);
}
);
width = 887;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,410,l),
(603,410,l),
(536,0,l),
(739,0,l),
(806,410,l),
(1065,410,l),
(1065,597,l),
(835,597,l),
(876,851,l),
(1140,851,l),
(1140,1040,l),
(908,1040,l),
(977,1456,l),
(772,1456,l),
(705,1040,l),
(552,1040,l),
(619,1456,l),
(416,1456,l),
(347,1040,l),
(100,1040,l),
(100,851,l),
(316,851,l),
(276,597,l),
(24,597,l),
(24,410,l),
(246,410,l),
(179,0,l),
(384,0,l)
);
},
{
closed = 1;
nodes = (
(673,851,l),
(632,597,l),
(480,597,l),
(521,851,l)
);
}
);
width = 1168;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(892,1456,l),
(559,1456,l),
(-37,-125,l),
(295,-125,l)
);
}
);
width = 778;
}
);
note = slash;
unicode = 47;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,1456,l),
(-3,1456,l),
(605,-125,l),
(956,-125,l)
);
}
);
width = 862;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = uni17DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,458,o),
(66,314,qs),
(66,208,o),
(189,0,q),
(532,0,l),
(532,534,l),
(625,534,l),
(625,726,l),
(532,726,l),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,726,l),
(66,726,l),
(66,534,l),
(189,534,l),
(189,458,l)
);
}
);
width = 721;
}
);
note = uni17DB;
unicode = 6107;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(654,-15,l),
(839,4,o),
(1059,216,o),
(1059,389,qs),
(1059,512,o),
(960,677,o),
(758,805,o),
(604,872,qs),
(541,900,o),
(469,954,o),
(440,1019,o),
(440,1063,qs),
(440,1130,o),
(504,1214,o),
(571,1214,qs),
(636,1214,o),
(717,1111,o),
(717,1004,q),
(1064,1004,l),
(1061,1012,l),
(1064,1200,o),
(853,1442,o),
(673,1469,q),
(673,1685,l),
(513,1685,l),
(513,1474,l),
(321,1456,o),
(91,1237,o),
(91,1067,qs),
(91,942,o),
(187,776,o),
(388,652,o),
(544,590,qs),
(606,563,o),
(677,508,o),
(708,438,o),
(708,387,qs),
(708,344,o),
(678,278,o),
(618,241,o),
(573,241,qs),
(518,241,o),
(434,288,o),
(386,389,o),
(386,470,q),
(43,470,l),
(41,465,l),
(39,313,o),
(156,108,o),
(362,-4,o),
(493,-17,q),
(493,-218,l),
(654,-218,l)
);
}
);
width = 1105;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(699,532,l),
(1032,532,l),
(1032,830,l),
(699,830,l),
(699,1206,l),
(372,1206,l),
(372,830,l),
(34,830,l),
(34,532,l),
(372,532,l),
(372,146,l),
(699,146,l)
);
}
);
width = 1069;
}
);
note = plus;
unicode = 43;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1043,995,l),
(108,995,l),
(108,726,l),
(1043,726,l)
);
},
{
closed = 1;
nodes = (
(1043,555,l),
(108,555,l),
(108,285,l),
(1043,285,l)
);
}
);
width = 1121;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(972,678,l),
(91,1037,l),
(91,722,l),
(569,560,l),
(616,546,l),
(616,540,l),
(569,529,l),
(91,359,l),
(91,43,l),
(972,403,l)
);
}
);
width = 1013;
}
);
note = greater;
unicode = 62;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(437,528,l),
(402,537,l),
(402,543,l),
(437,553,l),
(936,723,l),
(936,1039,l),
(47,680,l),
(47,405,l),
(936,45,l),
(936,361,l)
);
}
);
width = 1009;
}
);
note = less;
unicode = 60;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1105,469,o),
(1187,652,o),
(1187,769,q),
(948,802,l),
(948,732,o),
(887,633,o),
(841,633,qs),
(807,633,o),
(745,668,o),
(702,709,qs),
(633,773,o),
(482,839,o),
(405,839,qs),
(310,839,o),
(166,734,o),
(87,551,o),
(87,432,q),
(325,401,l),
(325,469,o),
(385,569,o),
(432,569,qs),
(468,569,o),
(529,534,o),
(573,492,qs),
(647,425,o),
(786,364,o),
(862,364,qs),
(959,364,o)
);
}
);
width = 1284;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,1138,l),
(453,1150,l),
(459,1150,l),
(462,1138,l),
(626,729,l),
(888,729,l),
(588,1456,l),
(328,1456,l),
(29,729,l),
(290,729,l)
);
}
);
width = 896;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(979,1326,l),
(268,188,l),
(430,108,l),
(1141,1246,l)
);
},
{
closed = 1;
nodes = (
(1301,58,o),
(1376,194,o),
(1376,281,qs),
(1376,357,ls),
(1376,444,o),
(1300,580,o),
(1155,657,o),
(1050,657,qs),
(945,657,o),
(798,579,o),
(722,443,o),
(722,357,qs),
(722,281,ls),
(722,195,o),
(800,59,o),
(947,-19,o),
(1052,-19,qs),
(1157,-19,o)
);
},
{
closed = 1;
nodes = (
(946,235,o),
(946,281,qs),
(946,357,ls),
(946,404,o),
(998,470,o),
(1050,470,qs),
(1100,470,o),
(1152,404,o),
(1152,357,qs),
(1152,281,ls),
(1152,226,o),
(1111,167,o),
(1052,167,qs),
(1008,167,o)
);
},
{
closed = 1;
nodes = (
(609,877,o),
(684,1012,o),
(684,1099,qs),
(684,1176,ls),
(684,1264,o),
(609,1399,o),
(464,1477,o),
(358,1477,qs),
(253,1477,o),
(108,1399,o),
(32,1263,o),
(32,1176,qs),
(32,1099,ls),
(32,1012,o),
(108,877,o),
(255,800,o),
(360,800,qs),
(465,800,o)
);
},
{
closed = 1;
nodes = (
(255,1051,o),
(255,1099,qs),
(255,1176,ls),
(255,1224,o),
(308,1290,o),
(358,1290,qs),
(408,1290,o),
(462,1224,o),
(462,1176,qs),
(462,1099,ls),
(462,1052,o),
(408,987,o),
(360,987,qs),
(309,987,o)
);
}
);
width = 1410;
}
);
note = percent;
unicode = 37;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1189,-406,o),
(1255,-364,q),
(1218,-192,l),
(1151,-219,o),
(969,-257,o),
(886,-257,qs),
(686,-257,o),
(407,-79,o),
(270,250,o),
(282,478,qs),
(292,712,o),
(458,1050,o),
(751,1232,o),
(951,1232,qs),
(1256,1232,o),
(1555,861,o),
(1540,535,qs),
(1532,362,o),
(1403,145,o),
(1311,145,qs),
(1282,145,o),
(1246,172,o),
(1233,237,o),
(1236,293,qs),
(1287,859,l),
(1285,863,l),
(1192,919,o),
(1043,969,o),
(957,969,qs),
(806,969,o),
(609,833,o),
(501,590,o),
(484,429,qs),
(463,224,o),
(622,-16,o),
(773,-16,qs),
(938,-16,o),
(1020,152,q),
(1045,70,o),
(1171,-21,o),
(1275,-21,qs),
(1424,-21,o),
(1631,128,o),
(1742,381,o),
(1748,535,qs),
(1758,804,o),
(1575,1196,o),
(1213,1410,o),
(955,1410,qs),
(689,1410,o),
(293,1183,o),
(67,765,o),
(55,478,qs),
(45,189,o),
(234,-228,o),
(612,-453,o),
(882,-453,qs),
(982,-453,o)
);
},
{
closed = 1;
nodes = (
(730,298,o),
(740,416,qs),
(756,594,o),
(862,771,o),
(962,771,qs),
(985,771,o),
(1027,763,o),
(1046,756,q),
(1008,339,ls),
(1007,322,o),
(1005,310,o),
(1003,307,q),
(972,233,o),
(894,178,o),
(853,178,qs),
(785,178,o)
);
}
);
width = 1797;
}
);
note = at;
unicode = 64;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(778,29,o),
(866,81,q),
(938,0,l),
(1321,0,l),
(1323,5,l),
(1101,261,l),
(1168,352,o),
(1230,589,o),
(1230,731,q),
(986,731,l),
(986,659,o),
(949,531,o),
(917,474,q),
(681,742,l),
(764,799,ls),
(838,851,o),
(931,1025,o),
(931,1123,qs),
(931,1222,o),
(840,1382,o),
(678,1477,o),
(572,1477,qs),
(448,1477,o),
(260,1376,o),
(156,1197,o),
(156,1080,qs),
(156,1003,o),
(217,853,o),
(279,765,q),
(272,760,o),
(258,749,o),
(251,744,qs),
(137,659,o),
(27,501,o),
(27,392,qs),
(27,269,o),
(144,83,o),
(358,-21,o),
(504,-21,qs),
(606,-21,o)
);
},
{
closed = 1;
nodes = (
(378,343,o),
(378,416,qs),
(378,460,o),
(402,530,o),
(427,566,q),
(433,569,l),
(696,275,l),
(655,260,o),
(570,246,o),
(529,246,qs),
(468,246,o)
);
},
{
closed = 1;
nodes = (
(456,1046,o),
(456,1083,qs),
(456,1138,o),
(515,1209,o),
(570,1209,qs),
(617,1209,o),
(676,1141,o),
(676,1097,qs),
(676,1058,o),
(638,990,o),
(582,955,qs),
(529,923,l),
(492,970,o)
);
}
);
width = 1271;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,1456,l),
(121,1456,l),
(121,-270,l),
(307,-270,l)
);
}
);
width = 414;
}
);
note = bar;
unicode = 124;
},
{
glyphname = uni17B7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-955,1516,qs),
(-199,1516,l),
(-199,1659,l),
(-275,1730,ls),
(-504,1942,o),
(-758,1942,qs),
(-1114,1942,o),
(-1114,1659,qs),
(-1114,1516,o)
);
},
{
closed = 1;
nodes = (
(-450,1659,q),
(-845,1659,l),
(-845,1752,o),
(-738,1752,qs),
(-576,1752,o)
);
}
);
width = 0;
}
);
note = uni17B7;
unicode = 6071;
},
{
glyphname = uni17B7_17CD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-121,1694,qs),
(-121,1725,o),
(-204,1725,qs),
(-239,1725,o),
(-243,1700,q),
(-275,1730,ls),
(-298,1752,o),
(-322,1771,q),
(-320,1794,o),
(-313,1808,qs),
(-303,1826,o),
(-283,1826,qs),
(-233,1826,o),
(-175,1777,q),
(-122,1777,o),
(-93,1787,q),
(-34,1824,o),
(14,1874,qs),
(62,1924,o),
(97,1988,q),
(107,1997,o),
(107,2012,qs),
(107,2027,o),
(52,2130,o),
(37,2130,q),
(28,2128,l),
(-5,2055,o),
(-53,2006,qs),
(-100,1957,o),
(-160,1933,q),
(-207,1981,o),
(-283,1981,qs),
(-435,1981,o),
(-485,1877,q),
(-618,1942,o),
(-758,1942,qs),
(-1114,1942,o),
(-1114,1659,qs),
(-1114,1516,o),
(-955,1516,qs),
(-199,1516,l),
(-199,1545,l),
(-121,1587,o)
);
},
{
closed = 1;
nodes = (
(-450,1659,q),
(-845,1659,l),
(-845,1752,o),
(-738,1752,qs),
(-576,1752,o)
);
}
);
width = 0;
}
);
note = uni17B7_17CD;
},
{
glyphname = uni17B8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-450,1659,q),
(-845,1659,l),
(-845,1752,o),
(-738,1752,qs),
(-576,1752,o)
);
},
{
closed = 1;
nodes = (
(-758,1942,qs),
(-1114,1942,o),
(-1114,1659,qs),
(-1114,1516,o),
(-955,1516,qs),
(-199,1516,l),
(-199,1988,l),
(-405,1988,l),
(-405,1832,l),
(-575,1942,o)
);
}
);
width = 0;
}
);
note = uni17B8;
unicode = 6072;
},
{
glyphname = uni17B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-450,1659,q),
(-845,1659,l),
(-845,1752,o),
(-738,1752,qs),
(-576,1752,o)
);
},
{
closed = 1;
nodes = (
(-758,1942,qs),
(-1114,1942,o),
(-1114,1659,qs),
(-1114,1516,o),
(-955,1516,qs),
(-199,1516,l),
(-199,1659,l),
(-271,1726,l),
(-244,1741,o),
(-237,1748,qs),
(-199,1787,o),
(-199,1880,qs),
(-199,1974,o),
(-237,2012,qs),
(-275,2051,o),
(-418,2051,qs),
(-531,2051,o),
(-569,2012,qs),
(-597,1984,o),
(-604,1922,q),
(-680,1942,o)
);
}
);
width = 0;
}
);
note = uni17B9;
unicode = 6073;
},
{
glyphname = uni17BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-450,1659,q),
(-845,1659,l),
(-845,1752,o),
(-738,1752,qs),
(-576,1752,o)
);
},
{
closed = 1;
nodes = (
(-758,1942,qs),
(-1114,1942,o),
(-1114,1659,qs),
(-1114,1516,o),
(-955,1516,qs),
(-199,1516,l),
(-199,1988,l),
(-405,1988,l),
(-405,1832,l),
(-443,1857,o),
(-482,1876,q),
(-482,2014,l),
(-659,2014,l),
(-659,1934,l),
(-708,1942,o)
);
}
);
width = 0;
}
);
note = uni17BA;
unicode = 6074;
},
{
glyphname = uni17BB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-383,-100,qs),
(-578,-100,o),
(-578,-223,q),
(-555,-223,o),
(-544,-234,qs),
(-531,-246,o),
(-531,-269,qs),
(-531,-658,l),
(-189,-658,l),
(-189,-223,ls),
(-189,-100,o)
);
}
);
width = 0;
}
);
note = uni17BB;
unicode = 6075;
},
{
glyphname = uni17BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-964,-193,q),
(-917,-193,o),
(-917,-211,qs),
(-917,-239,o),
(-965,-273,qs),
(-1012,-307,o),
(-1120,-371,o),
(-1120,-441,qs),
(-1120,-507,o),
(-990,-658,o),
(-779,-658,qs),
(-510,-658,o),
(-275,-400,o),
(-217,-253,qs),
(-184,-169,o),
(-171,-157,qs),
(-158,-144,o),
(-158,-123,qs),
(-158,-100,o),
(-351,-100,qs),
(-426,-100,o),
(-461,-132,qs),
(-497,-165,o),
(-523,-231,q),
(-575,-344,o),
(-718,-468,o),
(-779,-470,qs),
(-800,-470,o),
(-820,-461,o),
(-820,-441,q),
(-762,-388,o),
(-689,-313,o),
(-670,-289,qs),
(-634,-240,o),
(-634,-195,qs),
(-634,-100,o),
(-769,-100,qs),
(-964,-100,o)
);
}
);
width = 0;
}
);
note = uni17BC;
unicode = 6076;
},
{
glyphname = uni17BD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-875,-193,q),
(-828,-193,o),
(-828,-211,qs),
(-828,-247,o),
(-945,-351,o),
(-1041,-379,q),
(-1041,-472,ls),
(-1041,-582,o),
(-934,-658,o),
(-737,-658,q),
(-644,-549,l),
(-592,-658,l),
(-349,-639,o),
(-272,-494,q),
(-196,-389,o),
(-158,-193,qs),
(-149,-147,o),
(-149,-123,qs),
(-150,-100,o),
(-286,-100,qs),
(-382,-100,o),
(-405,-123,qs),
(-430,-146,o),
(-440,-194,qs),
(-473,-337,o),
(-521,-430,o),
(-540,-449,q),
(-600,-376,l),
(-704,-449,l),
(-727,-449,o),
(-739,-432,qs),
(-751,-415,o),
(-751,-391,q),
(-709,-380,o),
(-632,-331,o),
(-576,-241,o),
(-576,-193,qs),
(-576,-100,o),
(-710,-100,qs),
(-875,-100,o)
);
}
);
width = 0;
}
);
note = uni17BD;
unicode = 6077;
},
{
glyphname = uni17BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-450,1659,q),
(-845,1659,l),
(-845,1752,o),
(-738,1752,qs),
(-576,1752,o)
);
},
{
closed = 1;
nodes = (
(-758,1942,qs),
(-1114,1942,o),
(-1114,1659,qs),
(-1114,1516,o),
(-955,1516,qs),
(-199,1516,l),
(-199,1988,l),
(-405,1988,l),
(-405,1832,l),
(-575,1942,o)
);
}
);
width = 0;
}
);
note = uni17BE;
unicode = 6078;
},
{
glyphname = uni17C6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-656,1819,qs),
(-633,1842,o),
(-607,1842,qs),
(-580,1842,o),
(-557,1819,qs),
(-533,1795,o),
(-533,1749,qs),
(-533,1702,o),
(-557,1679,qs),
(-580,1656,o),
(-607,1656,qs),
(-633,1656,o),
(-656,1679,qs),
(-680,1702,o),
(-680,1749,qs),
(-680,1795,o)
);
},
{
closed = 1;
nodes = (
(-367,1981,qs),
(-427,2049,o),
(-608,2049,qs),
(-787,2049,o),
(-847,1981,qs),
(-907,1913,o),
(-907,1749,qs),
(-907,1586,o),
(-847,1518,qs),
(-787,1449,o),
(-608,1449,qs),
(-427,1449,o),
(-367,1518,qs),
(-307,1586,o),
(-307,1749,qs),
(-307,1913,o)
);
}
);
width = 0;
}
);
note = uni17C6;
unicode = 6086;
},
{
glyphname = uni17C9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-932,2009,l),
(-930,1518,l),
(-805,1459,l),
(-682,1518,l),
(-682,2009,l)
);
},
{
closed = 1;
nodes = (
(-530,2009,l),
(-529,1518,l),
(-405,1459,l),
(-280,1518,l),
(-280,2009,l)
);
}
);
width = 0;
}
);
note = uni17C9;
unicode = 6089;
},
{
glyphname = uni17CA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-232,1407,qs),
(-157,1407,o),
(-104,1552,q),
(-157,1552,ls),
(-204,1552,o),
(-245,1573,qs),
(-430,1668,l),
(-517,1668,l),
(-661,1563,l),
(-860,1668,l),
(-957,1668,l),
(-1274,1511,l),
(-1274,1467,l),
(-1171,1392,l),
(-1140,1372,o),
(-1049,1372,qs),
(-1047,1372,ls),
(-1015,1372,o),
(-967,1434,q),
(-1079,1501,l),
(-1004,1539,l),
(-774,1416,l),
(-694,1416,l),
(-567,1517,l),
(-400,1439,ls),
(-337,1407,o)
);
}
);
width = 0;
}
);
note = uni17CA;
unicode = 6090;
},
{
glyphname = uni17CB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-750,2009,l),
(-750,1543,l),
(-601,1459,l),
(-450,1543,l),
(-450,2009,l)
);
}
);
width = 0;
}
);
note = uni17CB;
unicode = 6091;
},
{
glyphname = uni17CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-734,1755,qs),
(-651,1755,o),
(-586,1711,qs),
(-521,1670,o),
(-451,1585,q),
(-399,1528,o),
(-280,1528,qs),
(-204,1528,o),
(-152,1703,q),
(-346,1703,o),
(-372,1731,qs),
(-399,1759,ls),
(-476,1844,o),
(-555,1885,qs),
(-633,1929,o),
(-734,1929,qs),
(-1077,1929,o),
(-1077,1649,qs),
(-1077,1593,o),
(-1038,1564,qs),
(-999,1536,o),
(-864,1536,qs),
(-812,1536,o),
(-812,1479,q),
(-652,1479,l),
(-652,1559,ls),
(-652,1601,o),
(-691,1643,qs),
(-731,1686,o),
(-819,1686,q),
(-819,1755,o)
);
}
);
width = 0;
}
);
note = uni17CC;
unicode = 6092;
},
{
glyphname = uni17CD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-737,1746,qs),
(-723,1766,o),
(-697,1766,qs),
(-630,1766,o),
(-552,1713,q),
(-482,1713,o),
(-443,1724,q),
(-364,1763,o),
(-300,1817,qs),
(-236,1870,o),
(-189,1938,q),
(-176,1948,o),
(-176,1963,qs),
(-176,1979,o),
(-250,2089,o),
(-270,2089,q),
(-282,2087,l),
(-326,2009,o),
(-390,1957,qs),
(-453,1905,o),
(-533,1879,q),
(-595,1931,o),
(-697,1931,qs),
(-1000,1931,o),
(-1000,1685,qs),
(-1000,1439,o),
(-758,1439,qs),
(-481,1439,o),
(-481,1625,qs),
(-481,1658,o),
(-591,1658,qs),
(-644,1658,o),
(-644,1625,qs),
(-644,1605,o),
(-697,1605,qs),
(-723,1605,o),
(-737,1626,qs),
(-750,1646,o),
(-750,1686,qs),
(-750,1726,o)
);
}
);
width = 0;
}
);
note = uni17CD;
unicode = 6093;
},
{
glyphname = uni17CE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-488,1834,l),
(-488,2020,l),
(-733,2020,l),
(-733,1834,l),
(-911,1834,l),
(-911,1656,l),
(-733,1656,l),
(-733,1470,l),
(-488,1470,l),
(-488,1656,l),
(-311,1656,l),
(-311,1834,l)
);
}
);
width = 0;
}
);
note = uni17CE;
unicode = 6094;
},
{
glyphname = uni17CF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-244,1647,qs),
(-244,1785,o),
(-471,1785,qs),
(-512,1785,o),
(-512,1725,qs),
(-512,1666,o),
(-491,1666,qs),
(-440,1666,o),
(-440,1647,qs),
(-440,1614,o),
(-468,1614,qs),
(-500,1614,o),
(-614,1694,q),
(-658,1633,o),
(-702,1614,q),
(-725,1630,o),
(-757,1658,o),
(-779,1687,o),
(-793,1717,o),
(-800,1736,q),
(-692,1827,o),
(-582,1827,qs),
(-479,1827,o),
(-468,1879,q),
(-439,1918,o),
(-306,1951,o),
(-247,1951,qs),
(-192,1951,o),
(-192,2029,qs),
(-192,2108,o),
(-248,2108,qs),
(-358,2108,o),
(-523,2029,o),
(-578,1967,q),
(-870,1933,o),
(-992,1748,q),
(-951,1526,o),
(-775,1451,q),
(-659,1451,o),
(-615,1523,q),
(-561,1451,o),
(-468,1451,qs),
(-244,1451,o)
);
}
);
width = 0;
}
);
note = uni17CF;
unicode = 6095;
},
{
glyphname = uni17D0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-961,1726,qs),
(-961,1439,o),
(-562,1439,qs),
(-61,1439,o),
(-61,1853,qs),
(-61,2139,o),
(-324,2139,qs),
(-381,2139,o),
(-381,2065,qs),
(-381,1990,o),
(-324,1990,qs),
(-268,1990,o),
(-268,1853,qs),
(-268,1733,o),
(-366,1674,qs),
(-463,1614,o),
(-562,1614,qs),
(-730,1614,o),
(-741,1726,q),
(-730,1669,o),
(-646,1669,qs),
(-539,1669,o),
(-539,1754,qs),
(-539,1900,o),
(-710,1900,qs),
(-961,1900,o)
);
}
);
width = 0;
}
);
note = uni17D0;
unicode = 6096;
},
{
glyphname = uni17D1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1253,1489,l),
(-189,1489,l),
(-189,1687,l),
(-1253,1687,l)
);
}
);
width = 0;
}
);
note = uni17D1;
unicode = 6097;
},
{
glyphname = uni17D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-791,-326,l),
(-791,-419,l),
(-651,-419,l),
(-651,-559,l),
(-558,-559,l),
(-558,-419,l),
(-419,-419,l),
(-419,-326,l),
(-558,-326,l),
(-558,-186,l),
(-651,-186,l),
(-651,-326,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 3 0 87 5 1 1 4 1 2 3 1 2 103 0 0 0 3 95 0 3 0 3 79 17 17 17 17 17 16 6 7 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D2;
unicode = 6098;
},
{
glyphname = uni17D2_1780;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-508,-332,qs),
(-508,-673,l),
(-208,-673,l),
(-208,-332,ls),
(-208,-93,o),
(-720,-93,qs),
(-1233,-93,o),
(-1233,-331,qs),
(-1233,-673,l),
(-933,-673,l),
(-933,-332,ls),
(-933,-252,o),
(-720,-252,qs),
(-508,-252,o)
);
}
);
width = 0;
}
);
note = uni17D2_1780;
},
{
glyphname = uni17D2_1781;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-215,-442,q),
(-505,-477,l),
(-505,-545,o),
(-697,-545,qs),
(-931,-545,o),
(-931,-493,q),
(-649,-453,l),
(-215,-407,o),
(-215,-259,qs),
(-215,-94,o),
(-697,-94,qs),
(-1230,-94,o),
(-1230,-228,qs),
(-1230,-317,o),
(-930,-317,q),
(-930,-222,o),
(-697,-222,qs),
(-507,-222,o),
(-507,-276,qs),
(-507,-331,o),
(-651,-359,q),
(-1168,-411,l),
(-1230,-420,o),
(-1230,-495,qs),
(-1230,-674,o),
(-697,-674,qs),
(-215,-674,o)
);
}
);
width = 0;
}
);
note = uni17D2_1781;
},
{
glyphname = uni17D2_1782;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-720,-252,qs),
(-508,-252,o),
(-508,-332,qs),
(-508,-673,l),
(-208,-673,l),
(-208,-332,ls),
(-208,-93,o),
(-720,-93,qs),
(-1233,-93,o),
(-1233,-331,qs),
(-1233,-673,l),
(-933,-673,l),
(-933,-655,l),
(-764,-550,o),
(-720,-550,qs),
(-607,-550,o),
(-607,-458,qs),
(-607,-366,o),
(-700,-366,qs),
(-766,-366,o),
(-933,-515,q),
(-933,-332,ls),
(-933,-252,o)
);
}
);
width = 0;
}
);
note = uni17D2_1782;
},
{
glyphname = uni17D2_1784;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-218,-138,qs),
(-218,-93,l),
(-455,-93,ls),
(-474,-93,o),
(-496,-115,o),
(-499,-138,q),
(-511,-524,o),
(-814,-524,qs),
(-933,-524,o),
(-933,-450,qs),
(-933,-381,o),
(-840,-381,q),
(-840,-272,o),
(-983,-272,qs),
(-1233,-272,o),
(-1233,-450,qs),
(-1233,-673,o),
(-814,-673,qs),
(-230,-673,o)
);
}
);
width = 0;
}
);
note = uni17D2_1784;
},
{
glyphname = uni17D2_1785;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1186,-418,qs),
(-1233,-424,o),
(-1233,-509,qs),
(-1233,-674,o),
(-814,-674,qs),
(-473,-674,o),
(-310,-457,q),
(-220,-457,o),
(-125,-406,o),
(-125,-342,q),
(-193,-376,o),
(-218,-376,qs),
(-252,-376,l),
(-237,-351,o),
(-237,-324,qs),
(-237,-210,o),
(-438,-210,qs),
(-627,-210,o),
(-627,-334,qs),
(-627,-408,o),
(-576,-438,q),
(-684,-545,o),
(-814,-545,qs),
(-933,-545,o),
(-933,-509,q),
(-627,-398,o),
(-627,-138,qs),
(-627,-94,l),
(-721,-94,ls),
(-907,-94,o),
(-907,-138,qs),
(-907,-383,o)
);
}
);
width = 0;
}
);
note = uni17D2_1785;
},
{
glyphname = uni17D2_1786;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1233,-139,qs),
(-1233,-371,l),
(-1279,-371,o),
(-1303,-393,qs),
(-1326,-415,o),
(-1326,-460,qs),
(-1326,-513,o),
(-1279,-585,q),
(-1233,-674,l),
(-933,-674,l),
(-933,-520,l),
(-907,-520,ls),
(-860,-520,o),
(-674,-674,o),
(-581,-674,qs),
(-208,-674,o),
(-208,-450,qs),
(-208,-94,l),
(-508,-94,l),
(-601,-226,o),
(-601,-295,qs),
(-601,-325,o),
(-572,-361,o),
(-542,-361,qs),
(-508,-361,l),
(-508,-450,ls),
(-508,-525,o),
(-581,-525,qs),
(-627,-525,o),
(-814,-371,o),
(-907,-371,qs),
(-933,-371,l),
(-933,-94,l),
(-1126,-94,ls),
(-1233,-94,o)
);
}
);
width = 0;
}
);
note = uni17D2_1786;
},
{
glyphname = uni17D2_1787;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-204,-343,qs),
(-204,-336,l),
(-161,-322,ls),
(-114,-304,o),
(-114,-254,qs),
(-114,-214,o),
(-142,-214,q),
(-212,-233,l),
(-242,-93,o),
(-500,-93,qs),
(-690,-93,o),
(-690,-227,qs),
(-690,-361,o),
(-550,-361,qs),
(-538,-361,o),
(-515,-360,o),
(-504,-359,q),
(-505,-514,o),
(-550,-514,qs),
(-579,-514,o),
(-723,-375,q),
(-862,-514,o),
(-896,-514,qs),
(-932,-514,o),
(-932,-342,qs),
(-932,-202,o),
(-896,-202,qs),
(-849,-202,o),
(-849,-147,qs),
(-849,-93,o),
(-896,-93,qs),
(-1232,-93,o),
(-1232,-342,qs),
(-1232,-673,o),
(-956,-673,qs),
(-854,-673,o),
(-723,-547,q),
(-599,-673,o),
(-492,-673,qs),
(-204,-673,o)
);
}
);
width = 0;
}
);
note = uni17D2_1787;
},
{
glyphname = uni17D2_1789;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-422,-143,qs),
(-595,-143,o),
(-595,-236,q),
(-502,-236,o),
(-502,-329,qs),
(-502,-495,o),
(-573,-495,qs),
(-661,-495,o),
(-852,-190,o),
(-1093,-190,qs),
(-1233,-190,o),
(-1233,-320,qs),
(-1233,-367,l),
(-1193,-303,o),
(-1113,-303,qs),
(-1069,-303,o),
(-906,-609,o),
(-573,-609,qs),
(-202,-609,o),
(-202,-329,qs),
(-202,-143,o)
);
}
);
width = 0;
}
);
note = uni17D2_1789;
},
{
glyphname = uni17D2_178A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-720,-252,qs),
(-508,-252,o),
(-508,-332,qs),
(-508,-673,l),
(-208,-673,l),
(-208,-332,ls),
(-208,-93,o),
(-720,-93,qs),
(-1233,-93,o),
(-1233,-332,qs),
(-1233,-673,l),
(-933,-673,l),
(-863,-606,ls),
(-794,-539,o),
(-794,-468,qs),
(-794,-414,o),
(-828,-388,qs),
(-863,-361,o),
(-933,-361,q),
(-933,-332,ls),
(-933,-252,o)
);
}
);
width = 0;
}
);
note = uni17D2_178A;
},
{
glyphname = uni17D2_178B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-507,-228,q),
(-730,-228,ls),
(-918,-228,o),
(-1150,-250,q),
(-1232,-262,o),
(-1232,-317,qs),
(-1232,-374,o),
(-1209,-407,qs),
(-1050,-635,ls),
(-1024,-673,o),
(-865,-673,qs),
(-825,-673,o),
(-790,-638,qs),
(-705,-552,l),
(-498,-673,l),
(-208,-673,o),
(-208,-590,qs),
(-208,-227,ls),
(-208,-93,o),
(-391,-93,qs),
(-554,-93,o),
(-554,-160,qs),
(-554,-217,o)
);
},
{
closed = 1;
nodes = (
(-912,-398,l),
(-826,-377,o),
(-742,-377,qs),
(-508,-377,l),
(-508,-507,l),
(-720,-386,l),
(-830,-507,l)
);
}
);
width = 0;
}
);
note = uni17D2_178B;
},
{
glyphname = uni17D2_178C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-539,-220,l),
(-508,-234,l),
(-508,-271,ls),
(-508,-320,o),
(-632,-353,q),
(-1171,-462,l),
(-1233,-478,o),
(-1233,-523,qs),
(-1233,-651,o),
(-907,-651,qs),
(-651,-651,o),
(-508,-557,q),
(-508,-596,ls),
(-508,-635,o),
(-554,-675,q),
(-255,-675,o),
(-231,-655,qs),
(-208,-635,o),
(-208,-596,qs),
(-208,-413,l),
(-508,-445,l),
(-618,-552,o),
(-887,-552,qs),
(-933,-552,o),
(-933,-524,q),
(-591,-429,l),
(-208,-364,o),
(-208,-271,qs),
(-208,-214,l),
(-494,-95,l),
(-720,-185,l),
(-947,-95,l),
(-1233,-214,l),
(-1233,-313,ls),
(-1233,-373,o),
(-1163,-373,qs),
(-933,-373,l),
(-868,-315,o),
(-868,-283,qs),
(-868,-254,o),
(-933,-254,q),
(-933,-225,l),
(-919,-220,l),
(-720,-296,l)
);
}
);
width = 0;
}
);
note = uni17D2_178C;
},
{
glyphname = uni17D2_178E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1441,-554,l),
(-1252,-673,l),
(-909,-673,l),
(-909,-355,l),
(-752,-289,l),
(-531,-375,l),
(-531,-673,l),
(-188,-673,l),
(-188,-272,l),
(-696,-93,l),
(-1252,-271,l),
(-1252,-496,l),
(-1441,-377,l),
(-1630,-496,l),
(-1630,-272,l),
(-2187,-93,l),
(-2695,-271,l),
(-2695,-673,l),
(-2405,-673,l),
(-2309,-584,o),
(-2285,-517,qs),
(-2279,-500,o),
(-2273,-470,o),
(-2273,-455,qs),
(-2273,-441,o),
(-2279,-417,o),
(-2285,-405,qs),
(-2310,-361,o),
(-2357,-361,qs),
(-2352,-361,l),
(-2352,-353,l),
(-2223,-289,l),
(-1973,-376,l),
(-1973,-673,l),
(-1630,-673,l)
);
}
);
width = 0;
}
);
note = uni17D2_178E;
},
{
glyphname = uni17D2_178F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-720,-252,qs),
(-508,-252,o),
(-508,-332,qs),
(-508,-673,l),
(-208,-673,l),
(-208,-332,ls),
(-208,-93,o),
(-720,-93,qs),
(-1233,-93,o),
(-1233,-332,qs),
(-1233,-673,l),
(-933,-673,l),
(-863,-606,ls),
(-794,-539,o),
(-794,-468,qs),
(-794,-414,o),
(-828,-388,qs),
(-863,-361,o),
(-933,-361,q),
(-933,-332,ls),
(-933,-252,o)
);
}
);
width = 0;
}
);
note = uni17D2_178F;
},
{
glyphname = uni17D2_1790;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-937,-672,qs),
(-834,-672,o),
(-794,-559,q),
(-933,-559,o),
(-933,-409,qs),
(-933,-256,o),
(-837,-256,qs),
(-741,-256,o),
(-550,-672,o),
(-254,-672,qs),
(-192,-672,o),
(-192,-559,q),
(-295,-559,o),
(-362,-404,qs),
(-496,-93,o),
(-837,-93,qs),
(-1233,-93,o),
(-1233,-409,qs),
(-1233,-672,o)
);
}
);
width = 0;
}
);
note = uni17D2_1790;
},
{
glyphname = uni17D2_1791;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1186,-418,qs),
(-1233,-432,o),
(-1233,-504,qs),
(-1233,-673,o),
(-838,-673,qs),
(-604,-673,o),
(-508,-535,q),
(-508,-584,ls),
(-508,-628,o),
(-550,-673,q),
(-208,-673,o),
(-208,-584,qs),
(-208,-227,ls),
(-208,-182,o),
(-329,-182,qs),
(-468,-182,o),
(-561,-421,o),
(-726,-534,o),
(-838,-534,qs),
(-933,-534,o),
(-933,-507,q),
(-534,-376,o),
(-534,-182,qs),
(-534,-93,o),
(-687,-93,qs),
(-860,-93,o),
(-860,-182,q),
(-814,-182,o),
(-814,-227,qs),
(-814,-301,o)
);
}
);
width = 0;
}
);
note = uni17D2_1791;
},
{
glyphname = uni17D2_1792;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-631,-93,qs),
(-774,-93,o),
(-774,-158,q),
(-727,-158,o),
(-727,-182,q),
(-784,-263,o),
(-993,-388,o),
(-1233,-438,o),
(-1233,-504,qs),
(-1233,-673,o),
(-901,-673,qs),
(-674,-673,o),
(-674,-514,q),
(-611,-526,ls),
(-544,-539,o),
(-526,-539,qs),
(-208,-539,o),
(-208,-259,qs),
(-208,-93,o),
(-431,-93,qs),
(-534,-93,o),
(-534,-138,qs),
(-534,-182,o),
(-521,-182,qs),
(-508,-182,o),
(-508,-259,qs),
(-508,-421,o),
(-567,-421,qs),
(-600,-421,o),
(-655,-402,qs),
(-704,-385,l),
(-669,-362,o),
(-627,-321,qs),
(-534,-226,o),
(-534,-159,qs),
(-534,-93,o)
);
},
{
closed = 1;
nodes = (
(-787,-436,q),
(-787,-511,ls),
(-787,-544,o),
(-871,-544,qs),
(-933,-544,o),
(-933,-524,q),
(-809,-451,o)
);
}
);
width = 0;
}
);
note = uni17D2_1792;
},
{
glyphname = uni17D2_1793;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-508,-539,q),
(-508,-673,o),
(-312,-673,qs),
(-116,-673,o),
(-116,-531,qs),
(-116,-390,o),
(-209,-390,q),
(-209,-332,l),
(-69,-332,l),
(-69,-172,l),
(-209,-172,l),
(-209,-93,l),
(-508,-93,l),
(-508,-172,l),
(-814,-172,ls),
(-1233,-172,o),
(-1233,-383,qs),
(-1233,-568,o),
(-818,-568,qs),
(-792,-568,o)
);
},
{
closed = 1;
nodes = (
(-814,-332,qs),
(-508,-332,l),
(-508,-390,l),
(-782,-419,o),
(-814,-419,qs),
(-933,-419,o),
(-933,-383,qs),
(-933,-332,o)
);
}
);
width = 0;
}
);
note = uni17D2_1793;
},
{
glyphname = uni17D2_1795;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-531,-316,qs),
(-508,-316,l),
(-508,-496,l),
(-720,-347,l),
(-933,-496,l),
(-933,-93,l),
(-1233,-93,l),
(-1233,-673,l),
(-933,-673,l),
(-720,-524,l),
(-508,-673,l),
(-208,-673,l),
(-208,-93,l),
(-508,-93,l),
(-554,-138,ls),
(-601,-182,o),
(-601,-249,qs),
(-601,-316,o)
);
}
);
width = 0;
}
);
note = uni17D2_1795;
},
{
glyphname = uni17D2_1796;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-947,-93,l),
(-1233,-227,l),
(-1233,-673,l),
(-933,-673,l),
(-840,-584,o),
(-819,-521,qs),
(-805,-481,o),
(-805,-456,qs),
(-805,-428,o),
(-817,-405,qs),
(-841,-361,o),
(-887,-361,qs),
(-933,-361,l),
(-933,-279,l),
(-899,-259,l),
(-720,-337,l),
(-539,-259,l),
(-508,-278,l),
(-508,-673,l),
(-208,-673,l),
(-208,-227,l),
(-494,-93,l),
(-720,-194,l)
);
}
);
width = 0;
}
);
note = uni17D2_1796;
},
{
glyphname = uni17D2_1797;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1339,-389,qs),
(-1373,-419,o),
(-1373,-477,qs),
(-1373,-539,o),
(-1303,-606,qs),
(-1233,-673,l),
(-934,-673,l),
(-934,-332,ls),
(-934,-252,o),
(-721,-252,qs),
(-509,-252,o),
(-509,-332,qs),
(-509,-673,l),
(-209,-673,l),
(-209,-332,ls),
(-209,-93,o),
(-721,-93,qs),
(-1233,-93,o),
(-1233,-332,qs),
(-1233,-361,l),
(-1303,-361,o)
);
}
);
width = 0;
}
);
note = uni17D2_1797;
},
{
glyphname = uni17D2_1798;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-508,-495,q),
(-508,-673,o),
(-251,-673,qs),
(-82,-673,o),
(-82,-504,qs),
(-82,-335,o),
(-208,-335,q),
(-208,-93,l),
(-508,-93,l),
(-508,-335,l),
(-820,-372,o),
(-850,-372,qs),
(-933,-372,o),
(-933,-311,qs),
(-933,-222,l),
(-1233,-242,o),
(-1233,-361,qs),
(-1233,-534,o),
(-886,-534,qs),
(-834,-534,o)
);
}
);
width = 0;
}
);
note = uni17D2_1798;
},
{
glyphname = uni17D2_179B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1024,-672,qs),
(-844,-672,o),
(-844,-569,qs),
(-844,-475,o),
(-937,-475,q),
(-937,-499,o),
(-984,-499,qs),
(-1010,-499,o),
(-1010,-435,qs),
(-1010,-266,o),
(-931,-266,qs),
(-870,-266,o),
(-727,-672,o),
(-485,-672,qs),
(-221,-672,o),
(-124,-103,q),
(-423,-103,l),
(-464,-499,o),
(-505,-499,qs),
(-548,-499,o),
(-680,-103,o),
(-931,-103,qs),
(-1310,-103,o),
(-1310,-435,qs),
(-1310,-672,o)
);
}
);
width = 0;
}
);
note = uni17D2_179B;
},
{
glyphname = uni17D2_179C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-208,-182,qs),
(-208,-93,l),
(-508,-93,l),
(-593,-187,o),
(-1045,-400,o),
(-1233,-401,q),
(-1233,-482,ls),
(-1233,-673,o),
(-814,-673,qs),
(-208,-673,o)
);
},
{
closed = 1;
nodes = (
(-814,-540,qs),
(-933,-540,o),
(-933,-502,q),
(-846,-481,o),
(-744,-433,qs),
(-641,-386,o),
(-510,-269,q),
(-521,-540,o)
);
}
);
width = 0;
}
);
note = uni17D2_179C;
},
{
glyphname = uni17D2_17A0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1017,-329,ls),
(-973,-356,o),
(-933,-356,qs),
(-894,-356,o),
(-856,-182,q),
(-884,-182,ls),
(-923,-182,o),
(-960,-160,qs),
(-1070,-93,l),
(-1268,-299,l),
(-1268,-346,l),
(-1227,-384,l),
(-1227,-495,ls),
(-1227,-673,o),
(-884,-673,qs),
(-592,-673,o),
(-592,-495,qs),
(-592,-272,ls),
(-592,-232,o),
(-549,-232,qs),
(-506,-232,o),
(-506,-272,qs),
(-506,-673,l),
(-206,-673,l),
(-206,-272,ls),
(-206,-93,o),
(-559,-93,qs),
(-851,-93,o),
(-851,-272,qs),
(-851,-495,ls),
(-851,-534,o),
(-889,-534,qs),
(-927,-534,o),
(-927,-495,qs),
(-927,-414,l),
(-1114,-315,l),
(-1088,-287,l)
);
}
);
width = 0;
}
);
note = uni17D2_17A0;
},
{
glyphname = uni17D2_17A2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1173,-667,q),
(-933,-667,l),
(-933,-459,l),
(-508,-459,l),
(-508,-501,l),
(-581,-501,o),
(-581,-563,qs),
(-581,-626,o),
(-488,-667,q),
(-208,-667,l),
(-208,-190,l),
(-399,-93,l),
(-581,-93,l),
(-581,-174,l),
(-508,-215,l),
(-508,-327,l),
(-933,-327,l),
(-933,-190,l),
(-1064,-93,l),
(-1286,-93,l),
(-1286,-174,l),
(-1233,-215,l),
(-1233,-491,l),
(-1286,-491,o),
(-1286,-553,qs),
(-1286,-626,o)
);
}
);
width = 0;
}
);
note = uni17D2_17A2;
},
{
glyphname = uni17D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-826,1699,qs),
(-791,1722,o),
(-721,1722,qs),
(-651,1722,o),
(-616,1699,qs),
(-582,1676,o),
(-582,1629,qs),
(-582,1583,o),
(-616,1559,qs),
(-651,1536,o),
(-721,1536,qs),
(-791,1536,o),
(-826,1559,qs),
(-861,1583,o),
(-861,1629,qs),
(-861,1676,o)
);
},
{
closed = 1;
nodes = (
(-547,1769,qs),
(-605,1815,o),
(-721,1815,qs),
(-838,1815,o),
(-895,1769,qs),
(-954,1722,o),
(-954,1629,qs),
(-954,1536,o),
(-895,1489,qs),
(-838,1443,o),
(-721,1443,qs),
(-605,1443,o),
(-547,1489,qs),
(-489,1536,o),
(-489,1629,qs),
(-489,1722,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 3 0 1 0 3 1 105 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 38 38 38 35 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D3;
unicode = 6099;
},
{
glyphname = uni17DD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-645,1651,qs),
(-393,1651,o),
(-393,1470,q),
(-199,1470,l),
(-199,1771,o),
(-644,1771,qs),
(-1089,1771,o),
(-1089,1470,q),
(-898,1470,l),
(-898,1651,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 3 3 0 113 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
2 1 0 3 0 134 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
33 17 33 16 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17DD;
unicode = 6109;
},
{
glyphname = uni17B7.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-955,1716,qs),
(-199,1716,l),
(-199,1859,l),
(-275,1930,ls),
(-504,2142,o),
(-758,2142,qs),
(-1114,2142,o),
(-1114,1859,qs),
(-1114,1716,o)
);
},
{
closed = 1;
nodes = (
(-450,1859,q),
(-845,1859,l),
(-845,1952,o),
(-738,1952,qs),
(-576,1952,o)
);
}
);
width = 0;
}
);
note = uni17B7.a;
},
{
glyphname = uni17B8.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-450,1859,q),
(-845,1859,l),
(-845,1952,o),
(-738,1952,qs),
(-576,1952,o)
);
},
{
closed = 1;
nodes = (
(-758,2142,qs),
(-1114,2142,o),
(-1114,1859,qs),
(-1114,1716,o),
(-955,1716,qs),
(-199,1716,l),
(-199,2148,l),
(-405,2148,l),
(-405,2032,l),
(-575,2142,o)
);
}
);
width = 0;
}
);
note = uni17B8.a;
},
{
glyphname = uni17B9.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-450,1831,q),
(-845,1831,l),
(-845,1907,o),
(-738,1907,qs),
(-576,1907,o)
);
},
{
closed = 1;
nodes = (
(-758,2060,qs),
(-1114,2060,o),
(-1114,1831,qs),
(-1114,1716,o),
(-955,1716,qs),
(-199,1716,l),
(-199,1831,l),
(-271,1886,l),
(-244,1898,o),
(-237,1903,qs),
(-199,1935,o),
(-199,2010,qs),
(-199,2086,o),
(-237,2117,qs),
(-275,2148,o),
(-418,2148,qs),
(-531,2148,o),
(-569,2117,qs),
(-597,2094,o),
(-604,2044,q),
(-680,2060,o)
);
}
);
width = 0;
}
);
note = uni17B9.a;
},
{
glyphname = uni17BA.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-450,1847,q),
(-845,1847,l),
(-845,1932,o),
(-738,1932,qs),
(-576,1932,o)
);
},
{
closed = 1;
nodes = (
(-758,2106,qs),
(-1114,2106,o),
(-1114,1847,qs),
(-1114,1716,o),
(-955,1716,qs),
(-199,1716,l),
(-199,2148,l),
(-405,2148,l),
(-405,2005,l),
(-443,2028,o),
(-482,2045,q),
(-482,2148,l),
(-659,2148,l),
(-659,2099,l),
(-708,2106,o)
);
}
);
width = 0;
}
);
note = uni17BA.a;
},
{
glyphname = uni17C6.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-656,1981,qs),
(-633,1998,o),
(-607,1998,qs),
(-580,1998,o),
(-557,1981,qs),
(-533,1964,o),
(-533,1931,qs),
(-533,1896,o),
(-557,1880,qs),
(-580,1863,o),
(-607,1863,qs),
(-633,1863,o),
(-656,1880,qs),
(-680,1896,o),
(-680,1931,qs),
(-680,1964,o)
);
},
{
closed = 1;
nodes = (
(-367,2099,qs),
(-427,2149,o),
(-608,2149,qs),
(-787,2149,o),
(-847,2099,qs),
(-907,2050,o),
(-907,1931,qs),
(-907,1812,o),
(-847,1762,qs),
(-787,1712,o),
(-608,1712,qs),
(-427,1712,o),
(-367,1762,qs),
(-307,1812,o),
(-307,1931,qs),
(-307,2050,o)
);
}
);
width = 0;
}
);
note = uni17C6.a;
},
{
glyphname = uni17CE.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-488,2001,l),
(-488,2150,l),
(-733,2150,l),
(-733,2001,l),
(-911,2001,l),
(-911,1859,l),
(-733,1859,l),
(-733,1710,l),
(-488,1710,l),
(-488,1859,l),
(-311,1859,l),
(-311,2001,l)
);
}
);
width = 0;
}
);
note = uni17CE.a;
},
{
glyphname = uni17D0.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-961,1885,qs),
(-961,1702,o),
(-562,1702,qs),
(-61,1702,o),
(-61,1966,qs),
(-61,2149,o),
(-324,2149,qs),
(-381,2149,o),
(-381,2102,qs),
(-381,2054,o),
(-324,2054,qs),
(-268,2054,o),
(-268,1966,qs),
(-268,1890,o),
(-366,1852,qs),
(-463,1814,o),
(-562,1814,qs),
(-730,1814,o),
(-741,1885,q),
(-730,1849,o),
(-646,1849,qs),
(-539,1849,o),
(-539,1903,qs),
(-539,1996,o),
(-710,1996,qs),
(-961,1996,o)
);
}
);
width = 0;
}
);
note = uni17D0.a;
},
{
glyphname = uni17BB.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-383,-730,qs),
(-578,-730,o),
(-578,-853,q),
(-555,-853,o),
(-544,-864,qs),
(-531,-876,o),
(-531,-899,qs),
(-531,-1118,l),
(-189,-1118,l),
(-189,-853,ls),
(-189,-730,o)
);
}
);
width = 0;
}
);
note = uni17BB.b;
},
{
glyphname = uni17BC.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-964,-795,q),
(-917,-795,o),
(-917,-807,qs),
(-917,-827,o),
(-965,-850,qs),
(-1012,-874,o),
(-1120,-918,o),
(-1120,-967,qs),
(-1120,-1013,o),
(-990,-1118,o),
(-779,-1118,qs),
(-510,-1118,o),
(-275,-939,o),
(-217,-836,qs),
(-184,-778,o),
(-171,-770,qs),
(-158,-761,o),
(-158,-746,qs),
(-158,-730,o),
(-351,-730,qs),
(-426,-730,o),
(-461,-752,qs),
(-497,-775,o),
(-523,-821,q),
(-575,-900,o),
(-718,-986,o),
(-779,-987,qs),
(-800,-987,o),
(-820,-981,o),
(-820,-967,q),
(-762,-930,o),
(-689,-878,o),
(-670,-861,qs),
(-634,-827,o),
(-634,-796,qs),
(-634,-730,o),
(-769,-730,qs),
(-964,-730,o)
);
}
);
width = 0;
}
);
note = uni17BC.b;
},
{
glyphname = uni17BD.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-875,-795,q),
(-828,-795,o),
(-828,-807,qs),
(-828,-832,o),
(-945,-905,o),
(-1041,-924,q),
(-1041,-989,ls),
(-1041,-1065,o),
(-934,-1118,o),
(-737,-1118,q),
(-644,-1042,l),
(-592,-1118,l),
(-349,-1105,o),
(-272,-1004,q),
(-196,-931,o),
(-158,-795,qs),
(-149,-763,o),
(-149,-746,qs),
(-150,-730,o),
(-286,-730,qs),
(-382,-730,o),
(-405,-746,qs),
(-430,-762,o),
(-440,-795,qs),
(-473,-895,o),
(-521,-959,o),
(-540,-973,q),
(-600,-922,l),
(-704,-973,l),
(-727,-973,o),
(-739,-961,qs),
(-751,-949,o),
(-751,-932,q),
(-709,-925,o),
(-632,-891,o),
(-576,-828,o),
(-576,-795,qs),
(-576,-730,o),
(-710,-730,qs),
(-875,-730,o)
);
}
);
width = 0;
}
);
note = uni17BD.b;
},
{
glyphname = uni17BB.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-722,0);
ref = uni17BB;
}
);
width = 0;
}
);
note = uni17BB.n;
},
{
glyphname = uni17BC.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-750,0);
ref = uni17BC;
}
);
width = 0;
}
);
note = uni17BC.n;
},
{
glyphname = uni17BD.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-759,0);
ref = uni17BD;
}
);
width = 0;
}
);
note = uni17BD.n;
},
{
glyphname = uni17BB.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-732,0);
ref = uni17BB.b;
}
);
width = 0;
}
);
note = uni17BB.n2;
},
{
glyphname = uni17BC.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-740,0);
ref = uni17BC.b;
}
);
width = 0;
}
);
note = uni17BC.n2;
},
{
glyphname = uni17BD.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-759,0);
ref = uni17BD.b;
}
);
width = 0;
}
);
note = uni17BD.n2;
},
{
glyphname = uni17B7.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-710,1516,qs),
(-49,1516,l),
(-49,1659,l),
(-115,1730,ls),
(-316,1942,o),
(-538,1942,qs),
(-849,1942,o),
(-849,1659,qs),
(-849,1516,o)
);
},
{
closed = 1;
nodes = (
(-268,1659,q),
(-614,1659,l),
(-614,1752,o),
(-520,1752,qs),
(-379,1752,o)
);
}
);
width = 0;
}
);
note = uni17B7.r;
},
{
glyphname = uni17B8.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-268,1659,q),
(-614,1659,l),
(-614,1752,o),
(-520,1752,qs),
(-379,1752,o)
);
},
{
closed = 1;
nodes = (
(-538,1942,qs),
(-849,1942,o),
(-849,1659,qs),
(-849,1516,o),
(-710,1516,qs),
(-49,1516,l),
(-49,1988,l),
(-229,1988,l),
(-229,1832,l),
(-378,1942,o)
);
}
);
width = 0;
}
);
note = uni17B8.r;
},
{
glyphname = uni17B9.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-268,1659,q),
(-614,1659,l),
(-614,1752,o),
(-520,1752,qs),
(-379,1752,o)
);
},
{
closed = 1;
nodes = (
(-538,1942,qs),
(-849,1942,o),
(-849,1659,qs),
(-849,1516,o),
(-710,1516,qs),
(-49,1516,l),
(-49,1659,l),
(-112,1726,l),
(-88,1741,o),
(-82,1748,qs),
(-49,1787,o),
(-49,1880,qs),
(-49,1974,o),
(-82,2012,qs),
(-115,2051,o),
(-240,2051,qs),
(-339,2051,o),
(-372,2012,qs),
(-397,1984,o),
(-403,1922,q),
(-470,1942,o)
);
}
);
width = 0;
}
);
note = uni17B9.r;
},
{
glyphname = uni17BA.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-268,1659,q),
(-614,1659,l),
(-614,1752,o),
(-520,1752,qs),
(-379,1752,o)
);
},
{
closed = 1;
nodes = (
(-538,1942,qs),
(-849,1942,o),
(-849,1659,qs),
(-849,1516,o),
(-710,1516,qs),
(-49,1516,l),
(-49,1988,l),
(-229,1988,l),
(-229,1832,l),
(-262,1857,o),
(-296,1876,q),
(-296,2014,l),
(-451,2014,l),
(-451,1934,l),
(-494,1942,o)
);
}
);
width = 0;
}
);
note = uni17BA.r;
},
{
glyphname = uni17C6.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-466,1819,qs),
(-443,1842,o),
(-417,1842,qs),
(-390,1842,o),
(-367,1819,qs),
(-343,1795,o),
(-343,1749,qs),
(-343,1702,o),
(-367,1679,qs),
(-390,1656,o),
(-417,1656,qs),
(-443,1656,o),
(-466,1679,qs),
(-490,1702,o),
(-490,1749,qs),
(-490,1795,o)
);
},
{
closed = 1;
nodes = (
(-177,1981,qs),
(-237,2049,o),
(-418,2049,qs),
(-597,2049,o),
(-657,1981,qs),
(-717,1913,o),
(-717,1749,qs),
(-717,1586,o),
(-657,1518,qs),
(-597,1449,o),
(-418,1449,qs),
(-237,1449,o),
(-177,1518,qs),
(-117,1586,o),
(-117,1749,qs),
(-117,1913,o)
);
}
);
width = 0;
}
);
note = uni17C6.r;
},
{
glyphname = uni17C9.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-732,2009,l),
(-730,1518,l),
(-605,1459,l),
(-482,1518,l),
(-482,2009,l)
);
},
{
closed = 1;
nodes = (
(-330,2009,l),
(-329,1518,l),
(-205,1459,l),
(-80,1518,l),
(-80,2009,l)
);
}
);
width = 0;
}
);
note = uni17C9.r;
},
{
glyphname = uni17CD.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-487,1746,qs),
(-473,1766,o),
(-447,1766,qs),
(-380,1766,o),
(-302,1713,q),
(-232,1713,o),
(-193,1724,q),
(-114,1763,o),
(-50,1817,qs),
(14,1870,o),
(61,1938,q),
(74,1948,o),
(74,1963,qs),
(74,1979,o),
(0,2089,o),
(-20,2089,q),
(-32,2087,l),
(-76,2009,o),
(-140,1957,qs),
(-203,1905,o),
(-283,1879,q),
(-345,1931,o),
(-447,1931,qs),
(-750,1931,o),
(-750,1685,qs),
(-750,1439,o),
(-508,1439,qs),
(-231,1439,o),
(-231,1625,qs),
(-231,1658,o),
(-341,1658,qs),
(-394,1658,o),
(-394,1625,qs),
(-394,1605,o),
(-447,1605,qs),
(-473,1605,o),
(-487,1626,qs),
(-500,1646,o),
(-500,1686,qs),
(-500,1726,o)
);
}
);
width = 0;
}
);
note = uni17CD.r;
},
{
glyphname = uni17D2_1783_17B6;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(349,992,l),
(471,1073,l),
(911,925,l),
(911,0,l),
(1254,0,l),
(1254,1122,l),
(573,1350,l),
(86,1031,l),
(86,910,l),
(189,861,l),
(189,-495,ls),
(189,-534,o),
(111,-534,qs),
(33,-534,o),
(33,-495,qs),
(33,-394,l),
(-194,-305,l),
(-157,-266,l),
(-77,-310,ls),
(-33,-336,o),
(7,-336,qs),
(46,-336,o),
(74,-182,q),
(46,-182,ls),
(7,-182,o),
(-29,-160,qs),
(-140,-93,l),
(-347,-299,l),
(-347,-346,l),
(-266,-414,l),
(-266,-495,ls),
(-266,-534,o),
(-326,-534,qs),
(-386,-534,o),
(-386,-496,qs),
(-386,-93,l),
(-645,-93,l),
(-715,-138,o),
(-750,-178,qs),
(-785,-218,o),
(-785,-254,qs),
(-785,-308,o),
(-756,-334,qs),
(-727,-360,o),
(-685,-360,q),
(-685,-495,ls),
(-685,-673,o),
(-366,-673,qs),
(-174,-673,o),
(-118,-624,q),
(-72,-673,o),
(139,-673,qs),
(532,-673,o),
(532,-495,qs),
(532,900,l)
);
}
);
width = 1443;
}
);
note = uni17D2_1783_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1783_17C5;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1304,1196,qs),
(1304,1578,ls),
(1304,1800,o),
(1087,1800,qs),
(869,1800,o),
(869,1674,q),
(916,1674,o),
(939,1650,qs),
(962,1626,o),
(962,1578,qs),
(962,1220,l),
(573,1350,l),
(86,1031,l),
(86,910,l),
(189,861,l),
(189,-495,ls),
(189,-534,o),
(111,-534,qs),
(33,-534,o),
(33,-495,qs),
(33,-394,l),
(-194,-305,l),
(-157,-266,l),
(-77,-310,ls),
(-33,-336,o),
(7,-336,qs),
(46,-336,o),
(74,-182,q),
(46,-182,ls),
(7,-182,o),
(-29,-160,qs),
(-140,-93,l),
(-347,-299,l),
(-347,-346,l),
(-266,-414,l),
(-266,-495,ls),
(-266,-534,o),
(-326,-534,qs),
(-386,-534,o),
(-386,-496,qs),
(-386,-93,l),
(-645,-93,l),
(-715,-138,o),
(-750,-178,qs),
(-785,-218,o),
(-785,-254,qs),
(-785,-308,o),
(-756,-334,qs),
(-727,-360,o),
(-685,-360,q),
(-685,-495,ls),
(-685,-673,o),
(-366,-673,qs),
(-174,-673,o),
(-118,-624,q),
(-72,-673,o),
(139,-673,qs),
(532,-673,o),
(532,-495,qs),
(532,900,l),
(349,992,l),
(471,1073,l),
(911,925,l),
(911,0,l),
(1254,0,l),
(1254,1018,l),
(1304,1151,o)
);
}
);
width = 1443;
}
);
note = uni17D2_1783_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1788_17B6;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(349,992,l),
(471,1073,l),
(911,925,l),
(911,0,l),
(1254,0,l),
(1254,1122,l),
(573,1350,l),
(86,1031,l),
(86,910,l),
(189,861,l),
(189,-475,ls),
(189,-524,o),
(121,-524,qs),
(33,-524,o),
(33,-481,qs),
(33,-394,l),
(-194,-305,l),
(-167,-266,l),
(-96,-310,ls),
(-53,-336,o),
(-13,-336,qs),
(27,-336,o),
(74,-182,q),
(47,-182,ls),
(7,-182,o),
(-29,-160,qs),
(-140,-93,l),
(-347,-299,l),
(-347,-346,l),
(-266,-414,l),
(-266,-474,ls),
(-266,-524,o),
(-326,-524,qs),
(-385,-524,o),
(-385,-476,qs),
(-385,-271,ls),
(-385,-93,o),
(-745,-93,qs),
(-1104,-93,o),
(-1104,-270,qs),
(-1104,-673,l),
(-844,-673,l),
(-798,-606,ls),
(-751,-538,o),
(-751,-495,qs),
(-751,-450,o),
(-804,-450,q),
(-804,-291,ls),
(-804,-242,o),
(-745,-242,qs),
(-685,-242,o),
(-685,-291,qs),
(-685,-495,ls),
(-685,-673,o),
(-326,-673,qs),
(-185,-673,o),
(-115,-619,q),
(-46,-673,o),
(121,-673,qs),
(532,-673,o),
(532,-495,qs),
(532,900,l)
);
}
);
width = 1443;
}
);
note = uni17D2_1788_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1788_17C5;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1304,1196,qs),
(1304,1578,ls),
(1304,1800,o),
(1087,1800,qs),
(869,1800,o),
(869,1674,q),
(916,1674,o),
(939,1650,qs),
(962,1626,o),
(962,1578,qs),
(962,1220,l),
(573,1350,l),
(86,1031,l),
(86,910,l),
(189,861,l),
(189,-475,ls),
(189,-524,o),
(121,-524,qs),
(33,-524,o),
(33,-481,qs),
(33,-394,l),
(-194,-305,l),
(-167,-266,l),
(-96,-310,ls),
(-53,-336,o),
(-13,-336,qs),
(27,-336,o),
(74,-182,q),
(47,-182,ls),
(7,-182,o),
(-29,-160,qs),
(-140,-93,l),
(-347,-299,l),
(-347,-346,l),
(-266,-414,l),
(-266,-474,ls),
(-266,-524,o),
(-326,-524,qs),
(-385,-524,o),
(-385,-476,qs),
(-385,-271,ls),
(-385,-93,o),
(-745,-93,qs),
(-1104,-93,o),
(-1104,-270,qs),
(-1104,-673,l),
(-844,-673,l),
(-798,-606,ls),
(-751,-538,o),
(-751,-495,qs),
(-751,-450,o),
(-804,-450,q),
(-804,-291,ls),
(-804,-242,o),
(-745,-242,qs),
(-685,-242,o),
(-685,-291,qs),
(-685,-495,ls),
(-685,-673,o),
(-326,-673,qs),
(-185,-673,o),
(-115,-619,q),
(-46,-673,o),
(121,-673,qs),
(532,-673,o),
(532,-495,qs),
(532,900,l),
(349,992,l),
(471,1073,l),
(911,925,l),
(911,0,l),
(1254,0,l),
(1254,1018,l),
(1304,1151,o)
);
}
);
width = 1443;
}
);
note = uni17D2_1788_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_178D_17B6;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(349,992,l),
(471,1073,l),
(911,925,l),
(911,0,l),
(1254,0,l),
(1254,1122,l),
(573,1350,l),
(86,1031,l),
(86,910,l),
(189,861,l),
(189,-475,ls),
(189,-514,o),
(131,-514,qs),
(88,-514,o),
(-98,-370,o),
(-186,-370,qs),
(-208,-370,l),
(-208,-227,l),
(-494,-93,l),
(-720,-194,l),
(-947,-93,l),
(-1233,-227,l),
(-1233,-673,l),
(-933,-673,l),
(-840,-584,o),
(-819,-521,qs),
(-805,-481,o),
(-805,-456,qs),
(-805,-428,o),
(-817,-405,qs),
(-841,-361,o),
(-887,-361,qs),
(-933,-361,l),
(-933,-279,l),
(-899,-259,l),
(-720,-337,l),
(-539,-259,l),
(-508,-278,l),
(-508,-673,l),
(-208,-673,l),
(-208,-509,l),
(-186,-509,ls),
(-136,-509,o),
(57,-673,o),
(201,-673,qs),
(532,-673,o),
(532,-475,qs),
(532,900,l)
);
}
);
width = 1443;
}
);
note = uni17D2_178D_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_178D_17C5;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1304,1196,qs),
(1304,1578,ls),
(1304,1800,o),
(1087,1800,qs),
(869,1800,o),
(869,1674,q),
(916,1674,o),
(939,1650,qs),
(962,1626,o),
(962,1578,qs),
(962,1220,l),
(573,1350,l),
(86,1031,l),
(86,910,l),
(189,861,l),
(189,-475,ls),
(189,-514,o),
(131,-514,qs),
(88,-514,o),
(-98,-370,o),
(-186,-370,qs),
(-208,-370,l),
(-208,-227,l),
(-494,-93,l),
(-720,-194,l),
(-947,-93,l),
(-1233,-227,l),
(-1233,-673,l),
(-933,-673,l),
(-840,-584,o),
(-819,-521,qs),
(-805,-481,o),
(-805,-456,qs),
(-805,-428,o),
(-817,-405,qs),
(-841,-361,o),
(-887,-361,qs),
(-933,-361,l),
(-933,-279,l),
(-899,-259,l),
(-720,-337,l),
(-539,-259,l),
(-508,-278,l),
(-508,-673,l),
(-208,-673,l),
(-208,-509,l),
(-186,-509,ls),
(-136,-509,o),
(57,-673,o),
(201,-673,qs),
(532,-673,o),
(532,-475,qs),
(532,900,l),
(349,992,l),
(471,1073,l),
(911,925,l),
(911,0,l),
(1254,0,l),
(1254,1018,l),
(1304,1151,o)
);
}
);
width = 1443;
}
);
note = uni17D2_178D_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1794_17B6;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(349,992,l),
(471,1073,l),
(911,925,l),
(911,0,l),
(1254,0,l),
(1254,1122,l),
(573,1350,l),
(86,1031,l),
(86,910,l),
(189,861,l),
(189,-467,l),
(1,-315,l),
(-188,-467,l),
(-188,-316,l),
(-165,-316,ls),
(-95,-316,o),
(-95,-249,qs),
(-95,-182,o),
(-142,-138,qs),
(-188,-93,l),
(-508,-93,l),
(-508,-673,l),
(-188,-673,l),
(1,-521,l),
(189,-673,l),
(532,-673,l),
(532,900,l)
);
}
);
width = 1443;
}
);
note = uni17D2_1794_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1794_17C5;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1304,1196,qs),
(1304,1578,ls),
(1304,1800,o),
(1087,1800,qs),
(869,1800,o),
(869,1674,q),
(916,1674,o),
(939,1650,qs),
(962,1626,o),
(962,1578,qs),
(962,1220,l),
(573,1350,l),
(86,1031,l),
(86,910,l),
(189,861,l),
(189,-467,l),
(1,-315,l),
(-188,-467,l),
(-188,-316,l),
(-165,-316,ls),
(-95,-316,o),
(-95,-249,qs),
(-95,-182,o),
(-142,-138,qs),
(-188,-93,l),
(-508,-93,l),
(-508,-673,l),
(-188,-673,l),
(1,-521,l),
(189,-673,l),
(532,-673,l),
(532,900,l),
(349,992,l),
(471,1073,l),
(911,925,l),
(911,0,l),
(1254,0,l),
(1254,1018,l),
(1304,1151,o)
);
}
);
width = 1443;
}
);
note = uni17D2_1794_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1799_17B6;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(349,992,l),
(471,1073,l),
(911,925,l),
(911,0,l),
(1254,0,l),
(1254,1122,l),
(573,1350,l),
(86,1031,l),
(86,910,l),
(189,861,l),
(189,-435,ls),
(189,-514,o),
(1,-514,qs),
(-198,-514,o),
(-198,-435,qs),
(-198,-316,l),
(-175,-316,ls),
(-105,-316,o),
(-105,-249,qs),
(-105,-182,o),
(-152,-138,qs),
(-198,-93,l),
(-508,-93,l),
(-508,-435,ls),
(-508,-673,o),
(1,-673,qs),
(532,-673,o),
(532,-435,qs),
(532,900,l)
);
}
);
width = 1443;
}
);
note = uni17D2_1799_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1799_17C5;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1304,1196,qs),
(1304,1578,ls),
(1304,1800,o),
(1087,1800,qs),
(869,1800,o),
(869,1674,q),
(916,1674,o),
(939,1650,qs),
(962,1626,o),
(962,1578,qs),
(962,1220,l),
(573,1350,l),
(86,1031,l),
(86,910,l),
(189,861,l),
(189,-435,ls),
(189,-514,o),
(1,-514,qs),
(-198,-514,o),
(-198,-435,qs),
(-198,-316,l),
(-175,-316,ls),
(-105,-316,o),
(-105,-249,qs),
(-105,-182,o),
(-152,-138,qs),
(-198,-93,l),
(-508,-93,l),
(-508,-435,ls),
(-508,-673,o),
(1,-673,qs),
(532,-673,o),
(532,-435,qs),
(532,900,l),
(349,992,l),
(471,1073,l),
(911,925,l),
(911,0,l),
(1254,0,l),
(1254,1018,l),
(1304,1151,o)
);
}
);
width = 1443;
}
);
note = uni17D2_1799_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_179F_17B6;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(349,992,l),
(471,1073,l),
(911,925,l),
(911,0,l),
(1254,0,l),
(1254,1122,l),
(573,1350,l),
(86,1031,l),
(86,910,l),
(189,861,l),
(189,193,l),
(66,193,l),
(66,0,l),
(189,0,l),
(189,-435,ls),
(189,-514,o),
(1,-514,qs),
(-208,-514,o),
(-208,-435,qs),
(-208,-93,l),
(-508,-93,l),
(-554,-138,ls),
(-601,-182,o),
(-601,-249,qs),
(-601,-316,o),
(-531,-316,qs),
(-508,-316,l),
(-508,-435,ls),
(-508,-673,o),
(1,-673,qs),
(532,-673,o),
(532,-435,qs),
(532,0,l),
(656,0,o),
(656,120,qs),
(656,240,o),
(610,240,q),
(610,193,o),
(532,193,q),
(532,900,l)
);
}
);
width = 1443;
}
);
note = uni17D2_179F_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_179F_17C5;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1304,1196,qs),
(1304,1578,ls),
(1304,1800,o),
(1087,1800,qs),
(869,1800,o),
(869,1674,q),
(916,1674,o),
(939,1650,qs),
(962,1626,o),
(962,1578,qs),
(962,1220,l),
(573,1350,l),
(86,1031,l),
(86,910,l),
(189,861,l),
(189,193,l),
(66,193,l),
(66,0,l),
(189,0,l),
(189,-435,ls),
(189,-514,o),
(1,-514,qs),
(-208,-514,o),
(-208,-435,qs),
(-208,-93,l),
(-508,-93,l),
(-554,-138,ls),
(-601,-182,o),
(-601,-249,qs),
(-601,-316,o),
(-531,-316,qs),
(-508,-316,l),
(-508,-435,ls),
(-508,-673,o),
(1,-673,qs),
(532,-673,o),
(532,-435,qs),
(532,0,l),
(656,0,o),
(656,120,qs),
(656,240,o),
(610,240,q),
(610,193,o),
(532,193,q),
(532,900,l),
(349,992,l),
(471,1073,l),
(911,925,l),
(911,0,l),
(1254,0,l),
(1254,1018,l),
(1304,1151,o)
);
}
);
width = 1443;
}
);
note = uni17D2_179F_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D21783;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,-495,ls),
(189,-534,o),
(111,-534,qs),
(33,-534,o),
(33,-495,qs),
(33,-394,l),
(-194,-305,l),
(-157,-266,l),
(-77,-310,ls),
(-33,-336,o),
(7,-336,qs),
(46,-336,o),
(74,-182,q),
(46,-182,ls),
(7,-182,o),
(-29,-160,qs),
(-140,-93,l),
(-347,-299,l),
(-347,-346,l),
(-266,-414,l),
(-266,-495,ls),
(-266,-534,o),
(-326,-534,qs),
(-386,-534,o),
(-386,-496,qs),
(-386,-93,l),
(-645,-93,l),
(-715,-138,o),
(-750,-178,qs),
(-785,-218,o),
(-785,-254,qs),
(-785,-308,o),
(-756,-334,qs),
(-727,-360,o),
(-685,-360,q),
(-685,-495,ls),
(-685,-673,o),
(-366,-673,qs),
(-174,-673,o),
(-118,-624,q),
(-72,-673,o),
(139,-673,qs),
(532,-673,o),
(532,-495,qs),
(532,900,l)
);
}
);
width = 721;
}
);
note = uni17D21783;
subCategory = Spacing;
},
{
glyphname = uni17D21788;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,-475,ls),
(189,-524,o),
(121,-524,qs),
(33,-524,o),
(33,-481,qs),
(33,-394,l),
(-194,-305,l),
(-167,-266,l),
(-96,-310,ls),
(-53,-336,o),
(-13,-336,qs),
(27,-336,o),
(74,-182,q),
(47,-182,ls),
(7,-182,o),
(-29,-160,qs),
(-140,-93,l),
(-347,-299,l),
(-347,-346,l),
(-266,-414,l),
(-266,-474,ls),
(-266,-524,o),
(-326,-524,qs),
(-385,-524,o),
(-385,-476,qs),
(-385,-271,ls),
(-385,-93,o),
(-745,-93,qs),
(-1104,-93,o),
(-1104,-270,qs),
(-1104,-673,l),
(-844,-673,l),
(-798,-606,ls),
(-751,-538,o),
(-751,-495,qs),
(-751,-450,o),
(-804,-450,q),
(-804,-291,ls),
(-804,-242,o),
(-745,-242,qs),
(-685,-242,o),
(-685,-291,qs),
(-685,-495,ls),
(-685,-673,o),
(-326,-673,qs),
(-185,-673,o),
(-115,-619,q),
(-46,-673,o),
(121,-673,qs),
(532,-673,o),
(532,-495,qs),
(532,900,l)
);
}
);
width = 721;
}
);
note = uni17D21788;
subCategory = Spacing;
},
{
glyphname = uni17D2178D;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-136,-509,o),
(57,-673,o),
(201,-673,qs),
(532,-673,o),
(532,-475,qs),
(532,900,l),
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,-475,ls),
(189,-514,o),
(131,-514,qs),
(88,-514,o),
(-98,-370,o),
(-186,-370,qs),
(-208,-370,l),
(-208,-227,l),
(-494,-93,l),
(-720,-194,l),
(-947,-93,l),
(-1233,-227,l),
(-1233,-673,l),
(-933,-673,l),
(-840,-584,o),
(-819,-521,qs),
(-805,-481,o),
(-805,-456,qs),
(-805,-428,o),
(-817,-405,qs),
(-841,-361,o),
(-887,-361,qs),
(-933,-361,l),
(-933,-279,l),
(-899,-259,l),
(-720,-337,l),
(-539,-259,l),
(-508,-278,l),
(-508,-673,l),
(-208,-673,l),
(-208,-509,l),
(-186,-509,ls)
);
}
);
width = 721;
}
);
note = uni17D2178D;
subCategory = Spacing;
},
{
glyphname = uni17D21794;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,-467,l),
(1,-315,l),
(-188,-467,l),
(-188,-316,l),
(-165,-316,ls),
(-95,-316,o),
(-95,-249,qs),
(-95,-182,o),
(-142,-138,qs),
(-188,-93,l),
(-508,-93,l),
(-508,-673,l),
(-188,-673,l),
(1,-521,l),
(189,-673,l),
(532,-673,l),
(532,900,l)
);
}
);
width = 721;
}
);
note = uni17D21794;
subCategory = Spacing;
},
{
glyphname = uni17D21799;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,-435,ls),
(189,-514,o),
(1,-514,qs),
(-198,-514,o),
(-198,-435,qs),
(-198,-316,l),
(-175,-316,ls),
(-105,-316,o),
(-105,-249,qs),
(-105,-182,o),
(-152,-138,qs),
(-198,-93,l),
(-508,-93,l),
(-508,-435,ls),
(-508,-673,o),
(1,-673,qs),
(532,-673,o),
(532,-435,qs),
(532,900,l)
);
}
);
width = 721;
}
);
note = uni17D21799;
subCategory = Spacing;
},
{
glyphname = uni17D2179A;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,-366,ls),
(189,-673,o),
(722,-673,qs),
(1254,-673,o),
(1254,-366,qs),
(1254,-93,l),
(915,-93,l),
(915,-366,ls),
(915,-495,o),
(724,-495,qs),
(532,-495,o),
(532,-366,qs),
(532,900,l)
);
}
);
width = 721;
}
);
note = uni17D2179A;
subCategory = Spacing;
},
{
glyphname = uni17D2179F;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,193,l),
(66,193,l),
(66,0,l),
(189,0,l),
(189,-435,ls),
(189,-514,o),
(1,-514,qs),
(-208,-514,o),
(-208,-435,qs),
(-208,-93,l),
(-508,-93,l),
(-554,-138,ls),
(-601,-182,o),
(-601,-249,qs),
(-601,-316,o),
(-531,-316,qs),
(-508,-316,l),
(-508,-435,ls),
(-508,-673,o),
(1,-673,qs),
(532,-673,o),
(532,-435,qs),
(532,0,l),
(656,0,o),
(656,120,qs),
(656,240,o),
(610,240,q),
(610,193,o),
(532,193,q),
(532,900,l)
);
}
);
width = 721;
}
);
note = uni17D2179F;
subCategory = Spacing;
},
{
glyphname = uni17D2179A.b;
lastChange = "2022-11-15 14:45:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,973,l),
(231,1045,l),
(265,1092,l),
(416,1013,o),
(481,1013,qs),
(577,1013,o),
(625,1230,q),
(559,1230,o),
(488,1260,qs),
(273,1350,l),
(66,1062,l),
(66,921,l),
(189,861,l),
(189,-816,ls),
(189,-1120,o),
(722,-1120,qs),
(1254,-1120,o),
(1254,-816,qs),
(1254,-703,l),
(915,-703,l),
(915,-816,ls),
(915,-945,o),
(724,-945,qs),
(532,-945,o),
(532,-816,qs),
(532,900,l)
);
}
);
width = 721;
}
);
note = uni17D2179A.b;
subCategory = Spacing;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,1560,l),
(40,1554,l),
(320,1287,l),
(601,1287,l),
(608,1287,l),
(400,1560,l)
);
}
);
width = 648;
}
);
note = grave;
unicode = 96;
},
{
glyphname = cho.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = cho.half;
},
{
glyphname = coeng_1789khmer.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1311,-85,l),
(-1485,-165,l),
(-1659,-85,l),
(-1975,-211,l),
(-1975,-387,l),
(-1650,-387,l),
(-1609,-347,o),
(-1609,-285,qs),
(-1609,-246,o),
(-1650,-246,q),
(-1650,-228,l),
(-1633,-199,l),
(-1485,-280,l),
(-1308,-199,l),
(-1257,-230,l),
(-1257,-387,l),
(-907,-387,l),
(-907,-269,l),
(-767,-211,l),
(-514,-292,l),
(-514,-387,l),
(-189,-387,l),
(-189,-212,l),
(-729,-85,l),
(-1087,-182,l)
);
},
{
closed = 1;
nodes = (
(-414,-427,qs),
(-605,-427,o),
(-605,-506,q),
(-514,-506,o),
(-514,-536,qs),
(-514,-566,o),
(-671,-566,qs),
(-903,-566,o),
(-1368,-447,o),
(-1602,-447,qs),
(-1975,-447,o),
(-1975,-598,qs),
(-1975,-637,l),
(-1805,-566,o),
(-1602,-566,qs),
(-1415,-566,o),
(-962,-665,o),
(-671,-665,qs),
(-189,-665,o),
(-189,-546,qs),
(-189,-427,o)
);
}
);
width = 0;
}
);
note = coeng_1789khmer.a;
},
{
glyphname = coeng_178Akhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-725,0);
ref = uni17D2_178A;
}
);
width = 0;
}
);
note = coeng_178Akhmer.n;
},
{
glyphname = coeng_178Akhmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (405,0);
ref = uni17D2_178A;
}
);
width = 0;
}
);
note = coeng_178Akhmer.r;
},
{
glyphname = coeng_178Bkhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-726,0);
ref = uni17D2_178B;
}
);
width = 0;
}
);
note = coeng_178Bkhmer.n;
},
{
glyphname = coeng_178Ckhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-725,0);
ref = uni17D2_178C;
}
);
width = 0;
}
);
note = coeng_178Ckhmer.n;
},
{
glyphname = coeng_1797khmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (406,0);
ref = uni17D2_1797;
}
);
width = 0;
}
);
note = coeng_1797khmer.r;
},
{
glyphname = coeng_1798khmer.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-508,-974,q),
(-508,-1123,o),
(-251,-1123,qs),
(-82,-1123,o),
(-82,-981,qs),
(-82,-840,o),
(-208,-840,q),
(-208,-637,l),
(-508,-637,l),
(-508,-840,l),
(-820,-871,o),
(-850,-871,qs),
(-933,-871,o),
(-933,-820,qs),
(-933,-745,l),
(-1233,-762,o),
(-1233,-862,qs),
(-1233,-1007,o),
(-886,-1007,qs),
(-834,-1007,o)
);
}
);
width = 0;
}
);
note = coeng_1798khmer.b;
},
{
glyphname = coeng_1798khmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (333,0);
ref = uni17D2_1798;
}
);
width = 0;
}
);
note = coeng_1798khmer.r;
},
{
glyphname = coeng_17A0khmer.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1227,-956,ls),
(-1227,-1113,o),
(-884,-1113,qs),
(-592,-1113,o),
(-592,-956,qs),
(-592,-856,ls),
(-592,-827,o),
(-549,-827,qs),
(-506,-827,o),
(-506,-856,qs),
(-506,-1113,l),
(-206,-1113,l),
(-206,-856,ls),
(-206,-698,o),
(-559,-698,qs),
(-851,-698,o),
(-851,-856,qs),
(-851,-956,ls),
(-851,-984,o),
(-889,-984,qs),
(-927,-984,o),
(-927,-956,qs),
(-927,-698,l),
(-1227,-698,l)
);
}
);
width = 0;
}
);
note = coeng_17A0khmer.b;
},
{
glyphname = coeng_17A0khmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-730,0);
ref = uni17D2_17A0;
}
);
width = 0;
}
);
note = coeng_17A0khmer.n;
},
{
glyphname = iMark_17CDkhmer.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-27,1694,qs),
(-27,1725,o),
(-97,1725,qs),
(-127,1725,o),
(-130,1700,q),
(-157,1730,ls),
(-177,1752,o),
(-197,1771,q),
(-195,1794,o),
(-189,1808,qs),
(-181,1826,o),
(-164,1826,qs),
(-122,1826,o),
(-73,1777,q),
(-28,1777,o),
(-3,1787,q),
(47,1824,o),
(87,1874,qs),
(128,1924,o),
(158,1988,q),
(166,1997,o),
(166,2012,qs),
(166,2027,o),
(119,2130,o),
(107,2130,q),
(99,2128,l),
(71,2055,o),
(31,2006,qs),
(-9,1957,o),
(-60,1933,q),
(-100,1981,o),
(-164,1981,qs),
(-293,1981,o),
(-335,1877,q),
(-447,1942,o),
(-566,1942,qs),
(-867,1942,o),
(-867,1659,qs),
(-867,1516,o),
(-732,1516,qs),
(-93,1516,l),
(-93,1545,l),
(-27,1587,o)
);
},
{
closed = 1;
nodes = (
(-305,1659,q),
(-639,1659,l),
(-639,1752,o),
(-549,1752,qs),
(-412,1752,o)
);
}
);
width = 0;
}
);
note = iMark_17CDkhmer.r;
},
{
glyphname = nyo_17B6khmer.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2353,928,l),
(2353,0,l),
(2696,0,l),
(2696,1103,l),
(2164,1350,l),
(1835,1160,l),
(1443,1350,l),
(1149,1179,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,0,l),
(1253,0,l),
(1253,1022,l),
(1373,1084,l),
(1632,955,l),
(1632,0,l),
(1975,0,l),
(1975,1021,l),
(2060,1053,l)
);
}
);
width = 2164;
}
);
note = nyo_17B6khmer.a;
},
{
glyphname = nyo_17C5khmer.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2746,1196,qs),
(2746,1578,ls),
(2746,1800,o),
(2529,1800,qs),
(2311,1800,o),
(2311,1674,q),
(2358,1674,o),
(2381,1650,qs),
(2404,1626,o),
(2404,1578,qs),
(2404,1239,l),
(2164,1350,l),
(1835,1160,l),
(1443,1350,l),
(1149,1179,l),
(948,1350,l),
(722,1181,l),
(495,1350,l),
(189,1094,l),
(189,0,l),
(532,0,l),
(681,171,o),
(681,314,qs),
(681,458,o),
(532,458,q),
(532,1014,l),
(573,1063,l),
(722,942,l),
(871,1063,l),
(910,1013,l),
(910,0,l),
(1253,0,l),
(1253,1022,l),
(1373,1084,l),
(1632,955,l),
(1632,0,l),
(1975,0,l),
(1975,1021,l),
(2060,1053,l),
(2353,928,l),
(2353,0,l),
(2696,0,l),
(2696,1018,l),
(2746,1151,o)
);
}
);
width = 2164;
}
);
note = nyo_17C5khmer.a;
},
{
glyphname = ru.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ru.half;
},
{
glyphname = ruu.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ruu.half;
},
{
glyphname = ta.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ta.half;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Bold;
properties = (
{
key = postscriptFullName;
value = "Khmer Black";
},
{
key = postscriptFontName;
value = KhmerBlack;
}
);
weightClass = 900;
}
);
kerningLTR = {
m01 = {
A = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -123;
U = -41;
V = -164;
W = -143;
Y = -143;
asterisk = -143;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
question = -123;
quotedbl = -164;
quotesingle = -164;
u = -41;
v = -123;
w = -61;
y = -102;
};
B = {
A = -41;
T = -41;
V = -82;
W = -61;
X = -41;
Y = -82;
Z = -41;
asterisk = -41;
question = -41;
w = -20;
y = -41;
};
D = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
E = {
V = -41;
W = -41;
Y = -41;
};
F = {
A = -143;
a = -82;
c = -82;
d = -82;
e = -82;
g = -82;
o = -82;
q = -82;
};
G = {
T = -41;
V = -41;
W = -41;
Y = -41;
question = -41;
};
K = {
C = -41;
G = -41;
O = -41;
Q = -41;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
u = -41;
w = -61;
y = -61;
};
L = {
T = -143;
V = -102;
W = -102;
Y = -123;
asterisk = -164;
question = -143;
quotedbl = -123;
quotesingle = -123;
};
O = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
P = {
A = -102;
comma = -246;
period = -246;
};
Q = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
R = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -41;
U = -20;
V = -61;
W = -61;
Y = -61;
asterisk = -41;
question = -41;
w = -41;
y = -41;
};
S = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -41;
question = -41;
w = -20;
y = -41;
};
T = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -61;
c = -61;
comma = -184;
d = -61;
e = -61;
g = -61;
o = -61;
period = -184;
q = -61;
};
U = {
A = -41;
};
V = {
A = -164;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -123;
c = -123;
comma = -225;
d = -123;
e = -123;
g = -123;
o = -123;
period = -225;
q = -123;
s = -82;
};
W = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -102;
c = -123;
comma = -184;
d = -123;
e = -123;
g = -123;
o = -123;
period = -184;
q = -123;
};
X = {
C = -41;
G = -41;
O = -41;
Q = -41;
S = -20;
w = -61;
y = -102;
};
Y = {
A = -143;
C = -61;
G = -61;
O = -61;
Q = -61;
S = -41;
a = -123;
c = -143;
comma = -164;
d = -143;
e = -143;
g = -143;
o = -143;
period = -164;
q = -143;
s = -123;
};
a = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
asterisk = {
A = -102;
comma = -246;
period = -246;
};
b = {
y = -41;
};
f = {
asterisk = 164;
braceright = 184;
bracketright = 184;
parenright = 184;
quotedbl = 164;
quotesingle = 164;
};
h = {
quotedbl = -82;
y = -41;
};
k = {
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
};
n = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
o = {
y = -41;
};
p = {
y = -41;
};
quotedbl = {
A = -164;
g = -82;
};
quotesingle = {
A = -164;
g = -82;
};
r = {
a = -41;
asterisk = 61;
};
v = {
comma = -102;
period = -143;
};
w = {
comma = -143;
period = -143;
};
y = {
comma = -184;
period = -184;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2020 The Khmer Project Authors (https://github.com/danhhong/Khmer)";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Danh Hong";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Danh Hong";
}
);
},
{
key = designerURL;
value = "http://www.nextspell.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 2048;
versionMajor = 8;
versionMinor = 0;
}
