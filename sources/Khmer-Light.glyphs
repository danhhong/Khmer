{
.appVersion = "3141";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = MONO;
},
{
name = panose;
value = (
2,
2,
6,
0,
6,
5,
0,
2,
2,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
9,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
43,
44,
45,
46,
60,
62,
64,
67,
69
);
},
{
name = codePageRanges;
value = (
"1252"
);
}
);
date = "2020-10-31 04:20:23 +0000";
familyName = "Khmer Light";
featurePrefixes = (
{
code = "lookup SUB_0 {
	sub uni17B7 by uni17B7.r;
	sub uni17B8 by uni17B8.r;
	sub uni17B9 by uni17B9.r;
	sub uni17BA by uni17BA.r;
	sub uni17BE by uni17B8.r;
	sub uni17C6 by uni17C6.r;
	sub uni17C9 by uni17C9.r;
	sub uni17CD by uni17CD.r;
	sub uni17B7_17CD by iMark_17CDkhmer.r;
} SUB_0;
lookup SUB_1 {
	sub uni17B7 by uni17B7.a;
	sub uni17B8 by uni17B8.a;
	sub uni17B9 by uni17B9.a;
	sub uni17BA by uni17BA.a;
	sub uni17BE by uni17B8.a;
	sub uni17C6 by uni17C6.a;
	sub uni17CE by uni17CE.a;
	sub uni17D0 by uni17D0.a;
} SUB_1;
lookup SUB_10 {
	sub uni17C9 uni17B6 by uni17C9;
	sub uni17C9 uni17C4 by uni17C9;
	sub uni17C9 uni17C5 by uni17C9;
	sub uni17CA uni17B6 by uni17CA;
	sub uni17CA uni17C4 by uni17CA;
	sub uni17CA uni17C5 by uni17CA;
	sub uni17CC uni17B6 by uni17CC;
	sub uni17CC uni17C4 by uni17CC;
	sub uni17CC uni17C5 by uni17CC;
	sub uni17C9.r uni17B6 by uni17C9.r;
	sub uni17C9.r uni17C4 by uni17C9.r;
	sub uni17C9.r uni17C5 by uni17C9.r;
} SUB_10;
lookup SUB_11 {
	sub uni17D2_178A by coeng_178Akhmer.r;
	sub uni17D2_178F by coeng_178Akhmer.r;
	sub uni17D2_1797 by coeng_1797khmer.r;
	sub uni17D2_1798 by coeng_1798khmer.r;
} SUB_11;
lookup SUB_12 {
	sub uni17BB by uni17BB.b;
	sub uni17BC by uni17BC.b;
	sub uni17BD by uni17BD.b;
} SUB_12;
lookup SUB_13 {
	sub uni17BF by uni17BF.b;
	sub uni17C0 by uni17C0.b;
} SUB_13;
lookup SUB_14 {
	sub uni17CA by uni17BB;
} SUB_14;
lookup SUB_15 {
	sub uni17C9 by uni17BB;
	sub uni17C9.r by uni17BB;
} SUB_15;
lookup SUB_16 {
	sub uni1789 by uni1789.a;
} SUB_16;
lookup SUB_17 {
	sub uni17D2_1789 by coeng_1789khmer.a;
} SUB_17;
lookup SUB_18 {
	sub uni17D2_178A by coeng_178Akhmer.n;
	sub uni17D2_178B by coeng_178Bkhmer.n;
	sub uni17D2_178C by coeng_178Ckhmer.n;
	sub uni17D2_178F by coeng_178Akhmer.n;
	sub uni17D2_17A0 by coeng_17A0khmer.n;
} SUB_18;
lookup SUB_2 {
	sub uni17BB by uni17BB.n;
	sub uni17BC by uni17BC.n;
	sub uni17BD by uni17BD.n;
} SUB_2;
lookup SUB_3 {
	sub uni17BB.b by uni17BB.n2;
	sub uni17BC.b by uni17BC.n2;
	sub uni17BD.b by uni17BD.n2;
} SUB_3;
lookup SUB_4 {
	sub uni1780 by uni1780_17B6;
	sub uni1781 by uni1781_17B6;
	sub uni1782 by uni1782_17B6;
	sub uni1783 by uni1783_17B6;
	sub uni1784 by uni1784_17B6;
	sub uni1785 by uni1785_17B6;
	sub uni1786 by uni1786_17B6;
	sub uni1787 by uni1787_17B6;
	sub uni1788 by uni1788_17B6;
	sub uni1789 by uni1789_17B6;
	sub uni178A by uni178A_17B6;
	sub uni178B by uni178B_17B6;
	sub uni178C by uni178C_17B6;
	sub uni178D by uni178D_17B6;
	sub uni178E by uni178E_17B6;
	sub uni178F by uni178F_17B6;
	sub uni1790 by uni1790_17B6;
	sub uni1791 by uni1791_17B6;
	sub uni1792 by uni1792_17B6;
	sub uni1793 by uni1793_17B6;
	sub uni1794 by uni1794_17B6;
	sub uni1795 by uni1795_17B6;
	sub uni1796 by uni1796_17B6;
	sub uni1797 by uni1797_17B6;
	sub uni1798 by uni1798_17B6;
	sub uni1799 by uni1799_17B6;
	sub uni179A by uni179A_17B6;
	sub uni179B by uni179B_17B6;
	sub uni179C by uni179C_17B6;
	sub uni179F by uni179F_17B6;
	sub uni17A0 by uni17A0_17B6;
	sub uni17A1 by uni17A1_17B6;
	sub uni17A2 by uni17A2_17B6;
	sub uni1789.a by nyo_17B6khmer.a;
} SUB_4;
lookup SUB_5 {
	sub uni1780 by uni1780_17C5;
	sub uni1781 by uni1781_17C5;
	sub uni1782 by uni1782_17C5;
	sub uni1783 by uni1783_17C5;
	sub uni1784 by uni1784_17C5;
	sub uni1785 by uni1785_17C5;
	sub uni1786 by uni1786_17C5;
	sub uni1787 by uni1787_17C5;
	sub uni1788 by uni1788_17C5;
	sub uni1789 by uni1789_17C5;
	sub uni178A by uni178A_17C5;
	sub uni178B by uni178B_17C5;
	sub uni178C by uni178C_17C5;
	sub uni178D by uni178D_17C5;
	sub uni178E by uni178E_17C5;
	sub uni178F by uni178F_17C5;
	sub uni1790 by uni1790_17C5;
	sub uni1791 by uni1791_17C5;
	sub uni1792 by uni1792_17C5;
	sub uni1793 by uni1793_17C5;
	sub uni1794 by uni1794_17C5;
	sub uni1795 by uni1795_17C5;
	sub uni1796 by uni1796_17C5;
	sub uni1797 by uni1797_17C5;
	sub uni1798 by uni1798_17C5;
	sub uni1799 by uni1799_17C5;
	sub uni179A by uni179A_17C5;
	sub uni179B by uni179B_17C5;
	sub uni179C by uni179C_17C5;
	sub uni179F by uni179F_17C5;
	sub uni17A0 by uni17A0_17C5;
	sub uni17A1 by uni17A1_17C5;
	sub uni17A2 by uni17A2_17C5;
	sub uni1789.a by nyo_17C5khmer.a;
} SUB_5;
lookup SUB_6 {
	sub uni17B6 by uni17B6.space;
	sub uni17C4 by uni17B6.space;
	sub uni17C5 by uni17B6.space;
} SUB_6;
lookup SUB_7 {
	sub uni17D2_1798 by coeng_1798khmer.b;
	sub uni17D2_17A0 by coeng_17A0khmer.b;
} SUB_7;
lookup SUB_8 {
	sub uni17D2179A by uni17D2179A.b;
} SUB_8;
lookup SUB_9 {
	sub uni17D21799 by uni17D2_1799_17B6;
} SUB_9;
";
name = Prefix;
}
);
features = (
{
code = "script khmr;
language dflt;
lookup SUB_19 {
	sub uni17B7 uni17CD by uni17B7_17CD;
} SUB_19;
lookup SUB_20 {
	@SUB_20_0_IN_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17C9 uni17CD uni17B7_17CD];
	sub [uni179A uni179C] @SUB_20_0_IN_0' lookup SUB_0;
	@SUB_20_1_BT_0 = [uni17BB coeng_178Akhmer.r coeng_1797khmer.r coeng_1798khmer.r];
	@SUB_20_1_IN_1 = [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD];
	sub [uni179A uni179C] @SUB_20_1_BT_0 @SUB_20_1_IN_1' lookup SUB_0;
	@SUB_20_2_IN_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17CE uni17D0];
	sub uni17CA @SUB_20_2_IN_0' lookup SUB_1;
} SUB_20;
";
tag = abvs;
},
{
code = "script khmr;
language dflt;
lookup SUB_21 {
	sub uni17D2 uni1780 by uni17D2_1780;
	sub uni17D2 uni1781 by uni17D2_1781;
	sub uni17D2 uni1782 by uni17D2_1782;
	sub uni17D2 uni1784 by uni17D2_1784;
	sub uni17D2 uni1785 by uni17D2_1785;
	sub uni17D2 uni1786 by uni17D2_1786;
	sub uni17D2 uni1787 by uni17D2_1787;
	sub uni17D2 uni1789 by uni17D2_1789;
	sub uni17D2 uni178A by uni17D2_178A;
	sub uni17D2 uni178B by uni17D2_178B;
	sub uni17D2 uni178C by uni17D2_178C;
	sub uni17D2 uni178E by uni17D2_178E;
	sub uni17D2 uni178F by uni17D2_178F;
	sub uni17D2 uni1790 by uni17D2_1790;
	sub uni17D2 uni1791 by uni17D2_1791;
	sub uni17D2 uni1792 by uni17D2_1792;
	sub uni17D2 uni1793 by uni17D2_1793;
	sub uni17D2 uni1795 by uni17D2_1795;
	sub uni17D2 uni1796 by uni17D2_1796;
	sub uni17D2 uni1797 by uni17D2_1797;
	sub uni17D2 uni1798 by uni17D2_1798;
	sub uni17D2 uni179B by uni17D2_179B;
	sub uni17D2 uni179C by uni17D2_179C;
	sub uni17D2 uni17A0 by uni17D2_17A0;
	sub uni17D2 uni17A2 by uni17D2_17A2;
} SUB_21;
lookup SUB_22 {
	@SUB_22_0_IN_0 = [uni17D2_178A uni17D2_178F uni17D2_1797 uni17D2_1798];
	sub [uni179A uni179C] @SUB_22_0_IN_0' lookup SUB_11;
	@SUB_22_1_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_22_1_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_22_2_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_22_2_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni17A1 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_22_6_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_22_6_BT_0 [uni17BF uni17C0]' lookup SUB_13;
	sub [uni1789 uni17A1] [uni17BF uni17C0]' lookup SUB_13;
	@SUB_22_8_LA_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE];
	sub [uni179F uni17A0] uni17CA' lookup SUB_14 @SUB_22_8_LA_0;
	@SUB_22_9_LA_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17D0];
	sub [uni17C9 uni17C9.r]' lookup SUB_15 @SUB_22_9_LA_0;
	sub [uni17C9 uni17C9.r]' lookup SUB_15 uni17B6 uni17C6;
	sub [uni179F uni17A0] uni17CA' lookup SUB_14 uni17B6 uni17C6;
} SUB_22;
";
tag = blwf;
},
{
code = "script khmr;
language dflt;
lookup SUB_23 {
	sub uni17D21783 uni17B6 by uni17D2_1783_17B6;
	sub uni17D21783 uni17C4 by uni17D2_1783_17B6;
	sub uni17D21783 uni17C5 by uni17D2_1783_17C5;
	sub uni17D21788 uni17B6 by uni17D2_1788_17B6;
	sub uni17D21788 uni17C4 by uni17D2_1788_17B6;
	sub uni17D21788 uni17C5 by uni17D2_1788_17C5;
	sub uni17D2178D uni17B6 by uni17D2_178D_17B6;
	sub uni17D2178D uni17C4 by uni17D2_178D_17B6;
	sub uni17D2178D uni17C5 by uni17D2_178D_17C5;
	sub uni17D21794 uni17B6 by uni17D2_1794_17B6;
	sub uni17D21794 uni17C4 by uni17D2_1794_17B6;
	sub uni17D21794 uni17C5 by uni17D2_1794_17C5;
	sub uni17D21799 uni17B6 by uni17D2_1799_17B6;
	sub uni17D21799 uni17C4 by uni17D2_1799_17B6;
	sub uni17D21799 uni17C5 by uni17D2_1799_17C5;
	sub uni17D2179F uni17B6 by uni17D2_179F_17B6;
	sub uni17D2179F uni17C4 by uni17D2_179F_17B6;
	sub uni17D2179F uni17C5 by uni17D2_179F_17C5;
} SUB_23;
lookup SUB_24 {
	@SUB_24_0_LA_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D21783 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D21788 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2178D uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D21794 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D21799 uni17D2_179B uni17D2_179C uni17D2179F uni17D2_17A0 uni17D2_17A2];
	sub uni1789' lookup SUB_16 @SUB_24_0_LA_0;
	sub uni1789.a uni17D2_1789' lookup SUB_17;
	@SUB_24_2_IN_0 = [uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178F uni17D2_17A0];
	sub [uni178E uni178E_17B6 uni178E_17C5] @SUB_24_2_IN_0' lookup SUB_18;
	sub uni178E [uni17BB uni17BC uni17BD]' lookup SUB_2;
	@SUB_24_4_BT_0 = [coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_4_BT_0 [uni17BB.b uni17BC.b uni17BD.b]' lookup SUB_3;
	@SUB_24_5_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	sub @SUB_24_5_IN_0' lookup SUB_4 [uni17B6 uni17C4];
	@SUB_24_6_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_6_LA_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_6_IN_0' lookup SUB_4 @SUB_24_6_LA_1 [uni17B6 uni17C4];
	@SUB_24_7_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_7_LA_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_7_IN_0' lookup SUB_4 @SUB_24_7_LA_1 [uni17B6 uni17C4];
	@SUB_24_8_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	sub @SUB_24_8_IN_0' lookup SUB_5 uni17C5;
	@SUB_24_9_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_9_LA_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_9_IN_0' lookup SUB_5 @SUB_24_9_LA_1 uni17C5;
	@SUB_24_10_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_10_LA_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_10_IN_0' lookup SUB_5 @SUB_24_10_LA_1 uni17C5;
	@SUB_24_11_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	sub @SUB_24_11_BT_0 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_12_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_12_BT_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_12_BT_0 @SUB_24_12_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_13_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_13_BT_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_13_BT_0 @SUB_24_13_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	sub [uni17A1 uni17D2179F] [uni17D2_1798 uni17D2_17A0]' lookup SUB_7;
	@SUB_24_15_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_15_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_15_IN_0' lookup SUB_4 @SUB_24_15_LA_1 uni17B6;
	@SUB_24_16_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_16_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_16_IN_0' lookup SUB_4 @SUB_24_16_LA_1 uni17C4;
	@SUB_24_17_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_17_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_17_IN_0' lookup SUB_5 @SUB_24_17_LA_1 uni17C5;
	@SUB_24_18_LA_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub uni1789.a' lookup SUB_4 @SUB_24_18_LA_0 [uni17B6 uni17C4];
	@SUB_24_19_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_19_BT_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_19_BT_0 @SUB_24_19_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_20_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_20_BT_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_20_BT_0 @SUB_24_20_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_21_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_21_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_24_22_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_24_22_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni17A1 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789_17B6 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789_17B6 uni17BB.b uni17B6' lookup SUB_6;
} SUB_24;
";
tag = clig;
},
{
code = "script khmr;
language dflt;
lookup SUB_25 {
	sub uni17D2 uni179A by uni17D2179A;
} SUB_25;
lookup SUB_26 {
	@SUB_26_0_LA_0 = [uni1780 uni1781 uni1782 uni1784 uni1785 uni1786 uni1787 uni178A uni178B uni178C uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni17A2];
	@SUB_26_0_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub uni17D2179A' lookup SUB_8 @SUB_26_0_LA_0 @SUB_26_0_LA_1;
	sub [uni17C9 uni17C9.r]' lookup SUB_15 uni17B6.space uni17C6;
} SUB_26;
";
tag = pref;
},
{
code = "script khmr;
language dflt;
lookup SUB_27 {
	sub uni17D2 uni1783 by uni17D21783;
	sub uni17D2 uni1788 by uni17D21788;
	sub uni17D2 uni178D by uni17D2178D;
	sub uni17D2 uni1794 by uni17D21794;
	sub uni17D2 uni1799 by uni17D21799;
	sub uni17D2 uni179F by uni17D2179F;
} SUB_27;
lookup SUB_28 {
	@SUB_28_0_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_28_0_BT_0 [uni17BF uni17C0]' lookup SUB_13;
	sub uni17D21799' lookup SUB_9 uni17C9 uni17B6;
	@SUB_28_2_BT_0 = [uni17D2_1783_17B6 uni17D2_1788_17B6 uni17D2_178D_17B6 uni17D2_1794_17B6 uni17D2_1799_17B6 uni17D2_179F_17B6 uni17D2_1783_17C5 uni17D2_1788_17C5 uni17D2_178D_17C5 uni17D2_1794_17C5 uni17D2_1799_17C5 uni17D2_179F_17C5];
	@SUB_28_2_IN_1 = [uni17C9 uni17CA uni17CC uni17C9.r];
	sub @SUB_28_2_BT_0 @SUB_28_2_IN_1' lookup SUB_10 [uni17B6 uni17C4 uni17C5]' lookup SUB_10;
} SUB_28;
";
tag = pstf;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 2150;
},
{
name = typoDescender;
value = -1120;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2150;
},
{
name = winDescent;
value = 1120;
},
{
name = hheaAscender;
value = 2150;
},
{
name = hheaDescender;
value = -1120;
},
{
name = strikeoutPosition;
value = 498;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01240 22 2 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01229 8 15 7 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01237 6 22 5 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\0121920 1024 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\01264 64 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 6 values pushed */\01231 6 17 5 2 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    163,\012    163,\012    93,\012    93,\012    1303,\012    \"-93\",\012    0,\012    \"-559\",\012    \"-888\",\012    1303,\012    \"-93\",\012    0,\012    \"-659\",\012    \"-888\",\012    197,\012    197,\012    154,\012    154,\012    1456,\012    0,\012    1560,\012    1082,\012    0,\012    \"-416\",\012    1477,\012    \"-21\",\012    1581,\012    1102,\012    \"-21\",\012    \"-437\"\012)";
}
);
iconName = Light;
id = m01;
metricValues = (
{
pos = 2150;
},
{
pos = 1462;
},
{
pos = 1098;
},
{
},
{
pos = -1120;
},
{
}
);
name = Light;
}
);
glyphs = (
{
glyphname = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,87,l),
(293,96,l),
(415,425,l),
(1068,425,l),
(1189,96,l),
(1061,87,l),
(1061,0,l),
(1420,0,l),
(1420,87,l),
(1313,94,l),
(800,1456,l),
(686,1456,l),
(169,94,l),
(62,87,l),
(62,0,l),
(421,0,l)
);
},
{
closed = 1;
nodes = (
(740,1304,l),
(746,1304,l),
(766,1245,l),
(1029,530,l),
(454,530,l),
(719,1245,l)
);
}
);
width = 1500;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(949,0,o),
(1202,210,o),
(1202,406,qs),
(1202,495,o),
(1125,646,o),
(988,748,o),
(898,763,q),
(1011,792,o),
(1140,959,o),
(1140,1073,qs),
(1140,1265,o),
(886,1456,o),
(659,1456,qs),
(239,1456,l),
(76,1456,l),
(76,1368,l),
(239,1355,l),
(239,100,l),
(76,87,l),
(76,0,l),
(738,0,ls)
);
},
{
closed = 1;
nodes = (
(757,702,ls),
(862,702,o),
(1008,626,o),
(1082,491,o),
(1082,404,qs),
(1082,260,o),
(899,100,o),
(738,100,qs),
(359,100,l),
(359,702,l)
);
},
{
closed = 1;
nodes = (
(659,1355,ls),
(836,1355,o),
(1019,1216,o),
(1019,1077,qs),
(1019,943,o),
(850,803,o),
(694,803,qs),
(359,803,l),
(359,1355,l)
);
}
);
width = 1282;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1114,38,o),
(1203,96,q),
(1203,386,l),
(1102,386,l),
(1092,166,l),
(1033,128,o),
(862,82,o),
(770,82,qs),
(599,82,o),
(356,238,o),
(227,524,o),
(227,718,qs),
(227,739,ls),
(227,927,o),
(354,1212,o),
(587,1373,o),
(746,1373,qs),
(825,1373,o),
(944,1348,o),
(1041,1302,o),
(1085,1269,q),
(1095,1037,l),
(1197,1037,l),
(1197,1320,l),
(1113,1393,o),
(896,1477,o),
(746,1477,qs),
(552,1477,o),
(264,1288,o),
(107,955,o),
(107,737,qs),
(107,718,ls),
(107,502,o),
(258,168,o),
(553,-21,o),
(769,-21,qs),
(891,-21,o)
);
}
);
width = 1321;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(829,0,o),
(1110,186,o),
(1268,509,o),
(1268,716,qs),
(1268,740,ls),
(1268,948,o),
(1107,1271,o),
(825,1456,o),
(639,1456,qs),
(239,1456,l),
(76,1456,l),
(76,1368,l),
(239,1355,l),
(239,100,l),
(76,87,l),
(76,0,l),
(644,0,ls)
);
},
{
closed = 1;
nodes = (
(639,1355,ls),
(791,1355,o),
(1019,1195,o),
(1148,918,o),
(1148,742,qs),
(1148,716,ls),
(1148,542,o),
(1019,263,o),
(791,100,o),
(639,100,qs),
(359,100,l),
(359,1355,l)
);
}
);
width = 1372;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1152,319,l),
(1051,319,l),
(1041,97,l),
(359,97,l),
(359,706,l),
(946,706,l),
(946,806,l),
(359,806,l),
(359,1357,l),
(1010,1357,l),
(1020,1137,l),
(1122,1137,l),
(1122,1456,l),
(76,1456,l),
(76,1368,l),
(239,1355,l),
(239,100,l),
(76,87,l),
(76,0,l),
(1152,0,l)
);
}
);
width = 1287;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(522,87,l),
(359,100,l),
(359,683,l),
(952,683,l),
(952,784,l),
(359,784,l),
(359,1356,l),
(1042,1356,l),
(1052,1137,l),
(1154,1137,l),
(1154,1456,l),
(76,1456,l),
(76,1368,l),
(239,1355,l),
(239,100,l),
(76,87,l),
(76,0,l),
(522,0,l)
);
}
);
width = 1251;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1160,66,o),
(1238,123,q),
(1238,657,l),
(819,657,l),
(819,560,l),
(1118,556,l),
(1118,170,l),
(1052,134,o),
(872,82,o),
(754,82,qs),
(587,82,o),
(352,242,o),
(227,529,o),
(227,718,qs),
(227,752,ls),
(227,937,o),
(362,1216,o),
(593,1373,o),
(738,1373,qs),
(861,1373,o),
(1026,1321,o),
(1089,1275,q),
(1099,1057,l),
(1202,1057,l),
(1202,1328,l),
(1115,1396,o),
(890,1477,o),
(729,1477,qs),
(550,1477,o),
(268,1293,o),
(107,966,o),
(107,750,qs),
(107,718,ls),
(107,499,o),
(264,166,o),
(555,-21,o),
(755,-21,qs),
(926,-21,o)
);
}
);
width = 1384;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(522,87,l),
(359,100,l),
(359,671,l),
(1181,671,l),
(1181,100,l),
(1018,87,l),
(1018,0,l),
(1464,0,l),
(1464,87,l),
(1301,100,l),
(1301,1355,l),
(1464,1368,l),
(1464,1456,l),
(1301,1456,l),
(1181,1456,l),
(1018,1456,l),
(1018,1368,l),
(1181,1355,l),
(1181,772,l),
(359,772,l),
(359,1355,l),
(522,1368,l),
(522,1456,l),
(76,1456,l),
(76,1368,l),
(239,1355,l),
(239,100,l),
(76,87,l),
(76,0,l),
(522,0,l)
);
}
);
width = 1539;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(522,87,l),
(359,100,l),
(359,1355,l),
(522,1368,l),
(522,1456,l),
(76,1456,l),
(76,1368,l),
(239,1355,l),
(239,100,l),
(76,87,l),
(76,0,l),
(522,0,l)
);
}
);
width = 597;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(805,88,o),
(906,285,o),
(906,418,qs),
(906,1355,l),
(1069,1368,l),
(1069,1456,l),
(597,1456,l),
(597,1367,l),
(786,1355,l),
(786,418,ls),
(786,316,o),
(713,164,o),
(578,81,o),
(484,81,qs),
(331,81,o),
(168,247,o),
(166,410,q),
(54,410,l),
(52,404,l),
(54,264,o),
(163,74,o),
(358,-21,o),
(486,-21,qs),
(616,-21,o)
);
}
);
width = 1152;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1325,1368,l),
(1325,1456,l),
(915,1456,l),
(915,1368,l),
(1056,1362,l),
(1055,1357,l),
(283,495,l),
(342,405,l),
(1200,1357,l)
);
},
{
closed = 1;
nodes = (
(522,87,l),
(359,100,l),
(359,1355,l),
(522,1368,l),
(522,1456,l),
(76,1456,l),
(76,1368,l),
(239,1355,l),
(239,100,l),
(76,87,l),
(76,0,l),
(522,0,l)
);
},
{
closed = 1;
nodes = (
(1374,87,l),
(1248,99,l),
(699,843,l),
(621,755,l),
(1099,97,l),
(1098,94,l),
(955,87,l),
(955,0,l),
(1374,0,l)
);
}
);
width = 1440;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1079,334,l),
(981,334,l),
(970,99,l),
(359,99,l),
(359,1355,l),
(522,1368,l),
(522,1456,l),
(359,1456,l),
(239,1456,l),
(76,1456,l),
(76,1368,l),
(239,1355,l),
(239,100,l),
(76,87,l),
(76,0,l),
(1079,0,l)
);
}
);
width = 1184;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,87,l),
(359,100,l),
(359,735,l),
(355,1276,l),
(361,1278,l),
(907,24,l),
(991,24,l),
(1531,1282,l),
(1536,1281,l),
(1536,721,l),
(1536,100,l),
(1369,87,l),
(1369,0,l),
(1815,0,l),
(1815,87,l),
(1652,100,l),
(1652,1355,l),
(1815,1368,l),
(1815,1456,l),
(1482,1456,l),
(951,208,l),
(945,208,l),
(407,1456,l),
(245,1456,l),
(82,1456,l),
(82,1368,l),
(245,1355,l),
(245,100,l),
(82,87,l),
(82,0,l),
(528,0,l)
);
}
);
width = 1897;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(523,87,l),
(353,100,l),
(353,1255,l),
(359,1257,l),
(1200,0,l),
(1312,0,l),
(1312,1355,l),
(1475,1368,l),
(1475,1456,l),
(1312,1456,l),
(1029,1456,l),
(1029,1368,l),
(1199,1355,l),
(1199,206,l),
(1193,204,l),
(361,1456,l),
(240,1456,l),
(77,1456,l),
(77,1368,l),
(240,1355,l),
(240,100,l),
(77,87,l),
(77,0,l),
(523,0,l)
);
}
);
width = 1552;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1076,85,o),
(1234,281,o),
(1317,552,o),
(1317,718,qs),
(1317,737,ls),
(1317,903,o),
(1234,1174,o),
(1075,1371,o),
(850,1477,o),
(709,1477,qs),
(571,1477,o),
(347,1371,o),
(187,1174,o),
(102,903,o),
(102,737,qs),
(102,718,ls),
(102,552,o),
(188,281,o),
(348,85,o),
(572,-21,o),
(710,-21,qs),
(851,-21,o)
);
},
{
closed = 1;
nodes = (
(340,242,o),
(223,528,o),
(223,718,qs),
(223,739,ls),
(223,928,o),
(340,1213,o),
(558,1372,o),
(709,1372,qs),
(866,1372,o),
(1084,1213,o),
(1197,929,o),
(1197,739,qs),
(1197,718,ls),
(1197,528,o),
(1085,242,o),
(868,84,o),
(710,84,qs),
(559,84,o)
);
}
);
width = 1425;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(522,87,l),
(359,100,l),
(359,606,l),
(690,606,ls),
(844,606,o),
(1058,711,o),
(1170,902,o),
(1170,1031,qs),
(1170,1159,o),
(1058,1350,o),
(844,1456,o),
(690,1456,qs),
(239,1456,l),
(76,1456,l),
(76,1368,l),
(239,1355,l),
(239,100,l),
(76,87,l),
(76,0,l),
(522,0,l)
);
},
{
closed = 1;
nodes = (
(690,1355,ls),
(871,1355,o),
(1050,1170,o),
(1050,1029,qs),
(1050,891,o),
(870,706,o),
(690,706,qs),
(359,706,l),
(359,1355,l)
);
}
);
width = 1274;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1044,79,l),
(1183,170,o),
(1316,502,o),
(1316,718,qs),
(1316,737,ls),
(1316,903,o),
(1233,1174,o),
(1074,1371,o),
(849,1477,o),
(708,1477,qs),
(570,1477,o),
(347,1371,o),
(187,1174,o),
(102,903,o),
(102,737,qs),
(102,718,ls),
(102,553,o),
(188,282,o),
(348,85,o),
(572,-21,o),
(710,-21,qs),
(769,-21,o),
(883,0,o),
(936,21,q),
(1275,-224,l),
(1345,-134,l)
);
},
{
closed = 1;
nodes = (
(340,242,o),
(223,528,o),
(223,718,qs),
(223,739,ls),
(223,928,o),
(340,1213,o),
(558,1372,o),
(708,1372,qs),
(865,1372,o),
(1083,1213,o),
(1196,929,o),
(1196,739,qs),
(1196,718,ls),
(1196,528,o),
(1083,242,o),
(866,84,o),
(710,84,qs),
(558,84,o)
);
}
);
width = 1431;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(522,87,l),
(359,100,l),
(359,668,l),
(705,671,ls),
(847,672,o),
(1058,761,o),
(1175,933,o),
(1175,1058,qs),
(1175,1187,o),
(1062,1363,o),
(846,1455,o),
(690,1455,qs),
(76,1455,l),
(76,1368,l),
(239,1355,l),
(239,100,l),
(76,87,l),
(76,-1,l),
(522,-1,l)
);
},
{
closed = 1;
nodes = (
(1259,88,l),
(1140,96,l),
(862,723,l),
(742,722,l),
(1055,-1,l),
(1259,-1,l)
);
},
{
closed = 1;
nodes = (
(690,1355,ls),
(873,1355,o),
(1055,1200,o),
(1055,1059,qs),
(1055,928,o),
(873,768,o),
(678,768,qs),
(359,768,l),
(359,1355,l)
);
}
);
width = 1374;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(971,75,o),
(1098,248,o),
(1098,364,qs),
(1098,532,o),
(856,739,o),
(619,800,qs),
(473,839,o),
(311,924,o),
(245,1035,o),
(245,1108,qs),
(245,1184,o),
(328,1304,o),
(482,1375,o),
(589,1375,qs),
(698,1375,o),
(870,1317,o),
(933,1266,q),
(948,1060,l),
(1047,1060,l),
(1047,1320,l),
(967,1389,o),
(736,1477,o),
(589,1477,qs),
(450,1477,o),
(241,1382,o),
(125,1215,o),
(125,1106,qs),
(125,999,o),
(220,844,o),
(421,734,o),
(580,693,qs),
(728,655,o),
(901,563,o),
(978,442,o),
(978,362,qs),
(978,279,o),
(883,152,o),
(712,81,o),
(597,81,qs),
(500,81,o),
(310,135,o),
(222,190,q),
(207,417,l),
(107,417,l),
(107,135,l),
(223,55,o),
(472,-21,o),
(597,-21,qs),
(745,-21,o)
);
}
);
width = 1194;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(890,87,l),
(727,100,l),
(727,1358,l),
(1135,1358,l),
(1149,1136,l),
(1246,1136,l),
(1246,1456,l),
(87,1456,l),
(87,1136,l),
(185,1136,l),
(198,1358,l),
(607,1358,l),
(607,100,l),
(444,87,l),
(444,0,l),
(890,0,l)
);
}
);
width = 1337;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1122,92,o),
(1251,310,o),
(1251,469,qs),
(1251,1355,l),
(1414,1368,l),
(1414,1456,l),
(968,1456,l),
(968,1368,l),
(1131,1355,l),
(1131,469,ls),
(1131,344,o),
(1031,171,o),
(853,81,o),
(738,81,qs),
(623,81,o),
(447,172,o),
(348,345,o),
(348,469,qs),
(348,1355,l),
(511,1368,l),
(511,1456,l),
(65,1456,l),
(65,1368,l),
(228,1355,l),
(228,469,ls),
(228,313,o),
(358,94,o),
(587,-21,o),
(737,-21,qs),
(890,-21,o)
);
}
);
width = 1478;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1299,1361,l),
(1411,1368,l),
(1411,1456,l),
(1027,1456,l),
(1027,1368,l),
(1178,1359,l),
(769,253,l),
(739,157,l),
(733,157,l),
(703,253,l),
(300,1359,l),
(444,1368,l),
(444,1456,l),
(60,1456,l),
(60,1368,l),
(171,1361,l),
(678,0,l),
(792,0,l)
);
}
);
width = 1468;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(992,1119,l),
(1035,1265,l),
(1041,1265,l),
(1086,1119,l),
(1437,0,l),
(1556,0,l),
(1899,1361,l),
(2006,1368,l),
(2006,1456,l),
(1620,1456,l),
(1620,1368,l),
(1781,1358,l),
(1551,410,l),
(1492,196,l),
(1486,196,l),
(1427,410,l),
(1095,1456,l),
(983,1456,l),
(652,410,l),
(591,201,l),
(585,201,l),
(531,411,l),
(298,1358,l),
(454,1368,l),
(454,1456,l),
(64,1456,l),
(64,1368,l),
(175,1361,l),
(525,0,l),
(639,0,l)
);
}
);
width = 2060;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(474,87,l),
(323,93,l),
(726,660,l),
(1130,93,l),
(976,87,l),
(976,0,l),
(1383,0,l),
(1383,87,l),
(1262,97,l),
(798,741,l),
(1231,1358,l),
(1354,1368,l),
(1354,1456,l),
(948,1456,l),
(948,1368,l),
(1101,1362,l),
(727,823,l),
(346,1362,l),
(498,1368,l),
(498,1456,l),
(93,1456,l),
(93,1368,l),
(214,1358,l),
(658,741,l),
(188,97,l),
(68,87,l),
(68,0,l),
(474,0,l)
);
}
);
width = 1451;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(946,87,l),
(783,100,l),
(783,549,l),
(1263,1360,l),
(1386,1368,l),
(1386,1456,l),
(984,1456,l),
(984,1368,l),
(1139,1360,l),
(747,689,l),
(723,646,l),
(722,644,l),
(699,689,l),
(314,1360,l),
(467,1368,l),
(467,1456,l),
(60,1456,l),
(60,1368,l),
(179,1360,l),
(663,542,l),
(663,100,l),
(500,87,l),
(500,0,l),
(946,0,l)
);
}
);
width = 1444;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1118,324,l),
(1017,324,l),
(1008,100,l),
(234,100,l),
(1086,1369,l),
(1086,1456,l),
(120,1456,l),
(120,1140,l),
(222,1140,l),
(230,1356,l),
(941,1356,l),
(91,92,l),
(91,0,l),
(1118,0,l)
);
}
);
width = 1209;
}
);
note = Z;
unicode = 90;
},
{
glyphname = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(732,89,o),
(791,176,q),
(792,131,o),
(801,59,o),
(813,0,q),
(1049,0,l),
(1049,87,l),
(920,92,l),
(915,123,o),
(911,186,o),
(911,218,qs),
(911,740,ls),
(911,910,o),
(705,1102,o),
(514,1102,qs),
(401,1102,o),
(223,1033,o),
(153,973,q),
(153,747,l),
(252,747,l),
(262,912,l),
(308,951,o),
(433,1002,o),
(512,1002,qs),
(652,1002,o),
(791,859,o),
(791,742,qs),
(791,618,l),
(567,618,ls),
(421,618,o),
(208,534,o),
(92,383,o),
(92,283,qs),
(92,143,o),
(266,-21,o),
(420,-21,qs),
(538,-21,o)
);
},
{
closed = 1;
nodes = (
(212,192,o),
(212,279,qs),
(212,383,o),
(400,526,o),
(566,526,qs),
(791,526,l),
(791,298,l),
(744,201,o),
(545,84,o),
(434,84,qs),
(332,84,o)
);
}
);
width = 1123;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(925,111,o),
(1024,349,o),
(1024,511,qs),
(1024,532,ls),
(1024,705,o),
(925,961,o),
(739,1102,o),
(609,1102,qs),
(493,1102,o),
(324,1004,o),
(271,917,q),
(271,1560,l),
(-12,1560,l),
(-12,1472,l),
(151,1459,l),
(151,0,l),
(254,0,l),
(266,157,l),
(319,73,o),
(492,-21,o),
(611,-21,qs),
(740,-21,o)
);
},
{
closed = 1;
nodes = (
(309,193,o),
(271,287,q),
(271,775,l),
(308,872,o),
(459,999,o),
(586,999,qs),
(691,999,o),
(832,881,o),
(903,671,o),
(903,532,qs),
(903,511,ls),
(903,315,o),
(744,82,o),
(588,82,qs),
(469,82,o)
);
}
);
width = 1114;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(849,66,o),
(952,222,o),
(961,324,q),
(959,330,l),
(852,330,l),
(835,206,o),
(673,79,o),
(552,79,qs),
(448,79,o),
(296,189,o),
(212,388,o),
(212,520,qs),
(212,562,ls),
(212,688,o),
(297,887,o),
(451,1001,o),
(553,1001,qs),
(640,1001,o),
(774,942,o),
(824,889,q),
(840,687,l),
(940,687,l),
(938,932,l),
(872,1007,o),
(676,1102,o),
(550,1102,qs),
(411,1102,o),
(205,964,o),
(92,720,o),
(92,562,qs),
(92,520,ls),
(92,359,o),
(209,115,o),
(416,-21,o),
(551,-21,qs),
(672,-21,o)
);
}
);
width = 1075;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(792,71,o),
(845,153,q),
(854,0,l),
(1124,0,l),
(1124,87,l),
(961,100,l),
(961,1560,l),
(841,1560,l),
(678,1560,l),
(678,1472,l),
(841,1459,l),
(841,920,l),
(787,1006,o),
(620,1102,o),
(507,1102,qs),
(377,1102,o),
(190,961,o),
(92,705,o),
(92,532,qs),
(92,511,ls),
(92,349,o),
(190,111,o),
(376,-21,o),
(505,-21,qs),
(620,-21,o)
);
},
{
closed = 1;
nodes = (
(213,315,o),
(213,511,qs),
(213,532,ls),
(213,671,o),
(284,881,o),
(424,999,o),
(529,999,qs),
(652,999,o),
(802,878,o),
(841,784,q),
(841,279,l),
(800,188,o),
(644,82,o),
(527,82,qs),
(370,82,o)
);
}
);
width = 1211;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(869,58,o),
(932,118,q),
(881,200,l),
(822,144,o),
(667,79,o),
(565,79,qs),
(461,79,o),
(304,187,o),
(217,375,o),
(216,495,q),
(218,539,l),
(968,539,l),
(968,641,ls),
(968,781,o),
(867,988,o),
(678,1102,o),
(545,1102,qs),
(419,1102,o),
(214,962,o),
(94,719,o),
(94,564,qs),
(94,509,ls),
(94,353,o),
(214,114,o),
(426,-21,o),
(565,-21,qs),
(690,-21,o)
);
},
{
closed = 1;
nodes = (
(234,747,o),
(321,908,o),
(459,1001,o),
(545,1001,qs),
(640,1001,o),
(775,915,o),
(848,764,o),
(848,669,qs),
(848,639,l),
(226,639,l),
(224,645,l)
);
}
);
width = 1072;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,87,l),
(377,100,l),
(377,985,l),
(640,985,l),
(640,1082,l),
(377,1082,l),
(377,1241,ls),
(377,1354,o),
(481,1478,o),
(579,1478,qs),
(612,1478,o),
(667,1471,o),
(692,1465,q),
(708,1562,l),
(672,1572,o),
(601,1581,o),
(567,1581,qs),
(420,1581,o),
(257,1403,o),
(257,1241,qs),
(257,1082,l),
(77,1082,l),
(77,985,l),
(257,985,l),
(257,100,l),
(94,87,l),
(94,0,l),
(550,0,l)
);
}
);
width = 723;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(862,-327,o),
(963,-125,o),
(963,14,qs),
(963,1082,l),
(862,1082,l),
(849,912,l),
(796,1002,o),
(626,1102,o),
(510,1102,qs),
(379,1102,o),
(192,961,o),
(92,705,o),
(92,532,qs),
(92,511,ls),
(92,350,o),
(192,111,o),
(378,-21,o),
(508,-21,qs),
(620,-21,o),
(789,67,o),
(843,146,q),
(843,14,ls),
(843,-149,o),
(688,-332,o),
(534,-332,qs),
(454,-332,o),
(311,-298,o),
(247,-267,q),
(215,-367,l),
(281,-399,o),
(457,-437,o),
(536,-437,qs),
(670,-437,o)
);
},
{
closed = 1;
nodes = (
(213,315,o),
(213,511,qs),
(213,532,ls),
(213,670,o),
(285,880,o),
(427,999,o),
(532,999,qs),
(657,999,o),
(805,874,o),
(843,779,q),
(843,284,l),
(803,190,o),
(648,82,o),
(530,82,qs),
(372,82,o)
);
},
{
closed = 1;
nodes = (
(1102,1082,l),
(900,1082,l),
(939,979,l),
(1102,995,l)
);
}
);
width = 1156;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(502,87,l),
(339,100,l),
(339,733,l),
(372,851,o),
(533,999,o),
(665,999,qs),
(788,999,o),
(926,846,o),
(926,669,qs),
(926,100,l),
(763,87,l),
(763,0,l),
(1209,0,l),
(1209,87,l),
(1046,100,l),
(1046,667,ls),
(1046,891,o),
(863,1102,o),
(692,1102,qs),
(571,1102,o),
(392,992,o),
(339,893,q),
(339,1560,l),
(56,1560,l),
(56,1472,l),
(219,1459,l),
(219,100,l),
(56,87,l),
(56,0,l),
(502,0,l)
);
}
);
width = 1295;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(525,87,l),
(362,100,l),
(362,1082,l),
(79,1082,l),
(79,994,l),
(242,981,l),
(242,100,l),
(79,87,l),
(79,0,l),
(525,0,l)
);
},
{
closed = 1;
nodes = (
(362,1560,l),
(228,1560,l),
(228,1387,l),
(362,1387,l)
);
}
);
width = 629;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,-256,o),
(387,-89,qs),
(387,1082,l),
(104,1082,l),
(104,994,l),
(267,981,l),
(267,-89,ls),
(267,-206,o),
(170,-336,o),
(84,-336,qs),
(62,-336,o),
(1,-326,o),
(-15,-321,q),
(-28,-418,l),
(1,-427,o),
(53,-437,o),
(84,-437,qs),
(227,-437,o)
);
},
{
closed = 1;
nodes = (
(384,1560,l),
(250,1560,l),
(250,1387,l),
(384,1387,l)
);
}
);
width = 545;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(509,87,l),
(346,100,l),
(346,1560,l),
(63,1560,l),
(63,1472,l),
(226,1459,l),
(226,100,l),
(63,87,l),
(63,0,l),
(509,0,l)
);
},
{
closed = 1;
nodes = (
(1158,87,l),
(1023,98,l),
(587,674,l),
(519,583,l),
(878,98,l),
(879,93,l),
(760,87,l),
(760,0,l),
(1158,0,l)
);
},
{
closed = 1;
nodes = (
(1095,994,l),
(1095,1082,l),
(707,1082,l),
(707,994,l),
(825,988,l),
(824,982,l),
(291,431,l),
(334,331,l),
(965,982,l)
);
}
);
width = 1215;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(520,87,l),
(357,100,l),
(357,1560,l),
(74,1560,l),
(74,1472,l),
(237,1459,l),
(237,100,l),
(74,87,l),
(74,0,l),
(520,0,l)
);
}
);
width = 614;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(529,87,l),
(366,100,l),
(366,743,l),
(393,859,o),
(540,999,o),
(672,999,qs),
(797,999,o),
(940,830,o),
(940,633,qs),
(940,100,l),
(777,87,l),
(777,0,l),
(1224,0,l),
(1224,87,l),
(1061,100,l),
(1061,684,l),
(1076,821,o),
(1228,1000,o),
(1369,1000,qs),
(1494,1000,o),
(1635,834,o),
(1635,633,qs),
(1635,101,l),
(1472,88,l),
(1472,1,l),
(1919,1,l),
(1919,88,l),
(1756,101,l),
(1756,631,ls),
(1756,872,o),
(1567,1103,o),
(1394,1103,qs),
(1264,1103,o),
(1081,969,o),
(1035,852,q),
(999,979,o),
(833,1102,o),
(708,1102,qs),
(587,1102,o),
(412,994,o),
(362,897,q),
(352,1082,l),
(82,1082,l),
(82,994,l),
(245,981,l),
(245,100,l),
(82,87,l),
(82,0,l),
(529,0,l)
);
}
);
width = 1979;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,87,l),
(365,100,l),
(365,728,l),
(395,849,o),
(551,999,o),
(685,999,qs),
(813,999,o),
(951,845,o),
(951,657,qs),
(951,100,l),
(788,87,l),
(788,0,l),
(1234,0,l),
(1234,87,l),
(1071,100,l),
(1071,658,ls),
(1071,887,o),
(887,1102,o),
(711,1102,qs),
(589,1102,o),
(413,990,o),
(361,888,q),
(351,1082,l),
(82,1082,l),
(82,994,l),
(245,981,l),
(245,100,l),
(82,87,l),
(82,0,l),
(528,0,l)
);
}
);
width = 1331;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(930,118,o),
(1049,364,o),
(1049,524,qs),
(1049,557,ls),
(1049,717,o),
(930,962,o),
(715,1102,o),
(570,1102,qs),
(426,1102,o),
(211,962,o),
(92,716,o),
(92,557,qs),
(92,524,ls),
(92,365,o),
(211,118,o),
(426,-21,o),
(572,-21,qs),
(715,-21,o)
);
},
{
closed = 1;
nodes = (
(297,197,o),
(212,398,o),
(212,524,qs),
(212,557,ls),
(212,681,o),
(297,883,o),
(458,1001,o),
(570,1001,qs),
(682,1001,o),
(843,883,o),
(929,681,o),
(929,557,qs),
(929,524,ls),
(929,399,o),
(843,197,o),
(683,79,o),
(572,79,qs),
(458,79,o)
);
}
);
width = 1141;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(501,-328,l),
(334,-315,l),
(334,142,l),
(387,65,o),
(558,-21,o),
(673,-21,qs),
(802,-21,o),
(987,111,o),
(1086,349,o),
(1086,511,qs),
(1086,532,ls),
(1086,705,o),
(987,961,o),
(800,1102,o),
(670,1102,qs),
(554,1102,o),
(383,1005,o),
(329,917,q),
(314,1082,l),
(51,1082,l),
(51,994,l),
(214,981,l),
(214,-315,l),
(55,-328,l),
(55,-416,l),
(501,-416,l)
);
},
{
closed = 1;
nodes = (
(372,182,o),
(334,271,q),
(334,787,l),
(371,879,o),
(520,999,o),
(643,999,qs),
(748,999,o),
(891,880,o),
(965,670,o),
(965,532,qs),
(965,511,ls),
(965,315,o),
(802,79,o),
(645,79,qs),
(528,79,o)
);
}
);
width = 1178;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1114,-328,l),
(956,-315,l),
(956,1082,l),
(851,1082,l),
(841,922,l),
(787,1007,o),
(619,1102,o),
(507,1102,qs),
(377,1102,o),
(190,961,o),
(92,705,o),
(92,532,qs),
(92,511,ls),
(92,349,o),
(190,111,o),
(376,-21,o),
(505,-21,qs),
(615,-21,o),
(783,63,o),
(836,139,q),
(836,-315,l),
(673,-328,l),
(673,-416,l),
(1114,-416,l)
);
},
{
closed = 1;
nodes = (
(213,315,o),
(213,511,qs),
(213,532,ls),
(213,671,o),
(284,882,o),
(424,1001,o),
(529,1001,qs),
(649,1001,o),
(797,879,o),
(836,789,q),
(836,273,l),
(796,183,o),
(642,79,o),
(527,79,qs),
(370,79,o)
);
}
);
width = 1137;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,87,l),
(364,100,l),
(364,736,l),
(392,850,o),
(538,988,o),
(653,985,qs),
(764,978,l),
(779,1088,l),
(765,1093,o),
(704,1102,o),
(677,1102,qs),
(567,1102,o),
(409,989,o),
(363,888,q),
(362,917,l),
(349,1082,l),
(81,1082,l),
(81,994,l),
(244,981,l),
(244,100,l),
(81,87,l),
(81,0,l),
(527,0,l)
);
}
);
width = 837;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(897,149,o),
(897,281,qs),
(897,406,o),
(715,563,o),
(512,609,qs),
(400,635,o),
(283,693,o),
(242,766,o),
(242,815,qs),
(242,890,o),
(374,1003,o),
(496,1003,qs),
(582,1003,o),
(702,956,o),
(747,913,q),
(761,753,l),
(859,753,l),
(854,975,l),
(791,1033,o),
(615,1102,o),
(496,1102,qs),
(382,1102,o),
(213,1025,o),
(121,893,o),
(121,811,qs),
(121,686,o),
(294,546,o),
(488,504,qs),
(650,468,o),
(777,351,o),
(777,275,qs),
(777,194,o),
(635,76,o),
(499,76,qs),
(418,76,o),
(276,116,o),
(218,161,q),
(201,320,l),
(103,320,l),
(104,98,l),
(190,40,o),
(385,-21,o),
(499,-21,qs),
(692,-21,o)
);
}
);
width = 1015;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(611,-7,o),
(647,4,q),
(629,90,l),
(594,85,o),
(528,76,o),
(494,76,qs),
(430,76,o),
(353,171,o),
(353,279,qs),
(353,985,l),
(605,985,l),
(605,1082,l),
(353,1082,l),
(353,1360,l),
(233,1360,l),
(233,1082,l),
(46,1082,l),
(46,985,l),
(233,985,l),
(233,279,ls),
(233,122,o),
(359,-19,o),
(473,-19,qs),
(519,-19,o)
);
}
);
width = 724;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(833,83,o),
(884,178,q),
(894,0,l),
(1145,0,l),
(1145,87,l),
(1000,100,l),
(1000,1082,l),
(879,1082,l),
(725,1082,l),
(725,994,l),
(879,981,l),
(879,320,l),
(850,211,o),
(694,82,o),
(555,82,qs),
(432,82,o),
(302,255,o),
(302,453,qs),
(302,1082,l),
(182,1082,l),
(48,1082,l),
(48,994,l),
(182,981,l),
(182,455,ls),
(182,211,o),
(371,-21,o),
(541,-21,qs),
(662,-21,o)
);
}
);
width = 1222;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1039,987,l),
(1156,994,l),
(1156,1082,l),
(775,1082,l),
(775,994,l),
(919,985,l),
(648,271,l),
(605,152,l),
(599,152,l),
(559,271,l),
(279,985,l),
(421,994,l),
(421,1082,l),
(40,1082,l),
(40,994,l),
(155,987,l),
(548,0,l),
(656,0,l)
);
}
);
width = 1184;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(839,738,l),
(893,915,l),
(899,916,l),
(954,738,l),
(1207,0,l),
(1323,0,l),
(1624,986,l),
(1746,994,l),
(1746,1082,l),
(1365,1082,l),
(1365,994,l),
(1507,985,l),
(1321,351,l),
(1263,162,l),
(1257,161,l),
(1195,351,l),
(949,1082,l),
(843,1082,l),
(596,350,l),
(538,172,l),
(532,172,l),
(482,350,l),
(296,984,l),
(437,994,l),
(437,1082,l),
(52,1082,l),
(52,994,l),
(174,988,l),
(476,0,l),
(584,0,l)
);
}
);
width = 1804;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(438,87,l),
(317,92,l),
(600,470,l),
(886,92,l),
(759,87,l),
(759,0,l),
(1141,0,l),
(1141,87,l),
(1022,98,l),
(672,553,l),
(991,984,l),
(1109,994,l),
(1109,1082,l),
(746,1082,l),
(746,994,l),
(866,989,l),
(602,632,l),
(334,989,l),
(450,994,l),
(450,1082,l),
(84,1082,l),
(84,994,l),
(201,984,l),
(530,551,l),
(187,98,l),
(64,87,l),
(64,0,l),
(438,0,l)
);
}
);
width = 1197;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(495,-370,o),
(571,-250,o),
(601,-174,qs),
(1045,987,l),
(1160,994,l),
(1160,1082,l),
(782,1082,l),
(782,994,l),
(923,985,l),
(614,164,l),
(608,164,l),
(563,287,l),
(285,985,l),
(422,994,l),
(422,1082,l),
(41,1082,l),
(41,994,l),
(158,987,l),
(555,13,l),
(499,-134,ls),
(461,-229,o),
(369,-332,o),
(291,-332,qs),
(279,-332,o),
(228,-327,o),
(214,-325,q),
(200,-424,l),
(215,-428,o),
(274,-437,o),
(295,-437,qs),
(381,-437,o)
);
}
);
width = 1188;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(962,311,l),
(865,311,l),
(853,98,l),
(254,98,l),
(912,994,l),
(912,1082,l),
(112,1082,l),
(112,770,l),
(209,770,l),
(221,982,l),
(760,982,l),
(105,87,l),
(105,0,l),
(962,0,l)
);
}
);
width = 1056;
}
);
note = z;
unicode = 122;
},
{
glyphname = uni1780;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1138,1024,qs),
(1203,1024,o),
(1256,1165,q),
(1231,1155,ls),
(1201,1143,o),
(1174,1143,qs),
(1134,1143,o),
(1100,1170,qs),
(1043,1214,l),
(930,1303,l),
(903,1303,l),
(738,1159,l),
(540,1303,l),
(513,1303,l),
(186,1117,l),
(186,1065,l),
(299,976,ls),
(330,952,o),
(361,952,qs),
(363,952,ls),
(395,952,o),
(443,1005,q),
(321,1087,l),
(496,1191,l),
(716,1024,l),
(893,1180,l),
(1073,1024,o)
);
},
{
closed = 1;
nodes = (
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,0,l),
(1143,0,l),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,0,l),
(422,0,l),
(422,698,ls)
);
}
);
width = 1442;
}
);
note = uni1780;
unicode = 6016;
},
{
glyphname = uni1781;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(498,884,qs),
(498,829,o),
(422,829,q),
(422,918,l),
(498,918,o)
);
},
{
closed = 1;
nodes = (
(838,734,qs),
(299,448,l),
(299,233,ls),
(299,0,o),
(651,0,qs),
(791,0,ls),
(1143,0,o),
(1143,372,qs),
(1143,555,l),
(1020,478,l),
(1020,372,ls),
(1020,93,o),
(791,93,qs),
(651,93,ls),
(422,93,o),
(422,233,qs),
(422,408,l),
(1000,715,ls),
(1143,791,o),
(1143,931,qs),
(1143,1071,ls),
(1143,1303,o),
(791,1303,qs),
(651,1303,ls),
(299,1303,o),
(299,1071,qs),
(299,838,ls),
(299,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,q),
(422,1071,ls),
(422,1210,o),
(651,1210,qs),
(791,1210,ls),
(1020,1210,o),
(1020,1071,qs),
(1020,931,ls),
(1020,831,o)
);
}
);
width = 1442;
}
);
note = uni1781;
unicode = 6017;
},
{
glyphname = uni1782;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1138,1024,qs),
(1203,1024,o),
(1256,1165,q),
(1231,1155,ls),
(1201,1143,o),
(1174,1143,qs),
(1134,1143,o),
(1100,1170,qs),
(1043,1214,l),
(930,1303,l),
(903,1303,l),
(738,1159,l),
(540,1303,l),
(513,1303,l),
(186,1117,l),
(186,1065,l),
(299,976,ls),
(330,952,o),
(361,952,qs),
(363,952,ls),
(395,952,o),
(443,1005,q),
(321,1087,l),
(496,1191,l),
(716,1024,l),
(893,1180,l),
(1073,1024,o)
);
},
{
closed = 1;
nodes = (
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,0,l),
(1143,0,l),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,0,l),
(422,0,l),
(422,21,l),
(547,192,ls),
(627,302,o),
(700,302,qs),
(768,302,o),
(800,344,o),
(800,364,qs),
(800,383,o),
(745,425,o),
(700,426,qs),
(584,426,o),
(501,316,qs),
(422,213,l),
(422,698,ls)
);
}
);
width = 1442;
}
);
note = uni1782;
unicode = 6018;
},
{
glyphname = uni1783;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,969,qs),
(206,982,o),
(206,1014,qs),
(206,1035,o),
(229,1072,qs),
(253,1110,o),
(299,1163,q),
(299,954,l),
(253,954,o)
);
},
{
closed = 1;
nodes = (
(943,1009,l),
(1026,1147,l),
(1086,1109,ls),
(1137,1077,o),
(1182,1077,qs),
(1259,1077,o),
(1296,1187,q),
(1250,1187,ls),
(1211,1187,o),
(1154,1223,qs),
(1024,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,1303,l),
(299,1303,l),
(206,1198,ls),
(160,1145,o),
(136,1098,qs),
(113,1052,o),
(113,1013,qs),
(113,933,o),
(160,897,qs),
(206,861,o),
(299,861,q),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(991,0,o),
(1082,83,q),
(1172,0,o),
(1396,0,qs),
(1489,0,ls),
(1864,0,o),
(1864,233,qs),
(1864,889,l),
(1664,1009,l),
(1747,1147,l),
(1807,1109,ls),
(1858,1077,o),
(1903,1077,qs),
(1980,1077,o),
(2017,1187,q),
(1971,1187,ls),
(1932,1187,o),
(1875,1223,qs),
(1745,1303,l),
(1558,1025,l),
(1558,965,l),
(1741,862,l),
(1741,233,ls),
(1741,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,889,l)
);
}
);
width = 2164;
}
);
note = uni1783;
unicode = 6019;
},
{
glyphname = uni1784;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(804,1184,qs),
(819,1197,o),
(848,1198,qs),
(877,1197,o),
(891,1184,qs),
(904,1171,o),
(904,1147,qs),
(904,1121,o),
(891,1108,qs),
(877,1094,o),
(848,1094,qs),
(819,1094,o),
(804,1108,qs),
(790,1121,o),
(790,1145,qs),
(790,1170,o)
);
},
{
closed = 1;
nodes = (
(247,564,qs),
(229,570,o),
(229,582,qs),
(229,601,o),
(247,631,qs),
(264,661,o),
(299,699,q),
(299,559,l),
(264,559,o)
);
},
{
closed = 1;
nodes = (
(1019,1143,qs),
(1019,1223,o),
(976,1263,qs),
(933,1303,o),
(848,1303,qs),
(762,1303,o),
(719,1263,qs),
(675,1223,o),
(675,1146,qs),
(675,1112,o),
(690,1094,q),
(558,1094,ls),
(423,1094,o),
(423,1164,qs),
(423,1304,ls),
(423,1489,o),
(285,1489,qs),
(186,1489,o),
(186,1403,q),
(299,1403,o),
(299,1304,qs),
(299,1164,ls),
(299,1001,o),
(558,1001,qs),
(807,1001,l),
(1020,911,l),
(1020,111,l),
(721,310,l),
(422,111,l),
(422,838,l),
(299,838,l),
(226,758,ls),
(182,707,o),
(158,664,qs),
(136,620,o),
(136,581,qs),
(136,523,o),
(177,494,qs),
(217,465,o),
(299,465,q),
(299,0,l),
(422,0,l),
(721,200,l),
(1020,0,l),
(1143,0,l),
(1143,966,l),
(964,1039,l),
(1019,1093,o)
);
}
);
width = 1442;
}
);
note = uni1784;
unicode = 6020;
},
{
glyphname = uni1785;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,587,q),
(951,594,o),
(951,605,qs),
(951,626,o),
(968,654,qs),
(986,683,o),
(1021,722,q),
(1021,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(299,0,o),
(651,0,qs),
(791,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,861,l),
(1021,861,l),
(948,781,ls),
(902,732,o),
(880,687,qs),
(858,642,o),
(858,604,qs),
(858,546,o),
(899,518,qs),
(940,489,o),
(1021,489,q),
(1021,233,ls),
(1021,93,o),
(791,93,qs),
(651,93,ls),
(422,93,o),
(422,233,qs),
(422,975,l),
(321,1087,l),
(496,1191,l),
(716,1024,l),
(893,1180,l),
(1073,1024,o),
(1138,1024,qs),
(1203,1024,o),
(1256,1165,q),
(1231,1155,ls),
(1201,1143,o),
(1174,1143,qs),
(1134,1143,o),
(1100,1170,qs),
(1043,1214,l),
(930,1303,l),
(903,1303,l),
(738,1159,l),
(540,1303,l),
(513,1303,l),
(186,1117,l),
(186,1065,l),
(299,936,l),
(299,233,ls)
);
}
);
width = 1442;
}
);
note = uni1785;
unicode = 6021;
},
{
glyphname = uni1786;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,308,qs),
(255,326,o),
(299,326,q),
(299,128,l),
(255,149,o),
(243,181,qs),
(232,213,o),
(232,256,qs),
(232,290,o)
);
},
{
closed = 1;
nodes = (
(968,587,qs),
(950,594,o),
(950,605,qs),
(950,626,o),
(968,654,qs),
(986,683,o),
(1020,722,q),
(1020,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(321,1087,l),
(496,1191,l),
(716,1024,l),
(893,1180,l),
(1073,1024,o),
(1138,1024,qs),
(1203,1024,o),
(1256,1165,q),
(1231,1155,ls),
(1201,1143,o),
(1174,1143,qs),
(1134,1143,o),
(1100,1170,qs),
(1043,1214,l),
(930,1303,l),
(903,1303,l),
(738,1159,l),
(540,1303,l),
(513,1303,l),
(186,1117,l),
(186,1065,l),
(299,936,l),
(299,419,l),
(209,419,o),
(174,378,qs),
(139,337,o),
(139,256,qs),
(139,194,o),
(157,146,qs),
(174,99,o),
(237,50,qs),
(299,0,l),
(422,0,l),
(422,326,l),
(511,326,ls),
(581,326,o),
(616,299,qs),
(651,272,o),
(651,217,qs),
(651,0,o),
(884,0,qs),
(1143,0,o),
(1143,233,qs),
(1143,861,l),
(1020,861,l),
(947,781,ls),
(902,732,o),
(880,687,qs),
(857,642,o),
(857,604,qs),
(857,546,o),
(898,518,qs),
(939,489,o),
(1020,489,q),
(1020,233,ls),
(1020,93,o),
(884,93,qs),
(744,93,o),
(744,217,qs),
(744,318,o),
(686,369,qs),
(628,419,o),
(511,419,qs),
(422,419,l),
(422,975,l)
);
}
);
width = 1442;
}
);
note = uni1786;
unicode = 6022;
},
{
glyphname = uni1787;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(721,310,l),
(422,111,l),
(422,936,l),
(298,1050,l),
(476,1183,l),
(692,1001,l),
(838,1001,ls),
(1143,1001,o),
(1143,1210,qs),
(1143,1443,o),
(997,1443,qs),
(884,1443,o),
(884,1370,q),
(1021,1370,o),
(1021,1210,qs),
(1021,1094,o),
(838,1094,qs),
(775,1094,l),
(525,1303,l),
(493,1303,l),
(186,1073,l),
(186,1019,l),
(299,916,l),
(299,0,l),
(422,0,l),
(721,200,l),
(1021,0,l),
(1143,0,l),
(1143,861,l),
(1021,861,l),
(1021,111,l)
);
}
);
width = 1442;
}
);
note = uni1787;
unicode = 6023;
},
{
glyphname = uni1788;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(1742,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,1103,l),
(721,1303,l),
(299,1104,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1065,l),
(681,1186,l),
(1020,1026,l),
(1020,233,ls),
(1020,0,o),
(1396,0,qs),
(1489,0,ls),
(1713,0,o),
(1803,83,q),
(1894,0,o),
(2118,0,qs),
(2211,0,ls),
(2587,0,o),
(2587,233,qs),
(2587,889,l),
(2387,1009,l),
(2470,1147,l),
(2530,1109,ls),
(2581,1077,o),
(2626,1077,qs),
(2703,1077,o),
(2740,1187,q),
(2694,1187,ls),
(2655,1187,o),
(2598,1223,qs),
(2468,1303,l),
(2281,1025,l),
(2281,965,l),
(2464,862,l),
(2464,233,ls),
(2464,93,o),
(2211,93,qs),
(2118,93,ls),
(1865,93,o),
(1865,233,qs),
(1865,889,l),
(1665,1009,l),
(1748,1147,l),
(1808,1109,ls),
(1859,1077,o),
(1904,1077,qs),
(1981,1077,o),
(2018,1187,q),
(1972,1187,ls),
(1933,1187,o),
(1876,1223,qs),
(1746,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,233,ls)
);
}
);
width = 2885;
}
);
note = uni1788;
unicode = 6024;
},
{
glyphname = uni1789;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1703,-93,qs),
(1606,-93,o),
(1606,-176,q),
(1743,-176,o),
(1743,-279,qs),
(1743,-465,o),
(1552,-465,qs),
(1354,-465,o),
(1217,-349,qs),
(973,-140,o),
(611,-140,qs),
(515,-140,o),
(432,-160,qs),
(279,-197,o),
(279,-270,qs),
(279,-317,l),
(348,-275,o),
(432,-253,qs),
(515,-233,o),
(611,-233,qs),
(871,-233,o),
(1093,-419,qs),
(1261,-559,o),
(1552,-559,qs),
(1865,-559,o),
(1865,-279,qs),
(1865,-93,o)
);
},
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,0,l),
(1143,0,l),
(1143,1025,l),
(1413,1178,l),
(1742,984,l),
(1742,0,l),
(1865,0,l),
(1865,1054,l),
(1443,1303,l),
(1093,1102,l),
(888,1303,l)
);
}
);
width = 2164;
}
);
note = uni1789;
unicode = 6025;
},
{
glyphname = uni178A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,1164,qs),
(422,1210,o),
(456,1210,qs),
(489,1210,o),
(489,1164,q),
(536,1164,o),
(558,1181,qs),
(582,1199,o),
(582,1233,qs),
(582,1303,o),
(454,1303,qs),
(299,1303,o),
(299,1164,qs),
(299,1001,o),
(675,1001,qs),
(768,1001,ls),
(1143,1001,o),
(1143,1221,qs),
(1143,1443,o),
(977,1443,qs),
(931,1443,o),
(907,1420,qs),
(884,1396,o),
(884,1350,q),
(1020,1350,o),
(1020,1221,qs),
(1020,1094,o),
(768,1094,qs),
(675,1094,ls),
(422,1094,o)
);
},
{
closed = 1;
nodes = (
(422,861,l),
(299,861,l),
(299,0,l),
(422,0,l),
(721,200,l),
(1020,0,l),
(1143,0,l),
(1143,861,l),
(1020,861,l),
(1020,111,l),
(721,310,l),
(422,111,l)
);
}
);
width = 1442;
}
);
note = uni178A;
unicode = 6026;
},
{
glyphname = uni178B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,969,qs),
(206,982,o),
(206,1014,qs),
(206,1035,o),
(229,1072,qs),
(253,1110,o),
(299,1163,q),
(299,954,l),
(253,954,o)
);
},
{
closed = 1;
nodes = (
(1021,93,o),
(791,93,qs),
(651,93,ls),
(422,93,o),
(422,233,qs),
(422,1303,l),
(299,1303,l),
(206,1198,ls),
(160,1145,o),
(136,1098,qs),
(113,1052,o),
(113,1013,qs),
(113,933,o),
(160,897,qs),
(206,861,o),
(299,861,q),
(299,233,ls),
(299,0,o),
(651,0,qs),
(791,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,889,l),
(943,1009,l),
(1026,1147,l),
(1086,1109,ls),
(1137,1077,o),
(1182,1077,qs),
(1225,1077,o),
(1302,1164,o),
(1302,1280,qs),
(1302,1385,o),
(1267,1437,qs),
(1233,1489,o),
(1163,1489,qs),
(1116,1489,o),
(1093,1466,qs),
(1070,1443,o),
(1070,1396,q),
(1140,1396,o),
(1174,1368,qs),
(1209,1339,o),
(1209,1280,qs),
(1209,1246,o),
(1201,1224,qs),
(1196,1213,o),
(1184,1213,qs),
(1173,1213,o),
(1154,1223,qs),
(1014,1303,l),
(837,1025,l),
(837,965,l),
(1021,862,l),
(1021,233,ls)
);
}
);
width = 1442;
}
);
note = uni178B;
unicode = 6027;
},
{
glyphname = uni178C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(468,884,qs),
(468,839,o),
(422,839,q),
(422,908,l),
(468,908,o)
);
},
{
closed = 1;
nodes = (
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,925,ls),
(1020,808,o),
(949,772,qs),
(299,441,l),
(299,278,ls),
(299,0,o),
(536,0,qs),
(564,0,l),
(1021,250,l),
(1021,117,ls),
(1021,50,o),
(884,50,q),
(884,-47,o),
(1001,-47,qs),
(1143,-47,o),
(1143,115,qs),
(1143,535,l),
(1021,535,l),
(1021,357,l),
(541,94,l),
(422,94,o),
(422,277,qs),
(422,399,l),
(1018,702,ls),
(1143,766,o),
(1143,925,qs),
(1143,1052,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,838,ls),
(299,745,o),
(422,745,qs),
(562,745,o),
(562,884,qs),
(562,1001,o),
(422,1001,q),
(422,1046,l),
(553,1173,l)
);
}
);
width = 1442;
}
);
note = uni178C;
unicode = 6028;
},
{
glyphname = uni178D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(976,149,o),
(964,181,qs),
(953,213,o),
(953,256,qs),
(953,290,o),
(964,308,qs),
(976,326,o),
(1020,326,q),
(1020,128,l)
);
},
{
closed = 1;
nodes = (
(1665,1009,l),
(1748,1147,l),
(1808,1109,ls),
(1859,1077,o),
(1904,1077,qs),
(1981,1077,o),
(2018,1187,q),
(1972,1187,ls),
(1933,1187,o),
(1876,1223,qs),
(1746,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,233,ls),
(1742,93,o),
(1605,93,qs),
(1465,93,o),
(1465,217,qs),
(1465,318,o),
(1407,369,qs),
(1349,419,o),
(1232,419,qs),
(1143,419,l),
(1143,1052,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,419,l),
(930,419,o),
(895,378,qs),
(860,337,o),
(860,256,qs),
(860,194,o),
(878,146,qs),
(895,99,o),
(958,50,qs),
(1020,0,l),
(1143,0,l),
(1143,326,l),
(1232,326,ls),
(1302,326,o),
(1337,299,qs),
(1372,272,o),
(1372,217,qs),
(1372,0,o),
(1605,0,qs),
(1865,0,o),
(1865,233,qs),
(1865,889,l)
);
}
);
width = 2164;
}
);
note = uni178D;
unicode = 6029;
},
{
glyphname = uni178E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(2164,1303,l),
(1742,1104,l),
(1742,111,l),
(1443,310,l),
(1143,111,l),
(1143,1103,l),
(721,1303,l),
(299,1104,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1065,l),
(681,1186,l),
(1020,1026,l),
(1020,0,l),
(1143,0,l),
(1443,200,l),
(1742,0,l),
(1865,0,l),
(1865,1065,l),
(2124,1186,l),
(2463,1026,l),
(2463,0,l),
(2586,0,l),
(2586,1103,l)
);
}
);
width = 2885;
}
);
note = uni178E;
unicode = 6030;
},
{
glyphname = uni178F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(469,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(1138,1024,qs),
(1203,1024,o),
(1256,1165,q),
(1231,1155,ls),
(1201,1143,o),
(1174,1143,qs),
(1134,1143,o),
(1100,1170,qs),
(1043,1214,l),
(930,1303,l),
(903,1303,l),
(738,1159,l),
(540,1303,l),
(513,1303,l),
(186,1117,l),
(186,1065,l),
(299,976,ls),
(330,952,o),
(361,952,qs),
(363,952,ls),
(395,952,o),
(443,1005,q),
(321,1087,l),
(496,1191,l),
(716,1024,l),
(893,1180,l),
(1073,1024,o)
);
},
{
closed = 1;
nodes = (
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,0,l),
(1143,0,l),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(550,442,o),
(469,442,qs),
(422,442,l),
(422,698,ls)
);
}
);
width = 1442;
}
);
note = uni178F;
unicode = 6031;
},
{
glyphname = uni1790;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,587,q),
(951,594,o),
(951,605,qs),
(951,626,o),
(968,654,qs),
(986,683,o),
(1021,722,q),
(1021,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(299,0,o),
(651,0,qs),
(791,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,861,l),
(1021,861,l),
(948,781,ls),
(902,732,o),
(880,687,qs),
(858,642,o),
(858,604,qs),
(858,546,o),
(899,518,qs),
(940,489,o),
(1021,489,q),
(1021,233,ls),
(1021,93,o),
(791,93,qs),
(651,93,ls),
(422,93,o),
(422,233,qs),
(422,936,l),
(298,1050,l),
(476,1183,l),
(692,1001,l),
(838,1001,ls),
(1143,1001,o),
(1143,1210,qs),
(1143,1443,o),
(997,1443,qs),
(884,1443,o),
(884,1370,q),
(1021,1370,o),
(1021,1210,qs),
(1021,1094,o),
(838,1094,qs),
(775,1094,l),
(525,1303,l),
(493,1303,l),
(186,1073,l),
(186,1019,l),
(299,916,l),
(299,233,ls)
);
}
);
width = 1442;
}
);
note = uni1790;
unicode = 6032;
},
{
glyphname = uni1791;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1070,625,qs),
(1070,597,o),
(998,597,qs),
(942,597,l),
(942,652,o),
(998,652,qs),
(1070,652,o)
);
},
{
closed = 1;
nodes = (
(976,978,qs),
(931,978,o),
(931,1024,q),
(838,1024,o),
(838,954,qs),
(838,884,o),
(976,884,qs),
(1143,884,o),
(1143,1031,qs),
(1143,1303,o),
(721,1303,qs),
(299,1303,o),
(299,1031,qs),
(299,815,ls),
(299,504,o),
(722,504,qs),
(819,504,l),
(819,280,ls),
(819,93,o),
(702,93,qs),
(585,93,o),
(585,193,qs),
(585,280,ls),
(585,420,o),
(479,420,qs),
(373,420,o),
(373,327,q),
(462,327,o),
(462,280,qs),
(462,193,ls),
(462,0,o),
(702,0,qs),
(942,0,o),
(942,281,qs),
(942,504,l),
(998,504,ls),
(1143,504,o),
(1143,626,qs),
(1143,746,o),
(998,746,qs),
(819,746,o),
(819,597,q),
(722,597,ls),
(422,597,o),
(422,815,qs),
(422,1031,ls),
(422,1210,o),
(721,1210,qs),
(1021,1210,o),
(1021,1031,qs),
(1021,978,o)
);
}
);
width = 1442;
}
);
note = uni1791;
unicode = 6033;
},
{
glyphname = uni1792;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,587,q),
(951,594,o),
(951,605,qs),
(951,626,o),
(968,654,qs),
(986,683,o),
(1021,722,q),
(1021,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(721,310,l),
(422,111,l),
(422,975,l),
(321,1087,l),
(496,1191,l),
(716,1024,l),
(893,1180,l),
(1073,1024,o),
(1138,1024,qs),
(1203,1024,o),
(1256,1165,q),
(1231,1155,ls),
(1201,1143,o),
(1174,1143,qs),
(1134,1143,o),
(1100,1170,qs),
(1043,1214,l),
(930,1303,l),
(903,1303,l),
(738,1159,l),
(540,1303,l),
(513,1303,l),
(186,1117,l),
(186,1065,l),
(299,936,l),
(299,0,l),
(422,0,l),
(721,200,l),
(1020,0,l),
(1143,0,l),
(1143,861,l),
(1021,861,l),
(948,781,ls),
(902,732,o),
(880,687,qs),
(858,642,o),
(858,604,qs),
(858,546,o),
(899,518,qs),
(940,489,o),
(1020,489,q),
(1020,111,l)
);
}
);
width = 1442;
}
);
note = uni1792;
unicode = 6034;
},
{
glyphname = uni1793;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,921,qs),
(951,954,o),
(1020,954,q),
(1020,861,l),
(951,861,o)
);
},
{
closed = 1;
nodes = (
(487,663,qs),
(1021,485,l),
(1021,217,ls),
(1021,93,o),
(887,93,qs),
(779,93,o),
(693,209,qs),
(606,326,o),
(422,326,q),
(422,543,l),
(299,543,l),
(299,0,l),
(422,0,l),
(422,233,l),
(556,233,o),
(618,145,qs),
(721,0,o),
(887,0,qs),
(1143,0,o),
(1143,217,qs),
(1143,536,l),
(512,752,ls),
(422,783,o),
(422,869,qs),
(422,1086,ls),
(422,1210,o),
(721,1210,qs),
(1020,1210,o),
(1020,1086,qs),
(1020,1047,l),
(858,1047,o),
(858,921,qs),
(858,768,o),
(1020,768,qs),
(1143,768,o),
(1143,860,qs),
(1143,1086,ls),
(1143,1303,o),
(721,1303,qs),
(299,1303,o),
(299,1086,qs),
(299,869,ls),
(299,726,o)
);
}
);
width = 1442;
}
);
note = uni1793;
unicode = 6035;
},
{
glyphname = uni1794;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1143,233,qs),
(1143,889,l),
(943,1009,l),
(1026,1147,l),
(1086,1109,ls),
(1137,1077,o),
(1182,1077,qs),
(1259,1077,o),
(1296,1187,q),
(1250,1187,ls),
(1211,1187,o),
(1154,1223,qs),
(1024,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(1143,0,o)
);
}
);
width = 1442;
}
);
note = uni1794;
unicode = 6036;
},
{
glyphname = uni1795;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,587,q),
(951,594,o),
(951,605,qs),
(951,626,o),
(968,654,qs),
(986,683,o),
(1021,722,q),
(1021,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(298,1050,l),
(476,1183,l),
(692,1001,l),
(838,1001,ls),
(1143,1001,o),
(1143,1210,qs),
(1143,1443,o),
(997,1443,qs),
(884,1443,o),
(884,1370,q),
(1021,1370,o),
(1021,1210,qs),
(1021,1094,o),
(838,1094,qs),
(775,1094,l),
(525,1303,l),
(493,1303,l),
(186,1073,l),
(186,1019,l),
(299,916,l),
(299,0,l),
(422,0,l),
(721,200,l),
(1020,0,l),
(1143,0,l),
(1143,861,l),
(1021,861,l),
(948,781,ls),
(902,732,o),
(880,687,qs),
(858,642,o),
(858,604,qs),
(858,546,o),
(899,518,qs),
(940,489,o),
(1020,489,q),
(1020,111,l),
(721,310,l),
(422,111,l),
(422,936,l)
);
}
);
width = 1442;
}
);
note = uni1795;
unicode = 6037;
},
{
glyphname = uni1796;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,0,l),
(1143,0,l),
(1143,1052,l),
(888,1303,l),
(722,1140,l)
);
}
);
width = 1442;
}
);
note = uni1796;
unicode = 6038;
},
{
glyphname = uni1797;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,253,qs),
(206,279,o),
(206,303,qs),
(206,326,o),
(217,337,qs),
(229,349,o),
(253,349,qs),
(299,349,l),
(299,145,l),
(255,197,ls),
(230,227,o)
);
},
{
closed = 1;
nodes = (
(1138,1024,qs),
(1203,1024,o),
(1256,1165,q),
(1231,1155,ls),
(1201,1143,o),
(1174,1143,qs),
(1134,1143,o),
(1100,1170,qs),
(1043,1214,l),
(930,1303,l),
(903,1303,l),
(738,1159,l),
(540,1303,l),
(513,1303,l),
(186,1117,l),
(186,1065,l),
(299,976,ls),
(330,952,o),
(361,952,qs),
(363,952,ls),
(395,952,o),
(443,1005,q),
(321,1087,l),
(496,1191,l),
(716,1024,l),
(893,1180,l),
(1073,1024,o)
);
},
{
closed = 1;
nodes = (
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,0,l),
(1143,0,l),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,442,l),
(253,442,ls),
(183,442,o),
(148,408,qs),
(113,372,o),
(113,303,qs),
(113,263,o),
(132,220,qs),
(150,177,o),
(187,133,qs),
(299,0,l),
(422,0,l),
(422,698,ls)
);
}
);
width = 1442;
}
);
note = uni1797;
unicode = 6039;
},
{
glyphname = uni1798;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,559,l),
(1020,559,l)
);
},
{
closed = 1;
nodes = (
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,889,l),
(943,1009,l),
(1026,1147,l),
(1086,1109,ls),
(1137,1077,o),
(1182,1077,qs),
(1259,1077,o),
(1296,1187,q),
(1250,1187,ls),
(1211,1187,o),
(1154,1223,qs),
(1024,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,652,l),
(422,652,l),
(422,889,l)
);
}
);
width = 1442;
}
);
note = uni1798;
unicode = 6040;
},
{
glyphname = uni1799;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,1072,qs),
(515,1035,o),
(515,1014,qs),
(515,982,o),
(492,969,qs),
(468,954,o),
(422,954,q),
(422,1163,l),
(468,1110,o)
);
},
{
closed = 1;
nodes = (
(299,0,o),
(675,0,qs),
(768,0,ls),
(991,0,o),
(1082,83,q),
(1172,0,o),
(1396,0,qs),
(1489,0,ls),
(1864,0,o),
(1864,233,qs),
(1864,889,l),
(1664,1009,l),
(1747,1147,l),
(1807,1109,ls),
(1858,1077,o),
(1903,1077,qs),
(1980,1077,o),
(2017,1187,q),
(1971,1187,ls),
(1932,1187,o),
(1875,1223,qs),
(1745,1303,l),
(1558,1025,l),
(1558,965,l),
(1741,862,l),
(1741,233,ls),
(1741,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,889,l),
(962,1009,l),
(1068,1146,l),
(1126,1109,ls),
(1176,1077,o),
(1222,1077,qs),
(1298,1077,o),
(1346,1187,q),
(1299,1187,ls),
(1260,1187,o),
(1203,1223,qs),
(1074,1303,l),
(857,1025,l),
(857,965,l),
(1020,862,l),
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,861,l),
(515,861,o),
(562,897,qs),
(608,933,o),
(608,1013,qs),
(608,1052,o),
(585,1098,qs),
(562,1145,o),
(515,1198,qs),
(422,1303,l),
(299,1303,l),
(299,233,ls)
);
}
);
width = 2164;
}
);
note = uni1799;
unicode = 6041;
},
{
glyphname = uni179A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,248,qs),
(229,283,o),
(229,303,qs),
(229,326,o),
(240,337,qs),
(252,349,o),
(276,349,qs),
(299,349,l),
(299,162,l),
(264,212,o)
);
},
{
closed = 1;
nodes = (
(222,1009,l),
(305,1147,l),
(365,1109,ls),
(416,1077,o),
(461,1077,qs),
(538,1077,o),
(575,1187,q),
(529,1187,ls),
(480,1187,o),
(423,1223,qs),
(293,1303,l),
(116,1025,l),
(116,965,l),
(299,862,l),
(299,442,l),
(276,442,ls),
(206,442,o),
(171,408,qs),
(136,372,o),
(136,303,qs),
(136,268,o),
(156,222,qs),
(177,176,o),
(217,117,qs),
(299,0,l),
(422,0,l),
(422,889,l)
);
}
);
width = 721;
}
);
note = uni179A;
unicode = 6042;
},
{
glyphname = uni179B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(1665,1009,l),
(1748,1147,l),
(1808,1109,ls),
(1859,1077,o),
(1904,1077,qs),
(1981,1077,o),
(2018,1187,q),
(1972,1187,ls),
(1933,1187,o),
(1876,1223,qs),
(1746,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,233,ls),
(1742,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,1103,l),
(721,1303,l),
(299,1104,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1065,l),
(681,1186,l),
(1020,1026,l),
(1020,233,ls),
(1020,0,o),
(1396,0,qs),
(1489,0,ls),
(1865,0,o),
(1865,233,qs),
(1865,889,l)
);
}
);
width = 2164;
}
);
note = uni179B;
unicode = 6043;
},
{
glyphname = uni179C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,248,qs),
(229,283,o),
(229,303,qs),
(229,326,o),
(240,337,qs),
(252,349,o),
(276,349,qs),
(299,349,l),
(299,162,l),
(264,212,o)
);
},
{
closed = 1;
nodes = (
(116,1025,l),
(116,965,l),
(299,862,l),
(299,442,l),
(276,442,ls),
(206,442,o),
(171,408,qs),
(136,372,o),
(136,303,qs),
(136,268,o),
(156,222,qs),
(177,176,o),
(217,117,qs),
(299,0,l),
(422,0,l),
(422,889,l),
(222,1009,l),
(305,1147,l),
(365,1109,ls),
(416,1077,o),
(461,1077,qs),
(504,1077,o),
(581,1164,o),
(581,1280,qs),
(581,1385,o),
(546,1437,qs),
(512,1489,o),
(442,1489,qs),
(395,1489,o),
(372,1466,qs),
(349,1443,o),
(349,1396,q),
(419,1396,o),
(453,1368,qs),
(488,1339,o),
(488,1280,qs),
(488,1246,o),
(480,1224,qs),
(475,1213,o),
(463,1213,qs),
(452,1213,o),
(433,1223,qs),
(293,1303,l)
);
}
);
width = 721;
}
);
note = uni179C;
unicode = 6044;
},
{
glyphname = uni179D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1138,1024,qs),
(1203,1024,o),
(1256,1165,q),
(1231,1155,ls),
(1201,1143,o),
(1174,1143,qs),
(1134,1143,o),
(1100,1170,qs),
(1043,1214,l),
(930,1303,l),
(903,1303,l),
(738,1159,l),
(540,1303,l),
(513,1303,l),
(186,1117,l),
(186,1065,l),
(299,976,ls),
(330,952,o),
(361,952,qs),
(363,952,ls),
(395,952,o),
(443,1005,q),
(321,1087,l),
(496,1191,l),
(716,1024,l),
(893,1180,l),
(1073,1024,o)
);
},
{
closed = 1;
nodes = (
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,0,l),
(422,0,l),
(422,21,l),
(547,192,ls),
(627,302,o),
(700,302,qs),
(768,302,o),
(800,344,o),
(800,364,qs),
(800,383,o),
(745,425,o),
(700,426,qs),
(584,426,o),
(501,316,qs),
(422,213,l),
(422,698,ls),
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,419,l),
(861,419,l),
(861,326,l),
(1021,326,l),
(1021,0,l),
(1143,0,l),
(1143,326,l),
(1210,326,ls),
(1257,326,o),
(1280,361,qs),
(1303,396,o),
(1303,465,q),
(1280,419,o),
(1210,419,qs),
(1143,419,l),
(1143,698,ls)
);
}
);
width = 1442;
}
);
note = uni179D;
unicode = 6045;
},
{
glyphname = uni179E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,559,l),
(1210,559,ls),
(1256,559,o),
(1280,594,qs),
(1303,628,o),
(1303,698,q),
(1280,652,o),
(1210,652,qs),
(1143,652,l),
(1143,889,l),
(943,1009,l),
(1026,1147,l),
(1086,1109,ls),
(1137,1077,o),
(1182,1077,qs),
(1259,1077,o),
(1296,1187,q),
(1250,1187,ls),
(1211,1187,o),
(1154,1223,qs),
(1024,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,652,l),
(833,652,l),
(833,559,l),
(1020,559,l),
(1020,233,ls)
);
}
);
width = 1442;
}
);
note = uni179E;
unicode = 6046;
},
{
glyphname = uni179F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(469,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(299,698,qs),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(550,442,o),
(469,442,qs),
(422,442,l),
(422,698,ls),
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,233,ls),
(1021,0,o),
(1396,0,qs),
(1489,0,ls),
(1865,0,o),
(1865,233,qs),
(1865,889,l),
(1665,1009,l),
(1748,1147,l),
(1808,1109,ls),
(1859,1077,o),
(1904,1077,qs),
(1981,1077,o),
(2018,1187,q),
(1972,1187,ls),
(1933,1187,o),
(1876,1223,qs),
(1746,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,233,ls),
(1742,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(679,931,l),
(467,1065,l),
(593,1178,l),
(784,1062,ls),
(814,1044,o),
(861,1044,qs),
(907,1044,o),
(960,1165,q),
(907,1165,ls),
(860,1165,o),
(819,1190,qs),
(634,1303,l),
(597,1303,l),
(356,1091,l),
(356,1024,l),
(517,920,l),
(299,881,o)
);
}
);
width = 2164;
}
);
note = uni179F;
unicode = 6047;
},
{
glyphname = uni17A0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,882,l),
(967,997,l),
(1240,1177,l),
(1742,1015,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1020,849,l),
(1020,233,ls)
);
}
);
width = 2164;
}
);
note = uni17A0;
unicode = 6048;
},
{
glyphname = uni17A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(975,-261,qs),
(975,-249,o),
(1021,-204,q),
(1020,-272,l),
(975,-272,o)
);
},
{
closed = 1;
nodes = (
(1070,625,qs),
(1070,597,o),
(998,597,qs),
(942,597,l),
(942,652,o),
(998,652,qs),
(1070,652,o)
);
},
{
closed = 1;
nodes = (
(976,978,qs),
(931,978,o),
(931,1024,q),
(838,1024,o),
(838,954,qs),
(838,884,o),
(976,884,qs),
(1143,884,o),
(1143,1031,qs),
(1143,1303,o),
(721,1303,qs),
(299,1303,o),
(299,1031,qs),
(299,815,ls),
(299,504,o),
(722,504,qs),
(819,504,l),
(819,280,ls),
(819,93,o),
(702,93,qs),
(585,93,o),
(585,193,qs),
(585,280,ls),
(585,420,o),
(479,420,qs),
(373,420,o),
(373,327,q),
(462,327,o),
(462,280,qs),
(462,193,ls),
(462,0,o),
(702,0,qs),
(942,0,o),
(942,281,qs),
(942,504,l),
(998,504,ls),
(1143,504,o),
(1143,626,qs),
(1143,746,o),
(998,746,qs),
(819,746,o),
(819,597,q),
(722,597,ls),
(422,597,o),
(422,815,qs),
(422,1031,ls),
(422,1210,o),
(721,1210,qs),
(1021,1210,o),
(1021,1031,qs),
(1021,978,o)
);
},
{
closed = 1;
nodes = (
(1665,1009,l),
(1748,1147,l),
(1808,1109,ls),
(1859,1077,o),
(1904,1077,qs),
(1981,1077,o),
(2018,1187,q),
(1972,1187,ls),
(1933,1187,o),
(1876,1223,qs),
(1746,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,-567,l),
(1443,-375,l),
(1143,-567,l),
(1143,-93,l),
(1020,-93,l),
(951,-161,ls),
(915,-195,o),
(899,-228,qs),
(881,-262,o),
(881,-294,qs),
(881,-328,o),
(916,-345,qs),
(949,-360,o),
(1014,-360,qs),
(1020,-360,l),
(1020,-673,l),
(1143,-673,l),
(1443,-481,l),
(1742,-673,l),
(1865,-673,l),
(1865,889,l)
);
}
);
width = 2164;
}
);
note = uni17A1;
unicode = 6049;
},
{
glyphname = uni17A2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,248,qs),
(229,283,o),
(229,303,qs),
(229,326,o),
(240,337,qs),
(252,349,o),
(276,349,qs),
(299,349,l),
(299,162,l),
(264,212,o)
);
},
{
closed = 1;
nodes = (
(968,248,qs),
(951,283,o),
(951,303,qs),
(951,326,o),
(962,337,qs),
(974,349,o),
(997,349,qs),
(1020,349,l),
(1020,162,l),
(985,212,o)
);
},
{
closed = 1;
nodes = (
(1020,442,l),
(997,442,ls),
(927,442,o),
(893,408,qs),
(857,372,o),
(857,303,qs),
(857,268,o),
(878,222,qs),
(898,176,o),
(938,117,qs),
(1020,0,l),
(1143,0,l),
(1143,889,l),
(943,1009,l),
(1026,1147,l),
(1086,1109,ls),
(1137,1077,o),
(1182,1077,qs),
(1259,1077,o),
(1296,1187,q),
(1250,1187,ls),
(1211,1187,o),
(1154,1223,qs),
(1024,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,652,l),
(422,652,l),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,442,l),
(276,442,ls),
(206,442,o),
(171,408,qs),
(136,372,o),
(136,303,qs),
(136,268,o),
(156,222,qs),
(177,176,o),
(217,117,qs),
(299,0,l),
(422,0,l),
(422,559,l),
(1020,559,l)
);
}
);
width = 1442;
}
);
note = uni17A2;
unicode = 6050;
},
{
glyphname = uni17A5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(469,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,0,l),
(1143,0,l),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(550,442,o),
(469,442,qs),
(422,442,l),
(422,698,ls)
);
},
{
closed = 1;
nodes = (
(298,1050,l),
(476,1183,l),
(692,1001,l),
(838,1001,ls),
(1143,1001,o),
(1143,1210,qs),
(1143,1443,o),
(997,1443,qs),
(884,1443,o),
(884,1370,q),
(1021,1370,o),
(1021,1210,qs),
(1021,1094,o),
(838,1094,qs),
(775,1094,l),
(525,1303,l),
(493,1303,l),
(186,1073,l),
(186,1019,l),
(328,890,l),
(422,936,l)
);
}
);
width = 1442;
}
);
note = uni17A5;
unicode = 6053;
},
{
glyphname = uni17A6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,-449,qs),
(538,-454,o),
(538,-466,qs),
(538,-487,o),
(524,-506,qs),
(510,-527,o),
(483,-546,qs),
(422,-586,l),
(422,-443,l),
(468,-443,ls),
(503,-443,o)
);
},
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(1143,0,l),
(1143,1103,l),
(721,1303,l),
(299,1104,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1065,l),
(681,1186,l),
(1020,1026,l),
(1020,0,l)
);
},
{
closed = 1;
nodes = (
(1665,1009,l),
(1748,1147,l),
(1808,1109,ls),
(1859,1077,o),
(1904,1077,qs),
(1947,1077,o),
(2024,1164,o),
(2024,1280,qs),
(2024,1385,o),
(1989,1437,qs),
(1955,1489,o),
(1885,1489,qs),
(1838,1489,o),
(1815,1466,qs),
(1792,1443,o),
(1792,1396,q),
(1862,1396,o),
(1896,1368,qs),
(1931,1339,o),
(1931,1280,qs),
(1931,1246,o),
(1923,1224,qs),
(1918,1213,o),
(1906,1213,qs),
(1895,1213,o),
(1876,1223,qs),
(1736,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,-465,ls),
(1742,-605,o),
(1489,-605,qs),
(1396,-605,ls),
(1143,-605,o),
(1143,-465,qs),
(1143,-222,l),
(721,-93,l),
(299,-222,l),
(299,-698,l),
(422,-698,l),
(557,-609,ls),
(594,-583,o),
(613,-547,qs),
(631,-512,o),
(631,-465,qs),
(631,-408,o),
(590,-379,qs),
(549,-350,o),
(468,-350,qs),
(422,-350,l),
(422,-274,l),
(655,-200,l),
(1020,-312,l),
(1020,-465,ls),
(1020,-698,o),
(1396,-698,qs),
(1489,-698,ls),
(1865,-698,o),
(1865,-465,qs),
(1865,889,l)
);
}
);
width = 2164;
}
);
note = uni17A6;
unicode = 6054;
},
{
glyphname = uni17A7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(498,884,qs),
(498,829,o),
(422,829,q),
(422,918,l),
(498,918,o)
);
},
{
closed = 1;
nodes = (
(1000,715,ls),
(1143,791,o),
(1143,931,qs),
(1143,1071,ls),
(1143,1303,o),
(791,1303,qs),
(651,1303,ls),
(299,1303,o),
(299,1071,qs),
(299,838,ls),
(299,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,q),
(422,1071,ls),
(422,1210,o),
(651,1210,qs),
(791,1210,ls),
(1020,1210,o),
(1020,1071,qs),
(1020,931,ls),
(1020,831,o),
(838,734,qs),
(299,448,l),
(299,277,ls),
(299,0,o),
(536,0,qs),
(564,0,l),
(1021,250,l),
(1021,117,ls),
(1021,50,o),
(884,50,q),
(884,-47,o),
(1001,-47,qs),
(1143,-47,o),
(1143,115,qs),
(1143,535,l),
(1021,535,l),
(1021,357,l),
(541,93,l),
(422,93,o),
(422,277,qs),
(422,408,l)
);
}
);
width = 1442;
}
);
note = uni17A7;
unicode = 6055;
},
{
glyphname = uni17A8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(498,884,qs),
(498,829,o),
(422,829,q),
(422,918,l),
(498,918,o)
);
},
{
closed = 1;
nodes = (
(1000,715,ls),
(1143,791,o),
(1143,931,qs),
(1143,1071,ls),
(1143,1303,o),
(791,1303,qs),
(651,1303,ls),
(299,1303,o),
(299,1071,qs),
(299,838,ls),
(299,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,q),
(422,1071,ls),
(422,1210,o),
(651,1210,qs),
(791,1210,ls),
(1020,1210,o),
(1020,1071,qs),
(1020,931,ls),
(1020,831,o),
(838,734,qs),
(299,448,l),
(299,277,ls),
(299,0,o),
(536,0,qs),
(564,0,l),
(1021,250,l),
(1021,117,ls),
(1021,50,o),
(884,50,q),
(884,-47,o),
(1001,-47,qs),
(1143,-47,o),
(1143,115,qs),
(1143,535,l),
(1021,535,l),
(1021,357,l),
(541,93,l),
(422,93,o),
(422,277,qs),
(422,408,l)
);
},
{
closed = 1;
nodes = (
(1138,1394,qs),
(1203,1394,o),
(1256,1535,q),
(1231,1525,ls),
(1201,1513,o),
(1174,1513,qs),
(1134,1513,o),
(1100,1540,qs),
(1043,1584,l),
(930,1673,l),
(903,1673,l),
(738,1529,l),
(540,1673,l),
(513,1673,l),
(186,1487,l),
(186,1435,l),
(299,1346,ls),
(330,1322,o),
(361,1322,qs),
(363,1322,ls),
(395,1322,o),
(443,1375,q),
(321,1457,l),
(496,1561,l),
(716,1394,l),
(893,1550,l),
(1073,1394,o)
);
}
);
width = 1442;
}
);
note = uni17A8;
unicode = 6056;
},
{
glyphname = uni17A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1169,-6,qs),
(1152,-47,o),
(1117,-47,q),
(1117,-70,o),
(1152,-93,o),
(1187,-93,qs),
(1233,-93,o),
(1256,-46,qs),
(1280,2,o),
(1280,97,qs),
(1280,535,l),
(1187,535,l),
(1187,99,ls),
(1187,35,o)
);
},
{
closed = 1;
nodes = (
(498,884,qs),
(498,829,o),
(422,829,q),
(422,918,l),
(498,918,o)
);
},
{
closed = 1;
nodes = (
(1000,715,ls),
(1143,791,o),
(1143,931,qs),
(1143,1071,ls),
(1143,1303,o),
(791,1303,qs),
(651,1303,ls),
(299,1303,o),
(299,1071,qs),
(299,838,ls),
(299,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,q),
(422,1071,ls),
(422,1210,o),
(651,1210,qs),
(791,1210,ls),
(1020,1210,o),
(1020,1071,qs),
(1020,931,ls),
(1020,831,o),
(838,734,qs),
(299,448,l),
(299,277,ls),
(299,0,o),
(536,0,qs),
(564,0,l),
(1021,250,l),
(1021,117,ls),
(1021,50,o),
(884,50,q),
(884,-47,o),
(1001,-47,qs),
(1123,-47,o),
(1123,115,qs),
(1123,535,l),
(1021,535,l),
(1021,357,l),
(541,93,l),
(422,93,o),
(422,277,qs),
(422,408,l)
);
}
);
width = 1442;
}
);
note = uni17A9;
unicode = 6057;
},
{
glyphname = uni17AA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(498,884,qs),
(498,829,o),
(422,829,q),
(422,918,l),
(498,918,o)
);
},
{
closed = 1;
nodes = (
(1000,715,ls),
(1143,791,o),
(1143,931,qs),
(1143,1071,ls),
(1143,1303,o),
(791,1303,qs),
(651,1303,ls),
(299,1303,o),
(299,1071,qs),
(299,838,ls),
(299,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,q),
(422,1071,ls),
(422,1210,o),
(651,1210,qs),
(791,1210,ls),
(1020,1210,o),
(1020,1071,qs),
(1020,931,ls),
(1020,831,o),
(838,734,qs),
(299,448,l),
(299,277,ls),
(299,0,o),
(536,0,qs),
(564,0,l),
(1021,250,l),
(1021,117,ls),
(1021,50,o),
(884,50,q),
(884,-47,o),
(1001,-47,qs),
(1143,-47,o),
(1143,115,qs),
(1143,535,l),
(1021,535,l),
(1021,357,l),
(541,93,l),
(422,93,o),
(422,277,qs),
(422,408,l)
);
},
{
closed = 1;
nodes = (
(298,1450,l),
(476,1583,l),
(692,1401,l),
(838,1401,ls),
(1143,1401,o),
(1143,1610,qs),
(1143,1843,o),
(997,1843,qs),
(884,1843,o),
(884,1770,q),
(1021,1770,o),
(1021,1610,qs),
(1021,1494,o),
(838,1494,qs),
(775,1494,l),
(525,1703,l),
(493,1703,l),
(186,1473,l),
(186,1419,l),
(328,1290,l),
(422,1336,l)
);
}
);
width = 1442;
}
);
note = uni17AA;
unicode = 6058;
},
{
glyphname = uni17AB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1027,-93,qs),
(931,-93,o),
(931,-186,q),
(1020,-186,o),
(1020,-233,qs),
(1020,-419,o),
(589,-419,qs),
(359,-419,o),
(186,-391,q),
(243,-451,o),
(343,-482,qs),
(444,-512,o),
(588,-512,qs),
(1143,-512,o),
(1143,-233,qs),
(1143,-93,o)
);
},
{
closed = 1;
nodes = (
(1143,233,qs),
(1143,889,l),
(943,1009,l),
(1026,1147,l),
(1086,1109,ls),
(1137,1077,o),
(1182,1077,qs),
(1259,1077,o),
(1296,1187,q),
(1250,1187,ls),
(1211,1187,o),
(1154,1223,qs),
(1024,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(1143,0,o)
);
}
);
width = 1442;
}
);
note = uni17AB;
unicode = 6059;
},
{
glyphname = uni17AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1143,-233,qs),
(1143,-93,o),
(1027,-93,qs),
(931,-93,o),
(931,-186,q),
(1020,-186,o),
(1020,-233,qs),
(1020,-419,o),
(589,-419,qs),
(359,-419,o),
(186,-391,q),
(243,-451,o),
(343,-482,qs),
(444,-512,o),
(588,-512,qs),
(873,-512,o),
(1012,-438,q),
(1040,-469,o),
(1094,-487,qs),
(1132,-500,o),
(1168,-500,qs),
(1203,-500,o),
(1236,-488,qs),
(1303,-465,o),
(1303,-420,q),
(1227,-420,o),
(1174,-392,qs),
(1135,-371,o),
(1114,-346,q),
(1143,-297,o)
);
},
{
closed = 1;
nodes = (
(1143,233,qs),
(1143,889,l),
(943,1009,l),
(1026,1147,l),
(1086,1109,ls),
(1137,1077,o),
(1182,1077,qs),
(1259,1077,o),
(1296,1187,q),
(1250,1187,ls),
(1211,1187,o),
(1154,1223,qs),
(1024,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(1143,0,o)
);
}
);
width = 1442;
}
);
note = uni17AC;
unicode = 6060;
},
{
glyphname = uni17AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,0,l),
(1143,0,l),
(1143,1052,l),
(888,1303,l),
(722,1140,l)
);
},
{
closed = 1;
nodes = (
(1027,-93,qs),
(931,-93,o),
(931,-186,q),
(1020,-186,o),
(1020,-233,qs),
(1020,-419,o),
(589,-419,qs),
(359,-419,o),
(186,-391,q),
(243,-451,o),
(343,-482,qs),
(444,-512,o),
(588,-512,qs),
(1143,-512,o),
(1143,-233,qs),
(1143,-93,o)
);
}
);
width = 1442;
}
);
note = uni17AD;
unicode = 6061;
},
{
glyphname = uni17AE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,0,l),
(1143,0,l),
(1143,1052,l),
(888,1303,l),
(722,1140,l)
);
},
{
closed = 1;
nodes = (
(1143,-233,qs),
(1143,-93,o),
(1027,-93,qs),
(931,-93,o),
(931,-186,q),
(1020,-186,o),
(1020,-233,qs),
(1020,-419,o),
(589,-419,qs),
(359,-419,o),
(186,-391,q),
(243,-451,o),
(343,-482,qs),
(444,-512,o),
(588,-512,qs),
(873,-512,o),
(1012,-438,q),
(1040,-469,o),
(1094,-487,qs),
(1132,-500,o),
(1168,-500,qs),
(1203,-500,o),
(1236,-488,qs),
(1303,-465,o),
(1303,-420,q),
(1227,-420,o),
(1174,-392,qs),
(1135,-371,o),
(1114,-346,q),
(1143,-297,o)
);
}
);
width = 1442;
}
);
note = uni17AE;
unicode = 6062;
},
{
glyphname = uni17AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,564,qs),
(229,570,o),
(229,582,qs),
(229,601,o),
(247,631,qs),
(264,661,o),
(299,699,q),
(299,559,l),
(264,559,o)
);
},
{
closed = 1;
nodes = (
(721,310,l),
(422,111,l),
(422,838,l),
(299,838,l),
(226,758,ls),
(182,707,o),
(158,664,qs),
(136,620,o),
(136,581,qs),
(136,523,o),
(177,494,qs),
(217,465,o),
(299,465,q),
(299,0,l),
(422,0,l),
(721,200,l),
(1020,0,l),
(1143,0,l),
(1143,1100,l),
(721,1303,l),
(422,1171,l),
(422,1304,ls),
(422,1489,o),
(302,1489,qs),
(186,1489,o),
(186,1393,q),
(299,1393,o),
(299,1304,qs),
(299,1164,ls),
(299,1038,o),
(375,1038,qs),
(422,1038,o),
(422,1065,q),
(684,1184,l),
(1020,1022,l),
(1020,111,l)
);
}
);
width = 1442;
}
);
note = uni17AF;
unicode = 6063;
},
{
glyphname = uni17B0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,-559,qs),
(299,-698,o),
(567,-698,qs),
(672,-698,o),
(724,-652,qs),
(776,-605,o),
(776,-511,q),
(852,-528,ls),
(903,-538,o),
(946,-538,qs),
(1143,-538,o),
(1143,-266,qs),
(1143,-47,l),
(1021,-47,l),
(811,-238,o),
(508,-401,o),
(354,-450,q),
(299,-471,o)
);
},
{
closed = 1;
nodes = (
(907,-436,qs),
(894,-436,o),
(879,-432,qs),
(720,-392,l),
(873,-304,o),
(1021,-165,q),
(1021,-266,ls),
(1021,-436,o)
);
},
{
closed = 1;
nodes = (
(422,-559,qs),
(422,-531,l),
(541,-494,o),
(666,-424,q),
(666,-508,ls),
(666,-557,o),
(641,-581,qs),
(616,-605,o),
(567,-605,qs),
(422,-605,o)
);
},
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,0,l),
(1143,0,l),
(1143,1052,l),
(888,1303,l),
(722,1140,l)
);
}
);
width = 1442;
}
);
note = uni17B0;
unicode = 6064;
},
{
glyphname = uni17B1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(670,1579,o),
(1046,1396,o),
(1122,1396,qs),
(1257,1396,o),
(1257,1489,q),
(1137,1489,o),
(711,1694,o),
(556,1694,q),
(186,1508,l),
(186,1415,l),
(307,1345,ls),
(345,1322,o),
(400,1322,q),
(437,1336,l),
(302,1461,l),
(539,1579,l)
);
},
{
closed = 1;
nodes = (
(498,884,qs),
(498,829,o),
(422,829,q),
(422,918,l),
(498,918,o)
);
},
{
closed = 1;
nodes = (
(1000,715,ls),
(1143,791,o),
(1143,931,qs),
(1143,1071,ls),
(1143,1303,o),
(791,1303,qs),
(651,1303,ls),
(299,1303,o),
(299,1071,qs),
(299,838,ls),
(299,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,q),
(422,1071,ls),
(422,1210,o),
(651,1210,qs),
(791,1210,ls),
(1020,1210,o),
(1020,1071,qs),
(1020,931,ls),
(1020,831,o),
(838,734,qs),
(299,448,l),
(299,277,ls),
(299,0,o),
(536,0,qs),
(564,0,l),
(1021,250,l),
(1021,117,ls),
(1021,50,o),
(884,50,q),
(884,-47,o),
(1001,-47,qs),
(1143,-47,o),
(1143,115,qs),
(1143,535,l),
(1021,535,l),
(1021,357,l),
(541,93,l),
(422,93,o),
(422,277,qs),
(422,408,l)
);
}
);
width = 1442;
}
);
note = uni17B1;
unicode = 6065;
},
{
glyphname = uni17B2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1021,279,o),
(1021,233,qs),
(1021,93,o),
(792,93,qs),
(651,93,ls),
(422,93,o),
(422,233,qs),
(422,1065,l),
(677,1183,l),
(1030,1018,l),
(1143,1103,l),
(721,1303,l),
(299,1115,l),
(299,233,ls),
(299,0,o),
(651,0,qs),
(792,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,395,o),
(1016,428,q),
(1057,461,ls),
(1143,526,o),
(1143,652,qs),
(1143,861,o),
(907,861,qs),
(686,861,o),
(686,706,qs),
(686,543,o),
(832,543,qs),
(887,543,o),
(887,632,q),
(809,632,o),
(809,706,qs),
(809,769,o),
(907,769,qs),
(1021,769,o),
(1021,652,qs),
(1021,551,o),
(951,494,qs),
(687,286,l),
(687,285,ls),
(687,217,o),
(766,217,q),
(910,336,l),
(919,336,ls),
(960,336,o)
);
}
);
width = 1442;
}
);
note = uni17B2;
unicode = 6066;
},
{
glyphname = uni17B3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(646,1535,q),
(879,1395,l),
(940,1365,o),
(952,1365,qs),
(964,1365,o),
(980,1369,qs),
(1038,1385,o),
(1072,1459,q),
(1031,1512,o),
(1031,1576,qs),
(1031,1619,o),
(1049,1666,q),
(1079,1769,o),
(1190,1769,qs),
(1238,1769,o),
(1238,1816,qs),
(1238,1863,o),
(1189,1863,qs),
(990,1862,o),
(936,1739,qs),
(901,1662,o),
(901,1602,qs),
(901,1567,o),
(914,1518,q),
(781,1597,ls),
(648,1676,o),
(522,1676,q),
(186,1489,l),
(186,1396,l),
(296,1327,ls),
(354,1290,o),
(398,1290,qs),
(424,1290,o),
(447,1302,q),
(292,1442,l),
(532,1576,l),
(562,1576,o)
);
},
{
closed = 1;
nodes = (
(498,884,qs),
(498,829,o),
(422,829,q),
(422,918,l),
(498,918,o)
);
},
{
closed = 1;
nodes = (
(1000,715,ls),
(1143,791,o),
(1143,931,qs),
(1143,1071,ls),
(1143,1303,o),
(791,1303,qs),
(651,1303,ls),
(299,1303,o),
(299,1071,qs),
(299,838,ls),
(299,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,q),
(422,1071,ls),
(422,1210,o),
(651,1210,qs),
(791,1210,ls),
(1020,1210,o),
(1020,1071,qs),
(1020,931,ls),
(1020,831,o),
(838,734,qs),
(299,448,l),
(299,277,ls),
(299,0,o),
(536,0,qs),
(564,0,l),
(1021,250,l),
(1021,117,ls),
(1021,50,o),
(884,50,q),
(884,-47,o),
(1001,-47,qs),
(1143,-47,o),
(1143,115,qs),
(1143,535,l),
(1021,535,l),
(1021,357,l),
(541,93,l),
(422,93,o),
(422,277,qs),
(422,408,l)
);
}
);
width = 1442;
}
);
note = uni17B3;
unicode = 6067;
},
{
glyphname = uni17A3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,248,qs),
(229,283,o),
(229,303,qs),
(229,326,o),
(240,337,qs),
(252,349,o),
(276,349,qs),
(299,349,l),
(299,162,l),
(264,212,o)
);
},
{
closed = 1;
nodes = (
(968,248,qs),
(951,283,o),
(951,303,qs),
(951,326,o),
(962,337,qs),
(974,349,o),
(997,349,qs),
(1020,349,l),
(1020,162,l),
(985,212,o)
);
},
{
closed = 1;
nodes = (
(1020,442,l),
(997,442,ls),
(927,442,o),
(893,408,qs),
(857,372,o),
(857,303,qs),
(857,268,o),
(878,222,qs),
(898,176,o),
(938,117,qs),
(1020,0,l),
(1143,0,l),
(1143,889,l),
(943,1009,l),
(1026,1147,l),
(1086,1109,ls),
(1137,1077,o),
(1182,1077,qs),
(1259,1077,o),
(1296,1187,q),
(1250,1187,ls),
(1211,1187,o),
(1154,1223,qs),
(1024,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,652,l),
(422,652,l),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,442,l),
(276,442,ls),
(206,442,o),
(171,408,qs),
(136,372,o),
(136,303,qs),
(136,268,o),
(156,222,qs),
(177,176,o),
(217,117,qs),
(299,0,l),
(422,0,l),
(422,559,l),
(1020,559,l)
);
}
);
width = 1442;
}
);
note = uni17A3;
unicode = 6051;
},
{
glyphname = uni17A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,248,qs),
(229,283,o),
(229,303,qs),
(229,326,o),
(240,337,qs),
(252,349,o),
(276,349,qs),
(299,349,l),
(299,162,l),
(264,212,o)
);
},
{
closed = 1;
nodes = (
(968,248,qs),
(951,283,o),
(951,303,qs),
(951,326,o),
(962,337,qs),
(974,349,o),
(997,349,qs),
(1020,349,l),
(1020,162,l),
(985,212,o)
);
},
{
closed = 1;
nodes = (
(1742,1014,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,652,l),
(422,652,l),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,442,l),
(276,442,ls),
(206,442,o),
(171,408,qs),
(136,372,o),
(136,303,qs),
(136,268,o),
(156,222,qs),
(177,176,o),
(217,117,qs),
(299,0,l),
(422,0,l),
(422,559,l),
(1020,559,l),
(1020,442,l),
(997,442,ls),
(927,442,o),
(893,408,qs),
(857,372,o),
(857,303,qs),
(857,268,o),
(878,222,qs),
(898,176,o),
(938,117,qs),
(1020,0,l),
(1143,0,l),
(1143,889,l),
(964,996,l),
(1240,1177,l)
);
}
);
width = 2164;
}
);
note = uni17A4;
unicode = 6052;
},
{
glyphname = uni17B4;
layers = (
{
layerId = m01;
width = 1204;
}
);
note = uni17B4;
unicode = 6068;
},
{
glyphname = uni17B5;
layers = (
{
layerId = m01;
width = 1204;
}
);
note = uni17B5;
unicode = 6069;
},
{
glyphname = uni17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-43,1183,l),
(300,1038,l),
(300,0,l),
(423,0,l),
(423,1103,l),
(-19,1303,l),
(-370,1136,l),
(-279,1075,l)
);
}
);
width = 721;
}
);
note = uni17B6;
unicode = 6070;
},
{
glyphname = uni17BF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-46,1731,qs),
(23,1708,o),
(70,1662,q),
(-256,1662,ls),
(-279,1662,o),
(-291,1674,qs),
(-302,1685,o),
(-302,1708,qs),
(-302,1731,o),
(-279,1743,qs),
(-256,1755,o),
(-209,1755,qs),
(-116,1755,o)
);
},
{
closed = 1;
nodes = (
(256,1662,q),
(256,1941,l),
(163,1941,l),
(163,1708,l),
(70,1778,l),
(70,1941,l),
(-23,1941,l),
(-23,1821,l),
(-70,1848,o),
(-209,1848,qs),
(-302,1848,o),
(-349,1813,qs),
(-395,1778,o),
(-395,1708,qs),
(-395,1638,o),
(-360,1603,qs),
(-326,1569,o),
(-256,1569,qs),
(163,1569,ls),
(221,1569,o),
(299,1476,o),
(299,1383,qs),
(299,-326,ls),
(299,-465,o),
(117,-465,qs),
(-116,-465,ls),
(-299,-465,o),
(-299,-326,qs),
(-299,-93,l),
(-422,-93,l),
(-422,-326,ls),
(-422,-559,o),
(-116,-559,qs),
(117,-559,ls),
(422,-559,o),
(422,-326,qs),
(422,1383,ls),
(422,1565,o)
);
}
);
width = 721;
}
);
note = uni17BF;
unicode = 6079;
},
{
glyphname = uni17C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,-465,o),
(117,-465,qs),
(-116,-465,ls),
(-299,-465,o),
(-299,-326,qs),
(-299,-93,l),
(-422,-93,l),
(-422,-326,ls),
(-422,-559,o),
(-116,-559,qs),
(117,-559,ls),
(422,-559,o),
(422,-326,qs),
(422,1374,ls),
(422,1624,o),
(163,1624,qs),
(-70,1624,ls),
(-206,1624,o),
(-206,1717,qs),
(-206,1800,ls),
(-206,1940,o),
(-324,1940,qs),
(-442,1940,o),
(-442,1847,q),
(-329,1847,o),
(-329,1800,qs),
(-329,1717,ls),
(-329,1530,o),
(-70,1530,qs),
(163,1530,ls),
(299,1530,o),
(299,1374,qs),
(299,-326,ls)
);
}
);
width = 721;
}
);
note = uni17C0;
unicode = 6080;
},
{
glyphname = uni17C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(558,1071,qs),
(605,1071,o),
(659,1194,q),
(609,1194,ls),
(559,1194,o),
(516,1221,qs),
(388,1303,l),
(299,1303,l),
(299,0,l),
(422,0,l),
(558,134,o),
(606,246,o),
(606,303,qs),
(606,372,o),
(565,407,qs),
(524,442,o),
(423,442,q),
(423,1128,l),
(461,1104,ls),
(513,1071,o)
);
},
{
closed = 1;
nodes = (
(495,337,qs),
(512,326,o),
(512,303,qs),
(512,263,o),
(495,223,qs),
(477,183,o),
(423,134,q),
(423,348,l),
(477,348,o)
);
}
);
width = 721;
}
);
note = uni17C1;
unicode = 6081;
},
{
glyphname = uni17C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,1629,qs),
(164,1629,o),
(164,1533,qs),
(164,1396,o),
(400,1396,qs),
(659,1396,o),
(659,1629,qs),
(659,1862,o),
(451,1862,qs),
(349,1862,o),
(349,1779,q),
(535,1779,o),
(535,1629,qs),
(535,1489,o),
(400,1489,qs),
(298,1489,o),
(298,1513,qs),
(298,1536,o),
(349,1536,q),
(349,1629,o)
);
},
{
closed = 1;
nodes = (
(558,1071,qs),
(605,1071,o),
(659,1194,q),
(609,1194,ls),
(559,1194,o),
(516,1221,qs),
(388,1303,l),
(299,1303,l),
(299,0,l),
(422,0,l),
(558,134,o),
(606,246,o),
(606,303,qs),
(606,372,o),
(565,407,qs),
(524,442,o),
(423,442,q),
(423,1128,l),
(461,1104,ls),
(513,1071,o)
);
},
{
closed = 1;
nodes = (
(495,337,qs),
(512,326,o),
(512,303,qs),
(512,263,o),
(495,223,qs),
(477,183,o),
(423,134,q),
(423,348,l),
(477,348,o)
);
}
);
width = 721;
}
);
note = uni17C2;
unicode = 6082;
},
{
glyphname = uni17C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,1489,qs),
(227,1396,o),
(422,1396,qs),
(659,1396,o),
(659,1583,qs),
(659,1769,o),
(422,1769,qs),
(360,1769,l),
(360,1936,o),
(236,1936,qs),
(143,1936,o),
(143,1843,q),
(227,1843,o),
(227,1769,qs),
(227,1676,o),
(360,1676,qs),
(422,1676,ls),
(525,1676,o),
(525,1583,qs),
(525,1489,o),
(422,1489,qs),
(360,1489,o),
(360,1583,q),
(227,1583,o)
);
},
{
closed = 1;
nodes = (
(558,1071,qs),
(605,1071,o),
(659,1194,q),
(609,1194,ls),
(559,1194,o),
(516,1221,qs),
(388,1303,l),
(299,1303,l),
(299,0,l),
(422,0,l),
(558,134,o),
(606,246,o),
(606,303,qs),
(606,372,o),
(565,407,qs),
(524,442,o),
(423,442,q),
(423,1128,l),
(461,1104,ls),
(513,1071,o)
);
},
{
closed = 1;
nodes = (
(495,337,qs),
(512,326,o),
(512,303,qs),
(512,263,o),
(495,223,qs),
(477,183,o),
(423,134,q),
(423,348,l),
(477,348,o)
);
}
);
width = 721;
}
);
note = uni17C3;
unicode = 6083;
},
{
glyphname = uni17C4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-43,1183,l),
(300,1038,l),
(300,0,l),
(423,0,l),
(423,1103,l),
(-19,1303,l),
(-370,1136,l),
(-279,1075,l)
);
}
);
width = 721;
}
);
note = uni17C4;
unicode = 6084;
},
{
glyphname = uni17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,1164,qs),
(459,1536,ls),
(459,1722,o),
(342,1722,qs),
(224,1722,o),
(224,1639,q),
(337,1639,o),
(337,1536,qs),
(337,1105,l),
(413,1024,l),
(459,1117,o)
);
},
{
closed = 1;
nodes = (
(-43,1183,l),
(300,1038,l),
(300,0,l),
(423,0,l),
(423,1103,l),
(-19,1303,l),
(-370,1136,l),
(-279,1075,l)
);
}
);
width = 721;
}
);
note = uni17C5;
unicode = 6085;
},
{
glyphname = uni17C7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(419,1164,qs),
(442,1187,o),
(488,1187,qs),
(535,1187,o),
(558,1164,qs),
(582,1140,o),
(582,1094,qs),
(582,1047,o),
(558,1024,qs),
(535,1001,o),
(488,1001,qs),
(442,1001,o),
(419,1024,qs),
(395,1047,o),
(395,1094,qs),
(395,1140,o)
);
},
{
closed = 1;
nodes = (
(646,1251,qs),
(594,1303,o),
(488,1303,qs),
(383,1303,o),
(331,1251,qs),
(279,1199,o),
(279,1094,qs),
(279,989,o),
(331,936,qs),
(383,884,o),
(488,884,qs),
(594,884,o),
(646,936,qs),
(698,989,o),
(698,1094,qs),
(698,1199,o)
);
},
{
closed = 1;
nodes = (
(419,279,qs),
(442,303,o),
(488,303,qs),
(535,303,o),
(558,279,qs),
(582,256,o),
(582,209,qs),
(582,163,o),
(558,140,qs),
(535,116,o),
(488,116,qs),
(442,116,o),
(419,140,qs),
(395,163,o),
(395,209,qs),
(395,256,o)
);
},
{
closed = 1;
nodes = (
(646,367,qs),
(594,419,o),
(488,419,qs),
(383,419,o),
(331,367,qs),
(279,315,o),
(279,209,qs),
(279,104,o),
(331,52,qs),
(383,0,o),
(488,0,qs),
(594,0,o),
(646,52,qs),
(698,104,o),
(698,209,qs),
(698,315,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 0 0 2 7 0 2 105 0 7 0 5 4 7 5 105 0 1 1 3 97 0 3 3 17 77 0 4 4 6 97 0 6 6 19 6 78 38 38 38 38 38 38 38 35 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 977;
}
);
note = uni17C7;
unicode = 6087;
},
{
glyphname = uni17C8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(529,29,qs),
(582,58,o),
(605,115,q),
(558,88,o),
(535,88,qs),
(512,88,o),
(512,115,qs),
(512,174,o),
(483,203,qs),
(454,233,o),
(395,233,qs),
(337,233,o),
(308,204,qs),
(279,175,o),
(279,116,qs),
(279,58,o),
(308,29,qs),
(337,0,o),
(395,0,qs),
(476,0,o)
);
},
{
closed = 1;
nodes = (
(529,958,qs),
(582,987,o),
(605,1044,q),
(558,1017,o),
(535,1017,qs),
(512,1017,o),
(512,1044,qs),
(512,1103,o),
(483,1132,qs),
(454,1162,o),
(395,1162,qs),
(337,1162,o),
(308,1133,qs),
(279,1104,o),
(279,1045,qs),
(279,987,o),
(308,958,qs),
(337,929,o),
(395,929,qs),
(476,929,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
36 1 5 4 16 1 2 1 2 76 0 5 4 3 4 5 3 128 0 2 1 0 1 2 0 128 0 4 7 1 3 1 4 3 105 0 1 1 0 97 6 1 0 0 19 0 78 21 20 1 0 35 33 29 27 20 39 21 39 15 13 9 7 0 19 1 19 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 791;
}
);
note = uni17C8;
unicode = 6088;
},
{
glyphname = uni17DC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1130,359,qs),
(1130,513,o),
(914,658,o),
(675,658,qs),
(576,658,o),
(455,684,o),
(368,764,o),
(368,842,qs),
(368,1075,o),
(675,1075,qs),
(983,1075,o),
(983,910,qs),
(983,851,o),
(922,851,qs),
(862,851,o),
(862,793,qs),
(862,734,o),
(922,734,qs),
(1001,734,o),
(1079,763,o),
(1130,840,o),
(1130,910,qs),
(1130,1210,o),
(675,1210,qs),
(220,1210,o),
(220,842,qs),
(220,688,o),
(436,543,o),
(675,543,qs),
(775,543,o),
(895,518,o),
(983,438,o),
(983,360,qs),
(983,260,o),
(817,126,o),
(675,126,qs),
(533,126,o),
(368,222,o),
(368,292,qs),
(368,350,o),
(429,350,qs),
(458,350,o),
(489,380,o),
(489,408,qs),
(489,468,o),
(429,468,qs),
(360,468,o),
(281,439,o),
(220,363,o),
(220,293,qs),
(220,0,o),
(1130,0,o)
);
}
);
width = 1350;
}
);
note = uni17DC;
unicode = 6108;
},
{
glyphname = uni1789.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,0,l),
(1143,0,l),
(1143,1025,l),
(1413,1178,l),
(1742,984,l),
(1742,0,l),
(1865,0,l),
(1865,1054,l),
(1443,1303,l),
(1093,1102,l),
(888,1303,l)
);
}
);
width = 2164;
}
);
note = uni1789.a;
},
{
glyphname = uni17BF.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-46,1731,qs),
(23,1708,o),
(70,1662,q),
(-256,1662,ls),
(-279,1662,o),
(-291,1674,qs),
(-302,1685,o),
(-302,1708,qs),
(-302,1731,o),
(-279,1743,qs),
(-256,1755,o),
(-209,1755,qs),
(-116,1755,o)
);
},
{
closed = 1;
nodes = (
(256,1662,q),
(256,1941,l),
(163,1941,l),
(163,1708,l),
(70,1778,l),
(70,1941,l),
(-23,1941,l),
(-23,1821,l),
(-70,1848,o),
(-209,1848,qs),
(-302,1848,o),
(-349,1813,qs),
(-395,1778,o),
(-395,1708,qs),
(-395,1638,o),
(-360,1603,qs),
(-326,1569,o),
(-256,1569,qs),
(163,1569,ls),
(221,1569,o),
(299,1476,o),
(299,1383,qs),
(299,-887,ls),
(299,-1026,o),
(117,-1026,qs),
(-116,-1026,ls),
(-299,-1026,o),
(-299,-887,qs),
(-299,-724,l),
(-422,-724,l),
(-422,-887,ls),
(-422,-1120,o),
(-116,-1120,qs),
(117,-1120,ls),
(422,-1120,o),
(422,-887,qs),
(422,1383,ls),
(422,1565,o)
);
}
);
width = 721;
}
);
note = uni17BF.b;
},
{
glyphname = uni17C0.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,-1026,o),
(117,-1026,qs),
(-116,-1026,ls),
(-299,-1026,o),
(-299,-887,qs),
(-299,-724,l),
(-422,-724,l),
(-422,-887,ls),
(-422,-1120,o),
(-116,-1120,qs),
(117,-1120,ls),
(422,-1120,o),
(422,-887,qs),
(422,1374,ls),
(422,1624,o),
(163,1624,qs),
(-70,1624,ls),
(-206,1624,o),
(-206,1717,qs),
(-206,1800,ls),
(-206,1940,o),
(-324,1940,qs),
(-442,1940,o),
(-442,1847,q),
(-329,1847,o),
(-329,1800,qs),
(-329,1717,ls),
(-329,1530,o),
(-70,1530,qs),
(163,1530,ls),
(299,1530,o),
(299,1374,qs),
(299,-887,ls)
);
}
);
width = 721;
}
);
note = uni17C0.b;
},
{
glyphname = uni17B6.space;
layers = (
{
layerId = m01;
width = 721;
}
);
note = uni17B6.space;
},
{
glyphname = uni1780_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(329,972,o),
(361,972,qs),
(363,972,ls),
(395,972,o),
(419,1025,q),
(344,1083,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1339,1303,l)
);
},
{
closed = 1;
nodes = (
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,0,l),
(1143,0,l),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,0,l),
(422,0,l),
(422,698,ls)
);
}
);
width = 1442;
}
);
note = uni1780_17B6;
},
{
glyphname = uni1780_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,0,l),
(1143,0,l),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,0,l),
(422,0,l),
(422,698,ls)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1134,l),
(1339,1303,l),
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(329,972,o),
(361,972,qs),
(363,972,ls),
(395,972,o),
(419,1025,q),
(344,1083,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1780_17C5;
},
{
glyphname = uni1781_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(498,884,qs),
(498,829,o),
(422,829,q),
(422,918,l),
(498,918,o)
);
},
{
closed = 1;
nodes = (
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1423,1303,l),
(1126,1162,l),
(1066,1303,o),
(791,1303,qs),
(651,1303,ls),
(299,1303,o),
(299,1071,qs),
(299,838,ls),
(299,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,q),
(422,1071,ls),
(422,1210,o),
(651,1210,qs),
(791,1210,ls),
(1020,1210,o),
(1020,1071,qs),
(1020,931,ls),
(1020,831,o),
(838,734,qs),
(299,448,l),
(299,233,ls),
(299,0,o),
(651,0,qs),
(791,0,ls),
(1143,0,o),
(1143,372,qs),
(1143,555,l),
(1020,478,l),
(1020,372,ls),
(1020,93,o),
(791,93,qs),
(651,93,ls),
(422,93,o),
(422,233,qs),
(422,408,l),
(1000,715,ls),
(1143,791,o),
(1143,931,qs),
(1143,1068,l),
(1399,1183,l)
);
}
);
width = 1442;
}
);
note = uni1781_17B6;
},
{
glyphname = uni1781_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(498,884,qs),
(498,829,o),
(422,829,q),
(422,918,l),
(498,918,o)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1140,l),
(1423,1303,l),
(1126,1162,l),
(1066,1303,o),
(791,1303,qs),
(651,1303,ls),
(299,1303,o),
(299,1071,qs),
(299,838,ls),
(299,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,q),
(422,1071,ls),
(422,1210,o),
(651,1210,qs),
(791,1210,ls),
(1020,1210,o),
(1020,1071,qs),
(1020,931,ls),
(1020,831,o),
(838,734,qs),
(299,448,l),
(299,233,ls),
(299,0,o),
(651,0,qs),
(791,0,ls),
(1143,0,o),
(1143,372,qs),
(1143,555,l),
(1020,478,l),
(1020,372,ls),
(1020,93,o),
(791,93,qs),
(651,93,ls),
(422,93,o),
(422,233,qs),
(422,408,l),
(1000,715,ls),
(1143,791,o),
(1143,931,qs),
(1143,1068,l),
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1781_17C5;
},
{
glyphname = uni1782_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,0,l),
(1143,0,l),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,0,l),
(422,0,l),
(422,21,l),
(547,192,ls),
(627,302,o),
(700,302,qs),
(768,302,o),
(800,344,o),
(800,364,qs),
(800,383,o),
(745,425,o),
(700,426,qs),
(584,426,o),
(501,316,qs),
(422,213,l),
(422,698,ls)
);
},
{
closed = 1;
nodes = (
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(329,972,o),
(361,972,qs),
(363,972,ls),
(395,972,o),
(419,1025,q),
(344,1083,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1339,1303,l)
);
}
);
width = 1442;
}
);
note = uni1782_17B6;
},
{
glyphname = uni1782_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,0,l),
(1143,0,l),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,0,l),
(422,0,l),
(422,21,l),
(547,192,ls),
(627,302,o),
(700,302,qs),
(768,302,o),
(800,344,o),
(800,364,qs),
(800,383,o),
(745,425,o),
(700,426,qs),
(584,426,o),
(501,316,qs),
(422,213,l),
(422,698,ls)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1134,l),
(1339,1303,l),
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(329,972,o),
(361,972,qs),
(363,972,ls),
(395,972,o),
(419,1025,q),
(344,1083,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1782_17C5;
},
{
glyphname = uni1783_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,969,qs),
(206,982,o),
(206,1014,qs),
(206,1035,o),
(229,1072,qs),
(253,1110,o),
(299,1163,q),
(299,954,l),
(253,954,o)
);
},
{
closed = 1;
nodes = (
(1685,996,l),
(1961,1177,l),
(2463,1014,l),
(2463,0,l),
(2586,0,l),
(2586,1103,l),
(1985,1303,l),
(1558,1025,l),
(1558,965,l),
(1741,862,l),
(1741,233,ls),
(1741,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,889,l),
(943,1009,l),
(1026,1147,l),
(1086,1109,ls),
(1137,1077,o),
(1182,1077,qs),
(1259,1077,o),
(1296,1187,q),
(1250,1187,ls),
(1211,1187,o),
(1154,1223,qs),
(1024,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,1303,l),
(299,1303,l),
(206,1198,ls),
(160,1145,o),
(136,1098,qs),
(113,1052,o),
(113,1013,qs),
(113,933,o),
(160,897,qs),
(206,861,o),
(299,861,q),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(991,0,o),
(1082,83,q),
(1172,0,o),
(1396,0,qs),
(1489,0,ls),
(1864,0,o),
(1864,233,qs),
(1864,889,l)
);
}
);
width = 2164;
}
);
note = uni1783_17B6;
},
{
glyphname = uni1783_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,969,qs),
(206,982,o),
(206,1014,qs),
(206,1035,o),
(229,1072,qs),
(253,1110,o),
(299,1163,q),
(299,954,l),
(253,954,o)
);
},
{
closed = 1;
nodes = (
(2626,1164,qs),
(2626,1536,ls),
(2626,1722,o),
(2509,1722,qs),
(2391,1722,o),
(2391,1639,q),
(2504,1639,o),
(2504,1536,qs),
(2504,1130,l),
(1985,1303,l),
(1558,1025,l),
(1558,965,l),
(1741,862,l),
(1741,233,ls),
(1741,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,889,l),
(943,1009,l),
(1026,1147,l),
(1086,1109,ls),
(1137,1077,o),
(1182,1077,qs),
(1259,1077,o),
(1296,1187,q),
(1250,1187,ls),
(1211,1187,o),
(1154,1223,qs),
(1024,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,1303,l),
(299,1303,l),
(206,1198,ls),
(160,1145,o),
(136,1098,qs),
(113,1052,o),
(113,1013,qs),
(113,933,o),
(160,897,qs),
(206,861,o),
(299,861,q),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(991,0,o),
(1082,83,q),
(1172,0,o),
(1396,0,qs),
(1489,0,ls),
(1864,0,o),
(1864,233,qs),
(1864,889,l),
(1685,996,l),
(1961,1177,l),
(2463,1014,l),
(2463,0,l),
(2586,0,l),
(2586,1036,l),
(2626,1120,o)
);
}
);
width = 2164;
}
);
note = uni1783_17C5;
},
{
glyphname = uni1784_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(804,1184,qs),
(819,1197,o),
(848,1198,qs),
(877,1197,o),
(891,1184,qs),
(904,1171,o),
(904,1147,qs),
(904,1121,o),
(891,1108,qs),
(877,1094,o),
(848,1094,qs),
(819,1094,o),
(804,1108,qs),
(790,1121,o),
(790,1145,qs),
(790,1170,o)
);
},
{
closed = 1;
nodes = (
(247,564,qs),
(229,570,o),
(229,582,qs),
(229,601,o),
(247,631,qs),
(264,661,o),
(299,699,q),
(299,559,l),
(264,559,o)
);
},
{
closed = 1;
nodes = (
(1019,1143,qs),
(1019,1223,o),
(976,1263,qs),
(933,1303,o),
(848,1303,qs),
(762,1303,o),
(719,1263,qs),
(675,1223,o),
(675,1146,qs),
(675,1112,o),
(690,1094,q),
(558,1094,ls),
(423,1094,o),
(423,1164,qs),
(423,1304,ls),
(423,1489,o),
(285,1489,qs),
(186,1489,o),
(186,1403,q),
(299,1403,o),
(299,1304,qs),
(299,1164,ls),
(299,1001,o),
(558,1001,qs),
(807,1001,l),
(1020,911,l),
(1020,111,l),
(721,310,l),
(422,111,l),
(422,838,l),
(299,838,l),
(226,758,ls),
(182,707,o),
(158,664,qs),
(136,620,o),
(136,581,qs),
(136,523,o),
(177,494,qs),
(217,465,o),
(299,465,q),
(299,0,l),
(422,0,l),
(721,200,l),
(1020,0,l),
(1143,0,l),
(1143,966,l),
(964,1039,l),
(1019,1093,o)
);
},
{
closed = 1;
nodes = (
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1423,1303,l),
(1072,1136,l),
(1113,1055,l)
);
}
);
width = 1442;
}
);
note = uni1784_17B6;
},
{
glyphname = uni1784_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(804,1184,qs),
(819,1197,o),
(848,1198,qs),
(877,1197,o),
(891,1184,qs),
(904,1171,o),
(904,1147,qs),
(904,1121,o),
(891,1108,qs),
(877,1094,o),
(848,1094,qs),
(819,1094,o),
(804,1108,qs),
(790,1121,o),
(790,1145,qs),
(790,1170,o)
);
},
{
closed = 1;
nodes = (
(247,564,qs),
(229,570,o),
(229,582,qs),
(229,601,o),
(247,631,qs),
(264,661,o),
(299,699,q),
(299,559,l),
(264,559,o)
);
},
{
closed = 1;
nodes = (
(1019,1143,qs),
(1019,1223,o),
(976,1263,qs),
(933,1303,o),
(848,1303,qs),
(762,1303,o),
(719,1263,qs),
(675,1223,o),
(675,1146,qs),
(675,1112,o),
(690,1094,q),
(558,1094,ls),
(423,1094,o),
(423,1164,qs),
(423,1304,ls),
(423,1489,o),
(285,1489,qs),
(186,1489,o),
(186,1403,q),
(299,1403,o),
(299,1304,qs),
(299,1164,ls),
(299,1001,o),
(558,1001,qs),
(807,1001,l),
(1020,911,l),
(1020,111,l),
(721,310,l),
(422,111,l),
(422,838,l),
(299,838,l),
(226,758,ls),
(182,707,o),
(158,664,qs),
(136,620,o),
(136,581,qs),
(136,523,o),
(177,494,qs),
(217,465,o),
(299,465,q),
(299,0,l),
(422,0,l),
(721,200,l),
(1020,0,l),
(1143,0,l),
(1143,966,l),
(964,1039,l),
(1019,1093,o)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1140,l),
(1423,1303,l),
(1072,1136,l),
(1113,1055,l),
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1784_17C5;
},
{
glyphname = uni1785_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,587,q),
(951,594,o),
(951,605,qs),
(951,626,o),
(968,654,qs),
(986,683,o),
(1021,722,q),
(1021,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1339,1303,l),
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1065,l),
(299,936,l),
(299,233,ls),
(299,0,o),
(651,0,qs),
(791,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,861,l),
(1021,861,l),
(948,781,ls),
(902,732,o),
(880,687,qs),
(858,642,o),
(858,604,qs),
(858,546,o),
(899,518,qs),
(940,489,o),
(1021,489,q),
(1021,233,ls),
(1021,93,o),
(791,93,qs),
(651,93,ls),
(422,93,o),
(422,233,qs),
(422,975,l),
(331,1076,l),
(571,1189,l)
);
}
);
width = 1442;
}
);
note = uni1785_17B6;
},
{
glyphname = uni1785_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,587,q),
(951,594,o),
(951,605,qs),
(951,626,o),
(968,654,qs),
(986,683,o),
(1021,722,q),
(1021,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1134,l),
(1339,1303,l),
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1065,l),
(299,936,l),
(299,233,ls),
(299,0,o),
(651,0,qs),
(791,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,861,l),
(1021,861,l),
(948,781,ls),
(902,732,o),
(880,687,qs),
(858,642,o),
(858,604,qs),
(858,546,o),
(899,518,qs),
(940,489,o),
(1021,489,q),
(1021,233,ls),
(1021,93,o),
(791,93,qs),
(651,93,ls),
(422,93,o),
(422,233,qs),
(422,975,l),
(331,1076,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1785_17C5;
},
{
glyphname = uni1786_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,308,qs),
(255,326,o),
(299,326,q),
(299,128,l),
(255,149,o),
(243,181,qs),
(232,213,o),
(232,256,qs),
(232,290,o)
);
},
{
closed = 1;
nodes = (
(968,587,qs),
(950,594,o),
(950,605,qs),
(950,626,o),
(968,654,qs),
(986,683,o),
(1020,722,q),
(1020,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(331,1076,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1339,1303,l),
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1065,l),
(299,936,l),
(299,419,l),
(209,419,o),
(174,378,qs),
(139,337,o),
(139,256,qs),
(139,194,o),
(157,146,qs),
(174,99,o),
(237,50,qs),
(299,0,l),
(422,0,l),
(422,326,l),
(511,326,ls),
(581,326,o),
(616,299,qs),
(651,272,o),
(651,217,qs),
(651,0,o),
(884,0,qs),
(1143,0,o),
(1143,233,qs),
(1143,861,l),
(1020,861,l),
(947,781,ls),
(902,732,o),
(880,687,qs),
(857,642,o),
(857,604,qs),
(857,546,o),
(898,518,qs),
(939,489,o),
(1020,489,q),
(1020,233,ls),
(1020,93,o),
(884,93,qs),
(744,93,o),
(744,217,qs),
(744,318,o),
(686,369,qs),
(628,419,o),
(511,419,qs),
(422,419,l),
(422,975,l)
);
}
);
width = 1442;
}
);
note = uni1786_17B6;
},
{
glyphname = uni1786_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,308,qs),
(255,326,o),
(299,326,q),
(299,128,l),
(255,149,o),
(243,181,qs),
(232,213,o),
(232,256,qs),
(232,290,o)
);
},
{
closed = 1;
nodes = (
(968,587,qs),
(950,594,o),
(950,605,qs),
(950,626,o),
(968,654,qs),
(986,683,o),
(1020,722,q),
(1020,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1134,l),
(1339,1303,l),
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1065,l),
(299,936,l),
(299,419,l),
(209,419,o),
(174,378,qs),
(139,337,o),
(139,256,qs),
(139,194,o),
(157,146,qs),
(174,99,o),
(237,50,qs),
(299,0,l),
(422,0,l),
(422,326,l),
(511,326,ls),
(581,326,o),
(616,299,qs),
(651,272,o),
(651,217,qs),
(651,0,o),
(884,0,qs),
(1143,0,o),
(1143,233,qs),
(1143,861,l),
(1020,861,l),
(947,781,ls),
(902,732,o),
(880,687,qs),
(857,642,o),
(857,604,qs),
(857,546,o),
(898,518,qs),
(939,489,o),
(1020,489,q),
(1020,233,ls),
(1020,93,o),
(884,93,qs),
(744,93,o),
(744,217,qs),
(744,318,o),
(686,369,qs),
(628,419,o),
(511,419,qs),
(422,419,l),
(422,975,l),
(331,1076,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1786_17C5;
},
{
glyphname = uni1787_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1423,1303,l),
(1140,1168,l),
(1143,1188,o),
(1143,1210,qs),
(1143,1443,o),
(997,1443,qs),
(884,1443,o),
(884,1370,q),
(1021,1370,o),
(1021,1210,qs),
(1021,1094,o),
(838,1094,qs),
(775,1094,l),
(525,1303,l),
(493,1303,l),
(186,1073,l),
(186,1019,l),
(299,916,l),
(299,0,l),
(422,0,l),
(721,200,l),
(1021,0,l),
(1143,0,l),
(1143,861,l),
(1021,861,l),
(1021,111,l),
(721,310,l),
(422,111,l),
(422,936,l),
(298,1050,l),
(476,1183,l),
(692,1001,l),
(838,1001,ls),
(1028,1001,o),
(1099,1082,q),
(1113,1055,l)
);
}
);
width = 1442;
}
);
note = uni1787_17B6;
},
{
glyphname = uni1787_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1140,l),
(1423,1303,l),
(1140,1168,l),
(1143,1188,o),
(1143,1210,qs),
(1143,1443,o),
(997,1443,qs),
(884,1443,o),
(884,1370,q),
(1021,1370,o),
(1021,1210,qs),
(1021,1094,o),
(838,1094,qs),
(775,1094,l),
(525,1303,l),
(493,1303,l),
(186,1073,l),
(186,1019,l),
(299,916,l),
(299,0,l),
(422,0,l),
(721,200,l),
(1021,0,l),
(1143,0,l),
(1143,861,l),
(1021,861,l),
(1021,111,l),
(721,310,l),
(422,111,l),
(422,936,l),
(298,1050,l),
(476,1183,l),
(692,1001,l),
(838,1001,ls),
(1028,1001,o),
(1099,1082,q),
(1113,1055,l),
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1787_17C5;
},
{
glyphname = uni1788_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(2408,996,l),
(2684,1177,l),
(3186,1014,l),
(3186,0,l),
(3309,0,l),
(3309,1103,l),
(2708,1303,l),
(2281,1025,l),
(2281,965,l),
(2464,862,l),
(2464,233,ls),
(2464,93,o),
(2211,93,qs),
(2118,93,ls),
(1865,93,o),
(1865,233,qs),
(1865,889,l),
(1665,1009,l),
(1748,1147,l),
(1808,1109,ls),
(1859,1077,o),
(1904,1077,qs),
(1981,1077,o),
(2018,1187,q),
(1972,1187,ls),
(1933,1187,o),
(1876,1223,qs),
(1746,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,233,ls),
(1742,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,1103,l),
(721,1303,l),
(299,1104,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1065,l),
(681,1186,l),
(1020,1026,l),
(1020,233,ls),
(1020,0,o),
(1396,0,qs),
(1489,0,ls),
(1713,0,o),
(1803,83,q),
(1894,0,o),
(2118,0,qs),
(2211,0,ls),
(2587,0,o),
(2587,233,qs),
(2587,889,l)
);
}
);
width = 2885;
}
);
note = uni1788_17B6;
},
{
glyphname = uni1788_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(3349,1164,qs),
(3349,1536,ls),
(3349,1722,o),
(3232,1722,qs),
(3114,1722,o),
(3114,1639,q),
(3227,1639,o),
(3227,1536,qs),
(3227,1130,l),
(2708,1303,l),
(2281,1025,l),
(2281,965,l),
(2464,862,l),
(2464,233,ls),
(2464,93,o),
(2211,93,qs),
(2118,93,ls),
(1865,93,o),
(1865,233,qs),
(1865,889,l),
(1665,1009,l),
(1748,1147,l),
(1808,1109,ls),
(1859,1077,o),
(1904,1077,qs),
(1981,1077,o),
(2018,1187,q),
(1972,1187,ls),
(1933,1187,o),
(1876,1223,qs),
(1746,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,233,ls),
(1742,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,1103,l),
(721,1303,l),
(299,1104,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1065,l),
(681,1186,l),
(1020,1026,l),
(1020,233,ls),
(1020,0,o),
(1396,0,qs),
(1489,0,ls),
(1713,0,o),
(1803,83,q),
(1894,0,o),
(2118,0,qs),
(2211,0,ls),
(2587,0,o),
(2587,233,qs),
(2587,889,l),
(2408,996,l),
(2684,1177,l),
(3186,1014,l),
(3186,0,l),
(3309,0,l),
(3309,1036,l),
(3349,1120,o)
);
}
);
width = 2885;
}
);
note = uni1788_17C5;
},
{
glyphname = uni1789_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(1703,-93,qs),
(1606,-93,o),
(1606,-176,q),
(1743,-176,o),
(1743,-279,qs),
(1743,-465,o),
(1552,-465,qs),
(1354,-465,o),
(1217,-349,qs),
(973,-140,o),
(611,-140,qs),
(515,-140,o),
(432,-160,qs),
(279,-197,o),
(279,-270,qs),
(279,-317,l),
(348,-275,o),
(432,-253,qs),
(515,-233,o),
(611,-233,qs),
(871,-233,o),
(1093,-419,qs),
(1261,-559,o),
(1552,-559,qs),
(1865,-559,o),
(1865,-279,qs),
(1865,-93,o)
);
},
{
closed = 1;
nodes = (
(2464,1038,l),
(2464,0,l),
(2587,0,l),
(2587,1103,l),
(2145,1303,l),
(1802,1091,l),
(1443,1303,l),
(1093,1102,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,0,l),
(1143,0,l),
(1143,1025,l),
(1413,1178,l),
(1742,984,l),
(1742,0,l),
(1865,0,l),
(1865,1015,l),
(2121,1183,l)
);
}
);
width = 2164;
}
);
note = uni1789_17B6;
},
{
glyphname = uni1789_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(1703,-93,qs),
(1606,-93,o),
(1606,-176,q),
(1743,-176,o),
(1743,-279,qs),
(1743,-465,o),
(1552,-465,qs),
(1354,-465,o),
(1217,-349,qs),
(973,-140,o),
(611,-140,qs),
(515,-140,o),
(432,-160,qs),
(279,-197,o),
(279,-270,qs),
(279,-317,l),
(348,-275,o),
(432,-253,qs),
(515,-233,o),
(611,-233,qs),
(871,-233,o),
(1093,-419,qs),
(1261,-559,o),
(1552,-559,qs),
(1865,-559,o),
(1865,-279,qs),
(1865,-93,o)
);
},
{
closed = 1;
nodes = (
(2626,1164,qs),
(2626,1536,ls),
(2626,1722,o),
(2509,1722,qs),
(2391,1722,o),
(2391,1639,q),
(2504,1639,o),
(2504,1536,qs),
(2504,1141,l),
(2145,1303,l),
(1802,1091,l),
(1443,1303,l),
(1093,1102,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,0,l),
(1143,0,l),
(1143,1025,l),
(1413,1178,l),
(1742,984,l),
(1742,0,l),
(1865,0,l),
(1865,1015,l),
(2121,1183,l),
(2464,1038,l),
(2464,0,l),
(2587,0,l),
(2587,1038,l),
(2626,1121,o)
);
}
);
width = 2164;
}
);
note = uni1789_17C5;
},
{
glyphname = uni178A_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,861,l),
(299,861,l),
(299,0,l),
(422,0,l),
(721,200,l),
(1020,0,l),
(1143,0,l),
(1143,861,l),
(1020,861,l),
(1020,111,l),
(721,310,l),
(422,111,l)
);
},
{
closed = 1;
nodes = (
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1423,1303,l),
(1136,1167,l),
(1143,1192,o),
(1143,1221,qs),
(1143,1443,o),
(977,1443,qs),
(931,1443,o),
(907,1420,qs),
(884,1396,o),
(884,1350,q),
(1020,1350,o),
(1020,1221,qs),
(1020,1094,o),
(768,1094,qs),
(675,1094,ls),
(422,1094,o),
(422,1164,qs),
(422,1210,o),
(456,1210,qs),
(489,1210,o),
(489,1164,q),
(536,1164,o),
(558,1181,qs),
(582,1199,o),
(582,1233,qs),
(582,1303,o),
(454,1303,qs),
(299,1303,o),
(299,1164,qs),
(299,1001,o),
(675,1001,qs),
(768,1001,ls),
(1008,1001,o),
(1095,1091,q),
(1113,1055,l)
);
}
);
width = 1442;
}
);
note = uni178A_17B6;
},
{
glyphname = uni178A_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,861,l),
(299,861,l),
(299,0,l),
(422,0,l),
(721,200,l),
(1020,0,l),
(1143,0,l),
(1143,861,l),
(1020,861,l),
(1020,111,l),
(721,310,l),
(422,111,l)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1140,l),
(1423,1303,l),
(1136,1167,l),
(1143,1192,o),
(1143,1221,qs),
(1143,1443,o),
(977,1443,qs),
(931,1443,o),
(907,1420,qs),
(884,1396,o),
(884,1350,q),
(1020,1350,o),
(1020,1221,qs),
(1020,1094,o),
(768,1094,qs),
(675,1094,ls),
(422,1094,o),
(422,1164,qs),
(422,1210,o),
(456,1210,qs),
(489,1210,o),
(489,1164,q),
(536,1164,o),
(558,1181,qs),
(582,1199,o),
(582,1233,qs),
(582,1303,o),
(454,1303,qs),
(299,1303,o),
(299,1164,qs),
(299,1001,o),
(675,1001,qs),
(768,1001,ls),
(1008,1001,o),
(1095,1091,q),
(1113,1055,l),
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni178A_17C5;
},
{
glyphname = uni178B_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,969,qs),
(206,982,o),
(206,1014,qs),
(206,1035,o),
(229,1072,qs),
(253,1110,o),
(299,1163,q),
(299,954,l),
(253,954,o)
);
},
{
closed = 1;
nodes = (
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1423,1303,l),
(1301,1245,l),
(1302,1262,o),
(1302,1280,qs),
(1302,1385,o),
(1267,1437,qs),
(1233,1489,o),
(1163,1489,qs),
(1116,1489,o),
(1093,1466,qs),
(1070,1443,o),
(1070,1396,q),
(1140,1396,o),
(1174,1368,qs),
(1209,1339,o),
(1209,1280,qs),
(1209,1246,o),
(1201,1224,qs),
(1196,1213,o),
(1184,1213,qs),
(1173,1213,o),
(1154,1223,qs),
(1014,1303,l),
(837,1025,l),
(837,965,l),
(1021,862,l),
(1021,233,ls),
(1021,93,o),
(791,93,qs),
(651,93,ls),
(422,93,o),
(422,233,qs),
(422,1303,l),
(299,1303,l),
(206,1198,ls),
(160,1145,o),
(136,1098,qs),
(113,1052,o),
(113,1013,qs),
(113,933,o),
(160,897,qs),
(206,861,o),
(299,861,q),
(299,233,ls),
(299,0,o),
(651,0,qs),
(791,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,889,l),
(943,1009,l),
(1026,1147,l),
(1086,1109,ls),
(1137,1077,o),
(1182,1077,qs),
(1223,1077,o),
(1260,1117,q),
(1399,1183,l)
);
}
);
width = 1442;
}
);
note = uni178B_17B6;
},
{
glyphname = uni178B_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,969,qs),
(206,982,o),
(206,1014,qs),
(206,1035,o),
(229,1072,qs),
(253,1110,o),
(299,1163,q),
(299,954,l),
(253,954,o)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1140,l),
(1423,1303,l),
(1301,1245,l),
(1302,1262,o),
(1302,1280,qs),
(1302,1385,o),
(1267,1437,qs),
(1233,1489,o),
(1163,1489,qs),
(1116,1489,o),
(1093,1466,qs),
(1070,1443,o),
(1070,1396,q),
(1140,1396,o),
(1174,1368,qs),
(1209,1339,o),
(1209,1280,qs),
(1209,1246,o),
(1201,1224,qs),
(1196,1213,o),
(1184,1213,qs),
(1173,1213,o),
(1154,1223,qs),
(1014,1303,l),
(837,1025,l),
(837,965,l),
(1021,862,l),
(1021,233,ls),
(1021,93,o),
(791,93,qs),
(651,93,ls),
(422,93,o),
(422,233,qs),
(422,1303,l),
(299,1303,l),
(206,1198,ls),
(160,1145,o),
(136,1098,qs),
(113,1052,o),
(113,1013,qs),
(113,933,o),
(160,897,qs),
(206,861,o),
(299,861,q),
(299,233,ls),
(299,0,o),
(651,0,qs),
(791,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,889,l),
(943,1009,l),
(1026,1147,l),
(1086,1109,ls),
(1137,1077,o),
(1182,1077,qs),
(1223,1077,o),
(1260,1117,q),
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni178B_17C5;
},
{
glyphname = uni178C_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(468,884,qs),
(468,839,o),
(422,839,q),
(422,908,l),
(468,908,o)
);
},
{
closed = 1;
nodes = (
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1423,1303,l),
(1063,1131,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,838,ls),
(299,745,o),
(422,745,qs),
(562,745,o),
(562,884,qs),
(562,1001,o),
(422,1001,q),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,925,ls),
(1020,808,o),
(949,772,qs),
(299,441,l),
(299,278,ls),
(299,0,o),
(536,0,qs),
(564,0,l),
(1021,250,l),
(1021,117,ls),
(1021,50,o),
(884,50,q),
(884,-47,o),
(1001,-47,qs),
(1143,-47,o),
(1143,115,qs),
(1143,535,l),
(1021,535,l),
(1021,357,l),
(541,94,l),
(422,94,o),
(422,277,qs),
(422,399,l),
(1018,702,ls),
(1143,766,o),
(1143,925,qs),
(1143,1052,l),
(1132,1063,l),
(1399,1183,l)
);
}
);
width = 1442;
}
);
note = uni178C_17B6;
},
{
glyphname = uni178C_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(468,884,qs),
(468,839,o),
(422,839,q),
(422,908,l),
(468,908,o)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1140,l),
(1423,1303,l),
(1063,1131,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,838,ls),
(299,745,o),
(422,745,qs),
(562,745,o),
(562,884,qs),
(562,1001,o),
(422,1001,q),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,925,ls),
(1020,808,o),
(949,772,qs),
(299,441,l),
(299,278,ls),
(299,0,o),
(536,0,qs),
(564,0,l),
(1021,250,l),
(1021,117,ls),
(1021,50,o),
(884,50,q),
(884,-47,o),
(1001,-47,qs),
(1143,-47,o),
(1143,115,qs),
(1143,535,l),
(1021,535,l),
(1021,357,l),
(541,94,l),
(422,94,o),
(422,277,qs),
(422,399,l),
(1018,702,ls),
(1143,766,o),
(1143,925,qs),
(1143,1052,l),
(1132,1063,l),
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni178C_17C5;
},
{
glyphname = uni178D_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(976,149,o),
(964,181,qs),
(953,213,o),
(953,256,qs),
(953,290,o),
(964,308,qs),
(976,326,o),
(1020,326,q),
(1020,128,l)
);
},
{
closed = 1;
nodes = (
(1686,996,l),
(1962,1177,l),
(2464,1014,l),
(2464,0,l),
(2587,0,l),
(2587,1103,l),
(1986,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,233,ls),
(1742,93,o),
(1605,93,qs),
(1465,93,o),
(1465,217,qs),
(1465,318,o),
(1407,369,qs),
(1349,419,o),
(1232,419,qs),
(1143,419,l),
(1143,1052,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,419,l),
(930,419,o),
(895,378,qs),
(860,337,o),
(860,256,qs),
(860,194,o),
(878,146,qs),
(895,99,o),
(958,50,qs),
(1020,0,l),
(1143,0,l),
(1143,326,l),
(1232,326,ls),
(1302,326,o),
(1337,299,qs),
(1372,272,o),
(1372,217,qs),
(1372,0,o),
(1605,0,qs),
(1865,0,o),
(1865,233,qs),
(1865,889,l)
);
}
);
width = 2164;
}
);
note = uni178D_17B6;
},
{
glyphname = uni178D_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(976,149,o),
(964,181,qs),
(953,213,o),
(953,256,qs),
(953,290,o),
(964,308,qs),
(976,326,o),
(1020,326,q),
(1020,128,l)
);
},
{
closed = 1;
nodes = (
(2626,1164,qs),
(2626,1536,ls),
(2626,1722,o),
(2509,1722,qs),
(2391,1722,o),
(2391,1639,q),
(2504,1639,o),
(2504,1536,qs),
(2504,1131,l),
(1986,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,233,ls),
(1742,93,o),
(1605,93,qs),
(1465,93,o),
(1465,217,qs),
(1465,318,o),
(1407,369,qs),
(1349,419,o),
(1232,419,qs),
(1143,419,l),
(1143,1052,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,419,l),
(930,419,o),
(895,378,qs),
(860,337,o),
(860,256,qs),
(860,194,o),
(878,146,qs),
(895,99,o),
(958,50,qs),
(1020,0,l),
(1143,0,l),
(1143,326,l),
(1232,326,ls),
(1302,326,o),
(1337,299,qs),
(1372,272,o),
(1372,217,qs),
(1372,0,o),
(1605,0,qs),
(1865,0,o),
(1865,233,qs),
(1865,889,l),
(1686,996,l),
(1962,1177,l),
(2464,1014,l),
(2464,0,l),
(2587,0,l),
(2587,1038,l),
(2626,1121,o)
);
}
);
width = 2164;
}
);
note = uni178D_17C5;
},
{
glyphname = uni178E_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(3185,1038,l),
(3185,0,l),
(3308,0,l),
(3308,1103,l),
(2866,1303,l),
(2516,1136,l),
(2164,1303,l),
(1742,1104,l),
(1742,111,l),
(1443,310,l),
(1143,111,l),
(1143,1103,l),
(721,1303,l),
(299,1104,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1065,l),
(681,1186,l),
(1020,1026,l),
(1020,0,l),
(1143,0,l),
(1443,200,l),
(1742,0,l),
(1865,0,l),
(1865,1065,l),
(2124,1186,l),
(2463,1026,l),
(2463,0,l),
(2586,0,l),
(2586,1068,l),
(2842,1183,l)
);
}
);
width = 2885;
}
);
note = uni178E_17B6;
},
{
glyphname = uni178E_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(3349,1164,qs),
(3349,1536,ls),
(3349,1722,o),
(3232,1722,qs),
(3114,1722,o),
(3114,1639,q),
(3227,1639,o),
(3227,1536,qs),
(3227,1140,l),
(2866,1303,l),
(2516,1136,l),
(2164,1303,l),
(1742,1104,l),
(1742,111,l),
(1443,310,l),
(1143,111,l),
(1143,1103,l),
(721,1303,l),
(299,1104,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1065,l),
(681,1186,l),
(1020,1026,l),
(1020,0,l),
(1143,0,l),
(1443,200,l),
(1742,0,l),
(1865,0,l),
(1865,1065,l),
(2124,1186,l),
(2463,1026,l),
(2463,0,l),
(2586,0,l),
(2586,1068,l),
(2842,1183,l),
(3185,1038,l),
(3185,0,l),
(3308,0,l),
(3308,1034,l),
(3349,1120,o)
);
}
);
width = 2885;
}
);
note = uni178E_17C5;
},
{
glyphname = uni178F_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(469,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,0,l),
(1143,0,l),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(550,442,o),
(469,442,qs),
(422,442,l),
(422,698,ls)
);
},
{
closed = 1;
nodes = (
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(329,972,o),
(361,972,qs),
(363,972,ls),
(395,972,o),
(419,1025,q),
(344,1083,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1339,1303,l)
);
}
);
width = 1442;
}
);
note = uni178F_17B6;
},
{
glyphname = uni178F_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(469,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,0,l),
(1143,0,l),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(550,442,o),
(469,442,qs),
(422,442,l),
(422,698,ls)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1134,l),
(1339,1303,l),
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(329,972,o),
(361,972,qs),
(363,972,ls),
(395,972,o),
(419,1025,q),
(344,1083,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni178F_17C5;
},
{
glyphname = uni1790_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,587,q),
(951,594,o),
(951,605,qs),
(951,626,o),
(968,654,qs),
(986,683,o),
(1021,722,q),
(1021,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1423,1303,l),
(1140,1168,l),
(1143,1188,o),
(1143,1210,qs),
(1143,1443,o),
(997,1443,qs),
(884,1443,o),
(884,1370,q),
(1021,1370,o),
(1021,1210,qs),
(1021,1094,o),
(838,1094,qs),
(775,1094,l),
(525,1303,l),
(493,1303,l),
(186,1073,l),
(186,1019,l),
(299,916,l),
(299,233,ls),
(299,0,o),
(651,0,qs),
(791,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,861,l),
(1021,861,l),
(948,781,ls),
(902,732,o),
(880,687,qs),
(858,642,o),
(858,604,qs),
(858,546,o),
(899,518,qs),
(940,489,o),
(1021,489,q),
(1021,233,ls),
(1021,93,o),
(791,93,qs),
(651,93,ls),
(422,93,o),
(422,233,qs),
(422,936,l),
(298,1050,l),
(476,1183,l),
(692,1001,l),
(838,1001,ls),
(1028,1001,o),
(1099,1082,q),
(1113,1055,l)
);
}
);
width = 1442;
}
);
note = uni1790_17B6;
},
{
glyphname = uni1790_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,587,q),
(951,594,o),
(951,605,qs),
(951,626,o),
(968,654,qs),
(986,683,o),
(1021,722,q),
(1021,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1140,l),
(1423,1303,l),
(1140,1168,l),
(1143,1188,o),
(1143,1210,qs),
(1143,1443,o),
(997,1443,qs),
(884,1443,o),
(884,1370,q),
(1021,1370,o),
(1021,1210,qs),
(1021,1094,o),
(838,1094,qs),
(775,1094,l),
(525,1303,l),
(493,1303,l),
(186,1073,l),
(186,1019,l),
(299,916,l),
(299,233,ls),
(299,0,o),
(651,0,qs),
(791,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,861,l),
(1021,861,l),
(948,781,ls),
(902,732,o),
(880,687,qs),
(858,642,o),
(858,604,qs),
(858,546,o),
(899,518,qs),
(940,489,o),
(1021,489,q),
(1021,233,ls),
(1021,93,o),
(791,93,qs),
(651,93,ls),
(422,93,o),
(422,233,qs),
(422,936,l),
(298,1050,l),
(476,1183,l),
(692,1001,l),
(838,1001,ls),
(1028,1001,o),
(1099,1082,q),
(1113,1055,l),
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1790_17C5;
},
{
glyphname = uni1791_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1070,625,qs),
(1070,597,o),
(998,597,qs),
(942,597,l),
(942,652,o),
(998,652,qs),
(1070,652,o)
);
},
{
closed = 1;
nodes = (
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1423,1303,l),
(1114,1156,l),
(1031,1303,o),
(721,1303,qs),
(299,1303,o),
(299,1031,qs),
(299,815,ls),
(299,504,o),
(722,504,qs),
(819,504,l),
(819,280,ls),
(819,93,o),
(702,93,qs),
(585,93,o),
(585,193,qs),
(585,280,ls),
(585,420,o),
(479,420,qs),
(373,420,o),
(373,327,q),
(462,327,o),
(462,280,qs),
(462,193,ls),
(462,0,o),
(702,0,qs),
(942,0,o),
(942,281,qs),
(942,504,l),
(998,504,ls),
(1143,504,o),
(1143,626,qs),
(1143,746,o),
(998,746,qs),
(819,746,o),
(819,597,q),
(722,597,ls),
(422,597,o),
(422,815,qs),
(422,1031,ls),
(422,1210,o),
(721,1210,qs),
(1021,1210,o),
(1021,1031,qs),
(1021,978,o),
(976,978,qs),
(931,978,o),
(931,1024,q),
(838,1024,o),
(838,954,qs),
(838,884,o),
(976,884,qs),
(1143,884,o),
(1143,1031,qs),
(1143,1050,o),
(1141,1068,q),
(1399,1183,l)
);
}
);
width = 1442;
}
);
note = uni1791_17B6;
},
{
glyphname = uni1791_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1070,625,qs),
(1070,597,o),
(998,597,qs),
(942,597,l),
(942,652,o),
(998,652,qs),
(1070,652,o)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1140,l),
(1423,1303,l),
(1114,1156,l),
(1031,1303,o),
(721,1303,qs),
(299,1303,o),
(299,1031,qs),
(299,815,ls),
(299,504,o),
(722,504,qs),
(819,504,l),
(819,280,ls),
(819,93,o),
(702,93,qs),
(585,93,o),
(585,193,qs),
(585,280,ls),
(585,420,o),
(479,420,qs),
(373,420,o),
(373,327,q),
(462,327,o),
(462,280,qs),
(462,193,ls),
(462,0,o),
(702,0,qs),
(942,0,o),
(942,281,qs),
(942,504,l),
(998,504,ls),
(1143,504,o),
(1143,626,qs),
(1143,746,o),
(998,746,qs),
(819,746,o),
(819,597,q),
(722,597,ls),
(422,597,o),
(422,815,qs),
(422,1031,ls),
(422,1210,o),
(721,1210,qs),
(1021,1210,o),
(1021,1031,qs),
(1021,978,o),
(976,978,qs),
(931,978,o),
(931,1024,q),
(838,1024,o),
(838,954,qs),
(838,884,o),
(976,884,qs),
(1143,884,o),
(1143,1031,qs),
(1143,1050,o),
(1141,1068,q),
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1791_17C5;
},
{
glyphname = uni1792_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,587,q),
(951,594,o),
(951,605,qs),
(951,626,o),
(968,654,qs),
(986,683,o),
(1021,722,q),
(1021,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(331,1076,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1339,1303,l),
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1065,l),
(299,936,l),
(299,0,l),
(422,0,l),
(721,200,l),
(1020,0,l),
(1143,0,l),
(1143,861,l),
(1021,861,l),
(948,781,ls),
(902,732,o),
(880,687,qs),
(858,642,o),
(858,604,qs),
(858,546,o),
(899,518,qs),
(940,489,o),
(1020,489,q),
(1020,111,l),
(721,310,l),
(422,111,l),
(422,975,l)
);
}
);
width = 1442;
}
);
note = uni1792_17B6;
},
{
glyphname = uni1792_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,587,q),
(951,594,o),
(951,605,qs),
(951,626,o),
(968,654,qs),
(986,683,o),
(1021,722,q),
(1021,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1134,l),
(1339,1303,l),
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1065,l),
(299,936,l),
(299,0,l),
(422,0,l),
(721,200,l),
(1020,0,l),
(1143,0,l),
(1143,861,l),
(1021,861,l),
(948,781,ls),
(902,732,o),
(880,687,qs),
(858,642,o),
(858,604,qs),
(858,546,o),
(899,518,qs),
(940,489,o),
(1020,489,q),
(1020,111,l),
(721,310,l),
(422,111,l),
(422,975,l),
(331,1076,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1792_17C5;
},
{
glyphname = uni1793_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,921,qs),
(951,954,o),
(1020,954,q),
(1020,861,l),
(951,861,o)
);
},
{
closed = 1;
nodes = (
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1423,1303,l),
(1127,1162,l),
(1061,1303,o),
(721,1303,qs),
(299,1303,o),
(299,1086,qs),
(299,869,ls),
(299,726,o),
(487,663,qs),
(1021,485,l),
(1021,217,ls),
(1021,93,o),
(887,93,qs),
(779,93,o),
(693,209,qs),
(606,326,o),
(422,326,q),
(422,543,l),
(299,543,l),
(299,0,l),
(422,0,l),
(422,233,l),
(556,233,o),
(618,145,qs),
(721,0,o),
(887,0,qs),
(1143,0,o),
(1143,217,qs),
(1143,536,l),
(512,752,ls),
(422,783,o),
(422,869,qs),
(422,1086,ls),
(422,1210,o),
(721,1210,qs),
(1020,1210,o),
(1020,1086,qs),
(1020,1047,l),
(858,1047,o),
(858,921,qs),
(858,768,o),
(1020,768,qs),
(1143,768,o),
(1143,860,qs),
(1143,1068,l),
(1399,1183,l)
);
}
);
width = 1442;
}
);
note = uni1793_17B6;
},
{
glyphname = uni1793_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,921,qs),
(951,954,o),
(1020,954,q),
(1020,861,l),
(951,861,o)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1140,l),
(1423,1303,l),
(1127,1162,l),
(1061,1303,o),
(721,1303,qs),
(299,1303,o),
(299,1086,qs),
(299,869,ls),
(299,726,o),
(487,663,qs),
(1021,485,l),
(1021,217,ls),
(1021,93,o),
(887,93,qs),
(779,93,o),
(693,209,qs),
(606,326,o),
(422,326,q),
(422,543,l),
(299,543,l),
(299,0,l),
(422,0,l),
(422,233,l),
(556,233,o),
(618,145,qs),
(721,0,o),
(887,0,qs),
(1143,0,o),
(1143,217,qs),
(1143,536,l),
(512,752,ls),
(422,783,o),
(422,869,qs),
(422,1086,ls),
(422,1210,o),
(721,1210,qs),
(1020,1210,o),
(1020,1086,qs),
(1020,1047,l),
(858,1047,o),
(858,921,qs),
(858,768,o),
(1020,768,qs),
(1143,768,o),
(1143,860,qs),
(1143,1068,l),
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1793_17C5;
},
{
glyphname = uni1794_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,0,o),
(675,0,qs),
(768,0,ls),
(928,0,o),
(1020,43,q),
(1020,-96,l),
(1143,-96,l),
(1143,861,l),
(1020,861,l),
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,975,l),
(331,1076,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1339,1303,l),
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1065,l),
(299,936,l),
(299,233,ls)
);
}
);
width = 1442;
}
);
note = uni1794_17B6;
},
{
glyphname = uni1794_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1134,l),
(1339,1303,l),
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1065,l),
(299,936,l),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(928,0,o),
(1020,43,q),
(1020,-96,l),
(1143,-96,l),
(1143,861,l),
(1020,861,l),
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,975,l),
(331,1076,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1794_17C5;
},
{
glyphname = uni1795_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,587,q),
(951,594,o),
(951,605,qs),
(951,626,o),
(968,654,qs),
(986,683,o),
(1021,722,q),
(1021,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1423,1303,l),
(1140,1168,l),
(1143,1188,o),
(1143,1210,qs),
(1143,1443,o),
(997,1443,qs),
(884,1443,o),
(884,1370,q),
(1021,1370,o),
(1021,1210,qs),
(1021,1094,o),
(838,1094,qs),
(775,1094,l),
(525,1303,l),
(493,1303,l),
(186,1073,l),
(186,1019,l),
(299,916,l),
(299,0,l),
(422,0,l),
(721,200,l),
(1020,0,l),
(1143,0,l),
(1143,861,l),
(1021,861,l),
(948,781,ls),
(902,732,o),
(880,687,qs),
(858,642,o),
(858,604,qs),
(858,546,o),
(899,518,qs),
(940,489,o),
(1020,489,q),
(1020,111,l),
(721,310,l),
(422,111,l),
(422,936,l),
(298,1050,l),
(476,1183,l),
(692,1001,l),
(838,1001,ls),
(1028,1001,o),
(1099,1082,q),
(1113,1055,l)
);
}
);
width = 1442;
}
);
note = uni1795_17B6;
},
{
glyphname = uni1795_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,587,q),
(951,594,o),
(951,605,qs),
(951,626,o),
(968,654,qs),
(986,683,o),
(1021,722,q),
(1021,582,l),
(986,582,o)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1140,l),
(1423,1303,l),
(1140,1168,l),
(1143,1188,o),
(1143,1210,qs),
(1143,1443,o),
(997,1443,qs),
(884,1443,o),
(884,1370,q),
(1021,1370,o),
(1021,1210,qs),
(1021,1094,o),
(838,1094,qs),
(775,1094,l),
(525,1303,l),
(493,1303,l),
(186,1073,l),
(186,1019,l),
(299,916,l),
(299,0,l),
(422,0,l),
(721,200,l),
(1020,0,l),
(1143,0,l),
(1143,861,l),
(1021,861,l),
(948,781,ls),
(902,732,o),
(880,687,qs),
(858,642,o),
(858,604,qs),
(858,546,o),
(899,518,qs),
(940,489,o),
(1020,489,q),
(1020,111,l),
(721,310,l),
(422,111,l),
(422,936,l),
(298,1050,l),
(476,1183,l),
(692,1001,l),
(838,1001,ls),
(1028,1001,o),
(1099,1082,q),
(1113,1055,l),
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1795_17C5;
},
{
glyphname = uni1796_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1423,1303,l),
(1076,1118,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,0,l),
(1143,0,l),
(1143,1051,l),
(1399,1183,l)
);
}
);
width = 1442;
}
);
note = uni1796_17B6;
},
{
glyphname = uni1796_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1140,l),
(1423,1303,l),
(1076,1118,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,0,l),
(1143,0,l),
(1143,1051,l),
(1399,1183,l),
(1742,1038,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1796_17C5;
},
{
glyphname = uni1797_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,253,qs),
(206,279,o),
(206,303,qs),
(206,326,o),
(217,337,qs),
(229,349,o),
(253,349,qs),
(299,349,l),
(299,145,l),
(255,197,ls),
(230,227,o)
);
},
{
closed = 1;
nodes = (
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,0,l),
(1143,0,l),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,442,l),
(253,442,ls),
(183,442,o),
(148,408,qs),
(113,372,o),
(113,303,qs),
(113,263,o),
(132,220,qs),
(150,177,o),
(187,133,qs),
(299,0,l),
(422,0,l),
(422,698,ls)
);
},
{
closed = 1;
nodes = (
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(329,972,o),
(361,972,qs),
(363,972,ls),
(395,972,o),
(419,1025,q),
(344,1083,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1339,1303,l)
);
}
);
width = 1442;
}
);
note = uni1797_17B6;
},
{
glyphname = uni1797_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,253,qs),
(206,279,o),
(206,303,qs),
(206,326,o),
(217,337,qs),
(229,349,o),
(253,349,qs),
(299,349,l),
(299,145,l),
(255,197,ls),
(230,227,o)
);
},
{
closed = 1;
nodes = (
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,0,l),
(1143,0,l),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(651,931,ls),
(299,931,o),
(299,698,qs),
(299,442,l),
(253,442,ls),
(183,442,o),
(148,408,qs),
(113,372,o),
(113,303,qs),
(113,263,o),
(132,220,qs),
(150,177,o),
(187,133,qs),
(299,0,l),
(422,0,l),
(422,698,ls)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1134,l),
(1339,1303,l),
(1067,1129,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(329,972,o),
(361,972,qs),
(363,972,ls),
(395,972,o),
(419,1025,q),
(344,1083,l),
(571,1189,l),
(1037,1010,l),
(1308,1184,l),
(1742,1017,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1797_17C5;
},
{
glyphname = uni1798_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,559,l),
(1020,559,l)
);
},
{
closed = 1;
nodes = (
(964,996,l),
(1240,1177,l),
(1742,1014,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,652,l),
(422,652,l),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,889,l)
);
}
);
width = 1442;
}
);
note = uni1798_17B6;
},
{
glyphname = uni1798_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,559,l),
(1020,559,l)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1130,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,652,l),
(422,652,l),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,889,l),
(964,996,l),
(1240,1177,l),
(1742,1014,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni1798_17C5;
},
{
glyphname = uni1799_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,1072,qs),
(515,1035,o),
(515,1014,qs),
(515,982,o),
(492,969,qs),
(468,954,o),
(422,954,q),
(422,1163,l),
(468,1110,o)
);
},
{
closed = 1;
nodes = (
(1685,996,l),
(1961,1177,l),
(2463,1014,l),
(2463,0,l),
(2586,0,l),
(2586,1103,l),
(1985,1303,l),
(1558,1025,l),
(1558,965,l),
(1741,862,l),
(1741,233,ls),
(1741,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,889,l),
(962,1009,l),
(1068,1146,l),
(1126,1109,ls),
(1176,1077,o),
(1222,1077,qs),
(1298,1077,o),
(1346,1187,q),
(1299,1187,ls),
(1260,1187,o),
(1203,1223,qs),
(1074,1303,l),
(857,1025,l),
(857,965,l),
(1020,862,l),
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,861,l),
(515,861,o),
(562,897,qs),
(608,933,o),
(608,1013,qs),
(608,1052,o),
(585,1098,qs),
(562,1145,o),
(515,1198,qs),
(422,1303,l),
(299,1303,l),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(991,0,o),
(1082,83,q),
(1172,0,o),
(1396,0,qs),
(1489,0,ls),
(1864,0,o),
(1864,233,qs),
(1864,889,l)
);
}
);
width = 2164;
}
);
note = uni1799_17B6;
},
{
glyphname = uni1799_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,1072,qs),
(515,1035,o),
(515,1014,qs),
(515,982,o),
(492,969,qs),
(468,954,o),
(422,954,q),
(422,1163,l),
(468,1110,o)
);
},
{
closed = 1;
nodes = (
(2626,1164,qs),
(2626,1536,ls),
(2626,1722,o),
(2509,1722,qs),
(2391,1722,o),
(2391,1639,q),
(2504,1639,o),
(2504,1536,qs),
(2504,1130,l),
(1985,1303,l),
(1558,1025,l),
(1558,965,l),
(1741,862,l),
(1741,233,ls),
(1741,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,889,l),
(962,1009,l),
(1068,1146,l),
(1126,1109,ls),
(1176,1077,o),
(1222,1077,qs),
(1298,1077,o),
(1346,1187,q),
(1299,1187,ls),
(1260,1187,o),
(1203,1223,qs),
(1074,1303,l),
(857,1025,l),
(857,965,l),
(1020,862,l),
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,861,l),
(515,861,o),
(562,897,qs),
(608,933,o),
(608,1013,qs),
(608,1052,o),
(585,1098,qs),
(562,1145,o),
(515,1198,qs),
(422,1303,l),
(299,1303,l),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(991,0,o),
(1082,83,q),
(1172,0,o),
(1396,0,qs),
(1489,0,ls),
(1864,0,o),
(1864,233,qs),
(1864,889,l),
(1685,996,l),
(1961,1177,l),
(2463,1014,l),
(2463,0,l),
(2586,0,l),
(2586,1036,l),
(2626,1120,o)
);
}
);
width = 2164;
}
);
note = uni1799_17C5;
},
{
glyphname = uni179A_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,248,qs),
(229,283,o),
(229,303,qs),
(229,326,o),
(240,337,qs),
(252,349,o),
(276,349,qs),
(299,349,l),
(299,162,l),
(264,212,o)
);
},
{
closed = 1;
nodes = (
(423,1223,qs),
(293,1303,l),
(116,1025,l),
(116,965,l),
(299,862,l),
(299,442,l),
(276,442,ls),
(206,442,o),
(171,408,qs),
(136,372,o),
(136,303,qs),
(136,268,o),
(156,222,qs),
(177,176,o),
(217,117,qs),
(299,0,l),
(422,0,l),
(422,889,l),
(222,1009,l),
(305,1147,l),
(365,1109,ls),
(416,1077,o),
(461,1077,qs),
(488,1077,o),
(509,1090,q),
(698,1183,l),
(1021,1038,l),
(1021,0,l),
(1144,0,l),
(1144,1103,l),
(722,1303,l),
(499,1190,l),
(463,1198,o)
);
}
);
width = 721;
}
);
note = uni179A_17B6;
},
{
glyphname = uni179A_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,248,qs),
(229,283,o),
(229,303,qs),
(229,326,o),
(240,337,qs),
(252,349,o),
(276,349,qs),
(299,349,l),
(299,162,l),
(264,212,o)
);
},
{
closed = 1;
nodes = (
(1184,1164,qs),
(1184,1536,ls),
(1184,1722,o),
(1067,1722,qs),
(949,1722,o),
(949,1639,q),
(1062,1639,o),
(1062,1536,qs),
(1062,1142,l),
(722,1303,l),
(499,1190,l),
(463,1198,o),
(423,1223,qs),
(293,1303,l),
(116,1025,l),
(116,965,l),
(299,862,l),
(299,442,l),
(276,442,ls),
(206,442,o),
(171,408,qs),
(136,372,o),
(136,303,qs),
(136,268,o),
(156,222,qs),
(177,176,o),
(217,117,qs),
(299,0,l),
(422,0,l),
(422,889,l),
(222,1009,l),
(305,1147,l),
(365,1109,ls),
(416,1077,o),
(461,1077,qs),
(488,1077,o),
(509,1090,q),
(698,1183,l),
(1021,1038,l),
(1021,0,l),
(1144,0,l),
(1144,1036,l),
(1184,1120,o)
);
}
);
width = 721;
}
);
note = uni179A_17C5;
},
{
glyphname = uni179B_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(1686,996,l),
(1962,1177,l),
(2464,1014,l),
(2464,0,l),
(2587,0,l),
(2587,1103,l),
(1986,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,233,ls),
(1742,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,1103,l),
(721,1303,l),
(299,1104,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1065,l),
(681,1186,l),
(1020,1026,l),
(1020,233,ls),
(1020,0,o),
(1396,0,qs),
(1489,0,ls),
(1865,0,o),
(1865,233,qs),
(1865,889,l)
);
}
);
width = 2164;
}
);
note = uni179B_17B6;
},
{
glyphname = uni179B_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(2626,1164,qs),
(2626,1536,ls),
(2626,1722,o),
(2509,1722,qs),
(2391,1722,o),
(2391,1639,q),
(2504,1639,o),
(2504,1536,qs),
(2504,1131,l),
(1986,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,233,ls),
(1742,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,1103,l),
(721,1303,l),
(299,1104,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1065,l),
(681,1186,l),
(1020,1026,l),
(1020,233,ls),
(1020,0,o),
(1396,0,qs),
(1489,0,ls),
(1865,0,o),
(1865,233,qs),
(1865,889,l),
(1686,996,l),
(1962,1177,l),
(2464,1014,l),
(2464,0,l),
(2587,0,l),
(2587,1038,l),
(2626,1121,o)
);
}
);
width = 2164;
}
);
note = uni179B_17C5;
},
{
glyphname = uni179C_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,248,qs),
(229,283,o),
(229,303,qs),
(229,326,o),
(240,337,qs),
(252,349,o),
(276,349,qs),
(299,349,l),
(299,162,l),
(264,212,o)
);
},
{
closed = 1;
nodes = (
(1021,1038,l),
(1021,0,l),
(1144,0,l),
(1144,1103,l),
(722,1303,l),
(579,1231,l),
(581,1254,o),
(581,1280,qs),
(581,1385,o),
(546,1437,qs),
(512,1489,o),
(442,1489,qs),
(395,1489,o),
(372,1466,qs),
(349,1443,o),
(349,1396,q),
(419,1396,o),
(453,1368,qs),
(488,1339,o),
(488,1280,qs),
(488,1246,o),
(480,1224,qs),
(475,1213,o),
(463,1213,qs),
(452,1213,o),
(433,1223,qs),
(293,1303,l),
(116,1025,l),
(116,965,l),
(299,862,l),
(299,442,l),
(276,442,ls),
(206,442,o),
(171,408,qs),
(136,372,o),
(136,303,qs),
(136,268,o),
(156,222,qs),
(177,176,o),
(217,117,qs),
(299,0,l),
(422,0,l),
(422,889,l),
(222,1009,l),
(305,1147,l),
(365,1109,ls),
(416,1077,o),
(461,1077,qs),
(482,1077,o),
(503,1088,qs),
(698,1183,l)
);
}
);
width = 721;
}
);
note = uni179C_17B6;
},
{
glyphname = uni179C_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,248,qs),
(229,283,o),
(229,303,qs),
(229,326,o),
(240,337,qs),
(252,349,o),
(276,349,qs),
(299,349,l),
(299,162,l),
(264,212,o)
);
},
{
closed = 1;
nodes = (
(1184,1164,qs),
(1184,1536,ls),
(1184,1722,o),
(1067,1722,qs),
(949,1722,o),
(949,1639,q),
(1062,1639,o),
(1062,1536,qs),
(1062,1142,l),
(722,1303,l),
(579,1231,l),
(581,1254,o),
(581,1280,qs),
(581,1385,o),
(546,1437,qs),
(512,1489,o),
(442,1489,qs),
(395,1489,o),
(372,1466,qs),
(349,1443,o),
(349,1396,q),
(419,1396,o),
(453,1368,qs),
(488,1339,o),
(488,1280,qs),
(488,1246,o),
(480,1224,qs),
(475,1213,o),
(463,1213,qs),
(452,1213,o),
(433,1223,qs),
(293,1303,l),
(116,1025,l),
(116,965,l),
(299,862,l),
(299,442,l),
(276,442,ls),
(206,442,o),
(171,408,qs),
(136,372,o),
(136,303,qs),
(136,268,o),
(156,222,qs),
(177,176,o),
(217,117,qs),
(299,0,l),
(422,0,l),
(422,889,l),
(222,1009,l),
(305,1147,l),
(365,1109,ls),
(416,1077,o),
(461,1077,qs),
(482,1077,o),
(503,1088,qs),
(698,1183,l),
(1021,1038,l),
(1021,0,l),
(1144,0,l),
(1144,1036,l),
(1184,1120,o)
);
}
);
width = 721;
}
);
note = uni179C_17C5;
},
{
glyphname = uni179F_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(469,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(1686,996,l),
(1962,1177,l),
(2464,1014,l),
(2464,0,l),
(2587,0,l),
(2587,1103,l),
(1986,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,233,ls),
(1742,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(679,931,l),
(467,1065,l),
(593,1178,l),
(784,1062,ls),
(814,1044,o),
(861,1044,qs),
(907,1044,o),
(960,1165,q),
(907,1165,ls),
(860,1165,o),
(819,1190,qs),
(634,1303,l),
(597,1303,l),
(356,1091,l),
(356,1024,l),
(517,920,l),
(299,881,o),
(299,698,qs),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(550,442,o),
(469,442,qs),
(422,442,l),
(422,698,ls),
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,233,ls),
(1021,0,o),
(1396,0,qs),
(1489,0,ls),
(1865,0,o),
(1865,233,qs),
(1865,889,l)
);
}
);
width = 2164;
}
);
note = uni179F_17B6;
},
{
glyphname = uni179F_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(469,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(2626,1164,qs),
(2626,1536,ls),
(2626,1722,o),
(2509,1722,qs),
(2391,1722,o),
(2391,1639,q),
(2504,1639,o),
(2504,1536,qs),
(2504,1131,l),
(1986,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,233,ls),
(1742,93,o),
(1489,93,qs),
(1396,93,ls),
(1143,93,o),
(1143,233,qs),
(1143,698,ls),
(1143,931,o),
(791,931,qs),
(679,931,l),
(467,1065,l),
(593,1178,l),
(784,1062,ls),
(814,1044,o),
(861,1044,qs),
(907,1044,o),
(960,1165,q),
(907,1165,ls),
(860,1165,o),
(819,1190,qs),
(634,1303,l),
(597,1303,l),
(356,1091,l),
(356,1024,l),
(517,920,l),
(299,881,o),
(299,698,qs),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(550,442,o),
(469,442,qs),
(422,442,l),
(422,698,ls),
(422,838,o),
(651,838,qs),
(791,838,ls),
(1021,838,o),
(1021,698,qs),
(1021,233,ls),
(1021,0,o),
(1396,0,qs),
(1489,0,ls),
(1865,0,o),
(1865,233,qs),
(1865,889,l),
(1686,996,l),
(1962,1177,l),
(2464,1014,l),
(2464,0,l),
(2587,0,l),
(2587,1038,l),
(2626,1121,o)
);
}
);
width = 2164;
}
);
note = uni179F_17C5;
},
{
glyphname = uni17A0_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2464,1038,l),
(2464,0,l),
(2587,0,l),
(2587,1103,l),
(2145,1303,l),
(1795,1126,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1020,849,l),
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,882,l),
(967,997,l),
(1240,1177,l),
(1742,1015,l),
(1742,0,l),
(1865,0,l),
(1865,1059,l),
(2121,1183,l)
);
}
);
width = 2164;
}
);
note = uni17A0_17B6;
},
{
glyphname = uni17A0_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2626,1164,qs),
(2626,1536,ls),
(2626,1722,o),
(2509,1722,qs),
(2391,1722,o),
(2391,1639,q),
(2504,1639,o),
(2504,1536,qs),
(2504,1141,l),
(2145,1303,l),
(1795,1126,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1020,849,l),
(1020,233,ls),
(1020,93,o),
(768,93,qs),
(675,93,ls),
(422,93,o),
(422,233,qs),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,233,ls),
(299,0,o),
(675,0,qs),
(768,0,ls),
(1143,0,o),
(1143,233,qs),
(1143,882,l),
(967,997,l),
(1240,1177,l),
(1742,1015,l),
(1742,0,l),
(1865,0,l),
(1865,1059,l),
(2121,1183,l),
(2464,1038,l),
(2464,0,l),
(2587,0,l),
(2587,1038,l),
(2626,1121,o)
);
}
);
width = 2164;
}
);
note = uni17A0_17C5;
},
{
glyphname = uni17A1_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(975,-261,qs),
(975,-249,o),
(1021,-204,q),
(1020,-272,l),
(975,-272,o)
);
},
{
closed = 1;
nodes = (
(1070,625,qs),
(1070,597,o),
(998,597,qs),
(942,597,l),
(942,652,o),
(998,652,qs),
(1070,652,o)
);
},
{
closed = 1;
nodes = (
(976,978,qs),
(931,978,o),
(931,1024,q),
(838,1024,o),
(838,954,qs),
(838,884,o),
(976,884,qs),
(1143,884,o),
(1143,1031,qs),
(1143,1303,o),
(721,1303,qs),
(299,1303,o),
(299,1031,qs),
(299,815,ls),
(299,504,o),
(722,504,qs),
(819,504,l),
(819,280,ls),
(819,93,o),
(702,93,qs),
(585,93,o),
(585,193,qs),
(585,280,ls),
(585,420,o),
(479,420,qs),
(373,420,o),
(373,327,q),
(462,327,o),
(462,280,qs),
(462,193,ls),
(462,0,o),
(702,0,qs),
(942,0,o),
(942,281,qs),
(942,504,l),
(998,504,ls),
(1143,504,o),
(1143,626,qs),
(1143,746,o),
(998,746,qs),
(819,746,o),
(819,597,q),
(722,597,ls),
(422,597,o),
(422,815,qs),
(422,1031,ls),
(422,1210,o),
(721,1210,qs),
(1021,1210,o),
(1021,1031,qs),
(1021,978,o)
);
},
{
closed = 1;
nodes = (
(1686,996,l),
(1962,1177,l),
(2464,1014,l),
(2464,0,l),
(2587,0,l),
(2587,1103,l),
(1986,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,-567,l),
(1443,-375,l),
(1143,-567,l),
(1143,-93,l),
(1020,-93,l),
(951,-161,ls),
(915,-195,o),
(899,-228,qs),
(881,-262,o),
(881,-294,qs),
(881,-328,o),
(916,-345,qs),
(949,-360,o),
(1014,-360,qs),
(1020,-360,l),
(1020,-673,l),
(1143,-673,l),
(1443,-481,l),
(1742,-673,l),
(1865,-673,l),
(1865,889,l)
);
}
);
width = 2164;
}
);
note = uni17A1_17B6;
},
{
glyphname = uni17A1_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(975,-261,qs),
(975,-249,o),
(1021,-204,q),
(1020,-272,l),
(975,-272,o)
);
},
{
closed = 1;
nodes = (
(1070,625,qs),
(1070,597,o),
(998,597,qs),
(942,597,l),
(942,652,o),
(998,652,qs),
(1070,652,o)
);
},
{
closed = 1;
nodes = (
(976,978,qs),
(931,978,o),
(931,1024,q),
(838,1024,o),
(838,954,qs),
(838,884,o),
(976,884,qs),
(1143,884,o),
(1143,1031,qs),
(1143,1303,o),
(721,1303,qs),
(299,1303,o),
(299,1031,qs),
(299,815,ls),
(299,504,o),
(722,504,qs),
(819,504,l),
(819,280,ls),
(819,93,o),
(702,93,qs),
(585,93,o),
(585,193,qs),
(585,280,ls),
(585,420,o),
(479,420,qs),
(373,420,o),
(373,327,q),
(462,327,o),
(462,280,qs),
(462,193,ls),
(462,0,o),
(702,0,qs),
(942,0,o),
(942,281,qs),
(942,504,l),
(998,504,ls),
(1143,504,o),
(1143,626,qs),
(1143,746,o),
(998,746,qs),
(819,746,o),
(819,597,q),
(722,597,ls),
(422,597,o),
(422,815,qs),
(422,1031,ls),
(422,1210,o),
(721,1210,qs),
(1021,1210,o),
(1021,1031,qs),
(1021,978,o)
);
},
{
closed = 1;
nodes = (
(2626,1164,qs),
(2626,1536,ls),
(2626,1722,o),
(2509,1722,qs),
(2391,1722,o),
(2391,1639,q),
(2504,1639,o),
(2504,1536,qs),
(2504,1131,l),
(1986,1303,l),
(1559,1025,l),
(1559,965,l),
(1742,862,l),
(1742,-567,l),
(1443,-375,l),
(1143,-567,l),
(1143,-93,l),
(1020,-93,l),
(951,-161,ls),
(915,-195,o),
(899,-228,qs),
(881,-262,o),
(881,-294,qs),
(881,-328,o),
(916,-345,qs),
(949,-360,o),
(1014,-360,qs),
(1020,-360,l),
(1020,-673,l),
(1143,-673,l),
(1443,-481,l),
(1742,-673,l),
(1865,-673,l),
(1865,889,l),
(1686,996,l),
(1962,1177,l),
(2464,1014,l),
(2464,0,l),
(2587,0,l),
(2587,1038,l),
(2626,1121,o)
);
}
);
width = 2164;
}
);
note = uni17A1_17C5;
},
{
glyphname = uni17A2_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,248,qs),
(229,283,o),
(229,303,qs),
(229,326,o),
(240,337,qs),
(252,349,o),
(276,349,qs),
(299,349,l),
(299,162,l),
(264,212,o)
);
},
{
closed = 1;
nodes = (
(968,248,qs),
(951,283,o),
(951,303,qs),
(951,326,o),
(962,337,qs),
(974,349,o),
(997,349,qs),
(1020,349,l),
(1020,162,l),
(985,212,o)
);
},
{
closed = 1;
nodes = (
(964,996,l),
(1240,1177,l),
(1742,1014,l),
(1742,0,l),
(1865,0,l),
(1865,1103,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,652,l),
(422,652,l),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,442,l),
(276,442,ls),
(206,442,o),
(171,408,qs),
(136,372,o),
(136,303,qs),
(136,268,o),
(156,222,qs),
(177,176,o),
(217,117,qs),
(299,0,l),
(422,0,l),
(422,559,l),
(1020,559,l),
(1020,442,l),
(997,442,ls),
(927,442,o),
(893,408,qs),
(857,372,o),
(857,303,qs),
(857,268,o),
(878,222,qs),
(898,176,o),
(938,117,qs),
(1020,0,l),
(1143,0,l),
(1143,889,l)
);
}
);
width = 1442;
}
);
note = uni17A2_17B6;
},
{
glyphname = uni17A2_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,248,qs),
(229,283,o),
(229,303,qs),
(229,326,o),
(240,337,qs),
(252,349,o),
(276,349,qs),
(299,349,l),
(299,162,l),
(264,212,o)
);
},
{
closed = 1;
nodes = (
(968,248,qs),
(951,283,o),
(951,303,qs),
(951,326,o),
(962,337,qs),
(974,349,o),
(997,349,qs),
(1020,349,l),
(1020,162,l),
(985,212,o)
);
},
{
closed = 1;
nodes = (
(1905,1164,qs),
(1905,1536,ls),
(1905,1722,o),
(1788,1722,qs),
(1670,1722,o),
(1670,1639,q),
(1783,1639,o),
(1783,1536,qs),
(1783,1130,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1020,862,l),
(1020,652,l),
(422,652,l),
(422,889,l),
(241,1009,l),
(347,1146,l),
(405,1109,ls),
(455,1077,o),
(501,1077,qs),
(577,1077,o),
(625,1187,q),
(578,1187,ls),
(539,1187,o),
(482,1223,qs),
(353,1303,l),
(136,1025,l),
(136,965,l),
(299,862,l),
(299,442,l),
(276,442,ls),
(206,442,o),
(171,408,qs),
(136,372,o),
(136,303,qs),
(136,268,o),
(156,222,qs),
(177,176,o),
(217,117,qs),
(299,0,l),
(422,0,l),
(422,559,l),
(1020,559,l),
(1020,442,l),
(997,442,ls),
(927,442,o),
(893,408,qs),
(857,372,o),
(857,303,qs),
(857,268,o),
(878,222,qs),
(898,176,o),
(938,117,qs),
(1020,0,l),
(1143,0,l),
(1143,889,l),
(964,996,l),
(1240,1177,l),
(1742,1014,l),
(1742,0,l),
(1865,0,l),
(1865,1036,l),
(1905,1120,o)
);
}
);
width = 1442;
}
);
note = uni17A2_17C5;
},
{
glyphname = uni17E0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1143,326,qs),
(1143,977,ls),
(1143,1303,o),
(721,1303,qs),
(299,1303,o),
(299,977,qs),
(299,326,ls),
(299,0,o),
(721,0,qs),
(1143,0,o)
);
},
{
closed = 1;
nodes = (
(1020,977,qs),
(1020,326,ls),
(1020,94,o),
(721,94,qs),
(422,94,o),
(422,326,qs),
(422,977,ls),
(422,1210,o),
(721,1210,qs),
(1020,1210,o)
);
}
);
width = 1442;
}
);
note = uni17E0;
unicode = 6112;
},
{
glyphname = uni17E1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1143,435,qs),
(1143,977,ls),
(1143,1303,o),
(721,1303,qs),
(299,1303,o),
(299,977,qs),
(299,869,ls),
(299,652,o),
(610,652,qs),
(815,652,o),
(815,815,qs),
(815,884,o),
(745,884,qs),
(676,884,o),
(676,815,qs),
(676,746,o),
(610,746,qs),
(422,746,o),
(422,869,qs),
(422,977,ls),
(422,1210,o),
(721,1210,qs),
(1021,1210,o),
(1021,977,qs),
(1021,435,ls),
(1021,94,o),
(721,94,qs),
(390,94,o),
(390,380,q),
(299,380,o),
(299,272,qs),
(299,0,o),
(721,0,qs),
(1143,0,o)
);
}
);
width = 1442;
}
);
note = uni17E1;
unicode = 6113;
},
{
glyphname = uni17E2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(625,1303,l),
(625,815,ls),
(625,698,o),
(768,698,qs),
(838,698,o),
(838,769,q),
(835,769,ls),
(748,769,o),
(748,815,qs),
(748,1119,l),
(939,1002,l),
(1115,1106,l),
(1115,217,ls),
(1115,94,o),
(768,94,qs),
(422,94,o),
(422,217,qs),
(422,1421,ls),
(422,1583,o),
(314,1583,qs),
(186,1583,o),
(186,1489,q),
(299,1489,o),
(299,1421,qs),
(299,217,ls),
(299,0,o),
(768,0,qs),
(1237,0,o),
(1237,217,qs),
(1237,1303,l),
(939,1112,l),
(652,1303,l)
);
}
);
width = 1536;
}
);
note = uni17E2;
unicode = 6114;
},
{
glyphname = uni17E3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(636,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(560,117,o),
(582,172,qs),
(605,227,o),
(605,293,qs),
(605,368,o),
(564,405,qs),
(523,442,o),
(422,442,q),
(422,1055,l),
(583,1176,l),
(858,960,l),
(858,0,l),
(980,0,l),
(980,1044,l),
(969,1052,l),
(1139,1179,l),
(1393,977,l),
(1393,0,l),
(1516,0,l),
(1516,1061,l),
(1190,1303,l),
(888,1109,l)
);
},
{
closed = 1;
nodes = (
(494,335,qs),
(512,320,o),
(512,292,qs),
(512,248,o),
(494,208,qs),
(476,168,o),
(422,134,q),
(422,349,l),
(476,349,o)
);
}
);
width = 1815;
}
);
note = uni17E3;
unicode = 6115;
},
{
glyphname = uni17E4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1032,757,qs),
(1050,722,o),
(1050,652,qs),
(1050,617,o),
(1032,600,qs),
(1013,583,o),
(980,583,q),
(980,792,l),
(1013,792,o)
);
},
{
closed = 1;
nodes = (
(1143,1086,o),
(1143,1303,qs),
(1143,1396,ls),
(1143,1489,o),
(1236,1489,q),
(1236,1583,o),
(1143,1583,qs),
(1020,1583,o),
(1020,1396,qs),
(1020,1303,ls),
(1020,1192,o),
(977,1192,q),
(653,1303,l),
(580,1303,l),
(299,1086,l),
(299,217,ls),
(299,0,o),
(610,0,qs),
(1143,0,l),
(1143,127,l),
(980,369,l),
(980,489,l),
(1060,489,o),
(1101,530,qs),
(1143,570,o),
(1143,652,qs),
(1143,884,o),
(980,884,qs),
(858,884,o),
(858,760,qs),
(858,380,l),
(1058,94,l),
(610,94,ls),
(422,94,o),
(422,217,qs),
(422,1069,l),
(617,1216,l),
(999,1086,l)
);
}
);
width = 1442;
}
);
note = uni17E4;
unicode = 6116;
},
{
glyphname = uni17E5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(649,1219,o),
(622,1202,q),
(557,1222,ls),
(523,1233,o),
(489,1274,o),
(489,1305,qs),
(489,1397,o),
(582,1397,qs),
(676,1397,o),
(676,1305,qs),
(676,1271,o)
);
},
{
closed = 1;
nodes = (
(1034,618,qs),
(1050,584,o),
(1050,516,qs),
(1050,479,o),
(1034,461,qs),
(1016,442,o),
(981,442,q),
(981,653,l),
(1016,653,o)
);
},
{
closed = 1;
nodes = (
(1143,977,o),
(1143,1203,qs),
(1143,1396,ls),
(1143,1489,o),
(1236,1489,q),
(1236,1583,o),
(1143,1583,qs),
(1020,1583,o),
(1020,1396,qs),
(1021,1203,ls),
(1021,1084,o),
(978,1084,q),
(725,1167,l),
(741,1186,o),
(750,1206,qs),
(768,1247,o),
(768,1306,qs),
(768,1489,o),
(582,1489,qs),
(396,1489,o),
(396,1303,qs),
(396,1240,o),
(459,1156,o),
(520,1135,q),
(299,974,l),
(299,229,ls),
(299,0,o),
(610,0,qs),
(1143,0,l),
(1143,151,l),
(981,293,l),
(981,349,l),
(1062,349,o),
(1102,391,qs),
(1143,433,o),
(1143,516,qs),
(1143,745,o),
(981,745,qs),
(858,745,o),
(858,629,qs),
(858,276,l),
(1049,93,l),
(610,93,ls),
(422,94,o),
(422,229,qs),
(422,949,l),
(636,1098,l),
(1000,977,l)
);
}
);
width = 1442;
}
);
note = uni17E5;
unicode = 6117;
},
{
glyphname = uni17E6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,1443,ls),
(422,1583,o),
(322,1583,qs),
(206,1583,o),
(206,1489,q),
(299,1489,o),
(299,1443,qs),
(299,869,l),
(422,869,l),
(422,1048,l),
(673,1186,l),
(1021,978,l),
(1021,326,ls),
(1021,94,o),
(721,94,qs),
(422,94,o),
(422,326,qs),
(422,435,ls),
(422,559,o),
(556,559,qs),
(614,559,o),
(614,489,qs),
(614,435,o),
(696,435,qs),
(777,435,o),
(777,489,qs),
(777,652,o),
(556,652,qs),
(299,652,o),
(299,435,qs),
(299,326,ls),
(299,0,o),
(721,0,qs),
(1143,0,o),
(1143,326,qs),
(1143,1054,l),
(721,1303,l),
(422,1148,l)
);
}
);
width = 1442;
}
);
note = uni17E6;
unicode = 6118;
},
{
glyphname = uni17E7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(541,337,qs),
(558,326,o),
(558,303,qs),
(558,275,o),
(544,247,qs),
(530,220,o),
(503,192,q),
(422,131,l),
(422,349,l),
(488,349,ls),
(523,349,o)
);
},
{
closed = 1;
nodes = (
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(577,133,l),
(614,169,o),
(633,212,qs),
(651,255,o),
(651,303,qs),
(651,372,o),
(610,408,qs),
(569,442,o),
(488,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,0,l),
(1256,0,ls),
(1469,0,o),
(1469,186,qs),
(1469,1443,ls),
(1469,1583,o),
(1350,1583,qs),
(1233,1583,o),
(1233,1489,q),
(1346,1489,o),
(1346,1443,qs),
(1346,186,ls),
(1346,94,o),
(1256,94,qs),
(1143,94,l),
(1143,1052,l),
(888,1303,l)
);
}
);
width = 1768;
}
);
note = uni17E7;
unicode = 6119;
},
{
glyphname = uni17E8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,646,qs),
(951,664,o),
(951,698,qs),
(951,734,o),
(968,751,qs),
(986,769,o),
(1021,769,q),
(1021,628,l),
(986,628,o)
);
},
{
closed = 1;
nodes = (
(899,821,qs),
(858,780,o),
(858,698,qs),
(858,617,o),
(899,576,qs),
(939,535,o),
(1021,535,q),
(1021,114,l),
(721,313,l),
(422,114,l),
(422,1059,l),
(610,1210,l),
(652,1210,l),
(1007,1086,l),
(1143,1086,o),
(1143,1303,qs),
(1143,1396,ls),
(1143,1489,o),
(1236,1489,q),
(1236,1583,o),
(1143,1583,qs),
(1020,1583,o),
(1020,1396,qs),
(1021,1303,ls),
(1021,1194,o),
(977,1194,q),
(665,1303,l),
(582,1303,l),
(299,1086,l),
(299,0,l),
(422,0,l),
(721,200,l),
(1021,0,l),
(1143,0,l),
(1143,761,ls),
(1143,861,o),
(1021,861,qs),
(939,861,o)
);
}
);
width = 1442;
}
);
note = uni17E8;
unicode = 6120;
},
{
glyphname = uni17E9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,344,qs),
(951,361,o),
(951,396,qs),
(951,431,o),
(968,449,qs),
(986,466,o),
(1021,466,q),
(1021,326,l),
(986,326,o)
);
},
{
closed = 1;
nodes = (
(1021,559,qs),
(939,559,o),
(899,519,qs),
(858,478,o),
(858,396,qs),
(858,315,o),
(899,274,qs),
(939,233,o),
(1021,233,q),
(1021,94,o),
(776,94,qs),
(422,94,o),
(422,435,qs),
(422,792,o),
(832,792,qs),
(972,792,o),
(1058,748,qs),
(1095,730,o),
(1116,730,qs),
(1143,730,o),
(1143,761,qs),
(1143,803,o),
(1101,824,qs),
(972,884,o),
(832,884,qs),
(535,884,o),
(535,1068,qs),
(535,1210,o),
(776,1210,qs),
(1021,1210,o),
(1021,1031,qs),
(1021,977,o),
(1082,977,qs),
(1143,977,o),
(1143,1031,qs),
(1143,1396,ls),
(1143,1583,o),
(1024,1583,qs),
(931,1583,o),
(931,1489,q),
(1020,1489,o),
(1020,1396,qs),
(1021,1242,l),
(902,1303,o),
(776,1303,qs),
(412,1303,o),
(412,1068,qs),
(412,885,o),
(555,845,q),
(417,783,o),
(299,577,o),
(299,435,qs),
(299,0,o),
(776,0,qs),
(1143,0,o),
(1143,326,qs),
(1143,435,ls),
(1143,559,o)
);
}
);
width = 1442;
}
);
note = uni17E9;
unicode = 6121;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1026,283,o),
(1026,565,qs),
(1026,890,ls),
(1026,1172,o),
(786,1477,o),
(573,1477,qs),
(360,1477,o),
(121,1172,o),
(121,890,qs),
(121,565,ls),
(121,284,o),
(362,-21,o),
(575,-21,qs),
(788,-21,o)
);
},
{
closed = 1;
nodes = (
(241,325,o),
(241,548,qs),
(241,910,ls),
(241,1134,o),
(411,1376,o),
(573,1376,qs),
(736,1376,o),
(906,1134,o),
(906,910,qs),
(906,548,ls),
(906,324,o),
(737,79,o),
(575,79,qs),
(413,79,o)
);
}
);
width = 1158;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(757,87,l),
(496,100,l),
(496,1460,l),
(88,1373,l),
(88,1289,l),
(376,1332,l),
(376,100,l),
(114,87,l),
(114,0,l),
(757,0,l)
);
}
);
width = 832;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1006,306,l),
(900,306,l),
(893,100,l),
(256,100,l),
(254,105,l),
(655,560,ls),
(746,662,o),
(874,838,o),
(941,999,o),
(941,1080,qs),
(941,1201,o),
(838,1379,o),
(649,1477,o),
(520,1477,qs),
(382,1477,o),
(180,1362,o),
(73,1165,o),
(76,1043,q),
(78,1037,l),
(190,1037,l),
(190,1192,o),
(362,1376,o),
(517,1376,qs),
(665,1376,o),
(820,1212,o),
(820,1076,qs),
(820,1014,o),
(773,886,o),
(667,733,o),
(579,632,qs),
(102,91,l),
(102,0,l),
(1006,0,l)
);
}
);
width = 1116;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(869,79,o),
(983,265,o),
(983,395,qs),
(983,523,o),
(847,707,o),
(710,746,q),
(827,789,o),
(955,970,o),
(955,1073,qs),
(955,1263,o),
(724,1477,o),
(530,1477,qs),
(403,1477,o),
(204,1374,o),
(93,1195,o),
(96,1081,q),
(98,1075,l),
(210,1075,l),
(210,1166,o),
(292,1302,o),
(436,1376,o),
(530,1376,qs),
(681,1376,o),
(835,1214,o),
(835,1077,qs),
(835,993,o),
(762,866,o),
(619,793,o),
(513,793,qs),
(374,793,l),
(374,692,l),
(513,692,ls),
(681,692,o),
(863,545,o),
(863,391,qs),
(863,242,o),
(689,79,o),
(535,79,qs),
(433,79,o),
(277,159,o),
(189,302,o),
(189,395,q),
(77,395,l),
(75,389,l),
(72,260,o),
(195,77,o),
(407,-21,o),
(535,-21,qs),
(666,-21,o)
);
}
);
width = 1102;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1028,87,l),
(865,100,l),
(865,369,l),
(1093,369,l),
(1093,469,l),
(865,469,l),
(865,1456,l),
(734,1456,l),
(63,436,l),
(63,369,l),
(745,369,l),
(745,100,l),
(582,87,l),
(582,0,l),
(1028,0,l)
);
},
{
closed = 1;
nodes = (
(739,1287,l),
(745,1285,l),
(745,469,l),
(205,469,l),
(688,1193,l)
);
}
);
width = 1178;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(857,99,o),
(956,316,o),
(956,464,qs),
(956,608,o),
(852,821,o),
(665,935,o),
(541,933,qs),
(466,931,o),
(359,905,o),
(278,858,o),
(242,825,q),
(296,1347,l),
(818,1347,l),
(827,1220,l),
(924,1220,l),
(924,1456,l),
(193,1456,l),
(112,660,l),
(210,643,l),
(242,733,o),
(389,823,o),
(529,823,qs),
(673,823,o),
(835,626,o),
(835,462,qs),
(835,276,o),
(674,79,o),
(512,79,qs),
(373,79,o),
(206,236,o),
(206,383,q),
(99,383,l),
(97,377,l),
(94,246,o),
(201,69,o),
(391,-21,o),
(512,-21,qs),
(660,-21,o)
);
}
);
width = 1070;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(912,107,o),
(1023,330,o),
(1023,474,qs),
(1023,618,o),
(921,839,o),
(730,962,o),
(600,962,qs),
(483,962,o),
(297,857,o),
(246,774,q),
(244,870,ls),
(247,1125,o),
(451,1376,o),
(616,1376,qs),
(695,1376,o),
(807,1347,o),
(864,1316,q),
(893,1412,l),
(837,1444,o),
(691,1477,o),
(616,1477,qs),
(472,1477,o),
(248,1329,o),
(121,1040,o),
(121,829,qs),
(121,562,ls),
(121,376,o),
(239,116,o),
(447,-21,o),
(582,-21,qs),
(713,-21,o)
);
},
{
closed = 1;
nodes = (
(241,326,o),
(241,552,qs),
(241,608,l),
(252,680,o),
(346,796,o),
(490,865,o),
(576,865,qs),
(733,865,o),
(903,649,o),
(903,474,qs),
(903,364,o),
(824,184,o),
(679,79,o),
(582,79,qs),
(431,79,o)
);
}
);
width = 1124;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,121,ls),
(525,314,o),
(606,644,o),
(733,939,o),
(912,1216,o),
(1031,1355,q),
(1031,1456,l),
(76,1456,l),
(76,1150,l),
(183,1150,l),
(190,1355,l),
(907,1355,l),
(761,1180,o),
(547,799,o),
(411,369,o),
(383,121,qs),
(372,0,l),
(492,0,l)
);
}
);
width = 1115;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(909,73,o),
(1029,255,o),
(1029,386,qs),
(1029,514,o),
(866,706,o),
(733,747,q),
(848,786,o),
(988,963,o),
(988,1081,qs),
(988,1206,o),
(877,1383,o),
(684,1477,o),
(559,1477,qs),
(433,1477,o),
(241,1384,o),
(133,1207,o),
(133,1081,qs),
(133,963,o),
(269,786,o),
(385,747,q),
(251,707,o),
(92,514,o),
(92,386,qs),
(92,255,o),
(210,73,o),
(421,-21,o),
(561,-21,qs),
(698,-21,o)
);
},
{
closed = 1;
nodes = (
(212,241,o),
(212,385,qs),
(212,478,o),
(301,618,o),
(458,697,o),
(559,697,qs),
(659,697,o),
(817,618,o),
(909,477,o),
(909,385,qs),
(909,290,o),
(819,153,o),
(662,79,o),
(561,79,qs),
(406,79,o)
);
},
{
closed = 1;
nodes = (
(253,952,o),
(253,1082,qs),
(253,1216,o),
(424,1376,o),
(559,1376,qs),
(646,1376,o),
(786,1300,o),
(868,1167,o),
(868,1082,qs),
(868,996,o),
(788,868,o),
(650,797,o),
(561,797,qs),
(425,797,o)
);
}
);
width = 1127;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(872,119,o),
(992,400,o),
(992,612,qs),
(992,918,ls),
(992,1105,o),
(877,1354,o),
(669,1477,o),
(527,1477,qs),
(401,1477,o),
(200,1340,o),
(84,1105,o),
(84,958,qs),
(84,812,o),
(194,588,o),
(393,463,o),
(526,463,qs),
(636,463,o),
(813,563,o),
(862,653,q),
(864,584,ls),
(862,328,o),
(672,79,o),
(506,79,qs),
(422,79,o),
(291,108,o),
(222,140,q),
(200,40,l),
(271,10,o),
(429,-21,o),
(506,-21,qs),
(654,-21,o)
);
},
{
closed = 1;
nodes = (
(286,667,o),
(208,845,o),
(208,958,qs),
(208,1074,o),
(292,1263,o),
(438,1376,o),
(532,1376,qs),
(689,1376,o),
(867,1154,o),
(867,927,qs),
(867,796,l),
(831,698,o),
(656,563,o),
(526,563,qs),
(429,563,o)
);
}
);
width = 1138;
}
);
note = nine;
unicode = 57;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 700;
}
);
note = space;
unicode = 32;
},
{
glyphname = CR;
layers = (
{
layerId = m01;
width = 1044;
}
);
note = CR;
},
{
glyphname = uni0000;
layers = (
{
layerId = m01;
width = 0;
}
);
note = uni0000;
},
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,0,l),
(922,0,l),
(922,1462,l),
(102,1462,l)
);
},
{
closed = 1;
nodes = (
(201,98,l),
(201,1364,l),
(823,1364,l),
(823,98,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
4 1 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79 0 0 7 6 5 4 0 3 0 3 17 5 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = ".notdef";
},
{
glyphname = uni17D4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(512,977,qs),
(589,977,o),
(664,1004,qs),
(737,1031,o),
(829,1084,qs),
(1020,1197,l),
(1020,163,ls),
(1020,94,o),
(884,94,q),
(884,0,o),
(986,0,qs),
(1143,0,o),
(1143,163,qs),
(1143,1303,l),
(1021,1303,l),
(777,1162,ls),
(699,1116,o),
(639,1094,qs),
(577,1071,o),
(512,1071,qs),
(422,1071,o),
(422,1141,qs),
(422,1220,o),
(582,1220,q),
(582,1257,o),
(551,1280,qs),
(519,1303,o),
(456,1303,qs),
(299,1303,o),
(299,1140,qs),
(299,977,o)
);
}
);
width = 1442;
}
);
note = uni17D4;
unicode = 6100;
},
{
glyphname = uni17D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1276,23,o),
(1210,0,q),
(1326,0,o),
(1423,70,o),
(1423,140,qs),
(1423,1303,l),
(1323,1303,l),
(1323,140,ls),
(1323,93,o)
);
},
{
closed = 1;
nodes = (
(512,977,qs),
(589,977,o),
(664,1004,qs),
(737,1031,o),
(829,1084,qs),
(1020,1197,l),
(1020,163,ls),
(1020,94,o),
(884,94,q),
(884,0,o),
(986,0,qs),
(1143,0,o),
(1143,163,qs),
(1143,1303,l),
(1021,1303,l),
(777,1162,ls),
(699,1116,o),
(639,1094,qs),
(577,1071,o),
(512,1071,qs),
(422,1071,o),
(422,1141,qs),
(422,1220,o),
(582,1220,q),
(582,1257,o),
(551,1280,qs),
(519,1303,o),
(456,1303,qs),
(299,1303,o),
(299,1140,qs),
(299,977,o)
);
}
);
width = 1722;
}
);
note = uni17D5;
unicode = 6101;
},
{
glyphname = uni17D6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(419,1164,qs),
(442,1187,o),
(489,1187,qs),
(535,1187,o),
(558,1164,qs),
(582,1140,o),
(582,1094,qs),
(582,1047,o),
(558,1024,qs),
(535,1001,o),
(489,1001,qs),
(442,1001,o),
(419,1024,qs),
(395,1047,o),
(395,1094,qs),
(395,1140,o)
);
},
{
closed = 1;
nodes = (
(646,1251,qs),
(594,1303,o),
(489,1303,qs),
(383,1303,o),
(331,1251,qs),
(279,1199,o),
(279,1094,qs),
(279,989,o),
(331,936,qs),
(383,884,o),
(489,884,qs),
(594,884,o),
(646,936,qs),
(698,989,o),
(698,1094,qs),
(698,1199,o)
);
},
{
closed = 1;
nodes = (
(419,279,qs),
(442,303,o),
(489,303,qs),
(535,303,o),
(558,279,qs),
(582,256,o),
(582,209,qs),
(582,163,o),
(558,140,qs),
(535,116,o),
(489,116,qs),
(442,116,o),
(419,140,qs),
(395,163,o),
(395,209,qs),
(395,256,o)
);
},
{
closed = 1;
nodes = (
(646,367,qs),
(594,419,o),
(489,419,qs),
(383,419,o),
(331,367,qs),
(279,315,o),
(279,209,qs),
(279,104,o),
(331,52,qs),
(383,0,o),
(489,0,qs),
(594,0,o),
(646,52,qs),
(698,104,o),
(698,209,qs),
(698,315,o)
);
},
{
closed = 1;
nodes = (
(186,581,l),
(791,581,l),
(791,721,l),
(186,721,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
0 0 0 2 9 0 2 105 10 1 9 0 8 7 9 8 103 0 7 0 5 4 7 5 105 0 1 1 3 97 0 3 3 17 77 0 4 4 6 97 0 6 6 19 6 78 64 64 64 67 64 67 20 38 38 38 38 38 38 38 35 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 977;
}
);
note = uni17D6;
unicode = 6102;
},
{
glyphname = uni17D7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(610,943,qs),
(610,1024,o),
(555,1024,q),
(555,977,o),
(501,977,qs),
(432,977,o),
(432,1032,q),
(559,1163,l),
(778,991,l),
(1021,1163,l),
(1021,326,ls),
(1021,94,o),
(776,94,qs),
(481,94,o),
(481,271,q),
(435,271,o),
(390,217,o),
(390,163,qs),
(390,0,o),
(776,0,qs),
(1143,0,o),
(1143,326,qs),
(1143,1302,l),
(1045,1302,l),
(776,1108,l),
(532,1303,l),
(444,1235,o),
(328,1099,o),
(299,1032,q),
(299,862,o),
(501,862,qs),
(610,862,o)
);
}
);
width = 1442;
}
);
note = uni17D7;
unicode = 6103;
},
{
glyphname = uni17D8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4120,977,qs),
(4197,977,o),
(4272,1004,qs),
(4345,1031,o),
(4437,1084,qs),
(4628,1197,l),
(4628,163,ls),
(4628,94,o),
(4492,94,q),
(4492,0,o),
(4594,0,qs),
(4751,0,o),
(4751,163,qs),
(4751,1303,l),
(4629,1303,l),
(4385,1162,ls),
(4307,1116,o),
(4247,1094,qs),
(4185,1071,o),
(4120,1071,qs),
(4030,1071,o),
(4030,1141,qs),
(4030,1220,o),
(4190,1220,q),
(4190,1257,o),
(4159,1280,qs),
(4127,1303,o),
(4064,1303,qs),
(3907,1303,o),
(3907,1140,qs),
(3907,977,o)
);
},
{
closed = 1;
nodes = (
(512,977,qs),
(589,977,o),
(664,1004,qs),
(737,1031,o),
(829,1084,qs),
(1020,1197,l),
(1020,163,ls),
(1020,94,o),
(884,94,q),
(884,0,o),
(986,0,qs),
(1143,0,o),
(1143,163,qs),
(1143,1303,l),
(1021,1303,l),
(777,1162,ls),
(699,1116,o),
(639,1094,qs),
(577,1071,o),
(512,1071,qs),
(422,1071,o),
(422,1141,qs),
(422,1220,o),
(582,1220,q),
(582,1257,o),
(551,1280,qs),
(519,1303,o),
(456,1303,qs),
(299,1303,o),
(299,1140,qs),
(299,977,o)
);
},
{
closed = 1;
nodes = (
(1964,337,qs),
(1981,326,o),
(1981,303,qs),
(1981,275,o),
(1967,247,qs),
(1953,220,o),
(1926,192,qs),
(1865,131,l),
(1865,349,l),
(1911,349,ls),
(1946,349,o)
);
},
{
closed = 1;
nodes = (
(3108,1009,l),
(3191,1147,l),
(3251,1109,ls),
(3302,1077,o),
(3347,1077,qs),
(3424,1077,o),
(3461,1187,q),
(3415,1187,ls),
(3376,1187,o),
(3319,1223,qs),
(3189,1303,l),
(3002,1025,l),
(3002,965,l),
(3185,862,l),
(3185,233,ls),
(3185,93,o),
(2932,93,qs),
(2839,93,ls),
(2586,93,o),
(2586,233,qs),
(2586,1103,l),
(2164,1303,l),
(1742,1104,l),
(1742,0,l),
(1865,0,l),
(2000,133,ls),
(2037,169,o),
(2056,212,qs),
(2074,255,o),
(2074,303,qs),
(2074,372,o),
(2033,408,qs),
(1992,442,o),
(1911,442,qs),
(1865,442,l),
(1865,1065,l),
(2124,1186,l),
(2463,1026,l),
(2463,233,ls),
(2463,0,o),
(2839,0,qs),
(2932,0,ls),
(3308,0,o),
(3308,233,qs),
(3308,889,l)
);
}
);
width = 5050;
}
);
note = uni17D8;
unicode = 6104;
},
{
glyphname = uni17D9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1053,163,qs),
(1163,326,o),
(1163,652,qs),
(1163,977,o),
(1053,1140,qs),
(942,1303,o),
(721,1303,qs),
(501,1303,o),
(390,1140,qs),
(279,977,o),
(279,652,qs),
(279,326,o),
(390,163,qs),
(501,0,o),
(721,0,qs),
(942,0,o)
);
},
{
closed = 1;
nodes = (
(970,1059,qs),
(1053,923,o),
(1053,652,qs),
(1053,380,o),
(970,244,qs),
(887,109,o),
(721,109,qs),
(555,109,o),
(473,244,qs),
(390,380,o),
(390,652,qs),
(390,923,o),
(473,1059,qs),
(555,1194,o),
(721,1194,qs),
(887,1194,o)
);
},
{
closed = 1;
nodes = (
(887,326,qs),
(942,435,o),
(942,652,qs),
(942,869,o),
(887,977,qs),
(832,1086,o),
(721,1086,qs),
(610,1086,o),
(555,977,qs),
(501,869,o),
(501,652,qs),
(501,435,o),
(555,326,qs),
(610,217,o),
(721,217,qs),
(832,217,o)
);
},
{
closed = 1;
nodes = (
(804,896,qs),
(832,815,o),
(832,652,qs),
(832,489,o),
(804,408,qs),
(776,326,o),
(721,326,qs),
(666,326,o),
(638,408,qs),
(610,489,o),
(610,652,qs),
(610,815,o),
(638,896,qs),
(666,977,o),
(721,977,qs),
(776,977,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
0 5 11 1 6 7 5 6 105 0 7 10 1 4 3 7 4 105 9 1 2 2 1 97 0 1 1 17 77 0 3 3 0 97 8 1 0 0 19 0 78 49 48 33 32 17 16 1 0 57 55 48 63 49 63 41 39 32 47 33 47 25 23 16 31 17 31 9 7 0 15 1 15 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D9;
unicode = 6105;
},
{
glyphname = uni17DA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,949,qs),
(279,355,ls),
(279,0,o),
(558,0,qs),
(802,0,o),
(1008,589,qs),
(1163,1035,l),
(1397,118,l),
(1490,118,l),
(1629,829,l),
(1768,237,l),
(1862,237,l),
(1956,589,l),
(2095,589,ls),
(2141,589,o),
(2141,649,qs),
(2141,708,o),
(2095,708,qs),
(1909,708,l),
(1815,443,l),
(1675,1061,l),
(1582,1061,l),
(1444,317,l),
(1211,1180,l),
(1117,1180,l),
(933,649,ls),
(840,377,o),
(653,115,o),
(560,115,qs),
(372,115,o),
(372,355,qs),
(372,949,ls),
(372,1185,o),
(560,1185,qs),
(745,1185,o),
(745,949,qs),
(745,829,o),
(608,829,qs),
(560,829,o),
(560,770,qs),
(560,711,o),
(608,711,qs),
(840,711,o),
(840,946,qs),
(840,1303,o),
(558,1303,qs),
(279,1303,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 115 values pushed */
39 1 2 6 26 23 2 9 8 2 76 36 1 2 1 75 0 5 3 6 3 5 6 128 0 6 2 3 6 2 126 0 9 8 10 8 9 10 128 0 10 4 8 10 4 126 0 2 0 1 7 2 1 105 0 7 0 8 9 7 8 105 0 3 3 0 97 12 1 0 0 17 77 0 4 4 11 97 0 11 11 19 11 78 1 0 43 41 38 37 35 34 33 31 29 27 25 24 22 21 18 16 13 11 9 7 5 3 0 46 1 46 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2420;
}
);
note = uni17DA;
unicode = 6106;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(633,671,l),
(154,671,l),
(154,571,l),
(633,571,l)
);
}
);
width = 793;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1000,0,l),
(119,0,l),
(119,-100,l),
(1000,-100,l)
);
}
);
width = 1150;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(595,-394,l),
(522,-340,o),
(391,-150,o),
(291,104,o),
(234,405,o),
(234,571,qs),
(234,591,ls),
(234,757,o),
(291,1058,o),
(392,1312,o),
(522,1499,o),
(595,1552,q),
(569,1625,l),
(563,1625,l),
(477,1577,o),
(316,1377,o),
(189,1102,o),
(114,770,o),
(114,588,qs),
(114,573,ls),
(114,387,o),
(188,55,o),
(315,-217,o),
(476,-413,o),
(563,-463,q),
(569,-463,l)
);
}
);
width = 637;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,-413,o),
(290,-217,o),
(417,55,o),
(492,387,o),
(492,573,qs),
(492,588,ls),
(492,770,o),
(417,1102,o),
(289,1377,o),
(128,1577,o),
(43,1625,q),
(37,1625,l),
(11,1556,l),
(82,1503,o),
(212,1313,o),
(312,1057,o),
(372,755,o),
(372,591,qs),
(372,571,ls),
(372,405,o),
(313,102,o),
(213,-153,o),
(83,-342,o),
(11,-394,q),
(37,-463,l),
(43,-463,l)
);
}
);
width = 629;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,-283,o),
(414,-86,o),
(414,57,qs),
(414,284,ls),
(414,396,o),
(319,559,o),
(222,594,q),
(319,629,o),
(414,791,o),
(414,904,qs),
(414,1132,ls),
(414,1276,o),
(530,1478,o),
(658,1519,q),
(632,1597,l),
(448,1542,o),
(294,1303,o),
(294,1132,qs),
(294,904,ls),
(294,781,o),
(181,646,o),
(63,646,q),
(63,543,l),
(181,543,o),
(294,407,o),
(294,284,qs),
(294,57,ls),
(294,-113,o),
(448,-350,o),
(632,-405,q),
(661,-326,l)
);
}
);
width = 697;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,-113,o),
(393,57,qs),
(393,284,ls),
(393,406,o),
(506,543,o),
(624,543,q),
(624,646,l),
(506,646,o),
(393,781,o),
(393,904,qs),
(393,1132,ls),
(393,1303,o),
(238,1542,o),
(56,1597,q),
(30,1519,l),
(156,1478,o),
(273,1276,o),
(273,1132,qs),
(273,904,ls),
(273,789,o),
(370,627,o),
(472,594,q),
(370,561,o),
(273,397,o),
(273,284,qs),
(273,57,ls),
(273,-86,o),
(154,-283,o),
(27,-326,q),
(56,-405,l),
(238,-350,o)
);
}
);
width = 696;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-211,l),
(277,-211,l),
(277,1563,l),
(487,1563,l),
(487,1664,l),
(157,1664,l),
(157,-312,l),
(487,-312,l)
);
}
);
width = 548;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,1664,l),
(23,1664,l),
(23,1563,l),
(233,1563,l),
(233,-211,l),
(23,-211,l),
(23,-312,l),
(353,-312,l)
);
}
);
width = 527;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(208,520,l),
(484,909,l),
(378,909,l),
(83,530,l),
(83,511,l),
(378,133,l),
(484,133,l)
);
},
{
closed = 1;
nodes = (
(517,520,l),
(793,909,l),
(687,909,l),
(392,530,l),
(392,511,l),
(687,133,l),
(793,133,l)
);
}
);
width = 919;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,541,l),
(505,560,l),
(211,944,l),
(105,944,l),
(380,550,l),
(105,162,l),
(211,162,l)
);
},
{
closed = 1;
nodes = (
(820,541,l),
(820,560,l),
(526,944,l),
(420,944,l),
(695,550,l),
(420,162,l),
(526,162,l)
);
}
);
width = 916;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,1366,l),
(277,1560,l),
(174,1560,l),
(174,1374,l),
(166,1091,l),
(238,1091,l)
);
},
{
closed = 1;
nodes = (
(518,1366,l),
(518,1560,l),
(415,1560,l),
(415,1374,l),
(407,1091,l),
(479,1091,l)
);
}
);
width = 680;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,1366,l),
(277,1560,l),
(174,1560,l),
(174,1374,l),
(166,1091,l),
(238,1091,l)
);
}
);
width = 439;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,163,l),
(145,163,l),
(145,0,l),
(282,0,l)
);
}
);
width = 467;
}
);
note = period;
unicode = 46;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,-45,o),
(272,48,qs),
(272,188,l),
(152,188,l),
(152,45,ls),
(152,-33,o),
(107,-163,o),
(60,-229,q),
(131,-281,l),
(197,-219,o)
);
}
);
width = 393;
}
);
note = comma;
unicode = 44;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(267,163,l),
(130,163,l),
(130,0,l),
(267,0,l)
);
},
{
closed = 1;
nodes = (
(267,1080,l),
(130,1080,l),
(130,917,l),
(267,917,l)
);
}
);
width = 389;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,1082,l),
(135,1082,l),
(135,919,l),
(272,919,l)
);
},
{
closed = 1;
nodes = (
(277,-45,o),
(277,48,qs),
(277,188,l),
(157,188,l),
(157,45,ls),
(157,-33,o),
(112,-163,o),
(65,-229,q),
(136,-281,l),
(202,-219,o)
);
}
);
width = 392;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(274,1456,l),
(154,1456,l),
(154,478,l),
(274,478,l)
);
},
{
closed = 1;
nodes = (
(285,166,l),
(143,166,l),
(143,0,l),
(285,0,l)
);
}
);
width = 458;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(481,469,o),
(492,547,o),
(530,609,o),
(569,646,qs),
(655,727,o),
(768,867,o),
(824,1013,o),
(824,1104,qs),
(824,1275,o),
(622,1477,o),
(443,1477,qs),
(332,1477,o),
(160,1392,o),
(64,1232,o),
(65,1122,q),
(68,1116,l),
(180,1116,l),
(182,1235,o),
(324,1372,o),
(443,1372,qs),
(568,1372,o),
(704,1230,o),
(704,1102,qs),
(704,1027,o),
(664,909,o),
(574,794,o),
(498,723,qs),
(451,681,o),
(397,618,o),
(370,555,o),
(361,470,o),
(361,405,q),
(481,405,l)
);
},
{
closed = 1;
nodes = (
(497,153,l),
(358,153,l),
(358,0,l),
(497,0,l)
);
}
);
width = 925;
}
);
note = question;
unicode = 63;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(546,995,l),
(880,1110,l),
(847,1210,l),
(522,1083,l),
(530,1456,l),
(426,1456,l),
(430,1086,l),
(98,1209,l),
(66,1109,l),
(398,1001,l),
(181,700,l),
(266,640,l),
(470,944,l),
(684,638,l),
(769,700,l)
);
}
);
width = 953;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(417,410,l),
(731,410,l),
(654,0,l),
(754,0,l),
(831,410,l),
(1104,410,l),
(1104,503,l),
(849,503,l),
(932,945,l),
(1179,945,l),
(1179,1040,l),
(950,1040,l),
(1029,1456,l),
(929,1456,l),
(850,1040,l),
(536,1040,l),
(615,1456,l),
(515,1456,l),
(437,1040,l),
(139,1040,l),
(139,945,l),
(418,945,l),
(336,503,l),
(63,503,l),
(63,410,l),
(317,410,l),
(241,0,l),
(340,0,l)
);
},
{
closed = 1;
nodes = (
(832,945,l),
(749,503,l),
(436,503,l),
(518,945,l)
);
}
);
width = 1246;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(716,1456,l),
(608,1456,l),
(0,-125,l),
(109,-125,l)
);
}
);
width = 798;
}
);
note = slash;
unicode = 47;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,1456,l),
(36,1456,l),
(644,-125,l),
(761,-125,l)
);
}
);
width = 810;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = uni17DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,248,qs),
(229,283,o),
(229,303,qs),
(229,326,o),
(240,337,qs),
(252,349,o),
(276,349,qs),
(299,349,l),
(299,162,l),
(264,212,o)
);
},
{
closed = 1;
nodes = (
(222,1009,l),
(305,1147,l),
(365,1109,ls),
(416,1077,o),
(461,1077,qs),
(538,1077,o),
(575,1187,q),
(529,1187,ls),
(480,1187,o),
(423,1223,qs),
(293,1303,l),
(116,1025,l),
(116,965,l),
(299,862,l),
(299,652,l),
(116,652,l),
(116,559,l),
(299,559,l),
(299,442,l),
(276,442,ls),
(206,442,o),
(171,408,qs),
(136,372,o),
(136,303,qs),
(136,268,o),
(156,222,qs),
(177,176,o),
(217,117,qs),
(299,0,l),
(422,0,l),
(422,559,l),
(605,559,l),
(605,652,l),
(422,652,l),
(422,889,l)
);
}
);
width = 721;
}
);
note = uni17DB;
unicode = 6107;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(599,-19,l),
(775,-4,o),
(982,195,o),
(982,361,qs),
(982,472,o),
(895,624,o),
(715,733,o),
(577,780,qs),
(448,823,o),
(305,911,o),
(248,1021,o),
(248,1098,qs),
(248,1217,o),
(401,1372,o),
(549,1372,qs),
(693,1372,o),
(853,1181,o),
(853,1029,q),
(962,1029,l),
(969,1031,l),
(971,1228,o),
(777,1457,o),
(603,1474,q),
(603,1677,l),
(500,1677,l),
(500,1474,l),
(328,1461,o),
(128,1258,o),
(128,1095,qs),
(128,983,o),
(216,829,o),
(397,719,o),
(536,675,qs),
(658,632,o),
(801,543,o),
(862,433,o),
(862,359,qs),
(862,280,o),
(784,155,o),
(640,84,o),
(542,84,qs),
(447,84,o),
(290,152,o),
(197,300,o),
(197,418,q),
(85,418,l),
(83,413,l),
(80,272,o),
(187,86,o),
(377,-11,o),
(497,-19,q),
(497,-208,l),
(599,-208,l)
);
}
);
width = 1097;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(627,629,l),
(1071,629,l),
(1071,739,l),
(627,739,l),
(627,1206,l),
(507,1206,l),
(507,739,l),
(73,739,l),
(73,629,l),
(507,629,l),
(507,146,l),
(627,146,l)
);
}
);
width = 1145;
}
);
note = plus;
unicode = 43;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(981,939,l),
(147,939,l),
(147,834,l),
(981,834,l)
);
},
{
closed = 1;
nodes = (
(981,527,l),
(147,527,l),
(147,423,l),
(981,423,l)
);
}
);
width = 1127;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(970,589,l),
(125,967,l),
(125,845,l),
(756,574,l),
(859,545,l),
(859,539,l),
(756,511,l),
(125,236,l),
(125,114,l),
(970,493,l)
);
}
);
width = 1056;
}
);
note = greater;
unicode = 62;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(289,516,l),
(186,544,l),
(186,550,l),
(289,578,l),
(903,851,l),
(903,975,l),
(76,597,l),
(76,502,l),
(903,123,l),
(903,247,l)
);
}
);
width = 1022;
}
);
note = less;
unicode = 60;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1161,510,o),
(1235,654,o),
(1235,740,q),
(1137,755,l),
(1137,657,o),
(1029,529,o),
(952,529,qs),
(895,529,o),
(788,580,o),
(725,637,qs),
(636,713,o),
(489,787,o),
(402,787,qs),
(320,787,o),
(193,704,o),
(121,562,o),
(121,474,q),
(218,459,l),
(218,560,o),
(323,682,o),
(402,682,qs),
(457,682,o),
(567,628,o),
(631,574,qs),
(719,495,o),
(864,424,o),
(952,424,qs),
(1033,424,o)
);
}
);
width = 1376;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(380,1215,l),
(410,1308,l),
(416,1308,l),
(445,1215,l),
(642,729,l),
(758,729,l),
(460,1456,l),
(370,1456,l),
(71,729,l),
(187,729,l)
);
}
);
width = 845;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1040,1307,l),
(329,169,l),
(404,121,l),
(1115,1259,l)
);
},
{
closed = 1;
nodes = (
(1308,59,o),
(1380,195,o),
(1380,279,qs),
(1380,357,ls),
(1380,441,o),
(1308,577,o),
(1179,657,o),
(1094,657,qs),
(1009,657,o),
(881,576,o),
(809,440,o),
(809,357,qs),
(809,279,ls),
(809,195,o),
(881,59,o),
(1010,-21,o),
(1096,-21,qs),
(1180,-21,o)
);
},
{
closed = 1;
nodes = (
(906,190,o),
(906,279,qs),
(906,357,ls),
(906,448,o),
(1004,571,o),
(1094,571,qs),
(1185,571,o),
(1283,448,o),
(1283,357,qs),
(1283,279,ls),
(1283,190,o),
(1185,65,o),
(1096,65,qs),
(1004,65,o)
);
},
{
closed = 1;
nodes = (
(576,880,o),
(647,1015,o),
(647,1099,qs),
(647,1176,ls),
(647,1260,o),
(576,1397,o),
(447,1477,o),
(362,1477,qs),
(277,1477,o),
(148,1397,o),
(77,1260,o),
(77,1176,qs),
(77,1099,ls),
(77,1015,o),
(149,880,o),
(278,800,o),
(364,800,qs),
(448,800,o)
);
},
{
closed = 1;
nodes = (
(174,1011,o),
(174,1099,qs),
(174,1176,ls),
(174,1263,o),
(272,1391,o),
(362,1391,qs),
(452,1391,o),
(550,1264,o),
(550,1176,qs),
(550,1099,ls),
(550,1011,o),
(453,886,o),
(364,886,qs),
(272,886,o)
);
}
);
width = 1458;
}
);
note = percent;
unicode = 37;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1163,-405,o),
(1228,-364,q),
(1197,-291,l),
(1135,-326,o),
(959,-369,o),
(865,-369,qs),
(637,-369,o),
(324,-157,o),
(171,224,o),
(184,478,qs),
(196,735,o),
(391,1121,o),
(724,1336,o),
(944,1336,qs),
(1302,1336,o),
(1642,903,o),
(1623,513,qs),
(1614,314,o),
(1448,64,o),
(1306,64,qs),
(1269,64,o),
(1207,105,o),
(1175,205,o),
(1181,293,qs),
(1230,853,l),
(1230,869,l),
(1161,924,o),
(1046,977,o),
(953,977,qs),
(841,977,o),
(659,838,o),
(541,586,o),
(526,416,qs),
(507,218,o),
(643,-21,o),
(774,-21,qs),
(981,-21,o),
(1086,176,q),
(1102,83,o),
(1207,-21,o),
(1285,-21,qs),
(1422,-21,o),
(1609,126,o),
(1709,369,o),
(1715,513,qs),
(1726,796,o),
(1556,1202,o),
(1206,1420,o),
(948,1420,qs),
(698,1420,o),
(319,1185,o),
(98,761,o),
(86,478,qs),
(74,190,o),
(254,-227,o),
(609,-453,o),
(860,-453,qs),
(957,-453,o)
);
},
{
closed = 1;
nodes = (
(621,261,o),
(636,416,qs),
(660,650,o),
(835,887,o),
(969,887,qs),
(1018,887,o),
(1096,858,o),
(1127,831,q),
(1083,335,ls),
(1082,324,o),
(1081,305,o),
(1081,296,q),
(1030,171,o),
(888,76,o),
(801,76,qs),
(706,76,o)
);
}
);
width = 1809;
}
);
note = at;
unicode = 64;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(851,72,o),
(929,142,q),
(1052,0,l),
(1190,0,l),
(1192,5,l),
(1007,222,l),
(1076,309,o),
(1149,523,o),
(1149,651,q),
(1038,651,l),
(1038,552,o),
(984,376,o),
(936,305,q),
(524,785,l),
(683,909,ls),
(768,973,o),
(858,1102,o),
(858,1193,qs),
(858,1275,o),
(781,1403,o),
(641,1477,o),
(545,1477,qs),
(441,1477,o),
(292,1400,o),
(212,1253,o),
(212,1148,qs),
(212,1061,o),
(289,898,o),
(369,797,q),
(361,791,o),
(345,779,o),
(337,772,qs),
(209,675,o),
(74,487,o),
(74,370,qs),
(74,252,o),
(185,76,o),
(387,-21,o),
(526,-21,qs),
(653,-21,o)
);
},
{
closed = 1;
nodes = (
(194,246,o),
(194,370,qs),
(194,436,o),
(273,587,o),
(389,682,qs),
(435,717,l),
(862,222,l),
(792,153,o),
(619,79,o),
(526,79,qs),
(365,79,o)
);
},
{
closed = 1;
nodes = (
(332,1083,o),
(332,1150,qs),
(332,1246,o),
(443,1376,o),
(545,1376,qs),
(639,1376,o),
(744,1272,o),
(744,1193,qs),
(744,1137,o),
(695,1038,o),
(636,994,qs),
(460,860,l),
(395,939,o)
);
}
);
width = 1270;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,1456,l),
(150,1456,l),
(150,-270,l),
(252,-270,l)
);
}
);
width = 426;
}
);
note = bar;
unicode = 124;
},
{
glyphname = uni17B7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1034,1559,qs),
(-994,1536,o),
(-915,1536,qs),
(-329,1536,l),
(-329,1629,l),
(-429,1702,ls),
(-540,1782,o),
(-634,1822,qs),
(-730,1862,o),
(-808,1862,qs),
(-941,1862,o),
(-1008,1804,qs),
(-1074,1745,o),
(-1074,1629,qs),
(-1074,1583,o)
);
},
{
closed = 1;
nodes = (
(-553,1676,o),
(-490,1629,q),
(-955,1629,l),
(-955,1676,o),
(-881,1762,o),
(-808,1762,qs),
(-727,1762,o)
);
}
);
width = 0;
}
);
note = uni17B7;
unicode = 6071;
},
{
glyphname = uni17B7_17CD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-295,1604,qs),
(-254,1632,o),
(-254,1687,qs),
(-254,1716,o),
(-301,1716,qs),
(-347,1716,o),
(-347,1687,qs),
(-347,1675,o),
(-387,1671,q),
(-429,1702,ls),
(-465,1728,o),
(-500,1750,q),
(-498,1778,o),
(-489,1792,qs),
(-477,1809,o),
(-394,1809,qs),
(-335,1809,o),
(-266,1763,q),
(-235,1763,o),
(-201,1773,q),
(-131,1807,o),
(-75,1853,qs),
(-19,1899,o),
(23,1958,q),
(34,1967,o),
(34,1980,qs),
(34,1994,o),
(20,2012,qs),
(-1,2039,o),
(-19,2039,q),
(-29,2037,l),
(-68,1970,o),
(-124,1925,qs),
(-179,1880,o),
(-250,1857,q),
(-304,1902,o),
(-394,1902,qs),
(-517,1902,o),
(-563,1861,qs),
(-588,1839,o),
(-600,1806,q),
(-617,1815,o),
(-634,1822,qs),
(-730,1862,o),
(-808,1862,qs),
(-941,1862,o),
(-1008,1804,qs),
(-1074,1745,o),
(-1074,1629,qs),
(-1074,1583,o),
(-1034,1559,qs),
(-994,1536,o),
(-915,1536,qs),
(-329,1536,l),
(-329,1589,l),
(-308,1595,o)
);
},
{
closed = 1;
nodes = (
(-553,1676,o),
(-490,1629,q),
(-955,1629,l),
(-955,1676,o),
(-881,1762,o),
(-808,1762,qs),
(-727,1762,o)
);
}
);
width = 0;
}
);
note = uni17B7_17CD;
},
{
glyphname = uni17B8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-553,1676,o),
(-490,1629,q),
(-955,1629,l),
(-955,1676,o),
(-881,1762,o),
(-808,1762,qs),
(-727,1762,o)
);
},
{
closed = 1;
nodes = (
(-634,1822,qs),
(-730,1862,o),
(-808,1862,qs),
(-941,1862,o),
(-1008,1804,qs),
(-1074,1745,o),
(-1074,1629,qs),
(-1074,1583,o),
(-1034,1559,qs),
(-994,1536,o),
(-915,1536,qs),
(-329,1536,l),
(-329,1908,l),
(-435,1908,l),
(-435,1706,l),
(-543,1783,o)
);
}
);
width = 0;
}
);
note = uni17B8;
unicode = 6072;
},
{
glyphname = uni17B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-553,1676,o),
(-490,1629,q),
(-955,1629,l),
(-955,1676,o),
(-881,1762,o),
(-808,1762,qs),
(-727,1762,o)
);
},
{
closed = 1;
nodes = (
(-542,1775,q),
(-543,1783,o),
(-543,1791,qs),
(-543,1818,o),
(-529,1832,qs),
(-516,1846,o),
(-490,1846,qs),
(-463,1846,o),
(-449,1833,qs),
(-435,1819,o),
(-435,1792,qs),
(-435,1765,o),
(-449,1752,qs),
(-461,1740,o),
(-482,1738,q),
(-512,1758,o)
);
},
{
closed = 1;
nodes = (
(-808,1862,qs),
(-941,1862,o),
(-1008,1804,qs),
(-1074,1745,o),
(-1074,1629,qs),
(-1074,1583,o),
(-1034,1559,qs),
(-994,1536,o),
(-915,1536,qs),
(-329,1536,l),
(-329,1629,l),
(-378,1665,l),
(-360,1681,o),
(-347,1704,qs),
(-330,1739,o),
(-330,1792,qs),
(-330,1872,o),
(-369,1912,qs),
(-410,1952,o),
(-490,1952,qs),
(-562,1952,o),
(-602,1918,qs),
(-638,1887,o),
(-647,1827,q),
(-735,1862,o)
);
}
);
width = 0;
}
);
note = uni17B9;
unicode = 6073;
},
{
glyphname = uni17BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-553,1676,o),
(-490,1629,q),
(-955,1629,l),
(-955,1676,o),
(-881,1762,o),
(-808,1762,qs),
(-727,1762,o)
);
},
{
closed = 1;
nodes = (
(-808,1862,qs),
(-941,1862,o),
(-1008,1804,qs),
(-1074,1745,o),
(-1074,1629,qs),
(-1074,1583,o),
(-1034,1559,qs),
(-994,1536,o),
(-915,1536,qs),
(-329,1536,l),
(-329,1908,l),
(-435,1908,l),
(-435,1706,l),
(-491,1746,o),
(-542,1775,q),
(-542,1944,l),
(-649,1944,l),
(-649,1828,l),
(-736,1862,o)
);
}
);
width = 0;
}
);
note = uni17BA;
unicode = 6074;
},
{
glyphname = uni17BB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-298,-100,o),
(-393,-100,qs),
(-488,-100,o),
(-488,-193,q),
(-421,-193,o),
(-421,-239,qs),
(-421,-658,l),
(-298,-658,l),
(-298,-193,ls)
);
}
);
width = 0;
}
);
note = uni17BB;
unicode = 6075;
},
{
glyphname = uni17BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-725,-123,qs),
(-744,-146,o),
(-744,-193,q),
(-697,-193,o),
(-697,-211,qs),
(-697,-239,o),
(-745,-273,qs),
(-792,-307,o),
(-921,-371,o),
(-921,-421,qs),
(-921,-527,o),
(-840,-613,o),
(-749,-613,q),
(-600,-580,o),
(-498,-491,qs),
(-395,-400,o),
(-337,-253,qs),
(-304,-169,o),
(-291,-157,qs),
(-278,-144,o),
(-278,-123,qs),
(-278,-100,o),
(-321,-100,qs),
(-346,-100,o),
(-381,-132,qs),
(-417,-165,o),
(-495,-344,o),
(-658,-488,o),
(-749,-520,q),
(-798,-520,o),
(-798,-421,q),
(-732,-388,o),
(-659,-313,o),
(-640,-289,qs),
(-604,-240,o),
(-604,-195,qs),
(-604,-147,o),
(-621,-124,qs),
(-637,-100,o),
(-669,-100,qs),
(-707,-100,o)
);
}
);
width = 0;
}
);
note = uni17BC;
unicode = 6076;
},
{
glyphname = uni17BD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-725,-123,qs),
(-744,-146,o),
(-744,-193,q),
(-697,-193,o),
(-697,-211,qs),
(-697,-247,o),
(-755,-290,qs),
(-814,-331,o),
(-921,-379,q),
(-921,-432,ls),
(-921,-542,o),
(-833,-612,o),
(-736,-612,q),
(-643,-519,l),
(-591,-612,l),
(-478,-599,o),
(-335,-389,o),
(-297,-193,qs),
(-288,-147,o),
(-288,-123,qs),
(-289,-100,o),
(-315,-100,qs),
(-341,-100,o),
(-364,-123,qs),
(-389,-146,o),
(-442,-347,o),
(-520,-500,o),
(-559,-519,q),
(-619,-426,l),
(-743,-519,l),
(-798,-519,o),
(-798,-431,q),
(-748,-410,o),
(-679,-353,o),
(-631,-286,o),
(-605,-221,o),
(-605,-193,qs),
(-605,-146,o),
(-621,-123,qs),
(-638,-100,o),
(-669,-100,qs),
(-707,-100,o)
);
}
);
width = 0;
}
);
note = uni17BD;
unicode = 6077;
},
{
glyphname = uni17BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-553,1676,o),
(-490,1629,q),
(-955,1629,l),
(-955,1676,o),
(-881,1762,o),
(-808,1762,qs),
(-727,1762,o)
);
},
{
closed = 1;
nodes = (
(-634,1822,qs),
(-730,1862,o),
(-808,1862,qs),
(-941,1862,o),
(-1008,1804,qs),
(-1074,1745,o),
(-1074,1629,qs),
(-1074,1583,o),
(-1034,1559,qs),
(-994,1536,o),
(-915,1536,qs),
(-329,1536,l),
(-329,1908,l),
(-435,1908,l),
(-435,1706,l),
(-543,1783,o)
);
}
);
width = 0;
}
);
note = uni17BE;
unicode = 6078;
},
{
glyphname = uni17C6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-697,1769,qs),
(-674,1792,o),
(-628,1792,qs),
(-581,1792,o),
(-558,1769,qs),
(-534,1745,o),
(-534,1699,qs),
(-534,1652,o),
(-558,1629,qs),
(-581,1606,o),
(-628,1606,qs),
(-674,1606,o),
(-697,1629,qs),
(-721,1652,o),
(-721,1699,qs),
(-721,1745,o)
);
},
{
closed = 1;
nodes = (
(-470,1856,qs),
(-522,1908,o),
(-628,1908,qs),
(-733,1908,o),
(-785,1856,qs),
(-837,1804,o),
(-837,1699,qs),
(-837,1594,o),
(-785,1542,qs),
(-733,1489,o),
(-628,1489,qs),
(-522,1489,o),
(-470,1542,qs),
(-418,1594,o),
(-418,1699,qs),
(-418,1804,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 3 0 1 0 3 1 105 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 38 38 38 35 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17C6;
unicode = 6086;
},
{
glyphname = uni17C9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-838,1925,l),
(-837,1536,l),
(-779,1489,l),
(-722,1536,l),
(-722,1925,l)
);
},
{
closed = 1;
nodes = (
(-531,1925,l),
(-530,1536,l),
(-472,1489,l),
(-414,1536,l),
(-414,1925,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
7 6 5 2 1 0 6 0 73 1 1 0 0 118 20 19 2 7 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17C9;
unicode = 6089;
},
{
glyphname = uni17CA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-313,1350,qs),
(-282,1350,o),
(-233,1466,q),
(-282,1466,ls),
(-318,1466,o),
(-358,1488,qs),
(-527,1583,l),
(-575,1583,l),
(-720,1473,l),
(-868,1583,l),
(-917,1583,l),
(-1210,1443,l),
(-1210,1399,l),
(-1142,1350,l),
(-994,1350,l),
(-1082,1413,l),
(-928,1484,l),
(-752,1350,l),
(-740,1350,l),
(-571,1478,l),
(-401,1381,ls),
(-345,1350,o)
);
}
);
width = 0;
}
);
note = uni17CA;
unicode = 6090;
},
{
glyphname = uni17CB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-779,1922,l),
(-779,1555,l),
(-721,1489,l),
(-662,1555,l),
(-662,1922,l)
);
}
);
width = 0;
}
);
note = uni17CB;
unicode = 6091;
},
{
glyphname = uni17CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-791,1706,qs),
(-717,1706,o),
(-659,1670,qs),
(-601,1636,o),
(-539,1566,q),
(-492,1519,o),
(-406,1519,qs),
(-368,1519,o),
(-322,1613,q),
(-445,1613,o),
(-468,1636,qs),
(-492,1659,ls),
(-561,1729,o),
(-631,1763,qs),
(-701,1799,o),
(-791,1799,qs),
(-1027,1799,o),
(-1027,1619,qs),
(-1027,1573,o),
(-992,1549,qs),
(-957,1526,o),
(-917,1526,qs),
(-811,1526,o),
(-811,1479,q),
(-738,1479,l),
(-738,1515,ls),
(-738,1549,o),
(-773,1584,qs),
(-808,1619,o),
(-917,1619,q),
(-917,1706,o)
);
}
);
width = 0;
}
);
note = uni17CC;
unicode = 6092;
},
{
glyphname = uni17CD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-839,1705,qs),
(-827,1722,o),
(-744,1722,qs),
(-685,1722,o),
(-616,1676,q),
(-585,1676,o),
(-551,1686,q),
(-481,1720,o),
(-425,1766,qs),
(-369,1812,o),
(-327,1871,q),
(-316,1880,o),
(-316,1893,qs),
(-316,1907,o),
(-330,1925,qs),
(-351,1952,o),
(-369,1952,q),
(-379,1950,l),
(-418,1883,o),
(-474,1838,qs),
(-529,1793,o),
(-600,1770,q),
(-654,1815,o),
(-744,1815,qs),
(-867,1815,o),
(-913,1774,qs),
(-960,1733,o),
(-960,1652,qs),
(-960,1571,o),
(-919,1530,qs),
(-878,1489,o),
(-797,1489,qs),
(-686,1489,o),
(-645,1517,qs),
(-604,1545,o),
(-604,1600,qs),
(-604,1629,o),
(-651,1629,qs),
(-697,1629,o),
(-697,1600,qs),
(-697,1583,o),
(-774,1583,qs),
(-827,1583,o),
(-839,1601,qs),
(-850,1618,o),
(-850,1653,qs),
(-850,1688,o)
);
}
);
width = 0;
}
);
note = uni17CD;
unicode = 6093;
},
{
glyphname = uni17CE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-767,1862,l),
(-767,1723,l),
(-907,1723,l),
(-907,1629,l),
(-767,1629,l),
(-767,1490,l),
(-674,1490,l),
(-674,1629,l),
(-535,1629,l),
(-535,1723,l),
(-674,1723,l),
(-674,1862,l)
);
}
);
width = 0;
}
);
note = uni17CE;
unicode = 6094;
},
{
glyphname = uni17CF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-419,1580,qs),
(-419,1691,o),
(-560,1691,qs),
(-595,1691,o),
(-595,1644,qs),
(-595,1597,o),
(-577,1597,qs),
(-514,1597,o),
(-514,1580,qs),
(-514,1551,o),
(-558,1551,qs),
(-585,1551,o),
(-681,1621,q),
(-718,1568,o),
(-755,1551,q),
(-775,1565,o),
(-802,1590,o),
(-820,1615,o),
(-832,1642,o),
(-838,1658,q),
(-747,1738,o),
(-654,1738,qs),
(-567,1738,o),
(-558,1784,q),
(-533,1848,o),
(-421,1877,o),
(-371,1877,qs),
(-325,1877,o),
(-325,1916,qs),
(-325,1955,o),
(-372,1955,qs),
(-465,1955,o),
(-604,1886,o),
(-651,1831,q),
(-817,1831,o),
(-930,1669,q),
(-915,1524,o),
(-767,1458,q),
(-719,1458,o),
(-682,1521,q),
(-636,1458,o),
(-558,1458,qs),
(-419,1458,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
37 33 29 22 6 5 6 7 2 1 0 6 2 76 27 1 6 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 6 6 7 114 0 3 0 4 2 3 4 105 0 2 0 5 7 2 5 105 0 6 0 0 6 89 0 6 6 0 98 1 8 2 0 6 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 7 5 6 5 7 6 128 0 3 0 4 2 3 4 105 0 2 0 5 7 2 5 105 0 6 0 0 6 89 0 6 6 0 98 1 8 2 0 6 0 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 40 38 32 30 21 19 16 14 12 10 8 7 4 3 0 42 1 42 9 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17CF;
unicode = 6095;
},
{
glyphname = uni17D0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-837,1645,qs),
(-837,1552,o),
(-779,1505,qs),
(-721,1459,o),
(-604,1459,qs),
(-395,1459,o),
(-290,1531,qs),
(-185,1604,o),
(-185,1750,qs),
(-185,1853,o),
(-221,1904,qs),
(-255,1955,o),
(-325,1955,qs),
(-372,1955,o),
(-372,1908,qs),
(-372,1862,o),
(-325,1862,qs),
(-278,1862,o),
(-278,1750,qs),
(-278,1651,o),
(-360,1602,qs),
(-441,1553,o),
(-604,1553,qs),
(-744,1553,o),
(-753,1645,q),
(-744,1598,o),
(-674,1598,qs),
(-604,1598,o),
(-604,1668,qs),
(-604,1738,o),
(-697,1738,qs),
(-837,1738,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 58 values pushed */
6 1 1 0 1 76 0 4 0 3 0 4 3 105 6 1 0 0 1 2 0 1 105 0 2 5 5 2 89 0 2 2 5 97 0 5 2 5 81 1 0 27 25 19 17 15 13 9 7 5 3 0 31 1 31 7 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D0;
unicode = 6096;
},
{
glyphname = uni17D1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1163,1489,l),
(-280,1489,l),
(-280,1583,l),
(-1163,1583,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 3 0 3 17 3 7 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D1;
unicode = 6097;
},
{
glyphname = uni17D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-791,-326,l),
(-791,-419,l),
(-651,-419,l),
(-651,-559,l),
(-558,-559,l),
(-558,-419,l),
(-419,-419,l),
(-419,-326,l),
(-558,-326,l),
(-558,-186,l),
(-651,-186,l),
(-651,-326,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 3 0 87 5 1 1 4 1 2 3 1 2 103 0 0 0 3 95 0 3 0 3 79 17 17 17 17 17 16 6 7 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D2;
unicode = 6098;
},
{
glyphname = uni17D2_1780;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-973,-182,o),
(-720,-182,qs),
(-468,-182,o),
(-468,-272,qs),
(-468,-673,l),
(-348,-673,l),
(-348,-272,ls),
(-348,-93,o),
(-720,-93,qs),
(-1093,-93,o),
(-1093,-271,qs),
(-1093,-673,l),
(-973,-673,l),
(-973,-272,ls)
);
}
);
width = 0;
}
);
note = uni17D2_1780;
},
{
glyphname = uni17D2_1781;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-325,-442,q),
(-445,-477,l),
(-445,-585,o),
(-697,-585,qs),
(-951,-585,o),
(-951,-493,q),
(-638,-450,ls),
(-325,-407,o),
(-325,-259,qs),
(-325,-94,o),
(-697,-94,qs),
(-1070,-94,o),
(-1070,-228,qs),
(-1070,-317,o),
(-950,-317,q),
(-950,-182,o),
(-697,-182,qs),
(-447,-182,o),
(-447,-255,qs),
(-447,-331,o),
(-727,-371,qs),
(-1008,-411,ls),
(-1070,-420,o),
(-1070,-495,qs),
(-1070,-674,o),
(-697,-674,qs),
(-325,-674,o)
);
}
);
width = 0;
}
);
note = uni17D2_1781;
},
{
glyphname = uni17D2_1782;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-720,-182,qs),
(-468,-182,o),
(-468,-272,qs),
(-468,-673,l),
(-348,-673,l),
(-348,-272,ls),
(-348,-93,o),
(-720,-93,qs),
(-1093,-93,o),
(-1093,-271,qs),
(-1093,-673,l),
(-973,-673,l),
(-846,-521,ls),
(-787,-450,o),
(-740,-450,qs),
(-647,-450,o),
(-647,-383,qs),
(-647,-316,o),
(-740,-316,qs),
(-786,-316,o),
(-880,-428,qs),
(-973,-539,l),
(-973,-272,ls),
(-973,-182,o)
);
}
);
width = 0;
}
);
note = uni17D2_1782;
},
{
glyphname = uni17D2_1784;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-348,-138,qs),
(-348,-93,l),
(-395,-93,ls),
(-414,-93,o),
(-436,-115,o),
(-439,-138,q),
(-451,-584,o),
(-814,-584,qs),
(-973,-584,o),
(-973,-450,qs),
(-973,-361,o),
(-860,-361,q),
(-860,-272,o),
(-953,-272,qs),
(-1093,-272,o),
(-1093,-450,qs),
(-1093,-673,o),
(-814,-673,qs),
(-360,-673,o)
);
}
);
width = 0;
}
);
note = uni17D2_1784;
},
{
glyphname = uni17D2_1785;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1046,-418,qs),
(-1093,-424,o),
(-1093,-509,qs),
(-1093,-674,o),
(-814,-674,qs),
(-613,-674,o),
(-440,-457,q),
(-350,-457,o),
(-255,-406,o),
(-255,-342,q),
(-323,-376,o),
(-348,-376,qs),
(-382,-376,l),
(-367,-351,o),
(-367,-324,qs),
(-367,-210,o),
(-488,-210,qs),
(-627,-210,o),
(-627,-334,qs),
(-627,-408,o),
(-546,-438,q),
(-684,-585,o),
(-814,-585,qs),
(-973,-585,o),
(-973,-509,q),
(-627,-398,o),
(-627,-138,qs),
(-627,-94,l),
(-701,-94,ls),
(-747,-94,o),
(-747,-138,q),
(-767,-383,o)
);
},
{
closed = 1;
nodes = (
(-534,-334,qs),
(-534,-296,o),
(-488,-296,qs),
(-454,-296,o),
(-454,-324,qs),
(-454,-336,o),
(-483,-368,q),
(-534,-359,o)
);
}
);
width = 0;
}
);
note = uni17D2_1785;
},
{
glyphname = uni17D2_1786;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1093,-139,qs),
(-1093,-371,l),
(-1139,-371,o),
(-1163,-393,qs),
(-1186,-415,o),
(-1186,-460,qs),
(-1186,-513,o),
(-1139,-585,q),
(-1093,-674,l),
(-973,-674,l),
(-973,-460,l),
(-907,-460,ls),
(-860,-460,o),
(-674,-674,o),
(-581,-674,qs),
(-348,-674,o),
(-348,-450,qs),
(-348,-94,l),
(-468,-94,l),
(-581,-226,o),
(-581,-295,qs),
(-581,-325,o),
(-552,-361,o),
(-522,-361,qs),
(-468,-361,l),
(-468,-450,ls),
(-468,-585,o),
(-581,-585,qs),
(-627,-585,o),
(-814,-371,o),
(-907,-371,qs),
(-973,-371,l),
(-973,-94,l),
(-1046,-94,ls),
(-1093,-94,o)
);
}
);
width = 0;
}
);
note = uni17D2_1786;
},
{
glyphname = uni17D2_1787;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-304,-343,qs),
(-304,-336,l),
(-261,-322,ls),
(-214,-304,o),
(-214,-264,qs),
(-214,-234,o),
(-242,-234,q),
(-312,-253,l),
(-342,-93,o),
(-490,-93,qs),
(-630,-93,o),
(-630,-227,qs),
(-630,-361,o),
(-490,-361,qs),
(-478,-361,o),
(-435,-360,o),
(-424,-359,q),
(-425,-584,o),
(-490,-584,qs),
(-559,-584,o),
(-723,-425,q),
(-882,-584,o),
(-956,-584,qs),
(-1022,-584,o),
(-1022,-342,qs),
(-1022,-182,o),
(-956,-182,qs),
(-909,-182,o),
(-909,-138,qs),
(-909,-93,o),
(-956,-93,qs),
(-1142,-93,o),
(-1142,-342,qs),
(-1142,-673,o),
(-956,-673,qs),
(-864,-673,o),
(-723,-547,q),
(-589,-673,o),
(-492,-673,qs),
(-304,-673,o)
);
},
{
closed = 1;
nodes = (
(-427,-271,q),
(-428,-272,o),
(-438,-272,qs),
(-492,-272,ls),
(-537,-272,o),
(-537,-227,qs),
(-537,-182,o),
(-490,-182,qs),
(-437,-182,o)
);
}
);
width = 0;
}
);
note = uni17D2_1787;
},
{
glyphname = uni17D2_1789;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-442,-143,qs),
(-535,-143,o),
(-535,-226,q),
(-422,-226,o),
(-422,-329,qs),
(-422,-515,o),
(-553,-515,qs),
(-681,-515,o),
(-771,-395,qs),
(-922,-190,o),
(-1093,-190,qs),
(-1233,-190,o),
(-1233,-320,qs),
(-1233,-367,l),
(-1193,-283,o),
(-1093,-283,qs),
(-1009,-283,o),
(-866,-474,qs),
(-766,-609,o),
(-553,-609,qs),
(-302,-609,o),
(-302,-329,qs),
(-302,-143,o)
);
}
);
width = 0;
}
);
note = uni17D2_1789;
},
{
glyphname = uni17D2_178A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-907,-469,qs),
(-907,-502,o),
(-973,-545,q),
(-973,-450,l),
(-907,-450,o)
);
},
{
closed = 1;
nodes = (
(-720,-182,qs),
(-468,-182,o),
(-468,-272,qs),
(-468,-673,l),
(-348,-673,l),
(-348,-272,ls),
(-348,-93,o),
(-720,-93,qs),
(-1093,-93,o),
(-1093,-272,qs),
(-1093,-673,l),
(-973,-673,l),
(-893,-606,ls),
(-814,-539,o),
(-814,-468,qs),
(-814,-414,o),
(-848,-388,qs),
(-883,-361,o),
(-973,-361,q),
(-973,-272,ls),
(-973,-182,o)
);
}
);
width = 0;
}
);
note = uni17D2_178A;
},
{
glyphname = uni17D2_178B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-467,-228,q),
(-730,-228,ls),
(-858,-228,o),
(-1010,-250,qs),
(-1092,-262,o),
(-1092,-317,qs),
(-1092,-374,o),
(-1069,-407,qs),
(-910,-635,ls),
(-884,-673,o),
(-865,-673,qs),
(-845,-673,o),
(-810,-638,qs),
(-705,-532,l),
(-448,-673,l),
(-348,-673,o),
(-348,-590,qs),
(-348,-227,ls),
(-348,-93,o),
(-451,-93,qs),
(-534,-93,o),
(-534,-160,qs),
(-534,-217,o)
);
},
{
closed = 1;
nodes = (
(-972,-338,l),
(-856,-317,o),
(-742,-317,qs),
(-468,-317,l),
(-468,-567,l),
(-720,-426,l),
(-850,-557,l)
);
}
);
width = 0;
}
);
note = uni17D2_178B;
},
{
glyphname = uni17D2_178C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-539,-190,l),
(-468,-234,l),
(-468,-271,ls),
(-468,-320,o),
(-749,-391,qs),
(-1031,-462,ls),
(-1093,-478,o),
(-1093,-523,qs),
(-1093,-651,o),
(-907,-651,qs),
(-651,-651,o),
(-468,-537,q),
(-468,-596,ls),
(-468,-635,o),
(-534,-675,q),
(-395,-675,o),
(-371,-655,qs),
(-348,-635,o),
(-348,-596,qs),
(-348,-413,l),
(-468,-445,l),
(-618,-572,o),
(-907,-572,qs),
(-973,-572,o),
(-973,-524,q),
(-660,-444,ls),
(-348,-364,o),
(-348,-271,qs),
(-348,-214,l),
(-534,-95,l),
(-720,-185,l),
(-907,-95,l),
(-1093,-214,l),
(-1093,-313,ls),
(-1093,-373,o),
(-1023,-373,qs),
(-973,-373,l),
(-908,-315,o),
(-908,-283,qs),
(-908,-254,o),
(-973,-254,q),
(-973,-235,l),
(-899,-190,l),
(-720,-276,l)
);
}
);
width = 0;
}
);
note = uni17D2_178C;
},
{
glyphname = uni17D2_178E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2184,-584,q),
(-2184,-450,l),
(-2166,-450,ls),
(-2138,-450,o),
(-2138,-486,qs),
(-2138,-521,o)
);
},
{
closed = 1;
nodes = (
(-1326,-524,l),
(-1084,-673,l),
(-964,-673,l),
(-964,-305,l),
(-764,-199,l),
(-469,-335,l),
(-469,-673,l),
(-349,-673,l),
(-349,-272,l),
(-721,-93,l),
(-1084,-271,l),
(-1084,-566,l),
(-1326,-417,l),
(-1569,-566,l),
(-1569,-272,l),
(-1932,-93,l),
(-2304,-271,l),
(-2304,-673,l),
(-2184,-673,l),
(-2091,-584,o),
(-2068,-517,qs),
(-2062,-500,o),
(-2056,-470,o),
(-2056,-455,qs),
(-2056,-441,o),
(-2062,-417,o),
(-2068,-405,qs),
(-2092,-361,o),
(-2138,-361,qs),
(-2184,-361,l),
(-2184,-303,l),
(-1978,-199,l),
(-1689,-336,l),
(-1689,-673,l),
(-1569,-673,l)
);
}
);
width = 0;
}
);
note = uni17D2_178E;
},
{
glyphname = uni17D2_178F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-907,-469,qs),
(-907,-502,o),
(-973,-545,q),
(-973,-450,l),
(-907,-450,o)
);
},
{
closed = 1;
nodes = (
(-720,-182,qs),
(-468,-182,o),
(-468,-272,qs),
(-468,-673,l),
(-348,-673,l),
(-348,-272,ls),
(-348,-93,o),
(-720,-93,qs),
(-1093,-93,o),
(-1093,-272,qs),
(-1093,-673,l),
(-973,-673,l),
(-893,-606,ls),
(-814,-539,o),
(-814,-468,qs),
(-814,-414,o),
(-848,-388,qs),
(-883,-361,o),
(-973,-361,q),
(-973,-272,ls),
(-973,-182,o)
);
}
);
width = 0;
}
);
note = uni17D2_178F;
},
{
glyphname = uni17D2_1790;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-977,-652,qs),
(-884,-652,o),
(-884,-559,q),
(-1043,-559,o),
(-1043,-409,qs),
(-1043,-186,o),
(-837,-186,qs),
(-651,-186,o),
(-534,-459,qs),
(-450,-652,o),
(-294,-652,qs),
(-232,-652,o),
(-232,-559,q),
(-355,-559,o),
(-422,-404,qs),
(-556,-93,o),
(-837,-93,qs),
(-1163,-93,o),
(-1163,-409,qs),
(-1163,-652,o)
);
}
);
width = 0;
}
);
note = uni17D2_1790;
},
{
glyphname = uni17D2_1791;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1046,-418,qs),
(-1093,-432,o),
(-1093,-504,qs),
(-1093,-673,o),
(-768,-673,qs),
(-604,-673,o),
(-468,-505,q),
(-468,-584,ls),
(-468,-628,o),
(-530,-673,q),
(-348,-673,o),
(-348,-584,qs),
(-348,-227,ls),
(-348,-182,o),
(-409,-182,qs),
(-448,-182,o),
(-469,-258,qs),
(-511,-421,o),
(-588,-502,qs),
(-666,-584,o),
(-768,-584,qs),
(-973,-584,o),
(-973,-507,q),
(-534,-376,o),
(-534,-182,qs),
(-534,-93,o),
(-627,-93,qs),
(-720,-93,o),
(-720,-182,q),
(-654,-182,o),
(-654,-227,qs),
(-654,-301,o)
);
}
);
width = 0;
}
);
note = uni17D2_1791;
},
{
glyphname = uni17D2_1792;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-581,-93,qs),
(-674,-93,o),
(-674,-138,q),
(-627,-138,o),
(-627,-182,q),
(-684,-263,o),
(-788,-325,qs),
(-893,-388,o),
(-1046,-435,q),
(-1093,-458,o),
(-1093,-524,qs),
(-1093,-673,o),
(-851,-673,qs),
(-674,-673,o),
(-674,-494,q),
(-611,-506,ls),
(-544,-519,o),
(-526,-519,qs),
(-348,-519,o),
(-348,-259,qs),
(-348,-93,o),
(-511,-93,qs),
(-534,-93,o),
(-534,-138,qs),
(-534,-182,o),
(-511,-182,qs),
(-468,-182,o),
(-468,-259,qs),
(-468,-421,o),
(-567,-421,qs),
(-600,-421,o),
(-655,-402,qs),
(-704,-385,l),
(-669,-362,o),
(-627,-321,qs),
(-534,-226,o),
(-534,-159,qs),
(-534,-93,o)
);
},
{
closed = 1;
nodes = (
(-855,-475,qs),
(-809,-451,o),
(-767,-426,q),
(-767,-491,ls),
(-767,-584,o),
(-851,-584,qs),
(-973,-584,o),
(-973,-524,q),
(-900,-499,o)
);
}
);
width = 0;
}
);
note = uni17D2_1792;
},
{
glyphname = uni17D2_1793;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-488,-539,q),
(-488,-673,o),
(-362,-673,qs),
(-256,-673,o),
(-256,-561,qs),
(-256,-450,o),
(-369,-450,q),
(-369,-272,l),
(-209,-272,l),
(-209,-182,l),
(-369,-182,l),
(-369,-93,l),
(-488,-93,l),
(-488,-182,l),
(-814,-182,ls),
(-1093,-182,o),
(-1093,-383,qs),
(-1093,-568,o),
(-818,-568,qs),
(-792,-568,o)
);
},
{
closed = 1;
nodes = (
(-814,-272,qs),
(-488,-272,l),
(-488,-450,l),
(-782,-479,o),
(-814,-479,qs),
(-973,-479,o),
(-973,-383,qs),
(-973,-272,o)
);
}
);
width = 0;
}
);
note = uni17D2_1793;
},
{
glyphname = uni17D2_1795;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-491,-316,qs),
(-468,-316,l),
(-468,-566,l),
(-720,-397,l),
(-973,-566,l),
(-973,-93,l),
(-1093,-93,l),
(-1093,-673,l),
(-973,-673,l),
(-720,-504,l),
(-468,-673,l),
(-348,-673,l),
(-348,-93,l),
(-468,-93,l),
(-514,-138,ls),
(-561,-182,o),
(-561,-249,qs),
(-561,-316,o)
);
}
);
width = 0;
}
);
note = uni17D2_1795;
},
{
glyphname = uni17D2_1796;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-913,-511,o),
(-973,-584,q),
(-973,-450,l),
(-935,-450,ls),
(-910,-450,o),
(-910,-471,qs),
(-910,-477,o)
);
},
{
closed = 1;
nodes = (
(-907,-93,l),
(-1093,-227,l),
(-1093,-673,l),
(-973,-673,l),
(-860,-584,o),
(-839,-521,qs),
(-825,-481,o),
(-825,-456,qs),
(-825,-428,o),
(-837,-405,qs),
(-861,-361,o),
(-907,-361,qs),
(-973,-361,l),
(-973,-249,l),
(-899,-199,l),
(-720,-297,l),
(-539,-199,l),
(-468,-248,l),
(-468,-673,l),
(-348,-673,l),
(-348,-227,l),
(-534,-93,l),
(-720,-194,l)
);
}
);
width = 0;
}
);
note = uni17D2_1796;
},
{
glyphname = uni17D2_1797;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1140,-478,qs),
(-1140,-450,o),
(-1093,-450,q),
(-1093,-545,l),
(-1140,-502,o)
);
},
{
closed = 1;
nodes = (
(-1199,-389,qs),
(-1233,-419,o),
(-1233,-477,qs),
(-1233,-539,o),
(-1163,-606,qs),
(-1093,-673,l),
(-974,-673,l),
(-974,-272,ls),
(-974,-182,o),
(-721,-182,qs),
(-469,-182,o),
(-469,-272,qs),
(-469,-673,l),
(-349,-673,l),
(-349,-272,ls),
(-349,-93,o),
(-721,-93,qs),
(-1093,-93,o),
(-1093,-272,qs),
(-1093,-361,l),
(-1163,-361,o)
);
}
);
width = 0;
}
);
note = uni17D2_1797;
},
{
glyphname = uni17D2_1798;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-468,-495,q),
(-468,-673,o),
(-301,-673,qs),
(-162,-673,o),
(-162,-539,qs),
(-162,-405,o),
(-348,-405,q),
(-348,-93,l),
(-468,-93,l),
(-468,-405,l),
(-840,-442,o),
(-870,-442,qs),
(-973,-442,o),
(-973,-361,qs),
(-973,-272,l),
(-1093,-272,o),
(-1093,-361,qs),
(-1093,-534,o),
(-906,-534,qs),
(-854,-534,o)
);
},
{
closed = 1;
nodes = (
(-301,-584,qs),
(-348,-584,o),
(-348,-495,q),
(-255,-495,o),
(-255,-539,qs),
(-255,-584,o)
);
}
);
width = 0;
}
);
note = uni17D2_1798;
},
{
glyphname = uni17D2_179B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1024,-652,qs),
(-884,-652,o),
(-884,-559,qs),
(-884,-465,o),
(-977,-465,q),
(-977,-559,o),
(-1024,-559,qs),
(-1090,-559,o),
(-1090,-465,qs),
(-1090,-186,o),
(-931,-186,qs),
(-790,-186,o),
(-719,-433,qs),
(-657,-652,o),
(-485,-652,qs),
(-281,-652,o),
(-184,-93,q),
(-303,-93,l),
(-384,-559,o),
(-485,-559,qs),
(-568,-559,o),
(-625,-357,qs),
(-700,-93,o),
(-931,-93,qs),
(-1210,-93,o),
(-1210,-465,qs),
(-1210,-652,o)
);
}
);
width = 0;
}
);
note = uni17D2_179B;
},
{
glyphname = uni17D2_179C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-348,-182,qs),
(-348,-93,l),
(-468,-93,l),
(-623,-247,o),
(-774,-323,qs),
(-925,-400,o),
(-1093,-401,q),
(-1093,-482,ls),
(-1093,-673,o),
(-814,-673,qs),
(-348,-673,o)
);
},
{
closed = 1;
nodes = (
(-814,-590,qs),
(-973,-590,o),
(-973,-482,q),
(-846,-461,o),
(-744,-413,qs),
(-641,-366,o),
(-470,-239,q),
(-481,-590,o)
);
}
);
width = 0;
}
);
note = uni17D2_179C;
},
{
glyphname = uni17D2_17A0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1007,-269,ls),
(-963,-296,o),
(-923,-296,qs),
(-884,-296,o),
(-856,-182,q),
(-884,-182,ls),
(-923,-182,o),
(-960,-160,qs),
(-1070,-93,l),
(-1238,-299,l),
(-1238,-346,l),
(-1117,-414,l),
(-1117,-495,ls),
(-1117,-673,o),
(-884,-673,qs),
(-662,-673,o),
(-662,-495,qs),
(-662,-272,ls),
(-662,-182,o),
(-559,-182,qs),
(-446,-182,o),
(-446,-272,qs),
(-446,-673,l),
(-326,-673,l),
(-326,-272,ls),
(-326,-93,o),
(-559,-93,qs),
(-781,-93,o),
(-781,-272,qs),
(-781,-495,ls),
(-781,-584,o),
(-884,-584,qs),
(-997,-584,o),
(-997,-495,qs),
(-997,-394,l),
(-1124,-305,l),
(-1068,-227,l)
);
}
);
width = 0;
}
);
note = uni17D2_17A0;
},
{
glyphname = uni17D2_17A2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1093,-667,q),
(-973,-667,l),
(-973,-459,l),
(-468,-459,l),
(-468,-501,l),
(-491,-501,ls),
(-561,-501,o),
(-561,-563,qs),
(-561,-626,o),
(-468,-667,q),
(-348,-667,l),
(-348,-310,l),
(-469,-242,l),
(-442,-210,l),
(-369,-252,o),
(-330,-252,qs),
(-301,-252,o),
(-274,-169,q),
(-320,-169,o),
(-386,-128,qs),
(-451,-87,l),
(-561,-211,l),
(-561,-294,l),
(-468,-335,l),
(-468,-377,l),
(-973,-377,l),
(-973,-310,l),
(-1084,-252,l),
(-1047,-218,l),
(-994,-252,o),
(-955,-252,qs),
(-926,-252,o),
(-899,-169,q),
(-944,-169,o),
(-991,-128,q),
(-1056,-87,l),
(-1186,-211,l),
(-1186,-294,l),
(-1093,-335,l),
(-1093,-501,l),
(-1116,-501,ls),
(-1186,-501,o),
(-1186,-563,qs),
(-1186,-626,o)
);
}
);
width = 0;
}
);
note = uni17D2_17A2;
},
{
glyphname = uni17D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-826,1699,qs),
(-791,1722,o),
(-721,1722,qs),
(-651,1722,o),
(-616,1699,qs),
(-582,1676,o),
(-582,1629,qs),
(-582,1583,o),
(-616,1559,qs),
(-651,1536,o),
(-721,1536,qs),
(-791,1536,o),
(-826,1559,qs),
(-861,1583,o),
(-861,1629,qs),
(-861,1676,o)
);
},
{
closed = 1;
nodes = (
(-547,1769,qs),
(-605,1815,o),
(-721,1815,qs),
(-838,1815,o),
(-895,1769,qs),
(-954,1722,o),
(-954,1629,qs),
(-954,1536,o),
(-895,1489,qs),
(-838,1443,o),
(-721,1443,qs),
(-605,1443,o),
(-547,1489,qs),
(-489,1536,o),
(-489,1629,qs),
(-489,1722,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 3 0 1 0 3 1 105 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 38 38 38 35 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D3;
unicode = 6099;
},
{
glyphname = uni17DD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-722,1661,qs),
(-450,1661,o),
(-450,1470,q),
(-296,1470,l),
(-296,1771,o),
(-721,1771,qs),
(-1146,1771,o),
(-1146,1470,q),
(-995,1470,l),
(-995,1661,o)
);
}
);
width = 0;
}
);
note = uni17DD;
unicode = 6109;
},
{
glyphname = uni17B7.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1034,1723,qs),
(-994,1700,o),
(-915,1700,qs),
(-329,1700,l),
(-329,1793,l),
(-429,1866,ls),
(-540,1946,o),
(-634,1986,qs),
(-730,2026,o),
(-808,2026,qs),
(-941,2026,o),
(-1008,1968,qs),
(-1074,1909,o),
(-1074,1793,qs),
(-1074,1747,o)
);
},
{
closed = 1;
nodes = (
(-553,1840,o),
(-490,1793,q),
(-955,1793,l),
(-955,1840,o),
(-881,1926,o),
(-808,1926,qs),
(-727,1926,o)
);
}
);
width = 0;
}
);
note = uni17B7.a;
},
{
glyphname = uni17B8.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-553,1840,o),
(-490,1793,q),
(-955,1793,l),
(-955,1840,o),
(-881,1926,o),
(-808,1926,qs),
(-727,1926,o)
);
},
{
closed = 1;
nodes = (
(-634,1986,qs),
(-730,2026,o),
(-808,2026,qs),
(-941,2026,o),
(-1008,1968,qs),
(-1074,1909,o),
(-1074,1793,qs),
(-1074,1747,o),
(-1034,1723,qs),
(-994,1700,o),
(-915,1700,qs),
(-329,1700,l),
(-329,2072,l),
(-435,2072,l),
(-435,1870,l),
(-543,1947,o)
);
}
);
width = 0;
}
);
note = uni17B8.a;
},
{
glyphname = uni17B9.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-553,1840,o),
(-490,1793,q),
(-955,1793,l),
(-955,1840,o),
(-881,1926,o),
(-808,1926,qs),
(-727,1926,o)
);
},
{
closed = 1;
nodes = (
(-542,1939,q),
(-543,1947,o),
(-543,1955,qs),
(-543,1982,o),
(-529,1996,qs),
(-516,2010,o),
(-490,2010,qs),
(-463,2010,o),
(-449,1997,qs),
(-435,1983,o),
(-435,1956,qs),
(-435,1929,o),
(-449,1916,qs),
(-461,1904,o),
(-482,1902,q),
(-512,1922,o)
);
},
{
closed = 1;
nodes = (
(-808,2026,qs),
(-941,2026,o),
(-1008,1968,qs),
(-1074,1909,o),
(-1074,1793,qs),
(-1074,1747,o),
(-1034,1723,qs),
(-994,1700,o),
(-915,1700,qs),
(-329,1700,l),
(-329,1793,l),
(-378,1829,l),
(-360,1845,o),
(-347,1868,qs),
(-330,1903,o),
(-330,1956,qs),
(-330,2036,o),
(-369,2076,qs),
(-410,2116,o),
(-490,2116,qs),
(-562,2116,o),
(-602,2082,qs),
(-638,2051,o),
(-647,1991,q),
(-735,2026,o)
);
}
);
width = 0;
}
);
note = uni17B9.a;
},
{
glyphname = uni17BA.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-553,1840,o),
(-490,1793,q),
(-955,1793,l),
(-955,1840,o),
(-881,1926,o),
(-808,1926,qs),
(-727,1926,o)
);
},
{
closed = 1;
nodes = (
(-808,2026,qs),
(-941,2026,o),
(-1008,1968,qs),
(-1074,1909,o),
(-1074,1793,qs),
(-1074,1747,o),
(-1034,1723,qs),
(-994,1700,o),
(-915,1700,qs),
(-329,1700,l),
(-329,2072,l),
(-435,2072,l),
(-435,1870,l),
(-491,1910,o),
(-542,1939,q),
(-542,2108,l),
(-649,2108,l),
(-649,1992,l),
(-736,2026,o)
);
}
);
width = 0;
}
);
note = uni17BA.a;
},
{
glyphname = uni17C6.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-697,1980,qs),
(-674,2003,o),
(-628,2003,qs),
(-581,2003,o),
(-558,1980,qs),
(-534,1956,o),
(-534,1910,qs),
(-534,1863,o),
(-558,1840,qs),
(-581,1817,o),
(-628,1817,qs),
(-674,1817,o),
(-697,1840,qs),
(-721,1863,o),
(-721,1910,qs),
(-721,1956,o)
);
},
{
closed = 1;
nodes = (
(-470,2067,qs),
(-522,2119,o),
(-628,2119,qs),
(-733,2119,o),
(-785,2067,qs),
(-837,2015,o),
(-837,1910,qs),
(-837,1805,o),
(-785,1753,qs),
(-733,1700,o),
(-628,1700,qs),
(-522,1700,o),
(-470,1753,qs),
(-418,1805,o),
(-418,1910,qs),
(-418,2015,o)
);
}
);
width = 0;
}
);
note = uni17C6.a;
},
{
glyphname = uni17CE.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-767,2072,l),
(-767,1933,l),
(-907,1933,l),
(-907,1839,l),
(-767,1839,l),
(-767,1700,l),
(-674,1700,l),
(-674,1839,l),
(-535,1839,l),
(-535,1933,l),
(-674,1933,l),
(-674,2072,l)
);
}
);
width = 0;
}
);
note = uni17CE.a;
},
{
glyphname = uni17D0.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-837,1853,qs),
(-837,1777,o),
(-779,1738,qs),
(-721,1700,o),
(-604,1700,qs),
(-395,1700,o),
(-290,1759,qs),
(-185,1820,o),
(-185,1940,qs),
(-185,2025,o),
(-221,2067,qs),
(-255,2109,o),
(-325,2109,qs),
(-372,2109,o),
(-372,2070,qs),
(-372,2032,o),
(-325,2032,qs),
(-278,2032,o),
(-278,1940,qs),
(-278,1858,o),
(-360,1818,qs),
(-441,1778,o),
(-604,1778,qs),
(-744,1778,o),
(-753,1853,q),
(-744,1815,o),
(-674,1815,qs),
(-604,1815,o),
(-604,1872,qs),
(-604,1930,o),
(-697,1930,qs),
(-837,1930,o)
);
}
);
width = 0;
}
);
note = uni17D0.a;
},
{
glyphname = uni17BB.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-298,-712,o),
(-393,-712,qs),
(-488,-712,o),
(-488,-805,q),
(-421,-805,o),
(-421,-851,qs),
(-421,-1120,l),
(-298,-1120,l),
(-298,-805,ls)
);
}
);
width = 0;
}
);
note = uni17BB.b;
},
{
glyphname = uni17BC.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-725,-730,qs),
(-744,-749,o),
(-744,-786,q),
(-697,-786,o),
(-697,-800,qs),
(-697,-823,o),
(-745,-850,qs),
(-792,-877,o),
(-921,-928,o),
(-921,-967,qs),
(-921,-1052,o),
(-840,-1120,o),
(-749,-1120,q),
(-600,-1094,o),
(-498,-1023,qs),
(-395,-951,o),
(-337,-834,qs),
(-304,-767,o),
(-291,-757,qs),
(-278,-747,o),
(-278,-730,qs),
(-278,-712,o),
(-321,-712,qs),
(-346,-712,o),
(-381,-737,qs),
(-417,-764,o),
(-495,-906,o),
(-658,-1021,o),
(-749,-1046,q),
(-798,-1046,o),
(-798,-967,q),
(-732,-941,o),
(-659,-881,o),
(-640,-862,qs),
(-604,-823,o),
(-604,-788,qs),
(-604,-749,o),
(-621,-731,qs),
(-637,-712,o),
(-669,-712,qs),
(-707,-712,o)
);
}
);
width = 0;
}
);
note = uni17BC.b;
},
{
glyphname = uni17BD.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-724,-730,qs),
(-743,-749,o),
(-743,-786,q),
(-696,-786,o),
(-696,-800,qs),
(-696,-829,o),
(-754,-863,qs),
(-813,-896,o),
(-920,-934,q),
(-920,-977,ls),
(-920,-1064,o),
(-832,-1120,o),
(-735,-1120,q),
(-642,-1046,l),
(-590,-1120,l),
(-477,-1110,o),
(-334,-942,o),
(-296,-786,qs),
(-287,-749,o),
(-287,-730,qs),
(-288,-712,o),
(-314,-712,qs),
(-340,-712,o),
(-363,-730,qs),
(-388,-749,o),
(-441,-909,o),
(-519,-1031,o),
(-558,-1046,q),
(-618,-972,l),
(-742,-1046,l),
(-797,-1046,o),
(-797,-976,q),
(-747,-959,o),
(-678,-914,o),
(-630,-860,o),
(-604,-808,o),
(-604,-786,qs),
(-604,-749,o),
(-620,-730,qs),
(-637,-712,o),
(-668,-712,qs),
(-706,-712,o)
);
}
);
width = 0;
}
);
note = uni17BD.b;
},
{
glyphname = uni17BB.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-732,0);
ref = uni17BB;
}
);
width = 0;
}
);
note = uni17BB.n;
},
{
glyphname = uni17BC.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-719,0);
ref = uni17BC;
}
);
width = 0;
}
);
note = uni17BC.n;
},
{
glyphname = uni17BD.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-749,0);
ref = uni17BD;
}
);
width = 0;
}
);
note = uni17BD.n;
},
{
glyphname = uni17BB.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-772,0);
ref = uni17BB.b;
}
);
width = 0;
}
);
note = uni17BB.n2;
},
{
glyphname = uni17BC.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-739,0);
ref = uni17BC.b;
}
);
width = 0;
}
);
note = uni17BC.n2;
},
{
glyphname = uni17BD.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-750,0);
ref = uni17BD.b;
}
);
width = 0;
}
);
note = uni17BD.n2;
},
{
glyphname = uni17B7.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-734,1559,qs),
(-694,1536,o),
(-615,1536,qs),
(-29,1536,l),
(-29,1629,l),
(-129,1702,ls),
(-240,1782,o),
(-334,1822,qs),
(-430,1862,o),
(-508,1862,qs),
(-641,1862,o),
(-708,1804,qs),
(-774,1745,o),
(-774,1629,qs),
(-774,1583,o)
);
},
{
closed = 1;
nodes = (
(-253,1676,o),
(-190,1629,q),
(-655,1629,l),
(-655,1676,o),
(-581,1762,o),
(-508,1762,qs),
(-427,1762,o)
);
}
);
width = 0;
}
);
note = uni17B7.r;
},
{
glyphname = uni17B8.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-253,1676,o),
(-190,1629,q),
(-655,1629,l),
(-655,1676,o),
(-581,1762,o),
(-508,1762,qs),
(-427,1762,o)
);
},
{
closed = 1;
nodes = (
(-334,1822,qs),
(-430,1862,o),
(-508,1862,qs),
(-641,1862,o),
(-708,1804,qs),
(-774,1745,o),
(-774,1629,qs),
(-774,1583,o),
(-734,1559,qs),
(-694,1536,o),
(-615,1536,qs),
(-29,1536,l),
(-29,1908,l),
(-135,1908,l),
(-135,1706,l),
(-243,1783,o)
);
}
);
width = 0;
}
);
note = uni17B8.r;
},
{
glyphname = uni17B9.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-253,1676,o),
(-190,1629,q),
(-655,1629,l),
(-655,1676,o),
(-581,1762,o),
(-508,1762,qs),
(-427,1762,o)
);
},
{
closed = 1;
nodes = (
(-242,1775,q),
(-243,1783,o),
(-243,1791,qs),
(-243,1818,o),
(-229,1832,qs),
(-216,1846,o),
(-190,1846,qs),
(-163,1846,o),
(-149,1833,qs),
(-135,1819,o),
(-135,1792,qs),
(-135,1765,o),
(-149,1752,qs),
(-161,1740,o),
(-182,1738,q),
(-212,1758,o)
);
},
{
closed = 1;
nodes = (
(-508,1862,qs),
(-641,1862,o),
(-708,1804,qs),
(-774,1745,o),
(-774,1629,qs),
(-774,1583,o),
(-734,1559,qs),
(-694,1536,o),
(-615,1536,qs),
(-29,1536,l),
(-29,1629,l),
(-78,1665,l),
(-60,1681,o),
(-47,1704,qs),
(-30,1739,o),
(-30,1792,qs),
(-30,1872,o),
(-69,1912,qs),
(-110,1952,o),
(-190,1952,qs),
(-262,1952,o),
(-302,1918,qs),
(-338,1887,o),
(-347,1827,q),
(-435,1862,o)
);
}
);
width = 0;
}
);
note = uni17B9.r;
},
{
glyphname = uni17BA.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-253,1676,o),
(-190,1629,q),
(-655,1629,l),
(-655,1676,o),
(-581,1762,o),
(-508,1762,qs),
(-427,1762,o)
);
},
{
closed = 1;
nodes = (
(-508,1862,qs),
(-641,1862,o),
(-708,1804,qs),
(-774,1745,o),
(-774,1629,qs),
(-774,1583,o),
(-734,1559,qs),
(-694,1536,o),
(-615,1536,qs),
(-29,1536,l),
(-29,1908,l),
(-135,1908,l),
(-135,1706,l),
(-191,1746,o),
(-242,1775,q),
(-242,1944,l),
(-349,1944,l),
(-349,1828,l),
(-436,1862,o)
);
}
);
width = 0;
}
);
note = uni17BA.r;
},
{
glyphname = uni17C6.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-477,1769,qs),
(-454,1792,o),
(-408,1792,qs),
(-361,1792,o),
(-338,1769,qs),
(-314,1745,o),
(-314,1699,qs),
(-314,1652,o),
(-338,1629,qs),
(-361,1606,o),
(-408,1606,qs),
(-454,1606,o),
(-477,1629,qs),
(-501,1652,o),
(-501,1699,qs),
(-501,1745,o)
);
},
{
closed = 1;
nodes = (
(-250,1856,qs),
(-302,1908,o),
(-408,1908,qs),
(-513,1908,o),
(-565,1856,qs),
(-617,1804,o),
(-617,1699,qs),
(-617,1594,o),
(-565,1542,qs),
(-513,1489,o),
(-408,1489,qs),
(-302,1489,o),
(-250,1542,qs),
(-198,1594,o),
(-198,1699,qs),
(-198,1804,o)
);
}
);
width = 0;
}
);
note = uni17C6.r;
},
{
glyphname = uni17C9.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-618,1925,l),
(-617,1536,l),
(-559,1489,l),
(-502,1536,l),
(-502,1925,l)
);
},
{
closed = 1;
nodes = (
(-311,1925,l),
(-310,1536,l),
(-252,1489,l),
(-194,1536,l),
(-194,1925,l)
);
}
);
width = 0;
}
);
note = uni17C9.r;
},
{
glyphname = uni17CD.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-539,1705,qs),
(-527,1722,o),
(-444,1722,qs),
(-385,1722,o),
(-316,1676,q),
(-285,1676,o),
(-251,1686,q),
(-181,1720,o),
(-125,1766,qs),
(-69,1812,o),
(-27,1871,q),
(-16,1880,o),
(-16,1893,qs),
(-16,1907,o),
(-30,1925,qs),
(-51,1952,o),
(-69,1952,q),
(-79,1950,l),
(-118,1883,o),
(-174,1838,qs),
(-229,1793,o),
(-300,1770,q),
(-354,1815,o),
(-444,1815,qs),
(-567,1815,o),
(-613,1774,qs),
(-660,1733,o),
(-660,1652,qs),
(-660,1571,o),
(-619,1530,qs),
(-578,1489,o),
(-497,1489,qs),
(-386,1489,o),
(-345,1517,qs),
(-304,1545,o),
(-304,1600,qs),
(-304,1629,o),
(-351,1629,qs),
(-397,1629,o),
(-397,1600,qs),
(-397,1583,o),
(-474,1583,qs),
(-527,1583,o),
(-539,1601,qs),
(-550,1618,o),
(-550,1653,qs),
(-550,1688,o)
);
}
);
width = 0;
}
);
note = uni17CD.r;
},
{
glyphname = uni17D2_1783_17B6;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-651,-254,qs),
(-651,-227,o),
(-604,-182,q),
(-604,-271,l),
(-628,-271,ls),
(-651,-271,o)
);
},
{
closed = 1;
nodes = (
(244,996,l),
(520,1177,l),
(1022,1014,l),
(1022,0,l),
(1145,0,l),
(1145,1103,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-495,ls),
(300,-584,o),
(140,-584,qs),
(-56,-584,o),
(-56,-495,qs),
(-56,-394,l),
(-193,-305,l),
(-136,-226,l),
(-76,-270,l),
(-32,-296,o),
(8,-296,qs),
(47,-296,o),
(75,-182,q),
(47,-182,ls),
(8,-182,o),
(-28,-160,qs),
(-139,-93,l),
(-306,-299,l),
(-306,-346,l),
(-175,-414,l),
(-175,-495,ls),
(-175,-584,o),
(-325,-584,qs),
(-485,-584,o),
(-485,-496,qs),
(-485,-93,l),
(-604,-93,l),
(-674,-138,o),
(-709,-178,qs),
(-744,-218,o),
(-744,-254,qs),
(-744,-308,o),
(-715,-334,qs),
(-686,-360,o),
(-628,-360,qs),
(-604,-360,l),
(-604,-495,ls),
(-604,-673,o),
(-325,-673,qs),
(-173,-673,o),
(-117,-624,q),
(-71,-673,o),
(140,-673,qs),
(423,-673,o),
(423,-495,qs),
(423,889,l)
);
}
);
width = 1442;
}
);
note = uni17D2_1783_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1783_17C5;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-651,-254,qs),
(-651,-227,o),
(-604,-182,q),
(-604,-271,l),
(-628,-271,ls),
(-651,-271,o)
);
},
{
closed = 1;
nodes = (
(1185,1164,qs),
(1185,1536,ls),
(1185,1722,o),
(1068,1722,qs),
(950,1722,o),
(950,1639,q),
(1063,1639,o),
(1063,1536,qs),
(1063,1130,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-495,ls),
(300,-584,o),
(140,-584,qs),
(-56,-584,o),
(-56,-495,qs),
(-56,-394,l),
(-193,-305,l),
(-136,-226,l),
(-76,-270,l),
(-32,-296,o),
(8,-296,qs),
(47,-296,o),
(75,-182,q),
(47,-182,ls),
(8,-182,o),
(-28,-160,qs),
(-139,-93,l),
(-306,-299,l),
(-306,-346,l),
(-175,-414,l),
(-175,-495,ls),
(-175,-584,o),
(-325,-584,qs),
(-485,-584,o),
(-485,-496,qs),
(-485,-93,l),
(-604,-93,l),
(-674,-138,o),
(-709,-178,qs),
(-744,-218,o),
(-744,-254,qs),
(-744,-308,o),
(-715,-334,qs),
(-686,-360,o),
(-628,-360,qs),
(-604,-360,l),
(-604,-495,ls),
(-604,-673,o),
(-325,-673,qs),
(-173,-673,o),
(-117,-624,q),
(-71,-673,o),
(140,-673,qs),
(423,-673,o),
(423,-495,qs),
(423,889,l),
(244,996,l),
(520,1177,l),
(1022,1014,l),
(1022,0,l),
(1145,0,l),
(1145,1036,l),
(1185,1120,o)
);
}
);
width = 1442;
}
);
note = uni17D2_1783_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1788_17B6;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(244,996,l),
(520,1177,l),
(1022,1014,l),
(1022,0,l),
(1145,0,l),
(1145,1103,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-495,ls),
(300,-584,o),
(122,-584,qs),
(-56,-584,o),
(-56,-501,qs),
(-56,-394,l),
(-193,-305,l),
(-136,-226,l),
(-75,-270,l),
(-32,-296,o),
(8,-296,qs),
(48,-296,o),
(75,-182,q),
(48,-182,ls),
(8,-182,o),
(-28,-160,qs),
(-139,-93,l),
(-306,-299,l),
(-306,-346,l),
(-175,-414,l),
(-175,-494,ls),
(-175,-584,o),
(-325,-584,qs),
(-474,-584,o),
(-474,-496,qs),
(-474,-271,ls),
(-474,-93,o),
(-744,-93,qs),
(-1023,-93,o),
(-1023,-270,qs),
(-1023,-673,l),
(-903,-673,l),
(-790,-558,o),
(-790,-495,qs),
(-790,-450,o),
(-860,-450,qs),
(-903,-450,l),
(-903,-271,ls),
(-903,-182,o),
(-744,-182,qs),
(-594,-182,o),
(-594,-271,qs),
(-594,-495,ls),
(-594,-673,o),
(-325,-673,qs),
(-184,-673,o),
(-114,-619,q),
(-45,-673,o),
(122,-673,qs),
(423,-673,o),
(423,-495,qs),
(423,889,l)
);
}
);
width = 1442;
}
);
note = uni17D2_1788_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1788_17C5;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1185,1164,qs),
(1185,1536,ls),
(1185,1722,o),
(1068,1722,qs),
(950,1722,o),
(950,1639,q),
(1063,1639,o),
(1063,1536,qs),
(1063,1130,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-495,ls),
(300,-584,o),
(122,-584,qs),
(-56,-584,o),
(-56,-501,qs),
(-56,-394,l),
(-193,-305,l),
(-136,-226,l),
(-75,-270,l),
(-32,-296,o),
(8,-296,qs),
(48,-296,o),
(75,-182,q),
(48,-182,ls),
(8,-182,o),
(-28,-160,qs),
(-139,-93,l),
(-306,-299,l),
(-306,-346,l),
(-175,-414,l),
(-175,-494,ls),
(-175,-584,o),
(-325,-584,qs),
(-474,-584,o),
(-474,-496,qs),
(-474,-271,ls),
(-474,-93,o),
(-744,-93,qs),
(-1023,-93,o),
(-1023,-270,qs),
(-1023,-673,l),
(-903,-673,l),
(-790,-558,o),
(-790,-495,qs),
(-790,-450,o),
(-860,-450,qs),
(-903,-450,l),
(-903,-271,ls),
(-903,-182,o),
(-744,-182,qs),
(-594,-182,o),
(-594,-271,qs),
(-594,-495,ls),
(-594,-673,o),
(-325,-673,qs),
(-184,-673,o),
(-114,-619,q),
(-45,-673,o),
(122,-673,qs),
(423,-673,o),
(423,-495,qs),
(423,889,l),
(244,996,l),
(520,1177,l),
(1022,1014,l),
(1022,0,l),
(1145,0,l),
(1145,1036,l),
(1185,1120,o)
);
}
);
width = 1442;
}
);
note = uni17D2_1788_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_178D_17B6;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-797,-491,o),
(-800,-499,q),
(-857,-584,l),
(-857,-450,l),
(-819,-450,ls),
(-794,-450,o),
(-794,-472,qs),
(-794,-476,o)
);
},
{
closed = 1;
nodes = (
(244,996,l),
(520,1177,l),
(1022,1014,l),
(1022,0,l),
(1145,0,l),
(1145,1103,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-495,ls),
(300,-584,o),
(177,-584,qs),
(98,-584,o),
(-98,-370,o),
(-186,-370,qs),
(-232,-370,l),
(-232,-227,l),
(-418,-93,l),
(-605,-194,l),
(-791,-93,l),
(-977,-227,l),
(-977,-673,l),
(-857,-673,l),
(-744,-584,o),
(-723,-522,qs),
(-709,-481,o),
(-709,-456,qs),
(-709,-428,o),
(-721,-406,qs),
(-745,-360,o),
(-791,-360,qs),
(-857,-360,l),
(-857,-249,l),
(-783,-199,l),
(-605,-296,l),
(-423,-199,l),
(-352,-248,l),
(-352,-370,l),
(-445,-370,o),
(-445,-459,qs),
(-445,-513,o),
(-398,-584,q),
(-352,-673,l),
(-232,-673,l),
(-232,-459,l),
(-186,-459,ls),
(-136,-459,o),
(57,-673,o),
(177,-673,qs),
(423,-673,o),
(423,-494,qs),
(423,889,l)
);
}
);
width = 1442;
}
);
note = uni17D2_178D_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_178D_17C5;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-797,-491,o),
(-800,-499,q),
(-857,-584,l),
(-857,-450,l),
(-819,-450,ls),
(-794,-450,o),
(-794,-472,qs),
(-794,-476,o)
);
},
{
closed = 1;
nodes = (
(1185,1164,qs),
(1185,1536,ls),
(1185,1722,o),
(1068,1722,qs),
(950,1722,o),
(950,1639,q),
(1063,1639,o),
(1063,1536,qs),
(1063,1130,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-495,ls),
(300,-584,o),
(177,-584,qs),
(98,-584,o),
(-98,-370,o),
(-186,-370,qs),
(-232,-370,l),
(-232,-227,l),
(-418,-93,l),
(-605,-194,l),
(-791,-93,l),
(-977,-227,l),
(-977,-673,l),
(-857,-673,l),
(-744,-584,o),
(-723,-522,qs),
(-709,-481,o),
(-709,-456,qs),
(-709,-428,o),
(-721,-406,qs),
(-745,-360,o),
(-791,-360,qs),
(-857,-360,l),
(-857,-249,l),
(-783,-199,l),
(-605,-296,l),
(-423,-199,l),
(-352,-248,l),
(-352,-370,l),
(-445,-370,o),
(-445,-459,qs),
(-445,-513,o),
(-398,-584,q),
(-352,-673,l),
(-232,-673,l),
(-232,-459,l),
(-186,-459,ls),
(-136,-459,o),
(57,-673,o),
(177,-673,qs),
(423,-673,o),
(423,-494,qs),
(423,889,l),
(244,996,l),
(520,1177,l),
(1022,1014,l),
(1022,0,l),
(1145,0,l),
(1145,1036,l),
(1185,1120,o)
);
}
);
width = 1442;
}
);
note = uni17D2_178D_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1794_17B6;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(244,996,l),
(520,1177,l),
(1022,1014,l),
(1022,0,l),
(1145,0,l),
(1145,1103,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-567,l),
(1,-395,l),
(-298,-567,l),
(-298,-316,l),
(-275,-316,ls),
(-205,-316,o),
(-205,-249,qs),
(-205,-182,o),
(-252,-138,qs),
(-298,-93,l),
(-418,-93,l),
(-418,-673,l),
(-298,-673,l),
(1,-501,l),
(300,-673,l),
(423,-673,l),
(423,889,l)
);
}
);
width = 1442;
}
);
note = uni17D2_1794_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1794_17C5;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1185,1164,qs),
(1185,1536,ls),
(1185,1722,o),
(1068,1722,qs),
(950,1722,o),
(950,1639,q),
(1063,1639,o),
(1063,1536,qs),
(1063,1130,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-567,l),
(1,-395,l),
(-298,-567,l),
(-298,-316,l),
(-275,-316,ls),
(-205,-316,o),
(-205,-249,qs),
(-205,-182,o),
(-252,-138,qs),
(-298,-93,l),
(-418,-93,l),
(-418,-673,l),
(-298,-673,l),
(1,-501,l),
(300,-673,l),
(423,-673,l),
(423,889,l),
(244,996,l),
(520,1177,l),
(1022,1014,l),
(1022,0,l),
(1145,0,l),
(1145,1036,l),
(1185,1120,o)
);
}
);
width = 1442;
}
);
note = uni17D2_1794_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1799_17B6;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(244,996,l),
(520,1177,l),
(1022,1014,l),
(1022,0,l),
(1145,0,l),
(1145,1103,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-495,ls),
(300,-584,o),
(1,-584,qs),
(-298,-584,o),
(-298,-495,qs),
(-298,-316,l),
(-275,-316,ls),
(-205,-316,o),
(-205,-249,qs),
(-205,-182,o),
(-252,-138,qs),
(-298,-93,l),
(-418,-93,l),
(-418,-495,ls),
(-418,-673,o),
(1,-673,qs),
(423,-673,o),
(423,-495,qs),
(423,889,l)
);
}
);
width = 1442;
}
);
note = uni17D2_1799_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1799_17C5;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1185,1164,qs),
(1185,1536,ls),
(1185,1722,o),
(1068,1722,qs),
(950,1722,o),
(950,1639,q),
(1063,1639,o),
(1063,1536,qs),
(1063,1130,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-495,ls),
(300,-584,o),
(1,-584,qs),
(-298,-584,o),
(-298,-495,qs),
(-298,-316,l),
(-275,-316,ls),
(-205,-316,o),
(-205,-249,qs),
(-205,-182,o),
(-252,-138,qs),
(-298,-93,l),
(-418,-93,l),
(-418,-495,ls),
(-418,-673,o),
(1,-673,qs),
(423,-673,o),
(423,-495,qs),
(423,889,l),
(244,996,l),
(520,1177,l),
(1022,1014,l),
(1022,0,l),
(1145,0,l),
(1145,1036,l),
(1185,1120,o)
);
}
);
width = 1442;
}
);
note = uni17D2_1799_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_179F_17B6;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(244,996,l),
(520,1177,l),
(1022,1014,l),
(1022,0,l),
(1145,0,l),
(1145,1103,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,93,l),
(141,93,l),
(141,0,l),
(300,0,l),
(300,-495,ls),
(300,-584,o),
(1,-584,qs),
(-298,-584,o),
(-298,-495,qs),
(-298,-93,l),
(-418,-93,l),
(-464,-138,ls),
(-511,-182,o),
(-511,-249,qs),
(-511,-316,o),
(-441,-316,qs),
(-418,-316,l),
(-418,-495,ls),
(-418,-673,o),
(1,-673,qs),
(423,-673,o),
(423,-495,qs),
(423,0,l),
(606,0,o),
(606,93,qs),
(606,140,o),
(560,140,q),
(560,93,o),
(423,93,q),
(423,889,l)
);
}
);
width = 1442;
}
);
note = uni17D2_179F_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_179F_17C5;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1185,1164,qs),
(1185,1536,ls),
(1185,1722,o),
(1068,1722,qs),
(950,1722,o),
(950,1639,q),
(1063,1639,o),
(1063,1536,qs),
(1063,1130,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,93,l),
(141,93,l),
(141,0,l),
(300,0,l),
(300,-495,ls),
(300,-584,o),
(1,-584,qs),
(-298,-584,o),
(-298,-495,qs),
(-298,-93,l),
(-418,-93,l),
(-464,-138,ls),
(-511,-182,o),
(-511,-249,qs),
(-511,-316,o),
(-441,-316,qs),
(-418,-316,l),
(-418,-495,ls),
(-418,-673,o),
(1,-673,qs),
(423,-673,o),
(423,-495,qs),
(423,0,l),
(606,0,o),
(606,93,qs),
(606,140,o),
(560,140,q),
(560,93,o),
(423,93,q),
(423,889,l),
(244,996,l),
(520,1177,l),
(1022,1014,l),
(1022,0,l),
(1145,0,l),
(1145,1036,l),
(1185,1120,o)
);
}
);
width = 1442;
}
);
note = uni17D2_179F_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D21783;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-651,-254,qs),
(-651,-227,o),
(-604,-182,q),
(-604,-271,l),
(-628,-271,ls),
(-651,-271,o)
);
},
{
closed = 1;
nodes = (
(223,1009,l),
(306,1147,l),
(366,1109,ls),
(417,1077,o),
(462,1077,qs),
(539,1077,o),
(576,1187,q),
(530,1187,ls),
(481,1187,o),
(424,1223,qs),
(294,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-495,ls),
(300,-584,o),
(140,-584,qs),
(-56,-584,o),
(-56,-495,qs),
(-56,-394,l),
(-193,-305,l),
(-136,-226,l),
(-76,-270,l),
(-32,-296,o),
(8,-296,qs),
(47,-296,o),
(75,-182,q),
(47,-182,ls),
(8,-182,o),
(-28,-160,qs),
(-139,-93,l),
(-306,-299,l),
(-306,-346,l),
(-175,-414,l),
(-175,-495,ls),
(-175,-584,o),
(-325,-584,qs),
(-485,-584,o),
(-485,-496,qs),
(-485,-93,l),
(-604,-93,l),
(-674,-138,o),
(-709,-178,qs),
(-744,-218,o),
(-744,-254,qs),
(-744,-308,o),
(-715,-334,qs),
(-686,-360,o),
(-628,-360,qs),
(-604,-360,l),
(-604,-495,ls),
(-604,-673,o),
(-325,-673,qs),
(-173,-673,o),
(-117,-624,q),
(-71,-673,o),
(140,-673,qs),
(423,-673,o),
(423,-495,qs),
(423,889,l)
);
}
);
width = 721;
}
);
note = uni17D21783;
subCategory = Spacing;
},
{
glyphname = uni17D21788;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(222,1009,l),
(305,1147,l),
(365,1109,ls),
(416,1077,o),
(461,1077,qs),
(538,1077,o),
(575,1187,q),
(529,1187,ls),
(480,1187,o),
(423,1223,qs),
(293,1303,l),
(116,1025,l),
(116,965,l),
(299,862,l),
(299,-495,ls),
(299,-584,o),
(121,-584,qs),
(-57,-584,o),
(-57,-501,qs),
(-57,-394,l),
(-194,-305,l),
(-137,-226,l),
(-76,-270,l),
(-33,-296,o),
(7,-296,qs),
(47,-296,o),
(74,-182,q),
(47,-182,ls),
(7,-182,o),
(-29,-160,qs),
(-140,-93,l),
(-307,-299,l),
(-307,-346,l),
(-176,-414,l),
(-176,-494,ls),
(-176,-584,o),
(-326,-584,qs),
(-475,-584,o),
(-475,-496,qs),
(-475,-271,ls),
(-475,-93,o),
(-745,-93,qs),
(-1024,-93,o),
(-1024,-270,qs),
(-1024,-673,l),
(-904,-673,l),
(-791,-558,o),
(-791,-495,qs),
(-791,-450,o),
(-861,-450,qs),
(-904,-450,l),
(-904,-271,ls),
(-904,-182,o),
(-745,-182,qs),
(-595,-182,o),
(-595,-271,qs),
(-595,-495,ls),
(-595,-673,o),
(-326,-673,qs),
(-185,-673,o),
(-115,-619,q),
(-46,-673,o),
(121,-673,qs),
(422,-673,o),
(422,-495,qs),
(422,889,l)
);
}
);
width = 721;
}
);
note = uni17D21788;
subCategory = Spacing;
},
{
glyphname = uni17D2178D;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-797,-491,o),
(-800,-499,q),
(-857,-584,l),
(-857,-450,l),
(-819,-450,ls),
(-794,-450,o),
(-794,-472,qs),
(-794,-476,o)
);
},
{
closed = 1;
nodes = (
(223,1009,l),
(306,1147,l),
(366,1109,ls),
(417,1077,o),
(462,1077,qs),
(539,1077,o),
(576,1187,q),
(530,1187,ls),
(481,1187,o),
(424,1223,qs),
(294,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-495,ls),
(300,-584,o),
(177,-584,qs),
(98,-584,o),
(-98,-370,o),
(-186,-370,qs),
(-232,-370,l),
(-232,-227,l),
(-418,-93,l),
(-605,-194,l),
(-791,-93,l),
(-977,-227,l),
(-977,-673,l),
(-857,-673,l),
(-744,-584,o),
(-723,-522,qs),
(-709,-481,o),
(-709,-456,qs),
(-709,-428,o),
(-721,-406,qs),
(-745,-360,o),
(-791,-360,qs),
(-857,-360,l),
(-857,-249,l),
(-783,-199,l),
(-605,-296,l),
(-423,-199,l),
(-352,-248,l),
(-352,-370,l),
(-445,-370,o),
(-445,-459,qs),
(-445,-513,o),
(-398,-584,q),
(-352,-673,l),
(-232,-673,l),
(-232,-459,l),
(-186,-459,ls),
(-136,-459,o),
(57,-673,o),
(177,-673,qs),
(423,-673,o),
(423,-494,qs),
(423,889,l)
);
}
);
width = 721;
}
);
note = uni17D2178D;
subCategory = Spacing;
},
{
glyphname = uni17D21794;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,1009,l),
(306,1147,l),
(366,1109,ls),
(417,1077,o),
(462,1077,qs),
(539,1077,o),
(576,1187,q),
(530,1187,ls),
(481,1187,o),
(424,1223,qs),
(294,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-567,l),
(1,-395,l),
(-298,-567,l),
(-298,-316,l),
(-275,-316,ls),
(-205,-316,o),
(-205,-249,qs),
(-205,-182,o),
(-252,-138,qs),
(-298,-93,l),
(-418,-93,l),
(-418,-673,l),
(-298,-673,l),
(1,-501,l),
(300,-673,l),
(423,-673,l),
(423,889,l)
);
}
);
width = 721;
}
);
note = uni17D21794;
subCategory = Spacing;
},
{
glyphname = uni17D21799;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,1009,l),
(306,1147,l),
(366,1109,ls),
(417,1077,o),
(462,1077,qs),
(539,1077,o),
(576,1187,q),
(530,1187,ls),
(481,1187,o),
(424,1223,qs),
(294,1303,l),
(117,1025,l),
(117,965,l),
(300,862,l),
(300,-495,ls),
(300,-584,o),
(1,-584,qs),
(-298,-584,o),
(-298,-495,qs),
(-298,-316,l),
(-275,-316,ls),
(-205,-316,o),
(-205,-249,qs),
(-205,-182,o),
(-252,-138,qs),
(-298,-93,l),
(-418,-93,l),
(-418,-495,ls),
(-418,-673,o),
(1,-673,qs),
(423,-673,o),
(423,-495,qs),
(423,889,l)
);
}
);
width = 721;
}
);
note = uni17D21799;
subCategory = Spacing;
},
{
glyphname = uni17D2179A;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(222,1009,l),
(305,1147,l),
(365,1109,ls),
(416,1077,o),
(461,1077,qs),
(538,1077,o),
(575,1187,q),
(529,1187,ls),
(480,1187,o),
(423,1223,qs),
(293,1303,l),
(116,1025,l),
(116,965,l),
(299,862,l),
(299,-426,ls),
(299,-659,o),
(721,-659,qs),
(1163,-659,o),
(1163,-426,qs),
(1163,-93,l),
(1044,-93,l),
(1044,-426,ls),
(1044,-565,o),
(721,-565,qs),
(422,-565,o),
(422,-426,qs),
(422,889,l)
);
}
);
width = 721;
}
);
note = uni17D2179A;
subCategory = Spacing;
},
{
glyphname = uni17D2179F;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(222,1009,l),
(305,1147,l),
(365,1109,ls),
(416,1077,o),
(461,1077,qs),
(538,1077,o),
(575,1187,q),
(529,1187,ls),
(480,1187,o),
(423,1223,qs),
(293,1303,l),
(116,1025,l),
(116,965,l),
(299,862,l),
(299,93,l),
(140,93,l),
(140,0,l),
(299,0,l),
(299,-495,ls),
(299,-584,o),
(0,-584,qs),
(-299,-584,o),
(-299,-495,qs),
(-299,-93,l),
(-419,-93,l),
(-465,-138,ls),
(-512,-182,o),
(-512,-249,qs),
(-512,-316,o),
(-442,-316,qs),
(-419,-316,l),
(-419,-495,ls),
(-419,-673,o),
(0,-673,qs),
(422,-673,o),
(422,-495,qs),
(422,0,l),
(605,0,o),
(605,93,qs),
(605,140,o),
(559,140,q),
(559,93,o),
(422,93,q),
(422,889,l)
);
}
);
width = 721;
}
);
note = uni17D2179F;
subCategory = Spacing;
},
{
glyphname = uni17D2179A.b;
lastChange = "2022-11-15 14:41:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(222,1009,l),
(305,1147,l),
(365,1109,ls),
(416,1077,o),
(461,1077,qs),
(538,1077,o),
(575,1187,q),
(529,1187,ls),
(480,1187,o),
(423,1223,qs),
(293,1303,l),
(116,1025,l),
(116,965,l),
(299,862,l),
(299,-887,ls),
(299,-1120,o),
(721,-1120,qs),
(1163,-1120,o),
(1163,-887,qs),
(1163,-724,l),
(1044,-724,l),
(1044,-887,ls),
(1044,-1026,o),
(721,-1026,qs),
(422,-1026,o),
(422,-887,qs),
(422,889,l)
);
}
);
width = 721;
}
);
note = uni17D2179A.b;
subCategory = Spacing;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,1560,l),
(40,1555,l),
(271,1307,l),
(359,1307,l),
(364,1310,l),
(183,1560,l)
);
}
);
width = 404;
}
);
note = grave;
unicode = 96;
},
{
glyphname = cho.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = cho.half;
},
{
glyphname = coeng_1789khmer.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1186,-85,l),
(-1326,-165,l),
(-1465,-85,l),
(-1698,-211,l),
(-1698,-387,l),
(-1578,-387,l),
(-1525,-347,o),
(-1525,-295,qs),
(-1525,-256,o),
(-1598,-256,q),
(-1598,-228,l),
(-1468,-169,l),
(-1326,-260,l),
(-1184,-179,l),
(-1073,-240,l),
(-1073,-387,l),
(-973,-387,l),
(-973,-249,l),
(-773,-171,l),
(-448,-272,l),
(-448,-387,l),
(-348,-387,l),
(-348,-212,l),
(-720,-85,l),
(-1007,-182,l)
);
},
{
closed = 1;
nodes = (
(-488,-427,qs),
(-561,-427,o),
(-561,-496,q),
(-448,-496,o),
(-448,-536,qs),
(-448,-586,o),
(-674,-586,qs),
(-880,-586,o),
(-1066,-526,qs),
(-1252,-467,o),
(-1419,-467,qs),
(-1698,-467,o),
(-1698,-578,qs),
(-1698,-617,l),
(-1582,-546,o),
(-1419,-546,qs),
(-1270,-546,o),
(-1088,-606,qs),
(-907,-665,o),
(-674,-665,qs),
(-348,-665,o),
(-348,-536,qs),
(-348,-427,o)
);
}
);
width = 0;
}
);
note = coeng_1789khmer.a;
},
{
glyphname = coeng_178Akhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-715,0);
ref = uni17D2_178A;
}
);
width = 0;
}
);
note = coeng_178Akhmer.n;
},
{
glyphname = coeng_178Akhmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (355,0);
ref = uni17D2_178A;
}
);
width = 0;
}
);
note = coeng_178Akhmer.r;
},
{
glyphname = coeng_178Bkhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-716,0);
ref = uni17D2_178B;
}
);
width = 0;
}
);
note = coeng_178Bkhmer.n;
},
{
glyphname = coeng_178Ckhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-725,0);
ref = uni17D2_178C;
}
);
width = 0;
}
);
note = coeng_178Ckhmer.n;
},
{
glyphname = coeng_1797khmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (346,0);
ref = uni17D2_1797;
}
);
width = 0;
}
);
note = coeng_1797khmer.r;
},
{
glyphname = coeng_1798khmer.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-468,-945,q),
(-468,-1123,o),
(-301,-1123,qs),
(-162,-1123,o),
(-162,-989,qs),
(-162,-855,o),
(-348,-855,q),
(-348,-703,l),
(-468,-703,l),
(-468,-855,l),
(-840,-892,o),
(-870,-892,qs),
(-973,-892,o),
(-973,-811,qs),
(-973,-722,l),
(-1093,-722,o),
(-1093,-811,qs),
(-1093,-984,o),
(-906,-984,qs),
(-854,-984,o)
);
},
{
closed = 1;
nodes = (
(-301,-1034,qs),
(-348,-1034,o),
(-348,-945,q),
(-255,-945,o),
(-255,-989,qs),
(-255,-1034,o)
);
}
);
width = 0;
}
);
note = coeng_1798khmer.b;
},
{
glyphname = coeng_1798khmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (263,0);
ref = uni17D2_1798;
}
);
width = 0;
}
);
note = coeng_1798khmer.r;
},
{
glyphname = coeng_17A0khmer.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1117,-966,ls),
(-1117,-1123,o),
(-884,-1123,qs),
(-662,-1123,o),
(-662,-966,qs),
(-662,-875,ls),
(-662,-796,o),
(-559,-796,qs),
(-446,-796,o),
(-446,-875,qs),
(-446,-1123,l),
(-326,-1123,l),
(-326,-875,ls),
(-326,-717,o),
(-559,-717,qs),
(-781,-717,o),
(-781,-875,qs),
(-781,-966,ls),
(-781,-1044,o),
(-884,-1044,qs),
(-997,-1044,o),
(-997,-966,qs),
(-997,-717,l),
(-1117,-717,l)
);
}
);
width = 0;
}
);
note = coeng_17A0khmer.b;
},
{
glyphname = coeng_17A0khmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-700,0);
ref = uni17D2_17A0;
}
);
width = 0;
}
);
note = coeng_17A0khmer.n;
},
{
glyphname = iMark_17CDkhmer.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-91,1604,qs),
(-55,1632,o),
(-55,1687,qs),
(-55,1716,o),
(-96,1716,qs),
(-136,1716,o),
(-136,1687,qs),
(-136,1675,o),
(-171,1671,q),
(-208,1702,ls),
(-240,1728,o),
(-270,1750,q),
(-269,1778,o),
(-261,1792,qs),
(-250,1809,o),
(-177,1809,qs),
(-126,1809,o),
(-65,1763,q),
(-38,1763,o),
(-8,1773,q),
(53,1807,o),
(102,1853,qs),
(152,1899,o),
(188,1958,q),
(198,1967,o),
(198,1980,qs),
(198,1994,o),
(186,2012,qs),
(167,2039,o),
(152,2039,q),
(143,2037,l),
(109,1970,o),
(59,1925,qs),
(11,1880,o),
(-51,1857,q),
(-99,1902,o),
(-177,1902,qs),
(-285,1902,o),
(-326,1861,qs),
(-348,1839,o),
(-358,1806,q),
(-373,1815,o),
(-388,1822,qs),
(-472,1862,o),
(-541,1862,qs),
(-657,1862,o),
(-716,1804,qs),
(-774,1745,o),
(-774,1629,qs),
(-774,1583,o),
(-739,1559,qs),
(-704,1536,o),
(-635,1536,qs),
(-120,1536,l),
(-120,1589,l),
(-102,1595,o)
);
},
{
closed = 1;
nodes = (
(-317,1676,o),
(-262,1629,q),
(-670,1629,l),
(-670,1676,o),
(-605,1762,o),
(-541,1762,qs),
(-470,1762,o)
);
}
);
width = 0;
}
);
note = iMark_17CDkhmer.r;
},
{
glyphname = nyo_17B6khmer.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(2464,1038,l),
(2464,0,l),
(2587,0,l),
(2587,1103,l),
(2145,1303,l),
(1802,1091,l),
(1443,1303,l),
(1093,1102,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,0,l),
(1143,0,l),
(1143,1025,l),
(1413,1178,l),
(1742,984,l),
(1742,0,l),
(1865,0,l),
(1865,1015,l),
(2121,1183,l)
);
}
);
width = 2164;
}
);
note = nyo_17B6khmer.a;
},
{
glyphname = nyo_17C5khmer.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,337,qs),
(538,326,o),
(538,303,qs),
(538,275,o),
(524,247,qs),
(510,220,o),
(483,192,qs),
(422,131,l),
(422,349,l),
(468,349,ls),
(503,349,o)
);
},
{
closed = 1;
nodes = (
(2626,1164,qs),
(2626,1536,ls),
(2626,1722,o),
(2509,1722,qs),
(2391,1722,o),
(2391,1639,q),
(2504,1639,o),
(2504,1536,qs),
(2504,1141,l),
(2145,1303,l),
(1802,1091,l),
(1443,1303,l),
(1093,1102,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(299,1056,l),
(299,0,l),
(422,0,l),
(557,133,ls),
(594,169,o),
(613,212,qs),
(631,255,o),
(631,303,qs),
(631,372,o),
(590,408,qs),
(549,442,o),
(468,442,qs),
(422,442,l),
(422,1046,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1020,1045,l),
(1020,0,l),
(1143,0,l),
(1143,1025,l),
(1413,1178,l),
(1742,984,l),
(1742,0,l),
(1865,0,l),
(1865,1015,l),
(2121,1183,l),
(2464,1038,l),
(2464,0,l),
(2587,0,l),
(2587,1038,l),
(2626,1121,o)
);
}
);
width = 2164;
}
);
note = nyo_17C5khmer.a;
},
{
glyphname = ru.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ru.half;
},
{
glyphname = ruu.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ruu.half;
},
{
glyphname = ta.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ta.half;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Regular;
properties = (
{
key = styleNames;
values = (
{
language = ENG;
value = Regular;
}
);
},
{
key = postscriptFullName;
value = "Khmer Light";
},
{
key = postscriptFontName;
value = KhmerLight;
}
);
weightClass = 300;
}
);
kerningLTR = {
m01 = {
A = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -123;
U = -41;
V = -164;
W = -143;
Y = -143;
asterisk = -143;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
question = -123;
quotedbl = -164;
quotesingle = -164;
u = -41;
v = -123;
w = -61;
y = -102;
};
B = {
A = -41;
T = -41;
V = -82;
W = -61;
X = -41;
Y = -82;
Z = -41;
asterisk = -41;
question = -41;
w = -20;
y = -41;
};
D = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
E = {
V = -41;
W = -41;
Y = -41;
};
F = {
A = -143;
a = -82;
c = -82;
d = -82;
e = -82;
g = -82;
o = -82;
q = -82;
};
G = {
T = -41;
V = -41;
W = -41;
Y = -41;
question = -41;
};
K = {
C = -41;
G = -41;
O = -41;
Q = -41;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
u = -41;
w = -61;
y = -61;
};
L = {
T = -143;
V = -102;
W = -102;
Y = -123;
asterisk = -164;
question = -143;
quotedbl = -123;
quotesingle = -123;
};
O = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
P = {
A = -102;
comma = -246;
period = -246;
};
Q = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
R = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -41;
U = -20;
V = -61;
W = -61;
Y = -61;
asterisk = -41;
question = -41;
w = -41;
y = -41;
};
S = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -41;
question = -41;
w = -20;
y = -41;
};
T = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -61;
c = -61;
comma = -184;
d = -61;
e = -61;
g = -61;
o = -61;
period = -184;
q = -61;
};
U = {
A = -41;
};
V = {
A = -164;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -123;
c = -123;
comma = -225;
d = -123;
e = -123;
g = -123;
o = -123;
period = -225;
q = -123;
s = -82;
};
W = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -102;
c = -123;
comma = -184;
d = -123;
e = -123;
g = -123;
o = -123;
period = -184;
q = -123;
};
X = {
C = -41;
G = -41;
O = -41;
Q = -41;
S = -20;
w = -61;
y = -102;
};
Y = {
A = -143;
C = -61;
G = -61;
O = -61;
Q = -61;
S = -41;
a = -123;
c = -143;
comma = -164;
d = -143;
e = -143;
g = -143;
o = -143;
period = -164;
q = -143;
s = -123;
};
a = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
asterisk = {
A = -102;
comma = -246;
period = -246;
};
b = {
y = -41;
};
f = {
asterisk = 164;
braceright = 184;
bracketright = 184;
parenright = 184;
quotedbl = 164;
quotesingle = 164;
};
h = {
quotedbl = -82;
y = -41;
};
k = {
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
};
n = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
o = {
y = -41;
};
p = {
y = -41;
};
quotedbl = {
A = -164;
g = -82;
};
quotesingle = {
A = -164;
g = -82;
};
r = {
a = -41;
asterisk = 61;
};
v = {
comma = -102;
period = -143;
};
w = {
comma = -143;
period = -143;
};
y = {
comma = -184;
period = -184;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2020 The Khmer Project Authors (https://github.com/danhhong/Khmer)";
}
);
},
{
key = familyNames;
values = (
{
language = ENG;
value = "Khmer Light";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Danh Hong";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Danh Hong";
}
);
},
{
key = designerURL;
value = "http://www.nextspell.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 2048;
versionMajor = 8;
versionMinor = 0;
}
