{
.appVersion = "3141";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = MONO;
},
{
name = panose;
value = (
2,
2,
6,
0,
6,
5,
0,
2,
2,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
9,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
43,
44,
45,
46,
60,
62,
64,
67,
69
);
},
{
name = codePageRanges;
value = (
"1252"
);
}
);
date = "2020-10-31 04:20:23 +0000";
familyName = "Khmer Thin";
featurePrefixes = (
{
code = "lookup SUB_0 {
	sub uni17B7 by uni17B7.r;
	sub uni17B8 by uni17B8.r;
	sub uni17B9 by uni17B9.r;
	sub uni17BA by uni17BA.r;
	sub uni17BE by uni17B8.r;
	sub uni17C6 by uni17C6.r;
	sub uni17C9 by uni17C9.r;
	sub uni17CD by uni17CD.r;
	sub uni17B7_17CD by iMark_17CDkhmer.r;
} SUB_0;
lookup SUB_1 {
	sub uni17B7 by uni17B7.a;
	sub uni17B8 by uni17B8.a;
	sub uni17B9 by uni17B9.a;
	sub uni17BA by uni17BA.a;
	sub uni17BE by uni17B8.a;
	sub uni17C6 by uni17C6.a;
	sub uni17CE by uni17CE.a;
	sub uni17D0 by uni17D0.a;
} SUB_1;
lookup SUB_10 {
	sub uni17C9 uni17B6 by uni17C9;
	sub uni17C9 uni17C4 by uni17C9;
	sub uni17C9 uni17C5 by uni17C9;
	sub uni17CA uni17B6 by uni17CA;
	sub uni17CA uni17C4 by uni17CA;
	sub uni17CA uni17C5 by uni17CA;
	sub uni17CC uni17B6 by uni17CC;
	sub uni17CC uni17C4 by uni17CC;
	sub uni17CC uni17C5 by uni17CC;
	sub uni17C9.r uni17B6 by uni17C9.r;
	sub uni17C9.r uni17C4 by uni17C9.r;
	sub uni17C9.r uni17C5 by uni17C9.r;
} SUB_10;
lookup SUB_11 {
	sub uni17D2_178A by coeng_178Akhmer.r;
	sub uni17D2_178F by coeng_178Akhmer.r;
	sub uni17D2_1797 by coeng_1797khmer.r;
	sub uni17D2_1798 by coeng_1798khmer.r;
} SUB_11;
lookup SUB_12 {
	sub uni17BB by uni17BB.b;
	sub uni17BC by uni17BC.b;
	sub uni17BD by uni17BD.b;
} SUB_12;
lookup SUB_13 {
	sub uni17BF by uni17BF.b;
	sub uni17C0 by uni17C0.b;
} SUB_13;
lookup SUB_14 {
	sub uni17CA by uni17BB;
} SUB_14;
lookup SUB_15 {
	sub uni17C9 by uni17BB;
	sub uni17C9.r by uni17BB;
} SUB_15;
lookup SUB_16 {
	sub uni1789 by uni1789.a;
} SUB_16;
lookup SUB_17 {
	sub uni17D2_1789 by coeng_1789khmer.a;
} SUB_17;
lookup SUB_18 {
	sub uni17D2_178A by coeng_178Akhmer.n;
	sub uni17D2_178B by coeng_178Bkhmer.n;
	sub uni17D2_178C by coeng_178Ckhmer.n;
	sub uni17D2_178F by coeng_178Akhmer.n;
	sub uni17D2_17A0 by coeng_17A0khmer.n;
} SUB_18;
lookup SUB_2 {
	sub uni17BB by uni17BB.n;
	sub uni17BC by uni17BC.n;
	sub uni17BD by uni17BD.n;
} SUB_2;
lookup SUB_3 {
	sub uni17BB.b by uni17BB.n2;
	sub uni17BC.b by uni17BC.n2;
	sub uni17BD.b by uni17BD.n2;
} SUB_3;
lookup SUB_4 {
	sub uni1780 by uni1780_17B6;
	sub uni1781 by uni1781_17B6;
	sub uni1782 by uni1782_17B6;
	sub uni1783 by uni1783_17B6;
	sub uni1784 by uni1784_17B6;
	sub uni1785 by uni1785_17B6;
	sub uni1786 by uni1786_17B6;
	sub uni1787 by uni1787_17B6;
	sub uni1788 by uni1788_17B6;
	sub uni1789 by uni1789_17B6;
	sub uni178A by uni178A_17B6;
	sub uni178B by uni178B_17B6;
	sub uni178C by uni178C_17B6;
	sub uni178D by uni178D_17B6;
	sub uni178E by uni178E_17B6;
	sub uni178F by uni178F_17B6;
	sub uni1790 by uni1790_17B6;
	sub uni1791 by uni1791_17B6;
	sub uni1792 by uni1792_17B6;
	sub uni1793 by uni1793_17B6;
	sub uni1794 by uni1794_17B6;
	sub uni1795 by uni1795_17B6;
	sub uni1796 by uni1796_17B6;
	sub uni1797 by uni1797_17B6;
	sub uni1798 by uni1798_17B6;
	sub uni1799 by uni1799_17B6;
	sub uni179A by uni179A_17B6;
	sub uni179B by uni179B_17B6;
	sub uni179C by uni179C_17B6;
	sub uni179F by uni179F_17B6;
	sub uni17A0 by uni17A0_17B6;
	sub uni17A1 by uni17A1_17B6;
	sub uni17A2 by uni17A2_17B6;
	sub uni1789.a by nyo_17B6khmer.a;
} SUB_4;
lookup SUB_5 {
	sub uni1780 by uni1780_17C5;
	sub uni1781 by uni1781_17C5;
	sub uni1782 by uni1782_17C5;
	sub uni1783 by uni1783_17C5;
	sub uni1784 by uni1784_17C5;
	sub uni1785 by uni1785_17C5;
	sub uni1786 by uni1786_17C5;
	sub uni1787 by uni1787_17C5;
	sub uni1788 by uni1788_17C5;
	sub uni1789 by uni1789_17C5;
	sub uni178A by uni178A_17C5;
	sub uni178B by uni178B_17C5;
	sub uni178C by uni178C_17C5;
	sub uni178D by uni178D_17C5;
	sub uni178E by uni178E_17C5;
	sub uni178F by uni178F_17C5;
	sub uni1790 by uni1790_17C5;
	sub uni1791 by uni1791_17C5;
	sub uni1792 by uni1792_17C5;
	sub uni1793 by uni1793_17C5;
	sub uni1794 by uni1794_17C5;
	sub uni1795 by uni1795_17C5;
	sub uni1796 by uni1796_17C5;
	sub uni1797 by uni1797_17C5;
	sub uni1798 by uni1798_17C5;
	sub uni1799 by uni1799_17C5;
	sub uni179A by uni179A_17C5;
	sub uni179B by uni179B_17C5;
	sub uni179C by uni179C_17C5;
	sub uni179F by uni179F_17C5;
	sub uni17A0 by uni17A0_17C5;
	sub uni17A1 by uni17A1_17C5;
	sub uni17A2 by uni17A2_17C5;
	sub uni1789.a by nyo_17C5khmer.a;
} SUB_5;
lookup SUB_6 {
	sub uni17B6 by uni17B6.space;
	sub uni17C4 by uni17B6.space;
	sub uni17C5 by uni17B6.space;
} SUB_6;
lookup SUB_7 {
	sub uni17D2_1798 by coeng_1798khmer.b;
	sub uni17D2_17A0 by coeng_17A0khmer.b;
} SUB_7;
lookup SUB_8 {
	sub uni17D2179A by uni17D2179A.b;
} SUB_8;
lookup SUB_9 {
	sub uni17D21799 by uni17D2_1799_17B6;
} SUB_9;
";
name = Prefix;
}
);
features = (
{
code = "script khmr;
language dflt;
lookup SUB_19 {
	sub uni17B7 uni17CD by uni17B7_17CD;
} SUB_19;
lookup SUB_20 {
	@SUB_20_0_IN_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17C9 uni17CD uni17B7_17CD];
	sub [uni179A uni179C] @SUB_20_0_IN_0' lookup SUB_0;
	@SUB_20_1_BT_0 = [uni17BB coeng_178Akhmer.r coeng_1797khmer.r coeng_1798khmer.r];
	@SUB_20_1_IN_1 = [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD];
	sub [uni179A uni179C] @SUB_20_1_BT_0 @SUB_20_1_IN_1' lookup SUB_0;
	@SUB_20_2_IN_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17CE uni17D0];
	sub uni17CA @SUB_20_2_IN_0' lookup SUB_1;
} SUB_20;
";
tag = abvs;
},
{
code = "script khmr;
language dflt;
lookup SUB_21 {
	sub uni17D2 uni1780 by uni17D2_1780;
	sub uni17D2 uni1781 by uni17D2_1781;
	sub uni17D2 uni1782 by uni17D2_1782;
	sub uni17D2 uni1784 by uni17D2_1784;
	sub uni17D2 uni1785 by uni17D2_1785;
	sub uni17D2 uni1786 by uni17D2_1786;
	sub uni17D2 uni1787 by uni17D2_1787;
	sub uni17D2 uni1789 by uni17D2_1789;
	sub uni17D2 uni178A by uni17D2_178A;
	sub uni17D2 uni178B by uni17D2_178B;
	sub uni17D2 uni178C by uni17D2_178C;
	sub uni17D2 uni178E by uni17D2_178E;
	sub uni17D2 uni178F by uni17D2_178F;
	sub uni17D2 uni1790 by uni17D2_1790;
	sub uni17D2 uni1791 by uni17D2_1791;
	sub uni17D2 uni1792 by uni17D2_1792;
	sub uni17D2 uni1793 by uni17D2_1793;
	sub uni17D2 uni1795 by uni17D2_1795;
	sub uni17D2 uni1796 by uni17D2_1796;
	sub uni17D2 uni1797 by uni17D2_1797;
	sub uni17D2 uni1798 by uni17D2_1798;
	sub uni17D2 uni179B by uni17D2_179B;
	sub uni17D2 uni179C by uni17D2_179C;
	sub uni17D2 uni17A0 by uni17D2_17A0;
	sub uni17D2 uni17A2 by uni17D2_17A2;
} SUB_21;
lookup SUB_22 {
	@SUB_22_0_IN_0 = [uni17D2_178A uni17D2_178F uni17D2_1797 uni17D2_1798];
	sub [uni179A uni179C] @SUB_22_0_IN_0' lookup SUB_11;
	@SUB_22_1_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_22_1_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_22_2_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_22_2_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni17A1 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_22_6_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_22_6_BT_0 [uni17BF uni17C0]' lookup SUB_13;
	sub [uni1789 uni17A1] [uni17BF uni17C0]' lookup SUB_13;
	@SUB_22_8_LA_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE];
	sub [uni179F uni17A0] uni17CA' lookup SUB_14 @SUB_22_8_LA_0;
	@SUB_22_9_LA_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17D0];
	sub [uni17C9 uni17C9.r]' lookup SUB_15 @SUB_22_9_LA_0;
	sub [uni17C9 uni17C9.r]' lookup SUB_15 uni17B6 uni17C6;
	sub [uni179F uni17A0] uni17CA' lookup SUB_14 uni17B6 uni17C6;
} SUB_22;
";
tag = blwf;
},
{
code = "script khmr;
language dflt;
lookup SUB_23 {
	sub uni17D21783 uni17B6 by uni17D2_1783_17B6;
	sub uni17D21783 uni17C4 by uni17D2_1783_17B6;
	sub uni17D21783 uni17C5 by uni17D2_1783_17C5;
	sub uni17D21788 uni17B6 by uni17D2_1788_17B6;
	sub uni17D21788 uni17C4 by uni17D2_1788_17B6;
	sub uni17D21788 uni17C5 by uni17D2_1788_17C5;
	sub uni17D2178D uni17B6 by uni17D2_178D_17B6;
	sub uni17D2178D uni17C4 by uni17D2_178D_17B6;
	sub uni17D2178D uni17C5 by uni17D2_178D_17C5;
	sub uni17D21794 uni17B6 by uni17D2_1794_17B6;
	sub uni17D21794 uni17C4 by uni17D2_1794_17B6;
	sub uni17D21794 uni17C5 by uni17D2_1794_17C5;
	sub uni17D21799 uni17B6 by uni17D2_1799_17B6;
	sub uni17D21799 uni17C4 by uni17D2_1799_17B6;
	sub uni17D21799 uni17C5 by uni17D2_1799_17C5;
	sub uni17D2179F uni17B6 by uni17D2_179F_17B6;
	sub uni17D2179F uni17C4 by uni17D2_179F_17B6;
	sub uni17D2179F uni17C5 by uni17D2_179F_17C5;
} SUB_23;
lookup SUB_24 {
	@SUB_24_0_LA_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D21783 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D21788 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2178D uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D21794 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D21799 uni17D2_179B uni17D2_179C uni17D2179F uni17D2_17A0 uni17D2_17A2];
	sub uni1789' lookup SUB_16 @SUB_24_0_LA_0;
	sub uni1789.a uni17D2_1789' lookup SUB_17;
	@SUB_24_2_IN_0 = [uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178F uni17D2_17A0];
	sub [uni178E uni178E_17B6 uni178E_17C5] @SUB_24_2_IN_0' lookup SUB_18;
	sub uni178E [uni17BB uni17BC uni17BD]' lookup SUB_2;
	@SUB_24_4_BT_0 = [coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_4_BT_0 [uni17BB.b uni17BC.b uni17BD.b]' lookup SUB_3;
	@SUB_24_5_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	sub @SUB_24_5_IN_0' lookup SUB_4 [uni17B6 uni17C4];
	@SUB_24_6_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_6_LA_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_6_IN_0' lookup SUB_4 @SUB_24_6_LA_1 [uni17B6 uni17C4];
	@SUB_24_7_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_7_LA_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_7_IN_0' lookup SUB_4 @SUB_24_7_LA_1 [uni17B6 uni17C4];
	@SUB_24_8_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	sub @SUB_24_8_IN_0' lookup SUB_5 uni17C5;
	@SUB_24_9_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_9_LA_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_9_IN_0' lookup SUB_5 @SUB_24_9_LA_1 uni17C5;
	@SUB_24_10_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_10_LA_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_10_IN_0' lookup SUB_5 @SUB_24_10_LA_1 uni17C5;
	@SUB_24_11_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	sub @SUB_24_11_BT_0 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_12_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_12_BT_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_12_BT_0 @SUB_24_12_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_13_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_13_BT_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_13_BT_0 @SUB_24_13_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	sub [uni17A1 uni17D2179F] [uni17D2_1798 uni17D2_17A0]' lookup SUB_7;
	@SUB_24_15_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_15_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_15_IN_0' lookup SUB_4 @SUB_24_15_LA_1 uni17B6;
	@SUB_24_16_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_16_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_16_IN_0' lookup SUB_4 @SUB_24_16_LA_1 uni17C4;
	@SUB_24_17_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_17_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_17_IN_0' lookup SUB_5 @SUB_24_17_LA_1 uni17C5;
	@SUB_24_18_LA_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub uni1789.a' lookup SUB_4 @SUB_24_18_LA_0 [uni17B6 uni17C4];
	@SUB_24_19_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_19_BT_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_19_BT_0 @SUB_24_19_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_20_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_20_BT_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_20_BT_0 @SUB_24_20_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_21_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_21_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_24_22_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_24_22_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni17A1 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789_17B6 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789_17B6 uni17BB.b uni17B6' lookup SUB_6;
} SUB_24;
";
tag = clig;
},
{
code = "script khmr;
language dflt;
lookup SUB_25 {
	sub uni17D2 uni179A by uni17D2179A;
} SUB_25;
lookup SUB_26 {
	@SUB_26_0_LA_0 = [uni1780 uni1781 uni1782 uni1784 uni1785 uni1786 uni1787 uni178A uni178B uni178C uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni17A2];
	@SUB_26_0_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub uni17D2179A' lookup SUB_8 @SUB_26_0_LA_0 @SUB_26_0_LA_1;
	sub [uni17C9 uni17C9.r]' lookup SUB_15 uni17B6.space uni17C6;
} SUB_26;
";
tag = pref;
},
{
code = "script khmr;
language dflt;
lookup SUB_27 {
	sub uni17D2 uni1783 by uni17D21783;
	sub uni17D2 uni1788 by uni17D21788;
	sub uni17D2 uni178D by uni17D2178D;
	sub uni17D2 uni1794 by uni17D21794;
	sub uni17D2 uni1799 by uni17D21799;
	sub uni17D2 uni179F by uni17D2179F;
} SUB_27;
lookup SUB_28 {
	@SUB_28_0_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_28_0_BT_0 [uni17BF uni17C0]' lookup SUB_13;
	sub uni17D21799' lookup SUB_9 uni17C9 uni17B6;
	@SUB_28_2_BT_0 = [uni17D2_1783_17B6 uni17D2_1788_17B6 uni17D2_178D_17B6 uni17D2_1794_17B6 uni17D2_1799_17B6 uni17D2_179F_17B6 uni17D2_1783_17C5 uni17D2_1788_17C5 uni17D2_178D_17C5 uni17D2_1794_17C5 uni17D2_1799_17C5 uni17D2_179F_17C5];
	@SUB_28_2_IN_1 = [uni17C9 uni17CA uni17CC uni17C9.r];
	sub @SUB_28_2_BT_0 @SUB_28_2_IN_1' lookup SUB_10 [uni17B6 uni17C4 uni17C5]' lookup SUB_10;
} SUB_28;
";
tag = pstf;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 2150;
},
{
name = typoDescender;
value = -1120;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2150;
},
{
name = winDescent;
value = 1120;
},
{
name = hheaAscender;
value = 2150;
},
{
name = hheaDescender;
value = -1120;
},
{
name = strikeoutPosition;
value = 498;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01240 22 2 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01229 8 15 7 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01237 6 22 5 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\0121920 1024 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\01264 64 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 6 values pushed */\01231 6 17 5 2 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    163,\012    163,\012    93,\012    93,\012    1303,\012    \"-93\",\012    0,\012    \"-559\",\012    \"-888\",\012    1303,\012    \"-93\",\012    0,\012    \"-659\",\012    \"-888\",\012    197,\012    197,\012    154,\012    154,\012    1456,\012    0,\012    1560,\012    1082,\012    0,\012    \"-416\",\012    1477,\012    \"-21\",\012    1581,\012    1102,\012    \"-21\",\012    \"-437\"\012)";
}
);
iconName = Light;
id = m01;
metricValues = (
{
pos = 2150;
},
{
pos = 1462;
},
{
pos = 1098;
},
{
},
{
pos = -1120;
},
{
}
);
name = Light;
}
);
glyphs = (
{
glyphname = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(364,54,l),
(221,54,l),
(363,435,l),
(1075,435,l),
(1218,54,l),
(1075,54,l),
(1075,0,l),
(1384,0,l),
(1384,54,l),
(1277,54,l),
(752,1456,l),
(686,1456,l),
(162,54,l),
(55,54,l),
(55,0,l),
(364,0,l)
);
},
{
closed = 1;
nodes = (
(716,1391,l),
(722,1391,l),
(750,1309,l),
(1055,489,l),
(383,489,l),
(689,1309,l)
);
}
);
width = 1472;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(912,0,o),
(1159,210,o),
(1159,401,qs),
(1159,489,o),
(1074,640,o),
(928,741,o),
(837,753,q),
(959,775,o),
(1093,953,o),
(1093,1083,qs),
(1093,1270,o),
(843,1456,o),
(617,1456,qs),
(234,1456,l),
(71,1456,l),
(71,1402,l),
(234,1402,l),
(234,54,l),
(71,54,l),
(71,0,l),
(709,0,ls)
);
},
{
closed = 1;
nodes = (
(719,719,ls),
(841,719,o),
(1014,633,o),
(1105,488,o),
(1105,399,qs),
(1105,236,o),
(893,54,o),
(709,54,qs),
(288,54,l),
(288,719,l)
);
},
{
closed = 1;
nodes = (
(617,1402,ls),
(825,1402,o),
(1038,1243,o),
(1038,1087,qs),
(1038,928,o),
(836,773,o),
(637,773,qs),
(288,773,l),
(288,1402,l)
);
}
);
width = 1247;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1137,40,o),
(1231,103,q),
(1231,372,l),
(1176,372,l),
(1176,137,l),
(1105,89,o),
(901,33,o),
(791,33,qs),
(601,33,o),
(329,206,o),
(184,515,o),
(184,719,qs),
(184,739,ls),
(184,943,o),
(332,1251,o),
(595,1423,o),
(767,1423,qs),
(863,1423,o),
(998,1393,o),
(1107,1337,o),
(1161,1296,q),
(1161,1062,l),
(1216,1062,l),
(1216,1319,l),
(1127,1397,o),
(925,1477,o),
(767,1477,qs),
(577,1477,o),
(290,1290,o),
(130,957,o),
(130,737,qs),
(130,719,ls),
(130,499,o),
(285,166,o),
(582,-21,o),
(794,-21,qs),
(917,-21,o)
);
}
);
width = 1348;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(808,0,o),
(1087,185,o),
(1248,509,o),
(1248,719,qs),
(1248,737,ls),
(1248,947,o),
(1087,1271,o),
(808,1456,o),
(629,1456,qs),
(234,1456,l),
(71,1456,l),
(71,1402,l),
(234,1402,l),
(234,54,l),
(71,54,l),
(71,0,l),
(629,0,ls)
);
},
{
closed = 1;
nodes = (
(629,1402,ls),
(792,1402,o),
(1047,1229,o),
(1194,930,o),
(1194,740,qs),
(1194,719,ls),
(1194,528,o),
(1047,227,o),
(792,54,o),
(629,54,qs),
(288,54,l),
(288,1402,l)
);
}
);
width = 1386;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1120,293,l),
(1066,293,l),
(1066,54,l),
(288,54,l),
(288,732,l),
(918,732,l),
(918,786,l),
(288,786,l),
(288,1402,l),
(1036,1402,l),
(1036,1163,l),
(1090,1163,l),
(1090,1456,l),
(71,1456,l),
(71,1402,l),
(234,1402,l),
(234,54,l),
(71,54,l),
(71,0,l),
(1120,0,l)
);
}
);
width = 1270;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,54,l),
(288,54,l),
(288,716,l),
(934,716,l),
(934,772,l),
(288,772,l),
(288,1402,l),
(1082,1402,l),
(1082,1163,l),
(1136,1163,l),
(1136,1456,l),
(71,1456,l),
(71,1402,l),
(234,1402,l),
(234,54,l),
(71,54,l),
(71,0,l),
(451,0,l)
);
}
);
width = 1246;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1157,56,o),
(1248,111,q),
(1248,620,l),
(879,620,l),
(879,565,l),
(1194,565,l),
(1194,141,l),
(1118,98,o),
(902,33,o),
(768,33,qs),
(584,33,o),
(323,207,o),
(184,517,o),
(184,720,qs),
(184,760,ls),
(184,956,o),
(334,1254,o),
(592,1423,o),
(754,1423,qs),
(900,1423,o),
(1085,1354,o),
(1159,1296,q),
(1159,1072,l),
(1213,1072,l),
(1213,1324,l),
(1123,1394,o),
(908,1477,o),
(754,1477,qs),
(574,1477,o),
(292,1295,o),
(130,971,o),
(130,758,qs),
(130,720,ls),
(130,500,o),
(284,166,o),
(571,-21,o),
(770,-21,qs),
(925,-21,o)
);
}
);
width = 1417;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,54,l),
(288,54,l),
(288,695,l),
(1218,695,l),
(1218,54,l),
(1055,54,l),
(1055,0,l),
(1435,0,l),
(1435,54,l),
(1272,54,l),
(1272,1402,l),
(1435,1402,l),
(1435,1456,l),
(1272,1456,l),
(1218,1456,l),
(1055,1456,l),
(1055,1402,l),
(1218,1402,l),
(1218,749,l),
(288,749,l),
(288,1402,l),
(451,1402,l),
(451,1456,l),
(71,1456,l),
(71,1402,l),
(234,1402,l),
(234,54,l),
(71,54,l),
(71,0,l),
(451,0,l)
);
}
);
width = 1506;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,54,l),
(288,54,l),
(288,1402,l),
(451,1402,l),
(451,1456,l),
(71,1456,l),
(71,1402,l),
(234,1402,l),
(234,54,l),
(71,54,l),
(71,0,l),
(451,0,l)
);
}
);
width = 522;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(776,88,o),
(880,287,o),
(880,422,qs),
(880,1402,l),
(1043,1402,l),
(1043,1456,l),
(640,1456,l),
(640,1402,l),
(826,1402,l),
(826,422,ls),
(826,303,o),
(734,128,o),
(573,33,o),
(471,33,qs),
(288,33,o),
(94,223,o),
(94,401,q),
(48,401,l),
(46,395,l),
(43,259,o),
(145,74,o),
(338,-21,o),
(471,-21,qs),
(591,-21,o)
);
}
);
width = 1137;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1282,1402,l),
(1282,1456,l),
(921,1456,l),
(921,1402,l),
(1089,1402,l),
(1091,1397,l),
(250,453,l),
(270,391,l),
(1167,1402,l)
);
},
{
closed = 1;
nodes = (
(451,54,l),
(288,54,l),
(288,1402,l),
(451,1402,l),
(451,1456,l),
(71,1456,l),
(71,1402,l),
(234,1402,l),
(234,54,l),
(71,54,l),
(71,0,l),
(451,0,l)
);
},
{
closed = 1;
nodes = (
(1328,54,l),
(1210,54,l),
(641,832,l),
(591,803,l),
(1133,60,l),
(1130,54,l),
(967,54,l),
(967,0,l),
(1328,0,l)
);
}
);
width = 1388;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1036,293,l),
(982,293,l),
(982,54,l),
(289,54,l),
(289,1402,l),
(452,1402,l),
(452,1456,l),
(289,1456,l),
(234,1456,l),
(71,1456,l),
(71,1402,l),
(234,1402,l),
(234,54,l),
(71,54,l),
(71,0,l),
(1036,0,l)
);
}
);
width = 1161;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,54,l),
(288,54,l),
(288,872,l),
(288,1354,l),
(294,1356,l),
(889,0,l),
(932,0,l),
(1530,1363,l),
(1536,1361,l),
(1536,845,l),
(1536,54,l),
(1373,54,l),
(1373,0,l),
(1753,0,l),
(1753,54,l),
(1590,54,l),
(1590,1402,l),
(1753,1402,l),
(1753,1456,l),
(1511,1456,l),
(913,86,l),
(907,86,l),
(311,1456,l),
(234,1456,l),
(71,1456,l),
(71,1402,l),
(234,1402,l),
(234,54,l),
(71,54,l),
(71,0,l),
(451,0,l)
);
}
);
width = 1824;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,54,l),
(289,54,l),
(289,1354,l),
(295,1356,l),
(1229,0,l),
(1283,0,l),
(1283,1402,l),
(1446,1402,l),
(1446,1456,l),
(1283,1456,l),
(1066,1456,l),
(1066,1402,l),
(1229,1402,l),
(1229,105,l),
(1223,103,l),
(289,1456,l),
(234,1456,l),
(71,1456,l),
(71,1402,l),
(234,1402,l),
(234,54,l),
(71,54,l),
(71,0,l),
(452,0,l)
);
}
);
width = 1517;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1099,84,o),
(1260,278,o),
(1348,551,o),
(1348,719,qs),
(1348,737,ls),
(1348,905,o),
(1260,1177,o),
(1097,1372,o),
(873,1477,o),
(738,1477,qs),
(602,1477,o),
(379,1372,o),
(217,1177,o),
(130,905,o),
(130,737,qs),
(130,719,ls),
(130,551,o),
(218,279,o),
(380,84,o),
(604,-21,o),
(740,-21,qs),
(875,-21,o)
);
},
{
closed = 1;
nodes = (
(322,203,o),
(185,512,o),
(185,719,qs),
(185,739,ls),
(185,945,o),
(322,1253,o),
(570,1423,o),
(738,1423,qs),
(907,1423,o),
(1157,1253,o),
(1294,945,o),
(1294,739,qs),
(1294,719,ls),
(1294,512,o),
(1158,203,o),
(909,33,o),
(740,33,qs),
(571,33,o)
);
}
);
width = 1488;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,54,l),
(288,54,l),
(288,625,l),
(639,625,ls),
(790,625,o),
(1000,727,o),
(1109,914,o),
(1109,1041,qs),
(1109,1166,o),
(1000,1353,o),
(790,1456,o),
(639,1456,qs),
(234,1456,l),
(71,1456,l),
(71,1402,l),
(234,1402,l),
(234,54,l),
(71,54,l),
(71,0,l),
(451,0,l)
);
},
{
closed = 1;
nodes = (
(639,1402,ls),
(847,1402,o),
(1055,1197,o),
(1055,1039,qs),
(1055,885,o),
(846,679,o),
(639,679,qs),
(288,679,l),
(288,1402,l)
);
}
);
width = 1255;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1033,56,l),
(1181,142,o),
(1348,487,o),
(1348,719,qs),
(1348,737,ls),
(1348,905,o),
(1260,1177,o),
(1097,1372,o),
(873,1477,o),
(738,1477,qs),
(602,1477,o),
(379,1372,o),
(217,1177,o),
(130,905,o),
(130,737,qs),
(130,719,ls),
(130,551,o),
(218,279,o),
(380,84,o),
(604,-21,o),
(740,-21,qs),
(804,-21,o),
(924,3,o),
(979,28,q),
(1308,-206,l),
(1343,-165,l)
);
},
{
closed = 1;
nodes = (
(322,203,o),
(185,512,o),
(185,719,qs),
(185,739,ls),
(185,945,o),
(322,1253,o),
(570,1423,o),
(738,1423,qs),
(907,1423,o),
(1157,1253,o),
(1294,945,o),
(1294,739,qs),
(1294,719,ls),
(1294,512,o),
(1158,203,o),
(909,33,o),
(740,33,qs),
(571,33,o)
);
}
);
width = 1478;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,53,l),
(288,53,l),
(288,683,l),
(652,683,ls),
(796,683,o),
(1013,772,o),
(1134,943,o),
(1134,1065,qs),
(1134,1193,o),
(1023,1366,o),
(810,1455,o),
(656,1455,qs),
(71,1455,l),
(71,1401,l),
(234,1401,l),
(234,53,l),
(71,53,l),
(71,-1,l),
(451,-1,l)
);
},
{
closed = 1;
nodes = (
(1236,53,l),
(1103,53,l),
(816,718,l),
(762,718,l),
(1067,-1,l),
(1236,-1,l)
);
},
{
closed = 1;
nodes = (
(656,1401,ls),
(867,1401,o),
(1080,1228,o),
(1080,1065,qs),
(1080,925,o),
(872,737,o),
(651,737,qs),
(288,737,l),
(288,1401,l)
);
}
);
width = 1364;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(954,69,o),
(1083,236,o),
(1083,351,qs),
(1083,523,o),
(836,716,o),
(594,781,qs),
(428,826,o),
(252,924,o),
(186,1049,o),
(186,1131,qs),
(186,1209,o),
(278,1342,o),
(455,1423,o),
(582,1423,qs),
(699,1423,o),
(903,1357,o),
(981,1292,q),
(981,1088,l),
(1035,1088,l),
(1035,1322,l),
(950,1393,o),
(723,1477,o),
(582,1477,qs),
(447,1477,o),
(244,1389,o),
(132,1233,o),
(132,1129,qs),
(132,1023,o),
(217,879,o),
(413,775,o),
(579,729,qs),
(745,683,o),
(941,577,o),
(1028,441,o),
(1028,349,qs),
(1028,256,o),
(915,113,o),
(717,33,o),
(589,33,qs),
(484,33,o),
(262,96,o),
(154,164,q),
(154,390,l),
(100,390,l),
(100,133,l),
(219,53,o),
(472,-21,o),
(589,-21,qs),
(731,-21,o)
);
}
);
width = 1183;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(827,54,l),
(664,54,l),
(664,1402,l),
(1140,1402,l),
(1140,1163,l),
(1194,1163,l),
(1194,1456,l),
(80,1456,l),
(80,1163,l),
(134,1163,l),
(134,1402,l),
(610,1402,l),
(610,54,l),
(447,54,l),
(447,0,l),
(827,0,l)
);
}
);
width = 1277;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1092,92,o),
(1218,310,o),
(1218,469,qs),
(1218,1402,l),
(1381,1402,l),
(1381,1456,l),
(1001,1456,l),
(1001,1402,l),
(1164,1402,l),
(1164,469,ls),
(1164,332,o),
(1051,137,o),
(851,33,o),
(721,33,qs),
(590,33,o),
(390,137,o),
(277,332,o),
(277,469,qs),
(277,1402,l),
(440,1402,l),
(440,1456,l),
(60,1456,l),
(60,1402,l),
(223,1402,l),
(223,469,ls),
(223,311,o),
(348,92,o),
(572,-21,o),
(721,-21,qs),
(868,-21,o)
);
}
);
width = 1441;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1276,1402,l),
(1383,1402,l),
(1383,1456,l),
(1064,1456,l),
(1064,1402,l),
(1217,1402,l),
(748,142,l),
(722,63,l),
(716,63,l),
(690,142,l),
(221,1402,l),
(374,1402,l),
(374,1456,l),
(55,1456,l),
(55,1402,l),
(162,1402,l),
(686,0,l),
(752,0,l)
);
}
);
width = 1434;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(962,1214,l),
(1008,1359,l),
(1014,1359,l),
(1062,1214,l),
(1443,0,l),
(1504,0,l),
(1862,1402,l),
(1963,1402,l),
(1963,1456,l),
(1644,1456,l),
(1644,1402,l),
(1803,1402,l),
(1537,330,l),
(1472,101,l),
(1466,101,l),
(1404,330,l),
(1042,1456,l),
(982,1456,l),
(618,330,l),
(555,101,l),
(549,101,l),
(486,330,l),
(217,1402,l),
(377,1402,l),
(377,1456,l),
(57,1456,l),
(57,1402,l),
(158,1402,l),
(517,0,l),
(578,0,l)
);
}
);
width = 2000;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,54,l),
(238,54,l),
(691,701,l),
(1145,54,l),
(980,54,l),
(980,0,l),
(1327,0,l),
(1327,54,l),
(1212,54,l),
(726,743,l),
(1191,1402,l),
(1306,1402,l),
(1306,1456,l),
(959,1456,l),
(959,1402,l),
(1124,1402,l),
(691,785,l),
(259,1402,l),
(425,1402,l),
(425,1456,l),
(77,1456,l),
(77,1402,l),
(192,1402,l),
(658,743,l),
(172,54,l),
(57,54,l),
(57,0,l),
(403,0,l)
);
}
);
width = 1384;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(907,54,l),
(744,54,l),
(744,553,l),
(1258,1402,l),
(1378,1402,l),
(1378,1456,l),
(1052,1456,l),
(1052,1402,l),
(1193,1402,l),
(742,647,l),
(716,599,l),
(715,597,l),
(689,647,l),
(240,1402,l),
(381,1402,l),
(381,1456,l),
(55,1456,l),
(55,1402,l),
(174,1402,l),
(689,553,l),
(689,54,l),
(526,54,l),
(526,0,l),
(907,0,l)
);
}
);
width = 1429;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1128,293,l),
(1074,293,l),
(1074,54,l),
(166,54,l),
(1096,1418,l),
(1096,1456,l),
(132,1456,l),
(132,1163,l),
(186,1163,l),
(186,1403,l),
(1021,1403,l),
(92,44,l),
(92,0,l),
(1128,0,l)
);
}
);
width = 1220;
}
);
note = Z;
unicode = 90;
},
{
glyphname = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(766,101,o),
(827,199,q),
(827,146,o),
(836,71,o),
(849,0,q),
(1046,0,l),
(1046,54,l),
(896,54,l),
(888,94,o),
(881,176,o),
(881,218,qs),
(881,740,ls),
(881,907,o),
(692,1102,o),
(505,1102,qs),
(397,1102,o),
(232,1027,o),
(165,965,q),
(165,759,l),
(219,759,l),
(219,936,l),
(270,983,o),
(416,1049,o),
(504,1049,qs),
(671,1049,o),
(827,877,o),
(827,742,qs),
(827,604,l),
(578,604,ls),
(434,604,o),
(221,520,o),
(104,371,o),
(104,274,qs),
(104,142,o),
(275,-21,o),
(417,-21,qs),
(553,-21,o)
);
},
{
closed = 1;
nodes = (
(158,169,o),
(158,270,qs),
(158,394,o),
(390,549,o),
(581,549,qs),
(827,549,l),
(827,292,l),
(770,170,o),
(540,32,o),
(417,32,qs),
(304,32,o)
);
}
);
width = 1116;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(887,111,o),
(984,354,o),
(984,521,qs),
(984,542,ls),
(984,713,o),
(886,965,o),
(703,1102,o),
(576,1102,qs),
(447,1102,o),
(263,986,o),
(209,885,q),
(209,1560,l),
(-8,1560,l),
(-8,1506,l),
(155,1506,l),
(155,0,l),
(200,0,l),
(207,173,l),
(260,84,o),
(449,-21,o),
(578,-21,qs),
(705,-21,o)
);
},
{
closed = 1;
nodes = (
(248,164,o),
(209,274,q),
(209,770,l),
(246,887,o),
(419,1048,o),
(577,1048,qs),
(691,1048,o),
(848,920,o),
(928,692,o),
(928,542,qs),
(928,521,ls),
(928,297,o),
(750,33,o),
(579,33,qs),
(435,33,o)
);
}
);
width = 1088;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(819,55,o),
(925,206,o),
(937,317,q),
(935,323,l),
(889,323,l),
(871,175,o),
(682,33,o),
(543,33,qs),
(427,33,o),
(254,156,o),
(158,376,o),
(158,520,qs),
(158,562,ls),
(158,705,o),
(253,924,o),
(425,1048,o),
(539,1048,qs),
(640,1048,o),
(802,973,o),
(866,905,q),
(866,693,l),
(920,693,l),
(920,925,l),
(855,999,o),
(660,1102,o),
(538,1102,qs),
(411,1102,o),
(215,967,o),
(104,724,o),
(104,562,qs),
(104,520,ls),
(104,358,o),
(218,115,o),
(416,-21,o),
(540,-21,qs),
(650,-21,o)
);
}
);
width = 1082;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(826,84,o),
(879,173,q),
(881,0,l),
(1096,0,l),
(1096,54,l),
(933,54,l),
(933,1560,l),
(879,1560,l),
(716,1560,l),
(716,1506,l),
(879,1506,l),
(879,883,l),
(824,985,o),
(640,1102,o),
(512,1102,qs),
(384,1102,o),
(201,965,o),
(104,713,o),
(104,542,qs),
(104,521,ls),
(104,354,o),
(201,111,o),
(383,-21,o),
(510,-21,qs),
(638,-21,o)
);
},
{
closed = 1;
nodes = (
(160,297,o),
(160,521,qs),
(160,542,ls),
(160,692,o),
(240,920,o),
(396,1048,o),
(511,1048,qs),
(666,1048,o),
(840,891,o),
(879,775,q),
(879,268,l),
(837,161,o),
(650,33,o),
(509,33,qs),
(337,33,o)
);
}
);
width = 1205;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(850,59,o),
(917,123,q),
(888,165,l),
(826,104,o),
(667,33,o),
(564,33,qs),
(448,33,o),
(268,155,o),
(166,366,o),
(166,500,qs),
(166,577,l),
(957,577,l),
(957,660,ls),
(957,795,o),
(856,993,o),
(673,1102,o),
(551,1102,qs),
(425,1102,o),
(226,962,o),
(112,719,o),
(112,564,qs),
(112,500,ls),
(112,347,o),
(230,112,o),
(434,-21,o),
(564,-21,qs),
(680,-21,o)
);
},
{
closed = 1;
nodes = (
(183,754,o),
(285,940,o),
(449,1048,o),
(551,1048,qs),
(658,1048,o),
(816,948,o),
(903,774,o),
(903,664,qs),
(903,631,l),
(177,631,l),
(174,637,l)
);
}
);
width = 1084;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(494,54,l),
(331,54,l),
(331,1027,l),
(617,1027,l),
(617,1082,l),
(331,1082,l),
(331,1260,ls),
(331,1385,o),
(453,1527,o),
(561,1527,qs),
(599,1527,o),
(648,1520,o),
(680,1512,q),
(688,1564,l),
(658,1573,o),
(593,1581,o),
(560,1581,qs),
(426,1581,o),
(277,1413,o),
(277,1260,qs),
(277,1082,l),
(89,1082,l),
(89,1027,l),
(277,1027,l),
(277,54,l),
(114,54,l),
(114,0,l),
(494,0,l)
);
}
);
width = 722;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(834,-327,o),
(933,-124,o),
(933,14,qs),
(933,1082,l),
(887,1082,l),
(879,882,l),
(825,984,o),
(640,1102,o),
(512,1102,qs),
(384,1102,o),
(201,965,o),
(104,714,o),
(104,542,qs),
(104,521,ls),
(104,355,o),
(201,111,o),
(383,-21,o),
(510,-21,qs),
(637,-21,o),
(824,83,o),
(878,171,q),
(878,14,ls),
(878,-171,o),
(695,-384,o),
(522,-384,qs),
(435,-384,o),
(299,-353,o),
(226,-321,q),
(210,-375,l),
(274,-404,o),
(445,-437,o),
(524,-437,qs),
(651,-437,o)
);
},
{
closed = 1;
nodes = (
(159,297,o),
(159,521,qs),
(159,542,ls),
(159,692,o),
(240,920,o),
(397,1048,o),
(511,1048,qs),
(669,1048,o),
(840,886,o),
(878,767,q),
(878,276,l),
(838,165,o),
(653,33,o),
(509,33,qs),
(337,33,o)
);
},
{
closed = 1;
nodes = (
(1076,1082,l),
(906,1082,l),
(913,1028,l),
(1076,1028,l)
);
}
);
width = 1155;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(442,54,l),
(279,54,l),
(279,676,l),
(303,839,o),
(489,1048,o),
(664,1048,qs),
(795,1048,o),
(952,873,o),
(952,660,qs),
(952,54,l),
(789,54,l),
(789,0,l),
(1170,0,l),
(1170,54,l),
(1007,54,l),
(1007,658,ls),
(1007,888,o),
(832,1102,o),
(663,1102,qs),
(523,1102,o),
(329,972,o),
(279,854,q),
(279,1560,l),
(62,1560,l),
(62,1506,l),
(225,1506,l),
(225,54,l),
(62,54,l),
(62,0,l),
(442,0,l)
);
}
);
width = 1278;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(469,54,l),
(306,54,l),
(306,1082,l),
(89,1082,l),
(89,1028,l),
(252,1028,l),
(252,54,l),
(89,54,l),
(89,0,l),
(469,0,l)
);
},
{
closed = 1;
nodes = (
(306,1560,l),
(234,1560,l),
(234,1420,l),
(306,1420,l)
);
}
);
width = 609;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,-256,o),
(393,-89,qs),
(393,1082,l),
(176,1082,l),
(176,1028,l),
(339,1028,l),
(339,-89,ls),
(339,-230,o),
(218,-383,o),
(108,-383,qs),
(82,-383,o),
(27,-371,o),
(9,-365,q),
(-4,-417,l),
(26,-427,o),
(78,-437,o),
(108,-437,qs),
(243,-437,o)
);
},
{
closed = 1;
nodes = (
(387,1560,l),
(315,1560,l),
(315,1420,l),
(387,1420,l)
);
}
);
width = 563;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(442,54,l),
(279,54,l),
(279,1560,l),
(62,1560,l),
(62,1506,l),
(225,1506,l),
(225,54,l),
(62,54,l),
(62,0,l),
(442,0,l)
);
},
{
closed = 1;
nodes = (
(1081,54,l),
(964,54,l),
(528,649,l),
(490,614,l),
(889,59,l),
(887,54,l),
(761,54,l),
(761,0,l),
(1081,0,l)
);
},
{
closed = 1;
nodes = (
(1038,1028,l),
(1038,1082,l),
(717,1082,l),
(717,1028,l),
(836,1028,l),
(838,1022,l),
(251,400,l),
(269,346,l),
(916,1028,l)
);
}
);
width = 1154;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(462,54,l),
(299,54,l),
(299,1560,l),
(82,1560,l),
(82,1506,l),
(245,1506,l),
(245,54,l),
(82,54,l),
(82,0,l),
(462,0,l)
);
}
);
width = 581;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(470,54,l),
(307,54,l),
(307,694,l),
(331,851,o),
(505,1048,o),
(673,1048,qs),
(814,1048,o),
(982,855,o),
(982,619,qs),
(982,54,l),
(819,54,l),
(819,0,l),
(1200,0,l),
(1200,54,l),
(1037,54,l),
(1037,682,l),
(1057,842,o),
(1233,1049,o),
(1405,1049,qs),
(1545,1049,o),
(1713,855,o),
(1713,620,qs),
(1713,55,l),
(1550,55,l),
(1550,1,l),
(1931,1,l),
(1931,55,l),
(1768,55,l),
(1768,618,ls),
(1768,869,o),
(1582,1103,o),
(1403,1103,qs),
(1257,1103,o),
(1062,948,o),
(1019,810,q),
(986,959,o),
(811,1102,o),
(671,1102,qs),
(539,1102,o),
(355,974,o),
(306,859,q),
(299,1082,l),
(89,1082,l),
(89,1028,l),
(252,1028,l),
(252,54,l),
(89,54,l),
(89,0,l),
(470,0,l)
);
}
);
width = 1980;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(469,54,l),
(306,54,l),
(306,676,l),
(328,839,o),
(506,1048,o),
(681,1048,qs),
(819,1048,o),
(980,864,o),
(980,639,qs),
(980,54,l),
(817,54,l),
(817,0,l),
(1197,0,l),
(1197,54,l),
(1034,54,l),
(1034,637,ls),
(1034,879,o),
(857,1102,o),
(680,1102,qs),
(542,1102,o),
(354,975,o),
(305,859,q),
(298,1082,l),
(89,1082,l),
(89,1028,l),
(252,1028,l),
(252,54,l),
(89,54,l),
(89,0,l),
(469,0,l)
);
}
);
width = 1320;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(931,117,o),
(1051,361,o),
(1051,520,qs),
(1051,562,ls),
(1051,721,o),
(931,964,o),
(718,1102,o),
(577,1102,qs),
(437,1102,o),
(224,964,o),
(104,721,o),
(104,562,qs),
(104,520,ls),
(104,361,o),
(224,117,o),
(438,-21,o),
(579,-21,qs),
(718,-21,o)
);
},
{
closed = 1;
nodes = (
(261,163,o),
(158,384,o),
(158,520,qs),
(158,562,ls),
(158,695,o),
(261,916,o),
(450,1048,o),
(577,1048,qs),
(704,1048,o),
(893,916,o),
(997,695,o),
(997,562,qs),
(997,520,ls),
(997,385,o),
(894,164,o),
(706,33,o),
(579,33,qs),
(450,33,o)
);
}
);
width = 1155;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(445,-362,l),
(282,-362,l),
(282,168,l),
(335,81,o),
(524,-21,o),
(651,-21,qs),
(778,-21,o),
(960,111,o),
(1057,354,o),
(1057,521,qs),
(1057,542,ls),
(1057,713,o),
(959,965,o),
(776,1102,o),
(649,1102,qs),
(521,1102,o),
(335,988,o),
(281,888,q),
(270,1082,l),
(65,1082,l),
(65,1028,l),
(228,1028,l),
(228,-362,l),
(65,-362,l),
(65,-416,l),
(445,-416,l)
);
},
{
closed = 1;
nodes = (
(322,161,o),
(282,269,q),
(282,775,l),
(319,890,o),
(493,1048,o),
(650,1048,qs),
(764,1048,o),
(921,920,o),
(1002,692,o),
(1002,542,qs),
(1002,521,ls),
(1002,297,o),
(823,33,o),
(652,33,qs),
(510,33,o)
);
}
);
width = 1161;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1096,-362,l),
(933,-362,l),
(933,1082,l),
(884,1082,l),
(879,886,l),
(824,987,o),
(639,1102,o),
(512,1102,qs),
(384,1102,o),
(201,965,o),
(104,713,o),
(104,542,qs),
(104,521,ls),
(104,354,o),
(201,111,o),
(383,-21,o),
(510,-21,qs),
(637,-21,o),
(825,82,o),
(879,170,q),
(879,-362,l),
(716,-362,l),
(716,-416,l),
(1096,-416,l)
);
},
{
closed = 1;
nodes = (
(160,297,o),
(160,521,qs),
(160,542,ls),
(160,692,o),
(240,920,o),
(396,1048,o),
(511,1048,qs),
(665,1048,o),
(841,883,o),
(879,768,q),
(879,274,l),
(839,164,o),
(652,33,o),
(509,33,qs),
(337,33,o)
);
}
);
width = 1136;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(469,54,l),
(306,54,l),
(306,709,l),
(333,862,o),
(514,1049,o),
(659,1049,q),
(749,1042,l),
(755,1090,l),
(741,1094,o),
(682,1102,o),
(659,1102,qs),
(529,1102,o),
(351,973,o),
(306,857,q),
(306,894,l),
(296,1082,l),
(89,1082,l),
(89,1028,l),
(252,1028,l),
(252,54,l),
(89,54,l),
(89,0,l),
(469,0,l)
);
}
);
width = 823;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(867,137,o),
(867,264,qs),
(867,394,o),
(681,544,o),
(499,584,qs),
(368,613,o),
(232,682,o),
(183,770,o),
(183,828,qs),
(183,912,o),
(331,1048,o),
(478,1048,qs),
(584,1048,o),
(726,986,o),
(778,928,q),
(778,753,l),
(832,753,l),
(832,955,l),
(771,1022,o),
(594,1102,o),
(478,1102,qs),
(370,1102,o),
(213,1029,o),
(129,904,o),
(129,826,qs),
(129,702,o),
(292,572,o),
(483,532,qs),
(666,492,o),
(813,351,o),
(813,265,qs),
(813,173,o),
(637,33,o),
(487,33,qs),
(390,33,o),
(216,89,o),
(157,152,q),
(157,315,l),
(103,315,l),
(103,122,l),
(170,55,o),
(369,-21,o),
(487,-21,qs),
(659,-21,o)
);
}
);
width = 1009;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(590,-15,o),
(620,-7,q),
(610,42,l),
(566,37,o),
(516,33,o),
(484,33,qs),
(410,33,o),
(320,146,o),
(320,279,qs),
(320,1027,l),
(586,1027,l),
(586,1082,l),
(320,1082,l),
(320,1374,l),
(265,1374,l),
(265,1082,l),
(65,1082,l),
(65,1027,l),
(265,1027,l),
(265,279,ls),
(265,121,o),
(378,-21,o),
(487,-21,qs),
(527,-21,o)
);
}
);
width = 719;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(847,91,o),
(898,194,q),
(906,0,l),
(1114,0,l),
(1114,54,l),
(951,54,l),
(951,1082,l),
(896,1082,l),
(733,1082,l),
(733,1028,l),
(896,1028,l),
(896,336,l),
(871,199,o),
(700,33,o),
(531,33,qs),
(396,33,o),
(241,243,o),
(241,463,qs),
(241,1082,l),
(187,1082,l),
(44,1082,l),
(44,1028,l),
(187,1028,l),
(187,465,ls),
(187,216,o),
(369,-21,o),
(533,-21,qs),
(668,-21,o)
);
}
);
width = 1202;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1020,1028,l),
(1138,1028,l),
(1138,1082,l),
(820,1082,l),
(820,1028,l),
(962,1028,l),
(650,229,l),
(598,83,l),
(592,83,l),
(541,229,l),
(228,1028,l),
(370,1028,l),
(370,1082,l),
(52,1082,l),
(52,1028,l),
(170,1028,l),
(569,0,l),
(621,0,l)
);
}
);
width = 1165;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(820,813,l),
(875,994,l),
(881,994,l),
(940,813,l),
(1222,0,l),
(1277,0,l),
(1596,1028,l),
(1719,1028,l),
(1719,1082,l),
(1386,1082,l),
(1386,1028,l),
(1534,1028,l),
(1318,313,l),
(1251,91,l),
(1245,90,l),
(1170,313,l),
(906,1082,l),
(851,1082,l),
(594,313,l),
(524,91,l),
(518,92,l),
(453,313,l),
(236,1028,l),
(384,1028,l),
(384,1082,l),
(52,1082,l),
(52,1028,l),
(174,1028,l),
(492,0,l),
(547,0,l)
);
}
);
width = 1787;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(399,54,l),
(275,54,l),
(602,508,l),
(930,54,l),
(806,54,l),
(806,0,l),
(1123,0,l),
(1123,54,l),
(997,54,l),
(636,555,l),
(977,1028,l),
(1103,1028,l),
(1103,1082,l),
(785,1082,l),
(785,1028,l),
(909,1028,l),
(603,602,l),
(296,1028,l),
(420,1028,l),
(420,1082,l),
(102,1082,l),
(102,1028,l),
(228,1028,l),
(569,555,l),
(208,54,l),
(82,54,l),
(82,0,l),
(399,0,l)
);
}
);
width = 1192;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(474,-372,o),
(543,-256,o),
(572,-180,qs),
(1032,1028,l),
(1150,1028,l),
(1150,1082,l),
(830,1082,l),
(830,1028,l),
(972,1028,l),
(613,88,l),
(607,88,l),
(567,196,l),
(232,1028,l),
(374,1028,l),
(374,1082,l),
(55,1082,l),
(55,1028,l),
(173,1028,l),
(583,6,l),
(518,-170,ls),
(478,-276,o),
(375,-384,o),
(283,-384,qs),
(271,-384,o),
(227,-378,o),
(216,-375,q),
(207,-426,l),
(218,-430,o),
(264,-437,o),
(283,-437,qs),
(368,-437,o)
);
}
);
width = 1185;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(963,293,l),
(909,293,l),
(909,54,l),
(193,54,l),
(904,1034,l),
(904,1082,l),
(121,1082,l),
(121,789,l),
(175,789,l),
(175,1027,l),
(831,1027,l),
(120,44,l),
(120,0,l),
(963,0,l)
);
}
);
width = 1077;
}
);
note = z;
unicode = 122;
},
{
glyphname = uni1780;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1113,1054,o),
(1138,1054,qs),
(1203,1054,o),
(1226,1165,q),
(1201,1123,o),
(1171,1118,q),
(1165,1118,ls),
(1135,1118,o),
(1084,1161,qs),
(915,1303,l),
(738,1129,l),
(527,1303,l),
(216,1117,l),
(216,1065,l),
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(281,1094,l),
(510,1231,l),
(726,1055,l),
(904,1226,l),
(1009,1140,ls)
);
},
{
closed = 1;
nodes = (
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,0,l),
(1113,0,l),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,0,l),
(392,0,l),
(392,698,ls)
);
}
);
width = 1442;
}
);
note = uni1780;
unicode = 6016;
},
{
glyphname = uni1781;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,948,o),
(528,884,qs),
(528,799,o),
(422,799,qs),
(392,799,o),
(392,838,qs),
(392,948,l),
(422,948,ls)
);
},
{
closed = 1;
nodes = (
(690,630,qs),
(329,448,l),
(329,233,ls),
(329,0,o),
(651,0,qs),
(791,0,ls),
(1113,0,o),
(1113,372,qs),
(1113,555,l),
(1050,478,l),
(1050,372,ls),
(1050,53,o),
(791,53,qs),
(651,53,ls),
(392,53,o),
(392,233,qs),
(392,428,l),
(753,610,ls),
(1113,791,o),
(1113,931,qs),
(1113,1071,ls),
(1113,1303,o),
(791,1303,qs),
(651,1303,ls),
(329,1303,o),
(329,1071,qs),
(329,838,ls),
(329,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,qs),
(392,1001,l),
(392,1071,ls),
(392,1250,o),
(651,1250,qs),
(791,1250,ls),
(1050,1250,o),
(1050,1071,qs),
(1050,931,ls),
(1050,811,o)
);
}
);
width = 1442;
}
);
note = uni1781;
unicode = 6017;
},
{
glyphname = uni1782;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1113,1054,o),
(1138,1054,qs),
(1203,1054,o),
(1226,1165,q),
(1201,1123,o),
(1171,1118,q),
(1165,1118,ls),
(1135,1118,o),
(1084,1161,qs),
(915,1303,l),
(738,1129,l),
(527,1303,l),
(216,1117,l),
(216,1065,l),
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(281,1094,l),
(510,1231,l),
(726,1055,l),
(904,1226,l),
(1009,1140,ls)
);
},
{
closed = 1;
nodes = (
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,0,l),
(1113,0,l),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,0,l),
(392,0,l),
(392,21,l),
(547,347,o),
(670,347,qs),
(704,347,o),
(721,340,qs),
(736,333,o),
(750,333,qs),
(754,333,ls),
(770,334,o),
(770,359,qs),
(770,383,o),
(715,400,o),
(670,400,qs),
(524,400,o),
(392,113,q),
(392,698,ls)
);
}
);
width = 1442;
}
);
note = uni1782;
unicode = 6018;
},
{
glyphname = uni1783;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,914,o),
(186,1004,qs),
(186,1067,o),
(272,1160,qs),
(329,1222,l),
(329,914,l),
(280,914,ls)
);
},
{
closed = 1;
nodes = (
(922,1018,l),
(1040,1216,l),
(1133,1156,ls),
(1170,1132,o),
(1198,1132,qs),
(1241,1132,o),
(1266,1187,q),
(1256,1186,o),
(1246,1186,qs),
(1202,1186,o),
(1164,1211,qs),
(1024,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,1303,l),
(329,1303,l),
(231,1197,ls),
(133,1091,o),
(133,1003,qs),
(133,861,o),
(280,861,qs),
(329,861,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1009,0,o),
(1082,114,q),
(1154,0,o),
(1396,0,qs),
(1489,0,ls),
(1834,0,o),
(1834,233,qs),
(1834,909,l),
(1643,1018,l),
(1761,1216,l),
(1854,1156,ls),
(1891,1132,o),
(1919,1132,qs),
(1962,1132,o),
(1987,1187,q),
(1977,1186,o),
(1967,1186,qs),
(1923,1186,o),
(1885,1211,qs),
(1745,1303,l),
(1588,1045,l),
(1588,985,l),
(1771,882,l),
(1771,233,ls),
(1771,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,909,l)
);
}
);
width = 2164;
}
);
note = uni1783;
unicode = 6019;
},
{
glyphname = uni1784;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(847,1238,qs),
(944,1238,o),
(944,1166,qs),
(944,1094,o),
(847,1094,qs),
(750,1094,o),
(750,1166,qs),
(750,1238,o)
);
},
{
closed = 1;
nodes = (
(230,549,o),
(230,612,qs),
(230,671,o),
(305,752,qs),
(329,779,l),
(329,549,l),
(300,549,ls)
);
},
{
closed = 1;
nodes = (
(330,868,l),
(257,788,ls),
(167,690,o),
(167,611,qs),
(167,496,o),
(300,496,qs),
(329,496,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1050,0,l),
(1113,0,l),
(1113,966,l),
(934,1049,l),
(1009,1083,o),
(1009,1166,qs),
(1009,1303,o),
(848,1303,qs),
(685,1303,o),
(685,1166,qs),
(685,1112,o),
(710,1094,q),
(558,1094,ls),
(393,1094,o),
(393,1164,qs),
(393,1334,ls),
(393,1489,o),
(285,1489,qs),
(186,1489,o),
(186,1443,q),
(329,1443,o),
(329,1334,qs),
(329,1164,ls),
(329,1041,o),
(558,1041,qs),
(807,1041,l),
(1050,941,l),
(1050,71,l),
(721,310,l),
(392,71,l),
(392,868,l)
);
}
);
width = 1442;
}
);
note = uni1784;
unicode = 6020;
},
{
glyphname = uni1785;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1051,802,l),
(1051,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(1051,53,o),
(791,53,qs),
(651,53,ls),
(392,53,o),
(392,233,qs),
(392,985,l),
(281,1074,l),
(510,1231,l),
(726,1055,l),
(904,1226,l),
(1009,1140,ls),
(1113,1054,o),
(1138,1054,qs),
(1203,1054,o),
(1226,1165,q),
(1201,1123,o),
(1171,1118,q),
(1165,1118,ls),
(1135,1118,o),
(1084,1161,qs),
(915,1303,l),
(738,1129,l),
(527,1303,l),
(216,1097,l),
(216,1045,l),
(329,956,l),
(329,233,ls),
(329,0,o),
(651,0,qs),
(791,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1051,519,l),
(1051,233,ls)
);
}
);
width = 1442;
}
);
note = uni1785;
unicode = 6021;
},
{
glyphname = uni1786;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,366,q),
(329,78,l),
(222,159,o),
(222,256,qs),
(222,366,o)
);
},
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1050,802,l),
(1050,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(169,419,o),
(169,256,qs),
(169,130,o),
(267,50,qs),
(329,0,l),
(392,0,l),
(392,366,l),
(511,366,ls),
(671,366,o),
(671,217,qs),
(671,0,o),
(884,0,qs),
(1113,0,o),
(1113,233,qs),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1050,519,l),
(1050,233,ls),
(1050,53,o),
(884,53,qs),
(724,53,o),
(724,217,qs),
(724,419,o),
(511,419,qs),
(392,419,l),
(392,985,l),
(281,1074,l),
(510,1231,l),
(726,1055,l),
(904,1226,l),
(1009,1140,ls),
(1113,1054,o),
(1138,1054,qs),
(1203,1054,o),
(1226,1165,q),
(1201,1123,o),
(1171,1118,q),
(1165,1118,ls),
(1135,1118,o),
(1084,1161,qs),
(915,1303,l),
(738,1129,l),
(527,1303,l),
(216,1097,l),
(216,1045,l),
(329,956,l),
(329,419,l)
);
}
);
width = 1442;
}
);
note = uni1786;
unicode = 6022;
},
{
glyphname = uni1787;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(721,310,l),
(392,71,l),
(392,985,l),
(281,1074,l),
(495,1228,l),
(726,1041,l),
(868,1041,ls),
(1113,1041,o),
(1113,1240,qs),
(1113,1443,o),
(957,1443,qs),
(884,1443,o),
(884,1410,q),
(1051,1410,o),
(1051,1240,qs),
(1051,1094,o),
(868,1094,qs),
(761,1094,l),
(507,1303,l),
(216,1097,l),
(216,1045,l),
(329,956,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1051,0,l),
(1113,0,l),
(1113,861,l),
(1051,861,l),
(1051,71,l)
);
}
);
width = 1442;
}
);
note = uni1787;
unicode = 6023;
},
{
glyphname = uni1788;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(1772,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,1103,l),
(721,1303,l),
(329,1104,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1081,l),
(700,1241,l),
(1050,1066,l),
(1050,233,ls),
(1050,0,o),
(1396,0,qs),
(1489,0,ls),
(1731,0,o),
(1804,114,q),
(1876,0,o),
(2118,0,qs),
(2211,0,ls),
(2557,0,o),
(2557,233,qs),
(2557,909,l),
(2366,1018,l),
(2484,1216,l),
(2577,1156,ls),
(2614,1132,o),
(2642,1132,qs),
(2685,1132,o),
(2710,1187,q),
(2700,1186,o),
(2690,1186,qs),
(2646,1186,o),
(2608,1211,qs),
(2468,1303,l),
(2311,1045,l),
(2311,985,l),
(2494,882,l),
(2494,233,ls),
(2494,53,o),
(2211,53,qs),
(2118,53,ls),
(1835,53,o),
(1835,233,qs),
(1835,909,l),
(1644,1018,l),
(1762,1216,l),
(1855,1156,ls),
(1892,1132,o),
(1920,1132,qs),
(1963,1132,o),
(1988,1187,q),
(1978,1186,o),
(1968,1186,qs),
(1924,1186,o),
(1886,1211,qs),
(1746,1303,l),
(1589,1045,l),
(1589,985,l),
(1772,882,l),
(1772,233,ls)
);
}
);
width = 2885;
}
);
note = uni1788;
unicode = 6024;
},
{
glyphname = uni1789;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1683,-93,qs),
(1606,-93,o),
(1606,-136,q),
(1773,-136,o),
(1773,-279,qs),
(1773,-505,o),
(1552,-505,qs),
(1314,-505,o),
(933,-140,o),
(611,-140,qs),
(495,-140,o),
(329,-237,o),
(329,-317,q),
(408,-235,o),
(515,-193,o),
(611,-193,qs),
(891,-193,o),
(1281,-559,o),
(1552,-559,qs),
(1835,-559,o),
(1835,-279,qs),
(1835,-93,o)
);
},
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,0,l),
(1113,0,l),
(1113,1028,l),
(1443,1234,l),
(1772,1024,l),
(1772,0,l),
(1835,0,l),
(1835,1054,l),
(1443,1303,l),
(1083,1086,l),
(888,1303,l)
);
}
);
width = 2164;
}
);
note = uni1789;
unicode = 6025;
},
{
glyphname = uni178A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,1174,qs),
(392,1250,o),
(466,1250,qs),
(529,1250,o),
(529,1164,q),
(582,1164,o),
(582,1213,qs),
(582,1303,o),
(464,1303,qs),
(329,1303,o),
(329,1174,qs),
(329,1001,o),
(675,1001,qs),
(768,1001,ls),
(1113,1001,o),
(1113,1221,qs),
(1113,1443,o),
(947,1443,qs),
(884,1443,o),
(884,1390,q),
(1050,1390,o),
(1050,1221,qs),
(1050,1054,o),
(768,1054,qs),
(675,1054,ls),
(392,1054,o)
);
},
{
closed = 1;
nodes = (
(721,310,l),
(392,71,l),
(392,861,l),
(329,861,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1050,0,l),
(1113,0,l),
(1113,861,l),
(1050,861,l),
(1050,71,l)
);
}
);
width = 1442;
}
);
note = uni178A;
unicode = 6026;
},
{
glyphname = uni178B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,914,o),
(186,1004,qs),
(186,1067,o),
(272,1160,qs),
(329,1222,l),
(329,914,l),
(280,914,ls)
);
},
{
closed = 1;
nodes = (
(329,0,o),
(675,0,qs),
(768,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,909,l),
(922,1018,l),
(1020,1216,l),
(1113,1156,ls),
(1150,1132,o),
(1198,1132,qs),
(1302,1132,o),
(1302,1280,qs),
(1302,1489,o),
(1133,1489,qs),
(1070,1489,o),
(1070,1446,q),
(1239,1446,o),
(1239,1280,qs),
(1239,1186,o),
(1198,1186,qs),
(1182,1186,o),
(1144,1211,qs),
(1004,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,1303,l),
(329,1303,l),
(231,1197,ls),
(133,1091,o),
(133,1003,qs),
(133,861,o),
(280,861,qs),
(329,861,l),
(329,233,ls)
);
}
);
width = 1442;
}
);
note = uni178B;
unicode = 6027;
},
{
glyphname = uni178C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,948,ls),
(528,948,o),
(528,884,qs),
(528,799,o),
(422,799,qs),
(392,799,o),
(392,838,qs),
(392,948,l)
);
},
{
closed = 1;
nodes = (
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,931,ls),
(1050,811,o),
(690,630,qs),
(329,448,l),
(329,277,ls),
(329,0,o),
(536,0,qs),
(554,0,l),
(1051,260,l),
(1051,117,ls),
(1051,0,o),
(884,0,q),
(884,-47,o),
(971,-47,qs),
(1113,-47,o),
(1113,115,qs),
(1113,535,l),
(1051,535,l),
(1051,317,l),
(541,53,l),
(392,53,o),
(392,277,qs),
(392,428,l),
(753,610,ls),
(1113,791,o),
(1113,931,qs),
(1113,1052,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,838,ls),
(329,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,qs),
(392,1001,l),
(392,1046,l)
);
}
);
width = 1442;
}
);
note = uni178C;
unicode = 6028;
},
{
glyphname = uni178D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(1050,366,q),
(1050,78,l),
(943,159,o),
(943,256,qs),
(943,366,o)
);
},
{
closed = 1;
nodes = (
(890,419,o),
(890,256,qs),
(890,130,o),
(988,50,qs),
(1050,0,l),
(1113,0,l),
(1113,366,l),
(1232,366,ls),
(1392,366,o),
(1392,217,qs),
(1392,0,o),
(1605,0,qs),
(1834,0,o),
(1834,233,qs),
(1834,909,l),
(1643,1018,l),
(1761,1216,l),
(1854,1156,ls),
(1891,1132,o),
(1919,1132,qs),
(1962,1132,o),
(1987,1187,q),
(1977,1186,o),
(1967,1186,qs),
(1923,1186,o),
(1885,1211,qs),
(1745,1303,l),
(1588,1045,l),
(1588,985,l),
(1771,882,l),
(1771,233,ls),
(1771,53,o),
(1605,53,qs),
(1445,53,o),
(1445,217,qs),
(1445,419,o),
(1232,419,qs),
(1113,419,l),
(1113,1052,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,419,l)
);
}
);
width = 2164;
}
);
note = uni178D;
unicode = 6029;
},
{
glyphname = uni178E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1081,l),
(700,1241,l),
(1050,1066,l),
(1050,0,l),
(1113,0,l),
(1442,240,l),
(1771,0,l),
(1834,0,l),
(1834,1081,l),
(2142,1241,l),
(2492,1066,l),
(2492,0,l),
(2555,0,l),
(2555,1103,l),
(2163,1303,l),
(1771,1104,l),
(1771,71,l),
(1442,310,l),
(1113,71,l),
(1113,1103,l),
(721,1303,l),
(329,1104,l),
(329,0,l)
);
}
);
width = 2885;
}
);
note = uni178E;
unicode = 6030;
},
{
glyphname = uni178F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1113,1054,o),
(1138,1054,qs),
(1203,1054,o),
(1226,1165,q),
(1201,1123,o),
(1171,1118,q),
(1165,1118,ls),
(1135,1118,o),
(1084,1161,qs),
(915,1303,l),
(738,1129,l),
(527,1303,l),
(216,1117,l),
(216,1065,l),
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(281,1094,l),
(510,1231,l),
(726,1055,l),
(904,1226,l),
(1009,1140,ls)
);
},
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,698,ls),
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,0,l),
(1113,0,l),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,0,l)
);
}
);
width = 1442;
}
);
note = uni178F;
unicode = 6031;
},
{
glyphname = uni1790;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1051,802,l),
(1051,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(281,1074,l),
(495,1228,l),
(726,1041,l),
(868,1041,ls),
(1113,1041,o),
(1113,1240,qs),
(1113,1443,o),
(957,1443,qs),
(884,1443,o),
(884,1410,q),
(1051,1410,o),
(1051,1240,qs),
(1051,1094,o),
(868,1094,qs),
(761,1094,l),
(507,1303,l),
(216,1097,l),
(216,1045,l),
(329,956,l),
(329,233,ls),
(329,0,o),
(651,0,qs),
(791,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1051,519,l),
(1051,233,ls),
(1051,53,o),
(791,53,qs),
(651,53,ls),
(392,53,o),
(392,233,qs),
(392,985,l)
);
}
);
width = 1442;
}
);
note = uni1790;
unicode = 6032;
},
{
glyphname = uni1791;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1060,625,qs),
(1060,567,o),
(998,567,qs),
(932,567,l),
(932,682,o),
(988,682,qs),
(1060,682,o)
);
},
{
closed = 1;
nodes = (
(976,938,qs),
(891,938,o),
(891,1024,q),
(838,1024,o),
(838,974,qs),
(838,884,o),
(976,884,qs),
(1113,884,o),
(1113,1031,qs),
(1113,1303,o),
(721,1303,qs),
(329,1303,o),
(329,1031,qs),
(329,815,ls),
(329,514,o),
(722,514,qs),
(869,514,l),
(869,280,ls),
(869,53,o),
(697,53,qs),
(525,53,o),
(525,193,qs),
(525,280,ls),
(525,420,o),
(429,420,qs),
(373,420,o),
(373,367,q),
(462,367,o),
(462,280,qs),
(462,193,ls),
(462,0,o),
(697,0,qs),
(932,0,o),
(932,281,qs),
(932,514,l),
(998,514,ls),
(1113,514,o),
(1113,626,qs),
(1113,736,o),
(988,736,qs),
(869,736,o),
(869,567,q),
(722,567,ls),
(392,567,o),
(392,815,qs),
(392,1031,ls),
(392,1250,o),
(721,1250,qs),
(1051,1250,o),
(1051,1031,qs),
(1051,938,o)
);
}
);
width = 1442;
}
);
note = uni1791;
unicode = 6033;
},
{
glyphname = uni1792;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1050,802,l),
(1050,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(721,240,l),
(1050,0,l),
(1113,0,l),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1050,519,l),
(1050,71,l),
(721,310,l),
(392,71,l),
(392,985,l),
(281,1074,l),
(510,1231,l),
(726,1055,l),
(904,1226,l),
(1009,1140,ls),
(1113,1054,o),
(1138,1054,qs),
(1203,1054,o),
(1226,1165,q),
(1201,1123,o),
(1171,1118,q),
(1165,1118,ls),
(1135,1118,o),
(1084,1161,qs),
(915,1303,l),
(738,1129,l),
(527,1303,l),
(216,1097,l),
(216,1045,l),
(329,956,l),
(329,0,l)
);
}
);
width = 1442;
}
);
note = uni1792;
unicode = 6034;
},
{
glyphname = uni1793;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(931,821,o),
(931,921,qs),
(931,994,o),
(1014,994,qs),
(1050,994,l),
(1050,860,ls),
(1050,821,o),
(1021,821,qs)
);
},
{
closed = 1;
nodes = (
(690,616,qs),
(1051,505,l),
(1051,217,ls),
(1051,53,o),
(887,53,qs),
(769,53,o),
(576,326,o),
(392,326,q),
(392,543,l),
(329,543,l),
(329,0,l),
(392,0,l),
(392,273,l),
(556,273,o),
(741,0,o),
(887,0,qs),
(1113,0,o),
(1113,217,qs),
(1113,536,l),
(753,650,ls),
(392,763,o),
(392,869,qs),
(392,1086,ls),
(392,1250,o),
(721,1250,qs),
(1050,1250,o),
(1050,1086,qs),
(1050,1047,l),
(1014,1047,ls),
(878,1047,o),
(878,921,qs),
(878,768,o),
(1021,768,qs),
(1113,768,o),
(1113,860,qs),
(1113,1086,ls),
(1113,1303,o),
(721,1303,qs),
(329,1303,o),
(329,1086,qs),
(329,869,ls),
(329,726,o)
);
}
);
width = 1442;
}
);
note = uni1793;
unicode = 6035;
},
{
glyphname = uni1794;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1113,233,qs),
(1113,909,l),
(922,1018,l),
(1040,1216,l),
(1133,1156,ls),
(1170,1132,o),
(1198,1132,qs),
(1241,1132,o),
(1266,1187,q),
(1256,1186,o),
(1246,1186,qs),
(1202,1186,o),
(1164,1211,qs),
(1024,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1113,0,o)
);
}
);
width = 1442;
}
);
note = uni1794;
unicode = 6036;
},
{
glyphname = uni1795;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1051,802,l),
(1051,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1051,519,l),
(1051,71,l),
(721,310,l),
(392,71,l),
(392,985,l),
(281,1074,l),
(495,1228,l),
(726,1041,l),
(868,1041,ls),
(1113,1041,o),
(1113,1240,qs),
(1113,1443,o),
(957,1443,qs),
(884,1443,o),
(884,1410,q),
(1051,1410,o),
(1051,1240,qs),
(1051,1094,o),
(868,1094,qs),
(761,1094,l),
(507,1303,l),
(216,1097,l),
(216,1045,l),
(329,956,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1051,0,l),
(1113,0,l),
(1113,891,l)
);
}
);
width = 1442;
}
);
note = uni1795;
unicode = 6037;
},
{
glyphname = uni1796;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,0,l),
(1113,0,l),
(1113,1052,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l)
);
}
);
width = 1442;
}
);
note = uni1796;
unicode = 6038;
},
{
glyphname = uni1797;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1113,1054,o),
(1138,1054,qs),
(1203,1054,o),
(1226,1165,q),
(1201,1123,o),
(1171,1118,q),
(1165,1118,ls),
(1135,1118,o),
(1084,1161,qs),
(915,1303,l),
(738,1129,l),
(527,1303,l),
(216,1117,l),
(216,1065,l),
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(281,1094,l),
(510,1231,l),
(726,1055,l),
(904,1226,l),
(1009,1140,ls)
);
},
{
closed = 1;
nodes = (
(329,81,l),
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l)
);
},
{
closed = 1;
nodes = (
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,0,l),
(1113,0,l),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,698,ls)
);
}
);
width = 1442;
}
);
note = uni1797;
unicode = 6039;
},
{
glyphname = uni1798;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,579,l),
(1050,579,l)
);
},
{
closed = 1;
nodes = (
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,909,l),
(922,1018,l),
(1040,1216,l),
(1133,1156,ls),
(1170,1132,o),
(1198,1132,qs),
(1241,1132,o),
(1266,1187,q),
(1256,1186,o),
(1246,1186,qs),
(1202,1186,o),
(1164,1211,qs),
(1024,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,632,l),
(392,632,l),
(392,909,l)
);
}
);
width = 1442;
}
);
note = uni1798;
unicode = 6040;
},
{
glyphname = uni1799;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,1222,l),
(449,1160,ls),
(535,1067,o),
(535,1004,qs),
(535,914,o),
(441,914,qs),
(392,914,l)
);
},
{
closed = 1;
nodes = (
(329,0,o),
(675,0,qs),
(768,0,ls),
(1009,0,o),
(1082,114,q),
(1154,0,o),
(1396,0,qs),
(1489,0,ls),
(1834,0,o),
(1834,233,qs),
(1834,909,l),
(1643,1018,l),
(1761,1216,l),
(1854,1156,ls),
(1891,1132,o),
(1919,1132,qs),
(1962,1132,o),
(1987,1187,q),
(1977,1186,o),
(1967,1186,qs),
(1923,1186,o),
(1885,1211,qs),
(1745,1303,l),
(1588,1045,l),
(1588,985,l),
(1771,882,l),
(1771,233,ls),
(1771,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,909,l),
(922,1018,l),
(1040,1216,l),
(1133,1156,ls),
(1170,1132,o),
(1198,1132,qs),
(1241,1132,o),
(1266,1187,q),
(1256,1186,o),
(1246,1186,qs),
(1202,1186,o),
(1164,1211,qs),
(1024,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,861,l),
(441,861,ls),
(588,861,o),
(588,1003,qs),
(588,1091,o),
(490,1197,qs),
(392,1303,l),
(329,1303,l),
(329,233,ls)
);
}
);
width = 2164;
}
);
note = uni1799;
unicode = 6041;
},
{
glyphname = uni179A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l),
(329,81,l)
);
},
{
closed = 1;
nodes = (
(201,1018,l),
(319,1216,l),
(412,1156,ls),
(449,1132,o),
(477,1132,qs),
(520,1132,o),
(545,1187,q),
(535,1186,o),
(525,1186,qs),
(481,1186,o),
(443,1211,qs),
(303,1303,l),
(146,1045,l),
(146,985,l),
(329,882,l),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,909,l)
);
}
);
width = 721;
}
);
note = uni179A;
unicode = 6042;
},
{
glyphname = uni179B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(1644,1018,l),
(1762,1216,l),
(1855,1156,ls),
(1892,1132,o),
(1920,1132,qs),
(1963,1132,o),
(1988,1187,q),
(1978,1186,o),
(1968,1186,qs),
(1924,1186,o),
(1886,1211,qs),
(1746,1303,l),
(1589,1045,l),
(1589,985,l),
(1772,882,l),
(1772,233,ls),
(1772,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,1103,l),
(721,1303,l),
(329,1104,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1081,l),
(700,1241,l),
(1050,1066,l),
(1050,233,ls),
(1050,0,o),
(1396,0,qs),
(1489,0,ls),
(1835,0,o),
(1835,233,qs),
(1835,909,l)
);
}
);
width = 2164;
}
);
note = uni179B;
unicode = 6043;
},
{
glyphname = uni179C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l),
(329,81,l)
);
},
{
closed = 1;
nodes = (
(581,1280,qs),
(581,1489,o),
(412,1489,qs),
(349,1489,o),
(349,1446,q),
(518,1446,o),
(518,1280,qs),
(518,1186,o),
(477,1186,qs),
(461,1186,o),
(423,1211,qs),
(283,1303,l),
(146,1045,l),
(146,985,l),
(329,882,l),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,909,l),
(201,1018,l),
(299,1216,l),
(392,1156,ls),
(429,1132,o),
(477,1132,qs),
(581,1132,o)
);
}
);
width = 721;
}
);
note = uni179C;
unicode = 6044;
},
{
glyphname = uni179D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1113,1054,o),
(1138,1054,qs),
(1203,1054,o),
(1226,1165,q),
(1201,1123,o),
(1171,1118,q),
(1165,1118,ls),
(1135,1118,o),
(1084,1161,qs),
(915,1303,l),
(738,1129,l),
(527,1303,l),
(216,1117,l),
(216,1065,l),
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(281,1094,l),
(510,1231,l),
(726,1055,l),
(904,1226,l),
(1009,1140,ls)
);
},
{
closed = 1;
nodes = (
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,0,l),
(392,0,l),
(392,21,l),
(547,347,o),
(670,347,qs),
(704,347,o),
(721,340,qs),
(736,333,o),
(750,333,qs),
(754,333,ls),
(770,334,o),
(770,359,qs),
(770,383,o),
(715,400,o),
(670,400,qs),
(524,400,o),
(392,113,q),
(392,698,ls),
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,399,l),
(861,399,l),
(861,346,l),
(1051,346,l),
(1051,0,l),
(1113,0,l),
(1113,346,l),
(1210,346,ls),
(1257,346,o),
(1303,396,o),
(1303,465,q),
(1280,399,o),
(1210,399,qs),
(1113,399,l),
(1113,698,ls)
);
}
);
width = 1442;
}
);
note = uni179D;
unicode = 6045;
},
{
glyphname = uni179E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,579,l),
(1210,579,ls),
(1256,579,o),
(1303,628,o),
(1303,698,q),
(1280,632,o),
(1210,632,qs),
(1113,632,l),
(1113,909,l),
(922,1018,l),
(1040,1216,l),
(1133,1156,ls),
(1170,1132,o),
(1198,1132,qs),
(1241,1132,o),
(1266,1187,q),
(1256,1186,o),
(1246,1186,qs),
(1202,1186,o),
(1164,1211,qs),
(1024,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,632,l),
(833,632,l),
(833,579,l),
(1050,579,l),
(1050,233,ls)
);
}
);
width = 1442;
}
);
note = uni179E;
unicode = 6046;
},
{
glyphname = uni179F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(329,698,qs),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,698,ls),
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,233,ls),
(1051,0,o),
(1396,0,qs),
(1489,0,ls),
(1835,0,o),
(1835,233,qs),
(1835,909,l),
(1644,1018,l),
(1762,1216,l),
(1855,1156,ls),
(1892,1132,o),
(1920,1132,qs),
(1963,1132,o),
(1988,1187,q),
(1978,1186,o),
(1968,1186,qs),
(1924,1186,o),
(1886,1211,qs),
(1746,1303,l),
(1589,1045,l),
(1589,985,l),
(1772,882,l),
(1772,233,ls),
(1772,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(674,931,l),
(457,1075,l),
(603,1228,l),
(804,1102,ls),
(834,1084,o),
(866,1084,qs),
(897,1084,o),
(930,1145,q),
(860,1145,o),
(819,1170,qs),
(597,1303,l),
(386,1081,l),
(386,1054,l),
(587,928,l),
(329,907,o)
);
}
);
width = 2164;
}
);
note = uni179F;
unicode = 6047;
},
{
glyphname = uni17A0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,909,l),
(923,1017,l),
(1261,1239,l),
(1772,1063,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1264,1303,l),
(867,1045,l),
(867,985,l)
);
}
);
width = 2164;
}
);
note = uni17A0;
unicode = 6048;
},
{
glyphname = uni17A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(954,-292,o),
(954,-255,qs),
(954,-199,o),
(1049,-154,q),
(1049,-292,l),
(1013,-292,ls)
);
},
{
closed = 1;
nodes = (
(1060,625,qs),
(1060,567,o),
(998,567,qs),
(932,567,l),
(932,682,o),
(988,682,qs),
(1060,682,o)
);
},
{
closed = 1;
nodes = (
(976,938,qs),
(891,938,o),
(891,1024,q),
(838,1024,o),
(838,974,qs),
(838,884,o),
(976,884,qs),
(1113,884,o),
(1113,1031,qs),
(1113,1303,o),
(721,1303,qs),
(329,1303,o),
(329,1031,qs),
(329,815,ls),
(329,514,o),
(722,514,qs),
(869,514,l),
(869,280,ls),
(869,53,o),
(697,53,qs),
(525,53,o),
(525,193,qs),
(525,280,ls),
(525,420,o),
(429,420,qs),
(373,420,o),
(373,367,q),
(462,367,o),
(462,280,qs),
(462,193,ls),
(462,0,o),
(697,0,qs),
(932,0,o),
(932,281,qs),
(932,514,l),
(998,514,ls),
(1113,514,o),
(1113,626,qs),
(1113,736,o),
(988,736,qs),
(869,736,o),
(869,567,q),
(722,567,ls),
(392,567,o),
(392,815,qs),
(392,1031,ls),
(392,1250,o),
(721,1250,qs),
(1051,1250,o),
(1051,1031,qs),
(1051,938,o)
);
},
{
closed = 1;
nodes = (
(1643,1018,l),
(1761,1216,l),
(1854,1156,ls),
(1891,1132,o),
(1919,1132,qs),
(1962,1132,o),
(1987,1187,q),
(1977,1186,o),
(1967,1186,qs),
(1923,1186,o),
(1885,1211,qs),
(1745,1303,l),
(1588,1045,l),
(1588,985,l),
(1771,882,l),
(1771,-607,l),
(1442,-375,l),
(1112,-607,l),
(1112,-93,l),
(1049,-93,l),
(1012,-113,ls),
(900,-172,o),
(900,-257,qs),
(900,-350,o),
(1013,-350,qs),
(1049,-350,l),
(1049,-673,l),
(1112,-673,l),
(1442,-441,l),
(1771,-673,l),
(1834,-673,l),
(1834,909,l)
);
}
);
width = 2164;
}
);
note = uni17A1;
unicode = 6049;
},
{
glyphname = uni17A2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l),
(329,81,l)
);
},
{
closed = 1;
nodes = (
(993,143,ls),
(907,236,o),
(907,299,qs),
(907,389,o),
(1001,389,qs),
(1050,389,l),
(1050,81,l)
);
},
{
closed = 1;
nodes = (
(1050,442,l),
(1001,442,ls),
(854,442,o),
(854,300,qs),
(854,212,o),
(952,106,qs),
(1050,0,l),
(1113,0,l),
(1113,909,l),
(922,1018,l),
(1040,1216,l),
(1133,1156,ls),
(1170,1132,o),
(1198,1132,qs),
(1241,1132,o),
(1266,1187,q),
(1256,1186,o),
(1246,1186,qs),
(1202,1186,o),
(1164,1211,qs),
(1024,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,632,l),
(392,632,l),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,579,l),
(1050,579,l)
);
}
);
width = 1442;
}
);
note = uni17A2;
unicode = 6050;
},
{
glyphname = uni17A5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,698,ls),
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,0,l),
(1113,0,l),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,0,l)
);
},
{
closed = 1;
nodes = (
(868,1041,ls),
(1113,1041,o),
(1113,1240,qs),
(1113,1443,o),
(957,1443,qs),
(884,1443,o),
(884,1410,q),
(1051,1410,o),
(1051,1240,qs),
(1051,1094,o),
(868,1094,qs),
(761,1094,l),
(507,1303,l),
(216,1117,l),
(216,1065,l),
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(281,1094,l),
(494,1231,l),
(726,1041,l)
);
}
);
width = 1442;
}
);
note = uni17A5;
unicode = 6053;
},
{
glyphname = uni17A6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,-466,qs),
(508,-549,o),
(453,-590,qs),
(392,-632,l),
(392,-403,l),
(438,-403,ls),
(508,-403,o)
);
},
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(1113,0,l),
(1113,1103,l),
(721,1303,l),
(329,1104,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1081,l),
(700,1241,l),
(1050,1066,l),
(1050,0,l)
);
},
{
closed = 1;
nodes = (
(1644,1018,l),
(1742,1216,l),
(1835,1156,ls),
(1872,1132,o),
(1920,1132,qs),
(2024,1132,o),
(2024,1280,qs),
(2024,1489,o),
(1855,1489,qs),
(1792,1489,o),
(1792,1446,q),
(1961,1446,o),
(1961,1280,qs),
(1961,1186,o),
(1920,1186,qs),
(1904,1186,o),
(1866,1211,qs),
(1726,1303,l),
(1589,1045,l),
(1589,985,l),
(1772,882,l),
(1772,-465,ls),
(1772,-645,o),
(1489,-645,qs),
(1396,-645,ls),
(1113,-645,o),
(1113,-465,qs),
(1113,-222,l),
(721,-93,l),
(329,-222,l),
(329,-698,l),
(392,-698,l),
(460,-653,ls),
(571,-573,o),
(571,-465,qs),
(571,-350,o),
(438,-350,qs),
(392,-350,l),
(392,-254,l),
(695,-150,l),
(1050,-262,l),
(1050,-465,ls),
(1050,-698,o),
(1396,-698,qs),
(1489,-698,ls),
(1835,-698,o),
(1835,-465,qs),
(1835,909,l)
);
}
);
width = 2164;
}
);
note = uni17A6;
unicode = 6054;
},
{
glyphname = uni17A7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,948,o),
(528,884,qs),
(528,799,o),
(422,799,qs),
(392,799,o),
(392,838,qs),
(392,948,l),
(422,948,ls)
);
},
{
closed = 1;
nodes = (
(753,610,ls),
(1113,791,o),
(1113,931,qs),
(1113,1071,ls),
(1113,1303,o),
(791,1303,qs),
(651,1303,ls),
(329,1303,o),
(329,1071,qs),
(329,838,ls),
(329,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,qs),
(392,1001,l),
(392,1071,ls),
(392,1250,o),
(651,1250,qs),
(791,1250,ls),
(1050,1250,o),
(1050,1071,qs),
(1050,931,ls),
(1050,811,o),
(690,630,qs),
(329,448,l),
(329,277,ls),
(329,0,o),
(536,0,qs),
(554,0,l),
(1051,260,l),
(1051,117,ls),
(1051,0,o),
(884,0,q),
(884,-47,o),
(971,-47,qs),
(1113,-47,o),
(1113,115,qs),
(1113,535,l),
(1051,535,l),
(1051,317,l),
(541,53,l),
(392,53,o),
(392,277,qs),
(392,428,l)
);
}
);
width = 1442;
}
);
note = uni17A7;
unicode = 6055;
},
{
glyphname = uni17A8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,948,o),
(528,884,qs),
(528,799,o),
(422,799,qs),
(392,799,o),
(392,838,qs),
(392,948,l),
(422,948,ls)
);
},
{
closed = 1;
nodes = (
(753,610,ls),
(1113,791,o),
(1113,931,qs),
(1113,1071,ls),
(1113,1303,o),
(791,1303,qs),
(651,1303,ls),
(329,1303,o),
(329,1071,qs),
(329,838,ls),
(329,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,qs),
(392,1001,l),
(392,1071,ls),
(392,1250,o),
(651,1250,qs),
(791,1250,ls),
(1050,1250,o),
(1050,1071,qs),
(1050,931,ls),
(1050,811,o),
(690,630,qs),
(329,448,l),
(329,277,ls),
(329,0,o),
(536,0,qs),
(554,0,l),
(1051,260,l),
(1051,117,ls),
(1051,0,o),
(884,0,q),
(884,-47,o),
(971,-47,qs),
(1113,-47,o),
(1113,115,qs),
(1113,535,l),
(1051,535,l),
(1051,317,l),
(541,53,l),
(392,53,o),
(392,277,qs),
(392,428,l)
);
},
{
closed = 1;
nodes = (
(1113,1424,o),
(1138,1424,qs),
(1203,1424,o),
(1226,1535,q),
(1201,1493,o),
(1171,1488,q),
(1165,1488,ls),
(1135,1488,o),
(1084,1531,qs),
(915,1673,l),
(738,1499,l),
(527,1673,l),
(216,1487,l),
(216,1435,l),
(329,1346,ls),
(360,1322,o),
(378,1322,qs),
(395,1322,o),
(430,1345,q),
(281,1464,l),
(510,1601,l),
(726,1425,l),
(904,1596,l),
(1009,1510,ls)
);
}
);
width = 1442;
}
);
note = uni17A8;
unicode = 6056;
},
{
glyphname = uni17A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1136,-51,qs),
(1127,-51,o),
(1117,-47,q),
(1117,-93,o),
(1179,-93,qs),
(1240,-93,o),
(1240,97,qs),
(1240,535,l),
(1187,535,l),
(1187,99,ls),
(1187,-51,o)
);
},
{
closed = 1;
nodes = (
(528,948,o),
(528,884,qs),
(528,799,o),
(422,799,qs),
(392,799,o),
(392,838,qs),
(392,948,l),
(422,948,ls)
);
},
{
closed = 1;
nodes = (
(753,610,ls),
(1113,791,o),
(1113,931,qs),
(1113,1071,ls),
(1113,1303,o),
(791,1303,qs),
(651,1303,ls),
(329,1303,o),
(329,1071,qs),
(329,838,ls),
(329,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,qs),
(392,1001,l),
(392,1071,ls),
(392,1250,o),
(651,1250,qs),
(791,1250,ls),
(1050,1250,o),
(1050,1071,qs),
(1050,931,ls),
(1050,811,o),
(690,630,qs),
(329,448,l),
(329,277,ls),
(329,0,o),
(536,0,qs),
(554,0,l),
(1051,260,l),
(1051,117,ls),
(1051,0,o),
(884,0,q),
(884,-47,o),
(971,-47,qs),
(1113,-47,o),
(1113,115,qs),
(1113,535,l),
(1051,535,l),
(1051,317,l),
(541,53,l),
(392,53,o),
(392,277,qs),
(392,428,l)
);
}
);
width = 1442;
}
);
note = uni17A9;
unicode = 6057;
},
{
glyphname = uni17AA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,948,o),
(528,884,qs),
(528,799,o),
(422,799,qs),
(392,799,o),
(392,838,qs),
(392,948,l),
(422,948,ls)
);
},
{
closed = 1;
nodes = (
(753,610,ls),
(1113,791,o),
(1113,931,qs),
(1113,1071,ls),
(1113,1303,o),
(791,1303,qs),
(651,1303,ls),
(329,1303,o),
(329,1071,qs),
(329,838,ls),
(329,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,qs),
(392,1001,l),
(392,1071,ls),
(392,1250,o),
(651,1250,qs),
(791,1250,ls),
(1050,1250,o),
(1050,1071,qs),
(1050,931,ls),
(1050,811,o),
(690,630,qs),
(329,448,l),
(329,277,ls),
(329,0,o),
(536,0,qs),
(554,0,l),
(1051,260,l),
(1051,117,ls),
(1051,0,o),
(884,0,q),
(884,-47,o),
(971,-47,qs),
(1113,-47,o),
(1113,115,qs),
(1113,535,l),
(1051,535,l),
(1051,317,l),
(541,53,l),
(392,53,o),
(392,277,qs),
(392,428,l)
);
},
{
closed = 1;
nodes = (
(868,1401,ls),
(1113,1401,o),
(1113,1600,qs),
(1113,1803,o),
(957,1803,qs),
(884,1803,o),
(884,1770,q),
(1051,1770,o),
(1051,1600,qs),
(1051,1454,o),
(868,1454,qs),
(761,1454,l),
(507,1663,l),
(216,1477,l),
(216,1425,l),
(329,1336,ls),
(360,1312,o),
(378,1312,qs),
(395,1312,o),
(430,1335,q),
(281,1454,l),
(494,1591,l),
(726,1401,l)
);
}
);
width = 1442;
}
);
note = uni17AA;
unicode = 6058;
},
{
glyphname = uni17AB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(997,-93,qs),
(931,-93,o),
(931,-146,q),
(1050,-146,o),
(1050,-233,qs),
(1050,-459,o),
(589,-459,qs),
(359,-459,o),
(186,-391,q),
(243,-451,o),
(343,-482,qs),
(444,-512,o),
(588,-512,qs),
(1113,-512,o),
(1113,-233,qs),
(1113,-93,o)
);
},
{
closed = 1;
nodes = (
(1113,233,qs),
(1113,909,l),
(922,1018,l),
(1040,1216,l),
(1133,1156,ls),
(1170,1132,o),
(1198,1132,qs),
(1241,1132,o),
(1266,1187,q),
(1256,1186,o),
(1246,1186,qs),
(1202,1186,o),
(1164,1211,qs),
(1024,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1113,0,o)
);
}
);
width = 1442;
}
);
note = uni17AB;
unicode = 6059;
},
{
glyphname = uni17AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1113,-233,qs),
(1113,-93,o),
(997,-93,qs),
(931,-93,o),
(931,-146,q),
(1050,-146,o),
(1050,-233,qs),
(1050,-459,o),
(589,-459,qs),
(389,-459,o),
(216,-391,q),
(273,-451,o),
(373,-482,qs),
(474,-512,o),
(588,-512,qs),
(901,-512,o),
(1027,-413,q),
(1052,-447,o),
(1086,-469,qs),
(1132,-500,o),
(1188,-500,qs),
(1273,-500,o),
(1273,-420,q),
(1233,-446,o),
(1195,-446,qs),
(1162,-446,o),
(1131,-425,qs),
(1086,-395,o),
(1071,-369,q),
(1113,-312,o)
);
},
{
closed = 1;
nodes = (
(1113,233,qs),
(1113,909,l),
(922,1018,l),
(1040,1216,l),
(1133,1156,ls),
(1170,1132,o),
(1198,1132,qs),
(1241,1132,o),
(1266,1187,q),
(1256,1186,o),
(1246,1186,qs),
(1202,1186,o),
(1164,1211,qs),
(1024,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1113,0,o)
);
}
);
width = 1442;
}
);
note = uni17AC;
unicode = 6060;
},
{
glyphname = uni17AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(997,-93,qs),
(931,-93,o),
(931,-146,q),
(1050,-146,o),
(1050,-233,qs),
(1050,-459,o),
(589,-459,qs),
(359,-459,o),
(186,-391,q),
(243,-451,o),
(343,-482,qs),
(444,-512,o),
(588,-512,qs),
(1113,-512,o),
(1113,-233,qs),
(1113,-93,o)
);
},
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,0,l),
(1113,0,l),
(1113,1052,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l)
);
}
);
width = 1442;
}
);
note = uni17AD;
unicode = 6061;
},
{
glyphname = uni17AE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1113,-233,qs),
(1113,-93,o),
(997,-93,qs),
(931,-93,o),
(931,-146,q),
(1050,-146,o),
(1050,-233,qs),
(1050,-459,o),
(589,-459,qs),
(389,-459,o),
(216,-391,q),
(273,-451,o),
(373,-482,qs),
(474,-512,o),
(588,-512,qs),
(901,-512,o),
(1027,-413,q),
(1052,-447,o),
(1086,-469,qs),
(1132,-500,o),
(1188,-500,qs),
(1273,-500,o),
(1273,-420,q),
(1233,-446,o),
(1195,-446,qs),
(1162,-446,o),
(1131,-425,qs),
(1086,-395,o),
(1071,-369,q),
(1113,-312,o)
);
},
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,0,l),
(1113,0,l),
(1113,1052,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l)
);
}
);
width = 1442;
}
);
note = uni17AE;
unicode = 6062;
},
{
glyphname = uni17AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(230,549,o),
(230,612,qs),
(230,671,o),
(305,752,qs),
(329,779,l),
(329,549,l),
(300,549,ls)
);
},
{
closed = 1;
nodes = (
(1050,1066,l),
(1050,71,l),
(721,310,l),
(392,71,l),
(392,868,l),
(330,868,l),
(257,788,ls),
(167,690,o),
(167,611,qs),
(167,496,o),
(300,496,qs),
(329,496,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1050,0,l),
(1113,0,l),
(1113,1103,l),
(721,1303,l),
(392,1136,l),
(392,1304,ls),
(392,1489,o),
(262,1489,qs),
(186,1489,o),
(186,1433,q),
(329,1433,o),
(329,1304,qs),
(329,1094,ls),
(329,1038,o),
(361,1038,qs),
(392,1038,o),
(392,1065,qs),
(392,1081,l),
(700,1241,l)
);
}
);
width = 1442;
}
);
note = uni17AF;
unicode = 6063;
},
{
glyphname = uni17B0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,-559,qs),
(329,-698,o),
(567,-698,qs),
(672,-698,o),
(724,-652,qs),
(776,-605,o),
(776,-491,q),
(843,-538,o),
(946,-538,qs),
(1113,-538,o),
(1113,-266,qs),
(1113,-47,l),
(1051,-47,l),
(821,-278,o),
(508,-441,o),
(329,-491,o)
);
},
{
closed = 1;
nodes = (
(937,-476,qs),
(834,-476,o),
(720,-392,q),
(873,-304,o),
(1051,-125,q),
(1051,-266,ls),
(1051,-476,o)
);
},
{
closed = 1;
nodes = (
(392,-559,qs),
(392,-531,l),
(541,-494,o),
(706,-404,q),
(706,-488,ls),
(706,-645,o),
(567,-645,qs),
(392,-645,o)
);
},
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,0,l),
(1113,0,l),
(1113,1052,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l)
);
}
);
width = 1442;
}
);
note = uni17B0;
unicode = 6064;
},
{
glyphname = uni17B1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(570,1630,o),
(581,1630,qs),
(713,1630,o),
(873,1518,qs),
(1046,1396,o),
(1122,1396,qs),
(1217,1396,o),
(1217,1449,q),
(1205,1448,o),
(1192,1448,qs),
(1073,1448,o),
(899,1567,qs),
(711,1694,o),
(556,1694,q),
(216,1498,l),
(216,1425,l),
(337,1345,ls),
(375,1322,o),
(400,1322,q),
(437,1336,l),
(272,1461,l),
(559,1629,l)
);
},
{
closed = 1;
nodes = (
(528,948,o),
(528,884,qs),
(528,799,o),
(422,799,qs),
(392,799,o),
(392,838,qs),
(392,948,l),
(422,948,ls)
);
},
{
closed = 1;
nodes = (
(753,610,ls),
(1113,791,o),
(1113,931,qs),
(1113,1071,ls),
(1113,1303,o),
(791,1303,qs),
(651,1303,ls),
(329,1303,o),
(329,1071,qs),
(329,838,ls),
(329,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,qs),
(392,1001,l),
(392,1071,ls),
(392,1250,o),
(651,1250,qs),
(791,1250,ls),
(1050,1250,o),
(1050,1071,qs),
(1050,931,ls),
(1050,811,o),
(690,630,qs),
(329,448,l),
(329,277,ls),
(329,0,o),
(536,0,qs),
(554,0,l),
(1051,260,l),
(1051,117,ls),
(1051,0,o),
(884,0,q),
(884,-47,o),
(971,-47,qs),
(1113,-47,o),
(1113,115,qs),
(1113,535,l),
(1051,535,l),
(1051,317,l),
(541,53,l),
(392,53,o),
(392,277,qs),
(392,428,l)
);
}
);
width = 1442;
}
);
note = uni17B1;
unicode = 6065;
},
{
glyphname = uni17B2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(700,1241,l),
(1050,1066,l),
(1113,1103,l),
(721,1303,l),
(329,1104,l),
(329,233,ls),
(329,0,o),
(651,0,qs),
(792,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,395,o),
(974,407,q),
(1027,451,ls),
(1113,521,o),
(1113,652,qs),
(1113,861,o),
(907,861,qs),
(716,861,o),
(716,706,qs),
(716,543,o),
(852,543,qs),
(887,543,o),
(887,592,q),
(779,592,o),
(779,706,qs),
(779,809,o),
(907,809,qs),
(1051,809,o),
(1051,652,qs),
(1051,551,o),
(981,494,qs),
(717,276,l),
(717,275,ls),
(717,238,o),
(767,238,q),
(930,371,l),
(939,371,ls),
(1051,371,o),
(1051,233,qs),
(1051,53,o),
(792,53,qs),
(651,53,ls),
(392,53,o),
(392,233,qs),
(392,1081,l)
);
}
);
width = 1442;
}
);
note = uni17B2;
unicode = 6066;
},
{
glyphname = uni17B3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,948,o),
(528,884,qs),
(528,799,o),
(422,799,qs),
(392,799,o),
(392,838,qs),
(392,948,l),
(422,948,ls)
);
},
{
closed = 1;
nodes = (
(753,610,ls),
(1113,791,o),
(1113,931,qs),
(1113,1071,ls),
(1113,1303,o),
(791,1303,qs),
(651,1303,ls),
(329,1303,o),
(329,1071,qs),
(329,838,ls),
(329,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,qs),
(392,1001,l),
(392,1071,ls),
(392,1250,o),
(651,1250,qs),
(791,1250,ls),
(1050,1250,o),
(1050,1071,qs),
(1050,931,ls),
(1050,811,o),
(690,630,qs),
(329,448,l),
(329,277,ls),
(329,0,o),
(536,0,qs),
(554,0,l),
(1051,260,l),
(1051,117,ls),
(1051,0,o),
(884,0,q),
(884,-47,o),
(971,-47,qs),
(1113,-47,o),
(1113,115,qs),
(1113,535,l),
(1051,535,l),
(1051,317,l),
(541,53,l),
(392,53,o),
(392,277,qs),
(392,428,l)
);
},
{
closed = 1;
nodes = (
(1010,1409,q),
(1068,1409,o),
(1072,1459,q),
(981,1512,o),
(981,1606,qs),
(981,1679,o),
(1059,1809,o),
(1190,1809,qs),
(1238,1809,o),
(1238,1836,qs),
(1238,1863,o),
(1189,1863,qs),
(1030,1862,o),
(921,1702,o),
(921,1602,qs),
(921,1574,o),
(927,1548,q),
(913,1557,o),
(899,1567,qs),
(711,1694,o),
(556,1694,q),
(216,1498,l),
(216,1425,l),
(337,1345,ls),
(375,1322,o),
(400,1322,q),
(437,1336,l),
(272,1461,l),
(559,1629,l),
(570,1630,o),
(581,1630,qs),
(713,1630,o),
(873,1518,qs),
(926,1481,o),
(971,1455,q),
(988,1431,o)
);
}
);
width = 1442;
}
);
note = uni17B3;
unicode = 6067;
},
{
glyphname = uni17A3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l),
(329,81,l)
);
},
{
closed = 1;
nodes = (
(993,143,ls),
(907,236,o),
(907,299,qs),
(907,389,o),
(1001,389,qs),
(1050,389,l),
(1050,81,l)
);
},
{
closed = 1;
nodes = (
(1050,442,l),
(1001,442,ls),
(854,442,o),
(854,300,qs),
(854,212,o),
(952,106,qs),
(1050,0,l),
(1113,0,l),
(1113,909,l),
(922,1018,l),
(1040,1216,l),
(1133,1156,ls),
(1170,1132,o),
(1198,1132,qs),
(1241,1132,o),
(1266,1187,q),
(1256,1186,o),
(1246,1186,qs),
(1202,1186,o),
(1164,1211,qs),
(1024,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,632,l),
(392,632,l),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,579,l),
(1050,579,l)
);
}
);
width = 1442;
}
);
note = uni17A3;
unicode = 6051;
},
{
glyphname = uni17A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l),
(329,81,l)
);
},
{
closed = 1;
nodes = (
(993,143,ls),
(907,236,o),
(907,299,qs),
(907,389,o),
(1001,389,qs),
(1050,389,l),
(1050,81,l)
);
},
{
closed = 1;
nodes = (
(923,1017,l),
(1261,1239,l),
(1772,1063,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1264,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,632,l),
(392,632,l),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,579,l),
(1050,579,l),
(1050,442,l),
(1001,442,ls),
(854,442,o),
(854,300,qs),
(854,212,o),
(952,106,qs),
(1050,0,l),
(1113,0,l),
(1113,909,l)
);
}
);
width = 2164;
}
);
note = uni17A4;
unicode = 6052;
},
{
glyphname = uni17B4;
layers = (
{
layerId = m01;
width = 1204;
}
);
note = uni17B4;
unicode = 6068;
},
{
glyphname = uni17B5;
layers = (
{
layerId = m01;
width = 1204;
}
);
note = uni17B5;
unicode = 6069;
},
{
glyphname = uni17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-23,1243,l),
(330,1068,l),
(330,0,l),
(393,0,l),
(393,1103,l),
(-19,1303,l),
(-370,1126,l),
(-349,1075,l)
);
}
);
width = 721;
}
);
note = uni17B6;
unicode = 6070;
},
{
glyphname = uni17BF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,1706,qs),
(150,1662,l),
(-355,1662,ls),
(-435,1662,o),
(-435,1702,qs),
(-435,1875,o),
(-268,1875,qs),
(-97,1875,o)
);
},
{
closed = 1;
nodes = (
(329,1476,o),
(329,1383,qs),
(329,-326,ls),
(329,-505,o),
(117,-505,qs),
(-116,-505,ls),
(-329,-505,o),
(-329,-326,qs),
(-329,-93,l),
(-392,-93,l),
(-392,-326,ls),
(-392,-559,o),
(-116,-559,qs),
(117,-559,ls),
(392,-559,o),
(392,-326,qs),
(392,1383,ls),
(392,1562,o),
(231,1659,q),
(231,1981,l),
(178,1981,l),
(178,1708,l),
(142,1740,ls),
(80,1794,o),
(21,1833,q),
(21,2017,l),
(-32,2017,l),
(-32,1866,l),
(-156,1935,o),
(-268,1935,qs),
(-494,1935,o),
(-494,1702,qs),
(-494,1609,o),
(-355,1609,qs),
(183,1609,ls),
(231,1609,o)
);
}
);
width = 721;
}
);
note = uni17BF;
unicode = 6079;
},
{
glyphname = uni17C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,-505,o),
(117,-505,qs),
(-116,-505,ls),
(-329,-505,o),
(-329,-326,qs),
(-329,-93,l),
(-392,-93,l),
(-392,-326,ls),
(-392,-559,o),
(-116,-559,qs),
(117,-559,ls),
(392,-559,o),
(392,-326,qs),
(392,1374,ls),
(392,1624,o),
(163,1624,qs),
(-70,1624,ls),
(-236,1624,o),
(-236,1717,qs),
(-236,1800,ls),
(-236,1940,o),
(-354,1940,qs),
(-442,1940,o),
(-442,1887,q),
(-299,1887,o),
(-299,1800,qs),
(-299,1717,ls),
(-299,1570,o),
(-70,1570,qs),
(163,1570,ls),
(329,1570,o),
(329,1374,qs),
(329,-326,ls)
);
}
);
width = 721;
}
);
note = uni17C0;
unicode = 6080;
},
{
glyphname = uni17C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,389,ls),
(515,389,o),
(515,299,qs),
(515,216,o),
(392,81,q),
(392,389,l)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(568,202,o),
(568,300,qs),
(568,442,o),
(421,442,qs),
(392,442,l),
(392,1208,l),
(458,1165,ls),
(523,1121,o),
(558,1121,qs),
(605,1121,o),
(619,1174,q),
(589,1174,ls),
(559,1174,o),
(459,1239,qs),
(358,1303,l),
(329,1303,l),
(329,0,l)
);
}
);
width = 721;
}
);
note = uni17C1;
unicode = 6081;
},
{
glyphname = uni17C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,1629,qs),
(194,1629,o),
(194,1533,qs),
(194,1396,o),
(400,1396,qs),
(629,1396,o),
(629,1629,qs),
(629,1862,o),
(411,1862,qs),
(349,1862,o),
(349,1819,q),
(565,1819,o),
(565,1629,qs),
(565,1449,o),
(400,1449,qs),
(268,1449,o),
(268,1513,qs),
(268,1576,o),
(349,1576,q),
(349,1629,o)
);
},
{
closed = 1;
nodes = (
(421,389,ls),
(515,389,o),
(515,299,qs),
(515,216,o),
(392,81,q),
(392,389,l)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(568,202,o),
(568,300,qs),
(568,442,o),
(421,442,qs),
(392,442,l),
(392,1208,l),
(458,1165,ls),
(523,1121,o),
(558,1121,qs),
(605,1121,o),
(619,1174,q),
(589,1174,ls),
(559,1174,o),
(459,1239,qs),
(358,1303,l),
(329,1303,l),
(329,0,l)
);
}
);
width = 721;
}
);
note = uni17C2;
unicode = 6082;
},
{
glyphname = uni17C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,1519,qs),
(257,1396,o),
(422,1396,qs),
(629,1396,o),
(629,1583,qs),
(629,1749,o),
(422,1749,qs),
(330,1749,l),
(330,1936,o),
(216,1936,qs),
(143,1936,o),
(143,1883,q),
(257,1883,o),
(257,1749,qs),
(257,1696,o),
(330,1696,qs),
(422,1696,ls),
(555,1696,o),
(555,1583,qs),
(555,1449,o),
(422,1449,qs),
(320,1449,o),
(320,1583,q),
(257,1583,o)
);
},
{
closed = 1;
nodes = (
(421,389,ls),
(515,389,o),
(515,299,qs),
(515,216,o),
(392,81,q),
(392,389,l)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(568,202,o),
(568,300,qs),
(568,442,o),
(421,442,qs),
(392,442,l),
(392,1208,l),
(458,1165,ls),
(523,1121,o),
(558,1121,qs),
(605,1121,o),
(619,1174,q),
(589,1174,ls),
(559,1174,o),
(459,1239,qs),
(358,1303,l),
(329,1303,l),
(329,0,l)
);
}
);
width = 721;
}
);
note = uni17C3;
unicode = 6083;
},
{
glyphname = uni17C4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-23,1243,l),
(330,1068,l),
(330,0,l),
(393,0,l),
(393,1103,l),
(-19,1303,l),
(-370,1126,l),
(-349,1075,l)
);
}
);
width = 721;
}
);
note = uni17C4;
unicode = 6084;
},
{
glyphname = uni17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,1164,qs),
(429,1536,ls),
(429,1722,o),
(292,1722,qs),
(224,1722,o),
(224,1679,q),
(367,1679,o),
(367,1536,qs),
(367,1075,l),
(383,994,l),
(429,1087,o)
);
},
{
closed = 1;
nodes = (
(-23,1243,l),
(330,1068,l),
(330,0,l),
(393,0,l),
(393,1103,l),
(-19,1303,l),
(-370,1126,l),
(-349,1075,l)
);
}
);
width = 721;
}
);
note = uni17C5;
unicode = 6085;
},
{
glyphname = uni17C7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,1212,qs),
(411,1251,o),
(488,1251,qs),
(566,1251,o),
(605,1212,qs),
(645,1171,o),
(645,1094,qs),
(645,1015,o),
(605,976,qs),
(566,938,o),
(488,938,qs),
(411,938,o),
(372,976,qs),
(332,1015,o),
(332,1094,qs),
(332,1171,o)
);
},
{
closed = 1;
nodes = (
(646,1251,qs),
(594,1303,o),
(488,1303,qs),
(383,1303,o),
(331,1251,qs),
(279,1199,o),
(279,1094,qs),
(279,989,o),
(331,936,qs),
(383,884,o),
(488,884,qs),
(594,884,o),
(646,936,qs),
(698,989,o),
(698,1094,qs),
(698,1199,o)
);
},
{
closed = 1;
nodes = (
(372,326,qs),
(411,366,o),
(488,366,qs),
(566,366,o),
(605,326,qs),
(645,287,o),
(645,209,qs),
(645,132,o),
(605,93,qs),
(566,53,o),
(488,53,qs),
(411,53,o),
(372,93,qs),
(332,132,o),
(332,209,qs),
(332,287,o)
);
},
{
closed = 1;
nodes = (
(646,367,qs),
(594,419,o),
(488,419,qs),
(383,419,o),
(331,367,qs),
(279,315,o),
(279,209,qs),
(279,104,o),
(331,52,qs),
(383,0,o),
(488,0,qs),
(594,0,o),
(646,52,qs),
(698,104,o),
(698,209,qs),
(698,315,o)
);
}
);
width = 977;
}
);
note = uni17C7;
unicode = 6087;
},
{
glyphname = uni17C8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(476,67,qs),
(496,83,o),
(505,116,q),
(487,100,o),
(478,100,qs),
(469,100,o),
(469,116,qs),
(469,149,o),
(458,166,qs),
(447,183,o),
(424,183,qs),
(401,183,o),
(390,166,qs),
(379,150,o),
(379,116,qs),
(379,83,o),
(390,67,qs),
(401,50,o),
(424,50,qs),
(455,50,o)
);
},
{
closed = 1;
nodes = (
(476,996,qs),
(496,1012,o),
(505,1045,q),
(487,1029,o),
(478,1029,qs),
(469,1029,o),
(469,1045,qs),
(469,1078,o),
(458,1095,qs),
(447,1112,o),
(424,1112,qs),
(401,1112,o),
(390,1095,qs),
(379,1079,o),
(379,1045,qs),
(379,1012,o),
(390,996,qs),
(401,979,o),
(424,979,qs),
(455,979,o)
);
}
);
width = 791;
}
);
note = uni17C8;
unicode = 6088;
},
{
glyphname = uni17DC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1130,-8,o),
(1130,319,qs),
(1130,635,o),
(675,635,qs),
(472,635,o),
(270,768,o),
(270,902,qs),
(270,1042,o),
(469,1182,o),
(665,1182,qs),
(868,1182,o),
(1072,1073,o),
(1072,967,qs),
(1072,883,o),
(982,802,o),
(891,802,qs),
(851,802,o),
(851,778,qs),
(851,754,o),
(891,754,qs),
(1006,754,o),
(1120,858,o),
(1120,966,qs),
(1120,1097,o),
(892,1230,o),
(665,1230,qs),
(220,1230,o),
(220,903,qs),
(220,587,o),
(675,587,qs),
(878,587,o),
(1080,454,o),
(1080,320,qs),
(1080,180,o),
(881,40,o),
(685,40,qs),
(482,40,o),
(278,149,o),
(278,255,qs),
(278,339,o),
(368,420,o),
(459,420,qs),
(499,420,o),
(499,444,qs),
(499,468,o),
(459,468,qs),
(344,468,o),
(230,364,o),
(230,256,qs),
(230,125,o),
(458,-8,o),
(685,-8,q),
(685,-8,l),
(685,-8,l)
);
}
);
width = 1350;
}
);
note = uni17DC;
unicode = 6108;
},
{
glyphname = uni1789.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,0,l),
(1113,0,l),
(1113,1028,l),
(1443,1234,l),
(1772,1024,l),
(1772,0,l),
(1835,0,l),
(1835,1054,l),
(1443,1303,l),
(1083,1086,l),
(888,1303,l)
);
}
);
width = 2164;
}
);
note = uni1789.a;
},
{
glyphname = uni17BF.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,1706,qs),
(150,1662,l),
(-355,1662,ls),
(-435,1662,o),
(-435,1702,qs),
(-435,1875,o),
(-268,1875,qs),
(-97,1875,o)
);
},
{
closed = 1;
nodes = (
(329,1476,o),
(329,1383,qs),
(329,-886,ls),
(329,-1065,o),
(117,-1065,qs),
(-116,-1065,ls),
(-329,-1065,o),
(-329,-886,qs),
(-329,-713,l),
(-392,-713,l),
(-392,-886,ls),
(-392,-1119,o),
(-116,-1119,qs),
(117,-1119,ls),
(392,-1119,o),
(392,-886,qs),
(392,1383,ls),
(392,1562,o),
(231,1659,q),
(231,1981,l),
(178,1981,l),
(178,1708,l),
(142,1740,ls),
(80,1794,o),
(21,1833,q),
(21,2017,l),
(-32,2017,l),
(-32,1866,l),
(-156,1935,o),
(-268,1935,qs),
(-494,1935,o),
(-494,1702,qs),
(-494,1609,o),
(-355,1609,qs),
(183,1609,ls),
(231,1609,o)
);
}
);
width = 721;
}
);
note = uni17BF.b;
},
{
glyphname = uni17C0.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,-1065,o),
(117,-1065,qs),
(-116,-1065,ls),
(-329,-1065,o),
(-329,-886,qs),
(-329,-713,l),
(-392,-713,l),
(-392,-886,ls),
(-392,-1119,o),
(-116,-1119,qs),
(117,-1119,ls),
(392,-1119,o),
(392,-886,qs),
(392,1374,ls),
(392,1624,o),
(163,1624,qs),
(-70,1624,ls),
(-236,1624,o),
(-236,1717,qs),
(-236,1800,ls),
(-236,1940,o),
(-354,1940,qs),
(-442,1940,o),
(-442,1887,q),
(-299,1887,o),
(-299,1800,qs),
(-299,1717,ls),
(-299,1570,o),
(-70,1570,qs),
(163,1570,ls),
(329,1570,o),
(329,1374,qs),
(329,-886,ls)
);
}
);
width = 721;
}
);
note = uni17C0.b;
},
{
glyphname = uni17B6.space;
layers = (
{
layerId = m01;
width = 721;
}
);
note = uni17B6.space;
},
{
glyphname = uni1780_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,0,l),
(1113,0,l),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,0,l),
(392,0,l),
(392,698,ls)
);
},
{
closed = 1;
nodes = (
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(298,1080,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1103,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1065,l)
);
}
);
width = 1442;
}
);
note = uni1780_17B6;
},
{
glyphname = uni1780_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,0,l),
(1113,0,l),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,0,l),
(392,0,l),
(392,698,ls)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1116,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1065,l),
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(298,1080,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1780_17C5;
},
{
glyphname = uni1781_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,948,o),
(528,884,qs),
(528,799,o),
(422,799,qs),
(392,799,o),
(392,838,qs),
(392,948,l),
(422,948,ls)
);
},
{
closed = 1;
nodes = (
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1423,1303,l),
(1104,1142,l),
(1059,1303,o),
(791,1303,qs),
(651,1303,ls),
(329,1303,o),
(329,1071,qs),
(329,838,ls),
(329,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,qs),
(392,1001,l),
(392,1071,ls),
(392,1250,o),
(651,1250,qs),
(791,1250,ls),
(1050,1250,o),
(1050,1071,qs),
(1050,931,ls),
(1050,811,o),
(690,630,qs),
(329,448,l),
(329,233,ls),
(329,0,o),
(651,0,qs),
(791,0,ls),
(1113,0,o),
(1113,372,qs),
(1113,555,l),
(1050,478,l),
(1050,372,ls),
(1050,53,o),
(791,53,qs),
(651,53,ls),
(392,53,o),
(392,233,qs),
(392,428,l),
(753,610,ls),
(1113,791,o),
(1113,931,qs),
(1113,1085,l),
(1419,1243,l)
);
}
);
width = 1442;
}
);
note = uni1781_17B6;
},
{
glyphname = uni1781_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,948,o),
(528,884,qs),
(528,799,o),
(422,799,qs),
(392,799,o),
(392,838,qs),
(392,948,l),
(422,948,ls)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1119,l),
(1423,1303,l),
(1104,1142,l),
(1059,1303,o),
(791,1303,qs),
(651,1303,ls),
(329,1303,o),
(329,1071,qs),
(329,838,ls),
(329,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,qs),
(392,1001,l),
(392,1071,ls),
(392,1250,o),
(651,1250,qs),
(791,1250,ls),
(1050,1250,o),
(1050,1071,qs),
(1050,931,ls),
(1050,811,o),
(690,630,qs),
(329,448,l),
(329,233,ls),
(329,0,o),
(651,0,qs),
(791,0,ls),
(1113,0,o),
(1113,372,qs),
(1113,555,l),
(1050,478,l),
(1050,372,ls),
(1050,53,o),
(791,53,qs),
(651,53,ls),
(392,53,o),
(392,233,qs),
(392,428,l),
(753,610,ls),
(1113,791,o),
(1113,931,qs),
(1113,1085,l),
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1781_17C5;
},
{
glyphname = uni1782_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,0,l),
(1113,0,l),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,0,l),
(392,0,l),
(392,21,l),
(547,347,o),
(670,347,qs),
(704,347,o),
(721,340,qs),
(736,333,o),
(750,333,qs),
(754,333,ls),
(770,334,o),
(770,359,qs),
(770,383,o),
(715,400,o),
(670,400,qs),
(524,400,o),
(392,113,q),
(392,698,ls)
);
},
{
closed = 1;
nodes = (
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(298,1080,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1103,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1065,l)
);
}
);
width = 1442;
}
);
note = uni1782_17B6;
},
{
glyphname = uni1782_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,0,l),
(1113,0,l),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,0,l),
(392,0,l),
(392,21,l),
(547,347,o),
(670,347,qs),
(704,347,o),
(721,340,qs),
(736,333,o),
(750,333,qs),
(754,333,ls),
(770,334,o),
(770,359,qs),
(770,383,o),
(715,400,o),
(670,400,qs),
(524,400,o),
(392,113,q),
(392,698,ls)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1116,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1065,l),
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(298,1080,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1782_17C5;
},
{
glyphname = uni1783_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,914,o),
(186,1004,qs),
(186,1067,o),
(272,1160,qs),
(329,1222,l),
(329,914,l),
(280,914,ls)
);
},
{
closed = 1;
nodes = (
(1644,1017,l),
(1982,1239,l),
(2493,1063,l),
(2493,0,l),
(2556,0,l),
(2556,1103,l),
(1985,1303,l),
(1588,1045,l),
(1588,985,l),
(1771,882,l),
(1771,233,ls),
(1771,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,909,l),
(922,1018,l),
(1040,1216,l),
(1133,1156,ls),
(1170,1132,o),
(1198,1132,qs),
(1241,1132,o),
(1266,1187,q),
(1256,1186,o),
(1246,1186,qs),
(1202,1186,o),
(1164,1211,qs),
(1024,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,1303,l),
(329,1303,l),
(231,1197,ls),
(133,1091,o),
(133,1003,qs),
(133,861,o),
(280,861,qs),
(329,861,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1009,0,o),
(1082,114,q),
(1154,0,o),
(1396,0,qs),
(1489,0,ls),
(1834,0,o),
(1834,233,qs),
(1834,909,l)
);
}
);
width = 2164;
}
);
note = uni1783_17B6;
},
{
glyphname = uni1783_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,914,o),
(186,1004,qs),
(186,1067,o),
(272,1160,qs),
(329,1222,l),
(329,914,l),
(280,914,ls)
);
},
{
closed = 1;
nodes = (
(2586,1164,qs),
(2586,1536,ls),
(2586,1722,o),
(2449,1722,qs),
(2381,1722,o),
(2381,1679,q),
(2524,1679,o),
(2524,1536,qs),
(2524,1114,l),
(1985,1303,l),
(1588,1045,l),
(1588,985,l),
(1771,882,l),
(1771,233,ls),
(1771,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,909,l),
(922,1018,l),
(1040,1216,l),
(1133,1156,ls),
(1170,1132,o),
(1198,1132,qs),
(1241,1132,o),
(1266,1187,q),
(1256,1186,o),
(1246,1186,qs),
(1202,1186,o),
(1164,1211,qs),
(1024,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,1303,l),
(329,1303,l),
(231,1197,ls),
(133,1091,o),
(133,1003,qs),
(133,861,o),
(280,861,qs),
(329,861,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1009,0,o),
(1082,114,q),
(1154,0,o),
(1396,0,qs),
(1489,0,ls),
(1834,0,o),
(1834,233,qs),
(1834,909,l),
(1644,1017,l),
(1982,1239,l),
(2493,1063,l),
(2493,0,l),
(2556,0,l),
(2556,1029,l),
(2586,1102,o)
);
}
);
width = 2164;
}
);
note = uni1783_17C5;
},
{
glyphname = uni1784_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(847,1238,qs),
(944,1238,o),
(944,1166,qs),
(944,1094,o),
(847,1094,qs),
(750,1094,o),
(750,1166,qs),
(750,1238,o)
);
},
{
closed = 1;
nodes = (
(230,549,o),
(230,612,qs),
(230,671,o),
(305,752,qs),
(329,779,l),
(329,549,l),
(300,549,ls)
);
},
{
closed = 1;
nodes = (
(330,868,l),
(257,788,ls),
(167,690,o),
(167,611,qs),
(167,496,o),
(300,496,qs),
(329,496,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1050,0,l),
(1113,0,l),
(1113,966,l),
(934,1049,l),
(1009,1083,o),
(1009,1166,qs),
(1009,1303,o),
(848,1303,qs),
(685,1303,o),
(685,1166,qs),
(685,1112,o),
(710,1094,q),
(558,1094,ls),
(393,1094,o),
(393,1164,qs),
(393,1334,ls),
(393,1489,o),
(285,1489,qs),
(186,1489,o),
(186,1443,q),
(329,1443,o),
(329,1334,qs),
(329,1164,ls),
(329,1041,o),
(558,1041,qs),
(807,1041,l),
(1050,941,l),
(1050,71,l),
(721,310,l),
(392,71,l),
(392,868,l)
);
},
{
closed = 1;
nodes = (
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1423,1303,l),
(1072,1126,l),
(1093,1075,l)
);
}
);
width = 1442;
}
);
note = uni1784_17B6;
},
{
glyphname = uni1784_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(847,1238,qs),
(944,1238,o),
(944,1166,qs),
(944,1094,o),
(847,1094,qs),
(750,1094,o),
(750,1166,qs),
(750,1238,o)
);
},
{
closed = 1;
nodes = (
(230,549,o),
(230,612,qs),
(230,671,o),
(305,752,qs),
(329,779,l),
(329,549,l),
(300,549,ls)
);
},
{
closed = 1;
nodes = (
(330,868,l),
(257,788,ls),
(167,690,o),
(167,611,qs),
(167,496,o),
(300,496,qs),
(329,496,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1050,0,l),
(1113,0,l),
(1113,966,l),
(934,1049,l),
(1009,1083,o),
(1009,1166,qs),
(1009,1303,o),
(848,1303,qs),
(685,1303,o),
(685,1166,qs),
(685,1112,o),
(710,1094,q),
(558,1094,ls),
(393,1094,o),
(393,1164,qs),
(393,1334,ls),
(393,1489,o),
(285,1489,qs),
(186,1489,o),
(186,1443,q),
(329,1443,o),
(329,1334,qs),
(329,1164,ls),
(329,1041,o),
(558,1041,qs),
(807,1041,l),
(1050,941,l),
(1050,71,l),
(721,310,l),
(392,71,l),
(392,868,l)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1119,l),
(1423,1303,l),
(1072,1126,l),
(1093,1075,l),
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1784_17C5;
},
{
glyphname = uni1785_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1051,802,l),
(1051,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1103,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1045,l),
(329,956,l),
(329,233,ls),
(329,0,o),
(651,0,qs),
(791,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1051,519,l),
(1051,233,ls),
(1051,53,o),
(791,53,qs),
(651,53,ls),
(392,53,o),
(392,233,qs),
(392,985,l),
(283,1073,l),
(611,1239,l)
);
}
);
width = 1442;
}
);
note = uni1785_17B6;
},
{
glyphname = uni1785_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1051,802,l),
(1051,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1116,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1045,l),
(329,956,l),
(329,233,ls),
(329,0,o),
(651,0,qs),
(791,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1051,519,l),
(1051,233,ls),
(1051,53,o),
(791,53,qs),
(651,53,ls),
(392,53,o),
(392,233,qs),
(392,985,l),
(283,1073,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1785_17C5;
},
{
glyphname = uni1786_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,366,q),
(329,78,l),
(222,159,o),
(222,256,qs),
(222,366,o)
);
},
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1050,802,l),
(1050,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(283,1073,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1103,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1045,l),
(329,956,l),
(329,419,l),
(169,419,o),
(169,256,qs),
(169,130,o),
(267,50,qs),
(329,0,l),
(392,0,l),
(392,366,l),
(511,366,ls),
(671,366,o),
(671,217,qs),
(671,0,o),
(884,0,qs),
(1113,0,o),
(1113,233,qs),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1050,519,l),
(1050,233,ls),
(1050,53,o),
(884,53,qs),
(724,53,o),
(724,217,qs),
(724,419,o),
(511,419,qs),
(392,419,l),
(392,985,l)
);
}
);
width = 1442;
}
);
note = uni1786_17B6;
},
{
glyphname = uni1786_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,366,q),
(329,78,l),
(222,159,o),
(222,256,qs),
(222,366,o)
);
},
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1050,802,l),
(1050,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1116,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1045,l),
(329,956,l),
(329,419,l),
(169,419,o),
(169,256,qs),
(169,130,o),
(267,50,qs),
(329,0,l),
(392,0,l),
(392,366,l),
(511,366,ls),
(671,366,o),
(671,217,qs),
(671,0,o),
(884,0,qs),
(1113,0,o),
(1113,233,qs),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1050,519,l),
(1050,233,ls),
(1050,53,o),
(884,53,qs),
(724,53,o),
(724,217,qs),
(724,419,o),
(511,419,qs),
(392,419,l),
(392,985,l),
(283,1073,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1786_17C5;
},
{
glyphname = uni1787_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1423,1303,l),
(1089,1134,l),
(1113,1177,o),
(1113,1240,qs),
(1113,1443,o),
(957,1443,qs),
(884,1443,o),
(884,1410,q),
(1051,1410,o),
(1051,1240,qs),
(1051,1094,o),
(868,1094,qs),
(761,1094,l),
(507,1303,l),
(216,1097,l),
(216,1045,l),
(329,956,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1051,0,l),
(1113,0,l),
(1113,861,l),
(1051,861,l),
(1051,71,l),
(721,310,l),
(392,71,l),
(392,985,l),
(281,1074,l),
(495,1228,l),
(726,1041,l),
(868,1041,ls),
(1018,1041,o),
(1076,1116,q),
(1093,1075,l)
);
}
);
width = 1442;
}
);
note = uni1787_17B6;
},
{
glyphname = uni1787_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1119,l),
(1423,1303,l),
(1089,1134,l),
(1113,1177,o),
(1113,1240,qs),
(1113,1443,o),
(957,1443,qs),
(884,1443,o),
(884,1410,q),
(1051,1410,o),
(1051,1240,qs),
(1051,1094,o),
(868,1094,qs),
(761,1094,l),
(507,1303,l),
(216,1097,l),
(216,1045,l),
(329,956,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1051,0,l),
(1113,0,l),
(1113,861,l),
(1051,861,l),
(1051,71,l),
(721,310,l),
(392,71,l),
(392,985,l),
(281,1074,l),
(495,1228,l),
(726,1041,l),
(868,1041,ls),
(1018,1041,o),
(1076,1116,q),
(1093,1075,l),
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1787_17C5;
},
{
glyphname = uni1788_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(2367,1017,l),
(2705,1239,l),
(3216,1063,l),
(3216,0,l),
(3279,0,l),
(3279,1103,l),
(2708,1303,l),
(2311,1045,l),
(2311,985,l),
(2494,882,l),
(2494,233,ls),
(2494,53,o),
(2211,53,qs),
(2118,53,ls),
(1835,53,o),
(1835,233,qs),
(1835,909,l),
(1644,1018,l),
(1762,1216,l),
(1855,1156,ls),
(1892,1132,o),
(1920,1132,qs),
(1963,1132,o),
(1988,1187,q),
(1978,1186,o),
(1968,1186,qs),
(1924,1186,o),
(1886,1211,qs),
(1746,1303,l),
(1589,1045,l),
(1589,985,l),
(1772,882,l),
(1772,233,ls),
(1772,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,1103,l),
(721,1303,l),
(329,1104,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1081,l),
(700,1241,l),
(1050,1066,l),
(1050,233,ls),
(1050,0,o),
(1396,0,qs),
(1489,0,ls),
(1731,0,o),
(1804,114,q),
(1876,0,o),
(2118,0,qs),
(2211,0,ls),
(2557,0,o),
(2557,233,qs),
(2557,909,l)
);
}
);
width = 2885;
}
);
note = uni1788_17B6;
},
{
glyphname = uni1788_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(3309,1164,qs),
(3309,1536,ls),
(3309,1722,o),
(3172,1722,qs),
(3104,1722,o),
(3104,1679,q),
(3247,1679,o),
(3247,1536,qs),
(3247,1114,l),
(2708,1303,l),
(2311,1045,l),
(2311,985,l),
(2494,882,l),
(2494,233,ls),
(2494,53,o),
(2211,53,qs),
(2118,53,ls),
(1835,53,o),
(1835,233,qs),
(1835,909,l),
(1644,1018,l),
(1762,1216,l),
(1855,1156,ls),
(1892,1132,o),
(1920,1132,qs),
(1963,1132,o),
(1988,1187,q),
(1978,1186,o),
(1968,1186,qs),
(1924,1186,o),
(1886,1211,qs),
(1746,1303,l),
(1589,1045,l),
(1589,985,l),
(1772,882,l),
(1772,233,ls),
(1772,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,1103,l),
(721,1303,l),
(329,1104,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1081,l),
(700,1241,l),
(1050,1066,l),
(1050,233,ls),
(1050,0,o),
(1396,0,qs),
(1489,0,ls),
(1731,0,o),
(1804,114,q),
(1876,0,o),
(2118,0,qs),
(2211,0,ls),
(2557,0,o),
(2557,233,qs),
(2557,909,l),
(2367,1017,l),
(2705,1239,l),
(3216,1063,l),
(3216,0,l),
(3279,0,l),
(3279,1029,l),
(3309,1102,o)
);
}
);
width = 2885;
}
);
note = uni1788_17C5;
},
{
glyphname = uni1789_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1683,-93,qs),
(1606,-93,o),
(1606,-136,q),
(1773,-136,o),
(1773,-279,qs),
(1773,-505,o),
(1552,-505,qs),
(1314,-505,o),
(933,-140,o),
(611,-140,qs),
(495,-140,o),
(329,-237,o),
(329,-317,q),
(408,-235,o),
(515,-193,o),
(611,-193,qs),
(891,-193,o),
(1281,-559,o),
(1552,-559,qs),
(1835,-559,o),
(1835,-279,qs),
(1835,-93,o)
);
},
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(2494,1068,l),
(2494,0,l),
(2557,0,l),
(2557,1103,l),
(2145,1303,l),
(1795,1079,l),
(1443,1303,l),
(1083,1086,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,0,l),
(1113,0,l),
(1113,1028,l),
(1443,1234,l),
(1772,1024,l),
(1772,0,l),
(1835,0,l),
(1835,1047,l),
(2141,1243,l)
);
}
);
width = 2164;
}
);
note = uni1789_17B6;
},
{
glyphname = uni1789_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1683,-93,qs),
(1606,-93,o),
(1606,-136,q),
(1773,-136,o),
(1773,-279,qs),
(1773,-505,o),
(1552,-505,qs),
(1314,-505,o),
(933,-140,o),
(611,-140,qs),
(495,-140,o),
(329,-237,o),
(329,-317,q),
(408,-235,o),
(515,-193,o),
(611,-193,qs),
(891,-193,o),
(1281,-559,o),
(1552,-559,qs),
(1835,-559,o),
(1835,-279,qs),
(1835,-93,o)
);
},
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(2586,1164,qs),
(2586,1536,ls),
(2586,1722,o),
(2449,1722,qs),
(2381,1722,o),
(2381,1679,q),
(2524,1679,o),
(2524,1536,qs),
(2524,1119,l),
(2145,1303,l),
(1795,1079,l),
(1443,1303,l),
(1083,1086,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,0,l),
(1113,0,l),
(1113,1028,l),
(1443,1234,l),
(1772,1024,l),
(1772,0,l),
(1835,0,l),
(1835,1047,l),
(2141,1243,l),
(2494,1068,l),
(2494,0,l),
(2557,0,l),
(2557,1032,l),
(2586,1103,o)
);
}
);
width = 2164;
}
);
note = uni1789_17C5;
},
{
glyphname = uni178A_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(721,310,l),
(392,71,l),
(392,861,l),
(329,861,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1050,0,l),
(1113,0,l),
(1113,861,l),
(1050,861,l),
(1050,71,l)
);
},
{
closed = 1;
nodes = (
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1423,1303,l),
(1098,1139,l),
(1113,1175,o),
(1113,1221,qs),
(1113,1443,o),
(947,1443,qs),
(884,1443,o),
(884,1390,q),
(1050,1390,o),
(1050,1221,qs),
(1050,1054,o),
(768,1054,qs),
(675,1054,ls),
(392,1054,o),
(392,1174,qs),
(392,1250,o),
(466,1250,qs),
(529,1250,o),
(529,1164,q),
(582,1164,o),
(582,1213,qs),
(582,1303,o),
(464,1303,qs),
(329,1303,o),
(329,1174,qs),
(329,1001,o),
(675,1001,qs),
(768,1001,ls),
(1007,1001,o),
(1080,1106,q),
(1093,1075,l)
);
}
);
width = 1442;
}
);
note = uni178A_17B6;
},
{
glyphname = uni178A_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(721,310,l),
(392,71,l),
(392,861,l),
(329,861,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1050,0,l),
(1113,0,l),
(1113,861,l),
(1050,861,l),
(1050,71,l)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1119,l),
(1423,1303,l),
(1098,1139,l),
(1113,1175,o),
(1113,1221,qs),
(1113,1443,o),
(947,1443,qs),
(884,1443,o),
(884,1390,q),
(1050,1390,o),
(1050,1221,qs),
(1050,1054,o),
(768,1054,qs),
(675,1054,ls),
(392,1054,o),
(392,1174,qs),
(392,1250,o),
(466,1250,qs),
(529,1250,o),
(529,1164,q),
(582,1164,o),
(582,1213,qs),
(582,1303,o),
(464,1303,qs),
(329,1303,o),
(329,1174,qs),
(329,1001,o),
(675,1001,qs),
(768,1001,ls),
(1007,1001,o),
(1080,1106,q),
(1093,1075,l),
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni178A_17C5;
},
{
glyphname = uni178B_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,914,o),
(186,1004,qs),
(186,1067,o),
(272,1160,qs),
(329,1222,l),
(329,914,l),
(280,914,ls)
);
},
{
closed = 1;
nodes = (
(1302,1280,qs),
(1302,1489,o),
(1133,1489,qs),
(1070,1489,o),
(1070,1446,q),
(1239,1446,o),
(1239,1280,qs),
(1239,1186,o),
(1198,1186,qs),
(1182,1186,o),
(1144,1211,qs),
(1004,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,1303,l),
(329,1303,l),
(231,1197,ls),
(133,1091,o),
(133,1003,qs),
(133,861,o),
(280,861,qs),
(329,861,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,909,l),
(922,1018,l),
(1020,1216,l),
(1113,1156,ls),
(1150,1132,o),
(1198,1132,qs),
(1250,1132,o),
(1276,1169,q),
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1423,1303,l),
(1300,1241,l),
(1302,1259,o)
);
}
);
width = 1442;
}
);
note = uni178B_17B6;
},
{
glyphname = uni178B_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,914,o),
(186,1004,qs),
(186,1067,o),
(272,1160,qs),
(329,1222,l),
(329,914,l),
(280,914,ls)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1119,l),
(1423,1303,l),
(1300,1241,l),
(1302,1259,o),
(1302,1280,qs),
(1302,1489,o),
(1133,1489,qs),
(1070,1489,o),
(1070,1446,q),
(1239,1446,o),
(1239,1280,qs),
(1239,1186,o),
(1198,1186,qs),
(1182,1186,o),
(1144,1211,qs),
(1004,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,1303,l),
(329,1303,l),
(231,1197,ls),
(133,1091,o),
(133,1003,qs),
(133,861,o),
(280,861,qs),
(329,861,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,909,l),
(922,1018,l),
(1020,1216,l),
(1113,1156,ls),
(1150,1132,o),
(1198,1132,qs),
(1250,1132,o),
(1276,1169,q),
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni178B_17C5;
},
{
glyphname = uni178C_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,948,ls),
(528,948,o),
(528,884,qs),
(528,799,o),
(422,799,qs),
(392,799,o),
(392,838,qs),
(392,948,l)
);
},
{
closed = 1;
nodes = (
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1423,1303,l),
(1072,1098,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,838,ls),
(329,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,qs),
(392,1001,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,931,ls),
(1050,811,o),
(690,630,qs),
(329,448,l),
(329,277,ls),
(329,0,o),
(536,0,qs),
(554,0,l),
(1051,260,l),
(1051,117,ls),
(1051,0,o),
(884,0,q),
(884,-47,o),
(971,-47,qs),
(1113,-47,o),
(1113,115,qs),
(1113,535,l),
(1051,535,l),
(1051,317,l),
(541,53,l),
(392,53,o),
(392,277,qs),
(392,428,l),
(753,610,ls),
(1113,791,o),
(1113,931,qs),
(1113,1052,l),
(1109,1057,l),
(1419,1243,l)
);
}
);
width = 1442;
}
);
note = uni178C_17B6;
},
{
glyphname = uni178C_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,948,ls),
(528,948,o),
(528,884,qs),
(528,799,o),
(422,799,qs),
(392,799,o),
(392,838,qs),
(392,948,l)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1119,l),
(1423,1303,l),
(1072,1098,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,838,ls),
(329,745,o),
(422,745,qs),
(582,745,o),
(582,884,qs),
(582,1001,o),
(422,1001,qs),
(392,1001,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,931,ls),
(1050,811,o),
(690,630,qs),
(329,448,l),
(329,277,ls),
(329,0,o),
(536,0,qs),
(554,0,l),
(1051,260,l),
(1051,117,ls),
(1051,0,o),
(884,0,q),
(884,-47,o),
(971,-47,qs),
(1113,-47,o),
(1113,115,qs),
(1113,535,l),
(1051,535,l),
(1051,317,l),
(541,53,l),
(392,53,o),
(392,277,qs),
(392,428,l),
(753,610,ls),
(1113,791,o),
(1113,931,qs),
(1113,1052,l),
(1109,1057,l),
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni178C_17C5;
},
{
glyphname = uni178D_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(1050,366,q),
(1050,78,l),
(943,159,o),
(943,256,qs),
(943,366,o)
);
},
{
closed = 1;
nodes = (
(1644,1017,l),
(1982,1239,l),
(2493,1063,l),
(2493,0,l),
(2556,0,l),
(2556,1103,l),
(1985,1303,l),
(1588,1045,l),
(1588,985,l),
(1771,882,l),
(1771,233,ls),
(1771,53,o),
(1605,53,qs),
(1445,53,o),
(1445,217,qs),
(1445,419,o),
(1232,419,qs),
(1113,419,l),
(1113,1052,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,419,l),
(890,419,o),
(890,256,qs),
(890,130,o),
(988,50,qs),
(1050,0,l),
(1113,0,l),
(1113,366,l),
(1232,366,ls),
(1392,366,o),
(1392,217,qs),
(1392,0,o),
(1605,0,qs),
(1834,0,o),
(1834,233,qs),
(1834,909,l)
);
}
);
width = 2164;
}
);
note = uni178D_17B6;
},
{
glyphname = uni178D_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(1050,366,q),
(1050,78,l),
(943,159,o),
(943,256,qs),
(943,366,o)
);
},
{
closed = 1;
nodes = (
(2586,1164,qs),
(2586,1536,ls),
(2586,1722,o),
(2449,1722,qs),
(2381,1722,o),
(2381,1679,q),
(2524,1679,o),
(2524,1536,qs),
(2524,1114,l),
(1985,1303,l),
(1588,1045,l),
(1588,985,l),
(1771,882,l),
(1771,233,ls),
(1771,53,o),
(1605,53,qs),
(1445,53,o),
(1445,217,qs),
(1445,419,o),
(1232,419,qs),
(1113,419,l),
(1113,1052,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,419,l),
(890,419,o),
(890,256,qs),
(890,130,o),
(988,50,qs),
(1050,0,l),
(1113,0,l),
(1113,366,l),
(1232,366,ls),
(1392,366,o),
(1392,217,qs),
(1392,0,o),
(1605,0,qs),
(1834,0,o),
(1834,233,qs),
(1834,909,l),
(1644,1017,l),
(1982,1239,l),
(2493,1063,l),
(2493,0,l),
(2556,0,l),
(2556,1029,l),
(2586,1102,o)
);
}
);
width = 2164;
}
);
note = uni178D_17C5;
},
{
glyphname = uni178E_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(3215,1068,l),
(3215,0,l),
(3278,0,l),
(3278,1103,l),
(2866,1303,l),
(2515,1126,l),
(2516,1123,l),
(2163,1303,l),
(1771,1104,l),
(1771,71,l),
(1442,310,l),
(1113,71,l),
(1113,1103,l),
(721,1303,l),
(329,1104,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1081,l),
(700,1241,l),
(1050,1066,l),
(1050,0,l),
(1113,0,l),
(1442,240,l),
(1771,0,l),
(1834,0,l),
(1834,1081,l),
(2142,1241,l),
(2492,1066,l),
(2492,0,l),
(2555,0,l),
(2555,1085,l),
(2862,1243,l)
);
}
);
width = 2885;
}
);
note = uni178E_17B6;
},
{
glyphname = uni178E_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(3309,1164,qs),
(3309,1536,ls),
(3309,1722,o),
(3172,1722,qs),
(3104,1722,o),
(3104,1679,q),
(3247,1679,o),
(3247,1536,qs),
(3247,1118,l),
(2866,1303,l),
(2515,1126,l),
(2516,1123,l),
(2163,1303,l),
(1771,1104,l),
(1771,71,l),
(1442,310,l),
(1113,71,l),
(1113,1103,l),
(721,1303,l),
(329,1104,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1081,l),
(700,1241,l),
(1050,1066,l),
(1050,0,l),
(1113,0,l),
(1442,240,l),
(1771,0,l),
(1834,0,l),
(1834,1081,l),
(2142,1241,l),
(2492,1066,l),
(2492,0,l),
(2555,0,l),
(2555,1085,l),
(2862,1243,l),
(3215,1068,l),
(3215,0,l),
(3278,0,l),
(3278,1027,l),
(3309,1101,o)
);
}
);
width = 2885;
}
);
note = uni178E_17C5;
},
{
glyphname = uni178F_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,698,ls),
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,0,l),
(1113,0,l),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,0,l)
);
},
{
closed = 1;
nodes = (
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(298,1080,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1103,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1065,l)
);
}
);
width = 1442;
}
);
note = uni178F_17B6;
},
{
glyphname = uni178F_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,698,ls),
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,0,l),
(1113,0,l),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,0,l)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1116,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1065,l),
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(298,1080,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni178F_17C5;
},
{
glyphname = uni1790_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1051,802,l),
(1051,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1423,1303,l),
(1089,1134,l),
(1113,1177,o),
(1113,1240,qs),
(1113,1443,o),
(957,1443,qs),
(884,1443,o),
(884,1410,q),
(1051,1410,o),
(1051,1240,qs),
(1051,1094,o),
(868,1094,qs),
(761,1094,l),
(507,1303,l),
(216,1097,l),
(216,1045,l),
(329,956,l),
(329,233,ls),
(329,0,o),
(651,0,qs),
(791,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1051,519,l),
(1051,233,ls),
(1051,53,o),
(791,53,qs),
(651,53,ls),
(392,53,o),
(392,233,qs),
(392,985,l),
(281,1074,l),
(495,1228,l),
(726,1041,l),
(868,1041,ls),
(1018,1041,o),
(1076,1116,q),
(1093,1075,l)
);
}
);
width = 1442;
}
);
note = uni1790_17B6;
},
{
glyphname = uni1790_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1051,802,l),
(1051,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1119,l),
(1423,1303,l),
(1089,1134,l),
(1113,1177,o),
(1113,1240,qs),
(1113,1443,o),
(957,1443,qs),
(884,1443,o),
(884,1410,q),
(1051,1410,o),
(1051,1240,qs),
(1051,1094,o),
(868,1094,qs),
(761,1094,l),
(507,1303,l),
(216,1097,l),
(216,1045,l),
(329,956,l),
(329,233,ls),
(329,0,o),
(651,0,qs),
(791,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1051,519,l),
(1051,233,ls),
(1051,53,o),
(791,53,qs),
(651,53,ls),
(392,53,o),
(392,233,qs),
(392,985,l),
(281,1074,l),
(495,1228,l),
(726,1041,l),
(868,1041,ls),
(1018,1041,o),
(1076,1116,q),
(1093,1075,l),
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1790_17C5;
},
{
glyphname = uni1791_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1060,625,qs),
(1060,567,o),
(998,567,qs),
(932,567,l),
(932,682,o),
(988,682,qs),
(1060,682,o)
);
},
{
closed = 1;
nodes = (
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1423,1303,l),
(1094,1137,l),
(1027,1303,o),
(721,1303,qs),
(329,1303,o),
(329,1031,qs),
(329,815,ls),
(329,514,o),
(722,514,qs),
(869,514,l),
(869,280,ls),
(869,53,o),
(697,53,qs),
(525,53,o),
(525,193,qs),
(525,280,ls),
(525,420,o),
(429,420,qs),
(373,420,o),
(373,367,q),
(462,367,o),
(462,280,qs),
(462,193,ls),
(462,0,o),
(697,0,qs),
(932,0,o),
(932,281,qs),
(932,514,l),
(998,514,ls),
(1113,514,o),
(1113,626,qs),
(1113,736,o),
(988,736,qs),
(869,736,o),
(869,567,q),
(722,567,ls),
(392,567,o),
(392,815,qs),
(392,1031,ls),
(392,1250,o),
(721,1250,qs),
(1051,1250,o),
(1051,1031,qs),
(1051,938,o),
(976,938,qs),
(891,938,o),
(891,1024,q),
(838,1024,o),
(838,974,qs),
(838,884,o),
(976,884,qs),
(1113,884,o),
(1113,1031,qs),
(1113,1059,o),
(1109,1083,q),
(1419,1243,l)
);
}
);
width = 1442;
}
);
note = uni1791_17B6;
},
{
glyphname = uni1791_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1060,625,qs),
(1060,567,o),
(998,567,qs),
(932,567,l),
(932,682,o),
(988,682,qs),
(1060,682,o)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1119,l),
(1423,1303,l),
(1094,1137,l),
(1027,1303,o),
(721,1303,qs),
(329,1303,o),
(329,1031,qs),
(329,815,ls),
(329,514,o),
(722,514,qs),
(869,514,l),
(869,280,ls),
(869,53,o),
(697,53,qs),
(525,53,o),
(525,193,qs),
(525,280,ls),
(525,420,o),
(429,420,qs),
(373,420,o),
(373,367,q),
(462,367,o),
(462,280,qs),
(462,193,ls),
(462,0,o),
(697,0,qs),
(932,0,o),
(932,281,qs),
(932,514,l),
(998,514,ls),
(1113,514,o),
(1113,626,qs),
(1113,736,o),
(988,736,qs),
(869,736,o),
(869,567,q),
(722,567,ls),
(392,567,o),
(392,815,qs),
(392,1031,ls),
(392,1250,o),
(721,1250,qs),
(1051,1250,o),
(1051,1031,qs),
(1051,938,o),
(976,938,qs),
(891,938,o),
(891,1024,q),
(838,1024,o),
(838,974,qs),
(838,884,o),
(976,884,qs),
(1113,884,o),
(1113,1031,qs),
(1113,1059,o),
(1109,1083,q),
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1791_17C5;
},
{
glyphname = uni1792_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1050,802,l),
(1050,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(283,1073,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1103,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1045,l),
(329,956,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1050,0,l),
(1113,0,l),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1050,519,l),
(1050,71,l),
(721,310,l),
(392,71,l),
(392,985,l)
);
}
);
width = 1442;
}
);
note = uni1792_17B6;
},
{
glyphname = uni1792_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1050,802,l),
(1050,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1116,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1045,l),
(329,956,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1050,0,l),
(1113,0,l),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1050,519,l),
(1050,71,l),
(721,310,l),
(392,71,l),
(392,985,l),
(283,1073,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1792_17C5;
},
{
glyphname = uni1793_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1021,821,qs),
(931,821,o),
(931,921,qs),
(931,994,o),
(1014,994,qs),
(1050,994,l),
(1050,860,ls),
(1050,821,o)
);
},
{
closed = 1;
nodes = (
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1423,1303,l),
(1105,1143,l),
(1058,1303,o),
(721,1303,qs),
(329,1303,o),
(329,1086,qs),
(329,869,ls),
(329,726,o),
(690,616,qs),
(1051,505,l),
(1051,217,ls),
(1051,53,o),
(887,53,qs),
(769,53,o),
(576,326,o),
(392,326,q),
(392,543,l),
(329,543,l),
(329,0,l),
(392,0,l),
(392,273,l),
(556,273,o),
(741,0,o),
(887,0,qs),
(1113,0,o),
(1113,217,qs),
(1113,536,l),
(753,650,ls),
(392,763,o),
(392,869,qs),
(392,1086,ls),
(392,1250,o),
(721,1250,qs),
(1050,1250,o),
(1050,1086,qs),
(1050,1047,l),
(1014,1047,ls),
(878,1047,o),
(878,921,qs),
(878,768,o),
(1021,768,qs),
(1113,768,o),
(1113,860,qs),
(1113,1085,l),
(1419,1243,l)
);
}
);
width = 1442;
}
);
note = uni1793_17B6;
},
{
glyphname = uni1793_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1021,821,qs),
(931,821,o),
(931,921,qs),
(931,994,o),
(1014,994,qs),
(1050,994,l),
(1050,860,ls),
(1050,821,o)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1119,l),
(1423,1303,l),
(1105,1143,l),
(1058,1303,o),
(721,1303,qs),
(329,1303,o),
(329,1086,qs),
(329,869,ls),
(329,726,o),
(690,616,qs),
(1051,505,l),
(1051,217,ls),
(1051,53,o),
(887,53,qs),
(769,53,o),
(576,326,o),
(392,326,q),
(392,543,l),
(329,543,l),
(329,0,l),
(392,0,l),
(392,273,l),
(556,273,o),
(741,0,o),
(887,0,qs),
(1113,0,o),
(1113,217,qs),
(1113,536,l),
(753,650,ls),
(392,763,o),
(392,869,qs),
(392,1086,ls),
(392,1250,o),
(721,1250,qs),
(1050,1250,o),
(1050,1086,qs),
(1050,1047,l),
(1014,1047,ls),
(878,1047,o),
(878,921,qs),
(878,768,o),
(1021,768,qs),
(1113,768,o),
(1113,860,qs),
(1113,1085,l),
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1793_17C5;
},
{
glyphname = uni1794_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1113,-90,l),
(1113,891,l),
(1051,891,l),
(1051,233,ls),
(1051,53,o),
(791,53,qs),
(651,53,ls),
(392,53,o),
(392,233,qs),
(392,985,l),
(283,1073,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1103,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1045,l),
(329,956,l),
(329,233,ls),
(329,0,o),
(651,0,qs),
(791,0,ls),
(972,0,o),
(1051,73,q),
(1051,-90,l)
);
}
);
width = 1442;
}
);
note = uni1794_17B6;
},
{
glyphname = uni1794_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1116,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1045,l),
(329,956,l),
(329,233,ls),
(329,0,o),
(651,0,qs),
(791,0,ls),
(972,0,o),
(1051,73,q),
(1051,-90,l),
(1113,-90,l),
(1113,891,l),
(1051,891,l),
(1051,233,ls),
(1051,53,o),
(791,53,qs),
(651,53,ls),
(392,53,o),
(392,233,qs),
(392,985,l),
(283,1073,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1794_17C5;
},
{
glyphname = uni1795_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1051,802,l),
(1051,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1423,1303,l),
(1089,1134,l),
(1113,1177,o),
(1113,1240,qs),
(1113,1443,o),
(957,1443,qs),
(884,1443,o),
(884,1410,q),
(1051,1410,o),
(1051,1240,qs),
(1051,1094,o),
(868,1094,qs),
(761,1094,l),
(507,1303,l),
(216,1097,l),
(216,1045,l),
(329,956,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1051,0,l),
(1113,0,l),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1051,519,l),
(1051,71,l),
(721,310,l),
(392,71,l),
(392,985,l),
(281,1074,l),
(495,1228,l),
(726,1041,l),
(868,1041,ls),
(1018,1041,o),
(1076,1116,q),
(1093,1075,l)
);
}
);
width = 1442;
}
);
note = uni1795_17B6;
},
{
glyphname = uni1795_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,572,o),
(951,635,qs),
(951,694,o),
(1026,775,qs),
(1051,802,l),
(1051,572,l),
(1021,572,ls)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1119,l),
(1423,1303,l),
(1089,1134,l),
(1113,1177,o),
(1113,1240,qs),
(1113,1443,o),
(957,1443,qs),
(884,1443,o),
(884,1410,q),
(1051,1410,o),
(1051,1240,qs),
(1051,1094,o),
(868,1094,qs),
(761,1094,l),
(507,1303,l),
(216,1097,l),
(216,1045,l),
(329,956,l),
(329,0,l),
(392,0,l),
(721,240,l),
(1051,0,l),
(1113,0,l),
(1113,891,l),
(1051,891,l),
(978,811,ls),
(888,713,o),
(888,634,qs),
(888,519,o),
(1021,519,qs),
(1051,519,l),
(1051,71,l),
(721,310,l),
(392,71,l),
(392,985,l),
(281,1074,l),
(495,1228,l),
(726,1041,l),
(868,1041,ls),
(1018,1041,o),
(1076,1116,q),
(1093,1075,l),
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1795_17C5;
},
{
glyphname = uni1796_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1423,1303,l),
(1085,1083,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,0,l),
(1113,0,l),
(1113,1041,l),
(1419,1243,l)
);
}
);
width = 1442;
}
);
note = uni1796_17B6;
},
{
glyphname = uni1796_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1119,l),
(1423,1303,l),
(1085,1083,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,0,l),
(1113,0,l),
(1113,1041,l),
(1419,1243,l),
(1772,1068,l),
(1772,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1796_17C5;
},
{
glyphname = uni1797_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,81,l),
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l)
);
},
{
closed = 1;
nodes = (
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,0,l),
(1113,0,l),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,698,ls)
);
},
{
closed = 1;
nodes = (
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(298,1080,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1103,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1065,l)
);
}
);
width = 1442;
}
);
note = uni1797_17B6;
},
{
glyphname = uni1797_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,81,l),
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l)
);
},
{
closed = 1;
nodes = (
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,0,l),
(1113,0,l),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(651,931,ls),
(329,931,o),
(329,698,qs),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,698,ls)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1116,l),
(1339,1303,l),
(1042,1084,l),
(617,1303,l),
(216,1102,l),
(216,1065,l),
(329,976,ls),
(360,952,o),
(378,952,qs),
(395,952,o),
(430,975,q),
(298,1080,l),
(611,1239,l),
(1037,1020,l),
(1338,1234,l),
(1773,1067,l),
(1773,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1797_17C5;
},
{
glyphname = uni1798_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(923,1017,l),
(1261,1239,l),
(1772,1063,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1264,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,632,l),
(392,632,l),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,909,l)
);
},
{
closed = 1;
nodes = (
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,579,l),
(1050,579,l),
(1050,233,ls)
);
}
);
width = 1442;
}
);
note = uni1798_17B6;
},
{
glyphname = uni1798_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,579,l),
(1050,579,l),
(1050,233,ls)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1114,l),
(1264,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,632,l),
(392,632,l),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,909,l),
(923,1017,l),
(1261,1239,l),
(1772,1063,l),
(1772,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni1798_17C5;
},
{
glyphname = uni1799_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,1222,l),
(449,1160,ls),
(535,1067,o),
(535,1004,qs),
(535,914,o),
(441,914,qs),
(392,914,l)
);
},
{
closed = 1;
nodes = (
(1644,1017,l),
(1982,1239,l),
(2493,1063,l),
(2493,0,l),
(2556,0,l),
(2556,1103,l),
(1985,1303,l),
(1588,1045,l),
(1588,985,l),
(1771,882,l),
(1771,233,ls),
(1771,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,909,l),
(922,1018,l),
(1040,1216,l),
(1133,1156,ls),
(1170,1132,o),
(1198,1132,qs),
(1241,1132,o),
(1266,1187,q),
(1256,1186,o),
(1246,1186,qs),
(1202,1186,o),
(1164,1211,qs),
(1024,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,861,l),
(441,861,ls),
(588,861,o),
(588,1003,qs),
(588,1091,o),
(490,1197,qs),
(392,1303,l),
(329,1303,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1009,0,o),
(1082,114,q),
(1154,0,o),
(1396,0,qs),
(1489,0,ls),
(1834,0,o),
(1834,233,qs),
(1834,909,l)
);
}
);
width = 2164;
}
);
note = uni1799_17B6;
},
{
glyphname = uni1799_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,1222,l),
(449,1160,ls),
(535,1067,o),
(535,1004,qs),
(535,914,o),
(441,914,qs),
(392,914,l)
);
},
{
closed = 1;
nodes = (
(2586,1164,qs),
(2586,1536,ls),
(2586,1722,o),
(2449,1722,qs),
(2381,1722,o),
(2381,1679,q),
(2524,1679,o),
(2524,1536,qs),
(2524,1114,l),
(1985,1303,l),
(1588,1045,l),
(1588,985,l),
(1771,882,l),
(1771,233,ls),
(1771,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,909,l),
(922,1018,l),
(1040,1216,l),
(1133,1156,ls),
(1170,1132,o),
(1198,1132,qs),
(1241,1132,o),
(1266,1187,q),
(1256,1186,o),
(1246,1186,qs),
(1202,1186,o),
(1164,1211,qs),
(1024,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,861,l),
(441,861,ls),
(588,861,o),
(588,1003,qs),
(588,1091,o),
(490,1197,qs),
(392,1303,l),
(329,1303,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1009,0,o),
(1082,114,q),
(1154,0,o),
(1396,0,qs),
(1489,0,ls),
(1834,0,o),
(1834,233,qs),
(1834,909,l),
(1644,1017,l),
(1982,1239,l),
(2493,1063,l),
(2493,0,l),
(2556,0,l),
(2556,1029,l),
(2586,1102,o)
);
}
);
width = 2164;
}
);
note = uni1799_17C5;
},
{
glyphname = uni179A_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l),
(329,81,l)
);
},
{
closed = 1;
nodes = (
(1051,1068,l),
(1051,0,l),
(1114,0,l),
(1114,1103,l),
(733,1303,l),
(507,1190,l),
(474,1196,o),
(444,1215,qs),
(303,1303,l),
(146,1045,l),
(146,985,l),
(329,882,l),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,909,l),
(201,1018,l),
(319,1216,l),
(432,1153,ls),
(469,1132,o),
(497,1132,qs),
(525,1132,o),
(545,1155,q),
(729,1243,l)
);
}
);
width = 721;
}
);
note = uni179A_17B6;
},
{
glyphname = uni179A_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l),
(329,81,l)
);
},
{
closed = 1;
nodes = (
(1144,1164,qs),
(1144,1536,ls),
(1144,1722,o),
(1007,1722,qs),
(939,1722,o),
(939,1679,q),
(1082,1679,o),
(1082,1536,qs),
(1082,1120,l),
(733,1303,l),
(507,1190,l),
(474,1196,o),
(444,1215,qs),
(303,1303,l),
(146,1045,l),
(146,985,l),
(329,882,l),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,909,l),
(201,1018,l),
(319,1216,l),
(432,1153,ls),
(469,1132,o),
(497,1132,qs),
(525,1132,o),
(545,1155,q),
(729,1243,l),
(1051,1068,l),
(1051,0,l),
(1114,0,l),
(1114,1029,l),
(1144,1102,o)
);
}
);
width = 721;
}
);
note = uni179A_17C5;
},
{
glyphname = uni179B_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(1645,1017,l),
(1983,1239,l),
(2494,1063,l),
(2494,0,l),
(2557,0,l),
(2557,1103,l),
(1986,1303,l),
(1589,1045,l),
(1589,985,l),
(1772,882,l),
(1772,233,ls),
(1772,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,1103,l),
(721,1303,l),
(329,1104,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1081,l),
(700,1241,l),
(1050,1066,l),
(1050,233,ls),
(1050,0,o),
(1396,0,qs),
(1489,0,ls),
(1835,0,o),
(1835,233,qs),
(1835,909,l)
);
}
);
width = 2164;
}
);
note = uni179B_17B6;
},
{
glyphname = uni179B_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(2586,1164,qs),
(2586,1536,ls),
(2586,1722,o),
(2449,1722,qs),
(2381,1722,o),
(2381,1679,q),
(2524,1679,o),
(2524,1536,qs),
(2524,1115,l),
(1986,1303,l),
(1589,1045,l),
(1589,985,l),
(1772,882,l),
(1772,233,ls),
(1772,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,1103,l),
(721,1303,l),
(329,1104,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1081,l),
(700,1241,l),
(1050,1066,l),
(1050,233,ls),
(1050,0,o),
(1396,0,qs),
(1489,0,ls),
(1835,0,o),
(1835,233,qs),
(1835,909,l),
(1645,1017,l),
(1983,1239,l),
(2494,1063,l),
(2494,0,l),
(2557,0,l),
(2557,1032,l),
(2586,1103,o)
);
}
);
width = 2164;
}
);
note = uni179B_17C5;
},
{
glyphname = uni179C_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l),
(329,81,l)
);
},
{
closed = 1;
nodes = (
(1051,1068,l),
(1051,0,l),
(1114,0,l),
(1114,1103,l),
(703,1303,l),
(579,1241,l),
(581,1259,o),
(581,1280,qs),
(581,1489,o),
(412,1489,qs),
(349,1489,o),
(349,1446,q),
(518,1446,o),
(518,1280,qs),
(518,1186,o),
(477,1186,qs),
(461,1186,o),
(423,1211,qs),
(283,1303,l),
(146,1045,l),
(146,985,l),
(329,882,l),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,909,l),
(201,1018,l),
(299,1216,l),
(392,1156,ls),
(429,1132,o),
(477,1132,qs),
(528,1132,o),
(554,1168,q),
(699,1243,l)
);
}
);
width = 721;
}
);
note = uni179C_17B6;
},
{
glyphname = uni179C_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l),
(329,81,l)
);
},
{
closed = 1;
nodes = (
(1051,1068,l),
(1051,0,l),
(1114,0,l),
(1114,1029,l),
(1144,1102,o),
(1144,1164,qs),
(1144,1536,ls),
(1144,1722,o),
(1007,1722,qs),
(939,1722,o),
(939,1679,q),
(1082,1679,o),
(1082,1536,qs),
(1082,1119,l),
(703,1303,l),
(579,1241,l),
(581,1259,o),
(581,1280,qs),
(581,1489,o),
(412,1489,qs),
(349,1489,o),
(349,1446,q),
(518,1446,o),
(518,1280,qs),
(518,1186,o),
(477,1186,qs),
(461,1186,o),
(423,1211,qs),
(283,1303,l),
(146,1045,l),
(146,985,l),
(329,882,l),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,909,l),
(201,1018,l),
(299,1216,l),
(392,1156,ls),
(429,1132,o),
(477,1132,qs),
(528,1132,o),
(554,1168,q),
(699,1243,l)
);
}
);
width = 721;
}
);
note = uni179C_17C5;
},
{
glyphname = uni179F_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(1645,1017,l),
(1983,1239,l),
(2494,1063,l),
(2494,0,l),
(2557,0,l),
(2557,1103,l),
(1986,1303,l),
(1589,1045,l),
(1589,985,l),
(1772,882,l),
(1772,233,ls),
(1772,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(674,931,l),
(457,1075,l),
(603,1228,l),
(804,1102,ls),
(834,1084,o),
(866,1084,qs),
(897,1084,o),
(930,1145,q),
(860,1145,o),
(819,1170,qs),
(597,1303,l),
(386,1081,l),
(386,1054,l),
(587,928,l),
(329,907,o),
(329,698,qs),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,698,ls),
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,233,ls),
(1051,0,o),
(1396,0,qs),
(1489,0,ls),
(1835,0,o),
(1835,233,qs),
(1835,909,l)
);
}
);
width = 2164;
}
);
note = uni179F_17B6;
},
{
glyphname = uni179F_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(2586,1164,qs),
(2586,1536,ls),
(2586,1722,o),
(2449,1722,qs),
(2381,1722,o),
(2381,1679,q),
(2524,1679,o),
(2524,1536,qs),
(2524,1115,l),
(1986,1303,l),
(1589,1045,l),
(1589,985,l),
(1772,882,l),
(1772,233,ls),
(1772,53,o),
(1489,53,qs),
(1396,53,ls),
(1113,53,o),
(1113,233,qs),
(1113,698,ls),
(1113,931,o),
(791,931,qs),
(674,931,l),
(457,1075,l),
(603,1228,l),
(804,1102,ls),
(834,1084,o),
(866,1084,qs),
(897,1084,o),
(930,1145,q),
(860,1145,o),
(819,1170,qs),
(597,1303,l),
(386,1081,l),
(386,1054,l),
(587,928,l),
(329,907,o),
(329,698,qs),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,698,ls),
(392,878,o),
(651,878,qs),
(791,878,ls),
(1051,878,o),
(1051,698,qs),
(1051,233,ls),
(1051,0,o),
(1396,0,qs),
(1489,0,ls),
(1835,0,o),
(1835,233,qs),
(1835,909,l),
(1645,1017,l),
(1983,1239,l),
(2494,1063,l),
(2494,0,l),
(2557,0,l),
(2557,1032,l),
(2586,1103,o)
);
}
);
width = 2164;
}
);
note = uni179F_17C5;
},
{
glyphname = uni17A0_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2494,1068,l),
(2494,0,l),
(2557,0,l),
(2557,1103,l),
(2145,1303,l),
(1794,1126,l),
(1798,1116,l),
(1264,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,909,l),
(923,1017,l),
(1261,1239,l),
(1772,1063,l),
(1772,0,l),
(1835,0,l),
(1835,1085,l),
(2141,1243,l)
);
}
);
width = 2164;
}
);
note = uni17A0_17B6;
},
{
glyphname = uni17A0_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2494,1068,l),
(2494,0,l),
(2557,0,l),
(2557,1032,l),
(2586,1103,o),
(2586,1164,qs),
(2586,1536,ls),
(2586,1722,o),
(2449,1722,qs),
(2381,1722,o),
(2381,1679,q),
(2524,1679,o),
(2524,1536,qs),
(2524,1119,l),
(2145,1303,l),
(1794,1126,l),
(1798,1116,l),
(1264,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,233,ls),
(1050,53,o),
(768,53,qs),
(675,53,ls),
(392,53,o),
(392,233,qs),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,233,ls),
(329,0,o),
(675,0,qs),
(768,0,ls),
(1113,0,o),
(1113,233,qs),
(1113,909,l),
(923,1017,l),
(1261,1239,l),
(1772,1063,l),
(1772,0,l),
(1835,0,l),
(1835,1085,l),
(2141,1243,l)
);
}
);
width = 2164;
}
);
note = uni17A0_17C5;
},
{
glyphname = uni17A1_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(954,-292,o),
(954,-255,qs),
(954,-199,o),
(1049,-154,q),
(1049,-292,l),
(1013,-292,ls)
);
},
{
closed = 1;
nodes = (
(1060,625,qs),
(1060,567,o),
(998,567,qs),
(932,567,l),
(932,682,o),
(988,682,qs),
(1060,682,o)
);
},
{
closed = 1;
nodes = (
(976,938,qs),
(891,938,o),
(891,1024,q),
(838,1024,o),
(838,974,qs),
(838,884,o),
(976,884,qs),
(1113,884,o),
(1113,1031,qs),
(1113,1303,o),
(721,1303,qs),
(329,1303,o),
(329,1031,qs),
(329,815,ls),
(329,514,o),
(722,514,qs),
(869,514,l),
(869,280,ls),
(869,53,o),
(697,53,qs),
(525,53,o),
(525,193,qs),
(525,280,ls),
(525,420,o),
(429,420,qs),
(373,420,o),
(373,367,q),
(462,367,o),
(462,280,qs),
(462,193,ls),
(462,0,o),
(697,0,qs),
(932,0,o),
(932,281,qs),
(932,514,l),
(998,514,ls),
(1113,514,o),
(1113,626,qs),
(1113,736,o),
(988,736,qs),
(869,736,o),
(869,567,q),
(722,567,ls),
(392,567,o),
(392,815,qs),
(392,1031,ls),
(392,1250,o),
(721,1250,qs),
(1051,1250,o),
(1051,1031,qs),
(1051,938,o)
);
},
{
closed = 1;
nodes = (
(1644,1017,l),
(1982,1239,l),
(2493,1063,l),
(2493,0,l),
(2556,0,l),
(2556,1103,l),
(1985,1303,l),
(1588,1045,l),
(1588,985,l),
(1771,882,l),
(1771,-607,l),
(1442,-375,l),
(1112,-607,l),
(1112,-93,l),
(1049,-93,l),
(1012,-113,ls),
(900,-172,o),
(900,-257,qs),
(900,-350,o),
(1013,-350,qs),
(1049,-350,l),
(1049,-673,l),
(1112,-673,l),
(1442,-441,l),
(1771,-673,l),
(1834,-673,l),
(1834,909,l)
);
}
);
width = 2164;
}
);
note = uni17A1_17B6;
},
{
glyphname = uni17A1_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(954,-292,o),
(954,-255,qs),
(954,-199,o),
(1049,-154,q),
(1049,-292,l),
(1013,-292,ls)
);
},
{
closed = 1;
nodes = (
(1060,625,qs),
(1060,567,o),
(998,567,qs),
(932,567,l),
(932,682,o),
(988,682,qs),
(1060,682,o)
);
},
{
closed = 1;
nodes = (
(976,938,qs),
(891,938,o),
(891,1024,q),
(838,1024,o),
(838,974,qs),
(838,884,o),
(976,884,qs),
(1113,884,o),
(1113,1031,qs),
(1113,1303,o),
(721,1303,qs),
(329,1303,o),
(329,1031,qs),
(329,815,ls),
(329,514,o),
(722,514,qs),
(869,514,l),
(869,280,ls),
(869,53,o),
(697,53,qs),
(525,53,o),
(525,193,qs),
(525,280,ls),
(525,420,o),
(429,420,qs),
(373,420,o),
(373,367,q),
(462,367,o),
(462,280,qs),
(462,193,ls),
(462,0,o),
(697,0,qs),
(932,0,o),
(932,281,qs),
(932,514,l),
(998,514,ls),
(1113,514,o),
(1113,626,qs),
(1113,736,o),
(988,736,qs),
(869,736,o),
(869,567,q),
(722,567,ls),
(392,567,o),
(392,815,qs),
(392,1031,ls),
(392,1250,o),
(721,1250,qs),
(1051,1250,o),
(1051,1031,qs),
(1051,938,o)
);
},
{
closed = 1;
nodes = (
(2586,1164,qs),
(2586,1536,ls),
(2586,1722,o),
(2449,1722,qs),
(2381,1722,o),
(2381,1679,q),
(2524,1679,o),
(2524,1536,qs),
(2524,1114,l),
(1985,1303,l),
(1588,1045,l),
(1588,985,l),
(1771,882,l),
(1771,-607,l),
(1442,-375,l),
(1112,-607,l),
(1112,-93,l),
(1049,-93,l),
(1012,-113,ls),
(900,-172,o),
(900,-257,qs),
(900,-350,o),
(1013,-350,qs),
(1049,-350,l),
(1049,-673,l),
(1112,-673,l),
(1442,-441,l),
(1771,-673,l),
(1834,-673,l),
(1834,909,l),
(1644,1017,l),
(1982,1239,l),
(2493,1063,l),
(2493,0,l),
(2556,0,l),
(2556,1029,l),
(2586,1102,o)
);
}
);
width = 2164;
}
);
note = uni17A1_17C5;
},
{
glyphname = uni17A2_17B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l),
(329,81,l)
);
},
{
closed = 1;
nodes = (
(993,143,ls),
(907,236,o),
(907,299,qs),
(907,389,o),
(1001,389,qs),
(1050,389,l),
(1050,81,l)
);
},
{
closed = 1;
nodes = (
(923,1017,l),
(1261,1239,l),
(1772,1063,l),
(1772,0,l),
(1835,0,l),
(1835,1103,l),
(1264,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,632,l),
(392,632,l),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,579,l),
(1050,579,l),
(1050,442,l),
(1001,442,ls),
(854,442,o),
(854,300,qs),
(854,212,o),
(952,106,qs),
(1050,0,l),
(1113,0,l),
(1113,909,l)
);
}
);
width = 1442;
}
);
note = uni17A2_17B6;
},
{
glyphname = uni17A2_17C5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l),
(329,81,l)
);
},
{
closed = 1;
nodes = (
(993,143,ls),
(907,236,o),
(907,299,qs),
(907,389,o),
(1001,389,qs),
(1050,389,l),
(1050,81,l)
);
},
{
closed = 1;
nodes = (
(1865,1164,qs),
(1865,1536,ls),
(1865,1722,o),
(1728,1722,qs),
(1660,1722,o),
(1660,1679,q),
(1803,1679,o),
(1803,1536,qs),
(1803,1114,l),
(1264,1303,l),
(867,1045,l),
(867,985,l),
(1050,882,l),
(1050,632,l),
(392,632,l),
(392,909,l),
(221,1019,l),
(370,1216,l),
(428,1179,ls),
(485,1141,o),
(525,1141,qs),
(570,1141,o),
(595,1187,q),
(529,1187,o),
(485,1216,qs),
(353,1303,l),
(166,1045,l),
(166,985,l),
(329,882,l),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,579,l),
(1050,579,l),
(1050,442,l),
(1001,442,ls),
(854,442,o),
(854,300,qs),
(854,212,o),
(952,106,qs),
(1050,0,l),
(1113,0,l),
(1113,909,l),
(923,1017,l),
(1261,1239,l),
(1772,1063,l),
(1772,0,l),
(1835,0,l),
(1835,1029,l),
(1865,1102,o)
);
}
);
width = 1442;
}
);
note = uni17A2_17C5;
},
{
glyphname = uni17E0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1113,326,qs),
(1113,977,ls),
(1113,1303,o),
(721,1303,qs),
(329,1303,o),
(329,977,qs),
(329,326,ls),
(329,0,o),
(721,0,qs),
(1113,0,o)
);
},
{
closed = 1;
nodes = (
(1050,977,qs),
(1050,326,ls),
(1050,54,o),
(721,54,qs),
(392,54,o),
(392,326,qs),
(392,977,ls),
(392,1250,o),
(721,1250,qs),
(1050,1250,o)
);
}
);
width = 1442;
}
);
note = uni17E0;
unicode = 6112;
},
{
glyphname = uni17E1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1113,435,qs),
(1113,977,ls),
(1113,1303,o),
(721,1303,qs),
(329,1303,o),
(329,977,qs),
(329,869,ls),
(329,652,o),
(580,652,qs),
(785,652,o),
(785,815,qs),
(785,854,o),
(745,854,qs),
(706,854,o),
(706,815,qs),
(706,706,o),
(580,706,qs),
(392,706,o),
(392,869,qs),
(392,977,ls),
(392,1250,o),
(721,1250,qs),
(1051,1250,o),
(1051,977,qs),
(1051,435,ls),
(1051,54,o),
(721,54,qs),
(360,54,o),
(360,380,q),
(329,380,o),
(329,312,qs),
(329,0,o),
(721,0,qs),
(1113,0,o)
);
}
);
width = 1442;
}
);
note = uni17E1;
unicode = 6113;
},
{
glyphname = uni17E2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(655,815,ls),
(655,698,o),
(768,698,qs),
(838,698,o),
(838,749,q),
(835,749,ls),
(718,749,o),
(718,815,qs),
(718,1189,l),
(939,1032,l),
(1145,1176,l),
(1145,217,ls),
(1145,54,o),
(768,54,qs),
(392,54,o),
(392,217,qs),
(392,1421,ls),
(392,1583,o),
(284,1583,qs),
(186,1583,o),
(186,1529,q),
(329,1529,o),
(329,1421,qs),
(329,217,ls),
(329,0,o),
(768,0,qs),
(1207,0,o),
(1207,217,qs),
(1207,1303,l),
(939,1112,l),
(655,1303,l)
);
}
);
width = 1536;
}
);
note = uni17E2;
unicode = 6114;
},
{
glyphname = uni17E3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1055,l),
(623,1236,l),
(888,1030,l),
(888,0,l),
(950,0,l),
(950,1059,l),
(1169,1239,l),
(1423,1027,l),
(1423,0,l),
(1486,0,l),
(1486,1061,l),
(1190,1303,l),
(918,1084,l),
(636,1303,l),
(329,1056,l),
(329,0,l)
);
}
);
width = 1815;
}
);
note = uni17E3;
unicode = 6115;
},
{
glyphname = uni17E4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1060,652,qs),
(1060,543,o),
(950,543,q),
(950,832,l),
(1060,832,o)
);
},
{
closed = 1;
nodes = (
(1113,1086,o),
(1113,1303,qs),
(1113,1396,ls),
(1113,1529,o),
(1206,1529,q),
(1206,1583,o),
(1143,1583,qs),
(1050,1583,o),
(1050,1396,qs),
(1050,1303,ls),
(1050,1142,o),
(987,1142,q),
(610,1303,l),
(329,1086,l),
(329,217,ls),
(329,0,o),
(610,0,qs),
(1113,0,l),
(1113,86,l),
(950,369,l),
(950,489,l),
(1113,489,o),
(1113,652,qs),
(1113,884,o),
(950,884,qs),
(888,884,o),
(888,840,qs),
(888,380,l),
(1078,53,l),
(610,53,ls),
(392,53,o),
(392,217,qs),
(392,1069,l),
(617,1246,l),
(999,1086,l)
);
}
);
width = 1442;
}
);
note = uni17E4;
unicode = 6116;
},
{
glyphname = uni17E5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(649,1199,o),
(622,1182,q),
(523,1213,o),
(469,1274,o),
(469,1315,qs),
(469,1437,o),
(582,1437,qs),
(696,1437,o),
(696,1315,qs),
(696,1251,o)
);
},
{
closed = 1;
nodes = (
(1060,522,qs),
(1060,413,o),
(950,413,q),
(950,702,l),
(1060,702,o)
);
},
{
closed = 1;
nodes = (
(329,0,o),
(610,0,qs),
(1113,0,l),
(1113,86,l),
(950,259,l),
(950,359,l),
(1113,359,o),
(1113,522,qs),
(1113,754,o),
(950,754,qs),
(888,754,o),
(888,710,qs),
(888,250,l),
(1078,53,l),
(610,53,ls),
(392,53,o),
(392,217,qs),
(392,949,l),
(626,1118,l),
(1000,987,l),
(1113,987,o),
(1113,1203,qs),
(1113,1426,ls),
(1113,1529,o),
(1236,1529,q),
(1236,1583,o),
(1163,1583,qs),
(1050,1583,o),
(1050,1426,qs),
(1051,1203,ls),
(1051,1044,o),
(998,1044,q),
(685,1157,l),
(721,1186,o),
(748,1257,o),
(748,1316,qs),
(748,1489,o),
(582,1489,qs),
(416,1489,o),
(416,1313,qs),
(416,1260,o),
(499,1176,o),
(570,1145,q),
(329,974,l),
(329,217,ls)
);
}
);
width = 1442;
}
);
note = uni17E5;
unicode = 6117;
},
{
glyphname = uni17E6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,1443,ls),
(392,1583,o),
(314,1583,qs),
(236,1583,o),
(236,1529,q),
(329,1529,o),
(329,1443,qs),
(329,869,l),
(392,869,l),
(392,1098,l),
(703,1246,l),
(1051,1018,l),
(1051,326,ls),
(1051,54,o),
(721,54,qs),
(392,54,o),
(392,326,qs),
(392,435,ls),
(392,579,o),
(556,579,qs),
(674,579,o),
(674,489,qs),
(674,445,o),
(711,445,qs),
(747,445,o),
(747,489,qs),
(747,632,o),
(556,632,qs),
(329,632,o),
(329,435,qs),
(329,326,ls),
(329,0,o),
(721,0,qs),
(1113,0,o),
(1113,326,qs),
(1113,1054,l),
(721,1303,l),
(392,1148,l)
);
}
);
width = 1442;
}
);
note = uni17E6;
unicode = 6118;
},
{
glyphname = uni17E7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1233,l),
(722,1067,l),
(891,1233,l),
(1050,1045,l),
(1050,0,l),
(1256,0,ls),
(1439,0,o),
(1439,186,qs),
(1439,1443,ls),
(1439,1583,o),
(1336,1583,qs),
(1233,1583,o),
(1233,1529,q),
(1376,1529,o),
(1376,1443,qs),
(1376,186,ls),
(1376,54,o),
(1256,54,qs),
(1113,54,l),
(1113,1052,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(329,1056,l),
(329,0,l)
);
}
);
width = 1768;
}
);
note = uni17E7;
unicode = 6119;
},
{
glyphname = uni17E8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(941,698,qs),
(941,809,o),
(1051,809,q),
(1051,588,l),
(941,588,o)
);
},
{
closed = 1;
nodes = (
(888,698,qs),
(888,535,o),
(1051,535,q),
(1051,64,l),
(721,313,l),
(392,64,l),
(392,1059,l),
(630,1250,l),
(997,1096,l),
(1113,1096,o),
(1113,1303,qs),
(1113,1396,ls),
(1113,1529,o),
(1206,1529,q),
(1206,1583,o),
(1148,1583,qs),
(1050,1583,o),
(1050,1396,qs),
(1051,1303,ls),
(1051,1154,o),
(977,1154,q),
(635,1303,l),
(612,1303,l),
(329,1086,l),
(329,0,l),
(392,0,l),
(721,260,l),
(1051,0,l),
(1113,0,l),
(1113,801,ls),
(1113,861,o),
(1051,861,qs),
(888,861,o)
);
}
);
width = 1442;
}
);
note = uni17E8;
unicode = 6120;
},
{
glyphname = uni17E9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(931,416,qs),
(931,506,o),
(1051,506,q),
(1051,306,l),
(931,306,o)
);
},
{
closed = 1;
nodes = (
(1051,559,qs),
(868,559,o),
(868,416,qs),
(868,253,o),
(1051,253,q),
(1021,54,o),
(776,54,qs),
(392,54,o),
(392,435,qs),
(392,812,o),
(832,812,qs),
(972,812,o),
(1058,748,q),
(1065,730,o),
(1086,730,qs),
(1113,730,o),
(1113,761,qs),
(1113,783,o),
(1071,804,q),
(972,864,o),
(832,864,qs),
(505,864,o),
(505,1068,qs),
(505,1250,o),
(776,1250,qs),
(1051,1250,o),
(1051,1031,qs),
(1051,977,o),
(1082,977,qs),
(1113,977,o),
(1113,1031,qs),
(1113,1396,ls),
(1113,1583,o),
(994,1583,qs),
(931,1583,o),
(931,1529,q),
(1050,1529,o),
(1050,1396,qs),
(1051,1182,l),
(962,1303,o),
(776,1303,qs),
(442,1303,o),
(442,1068,qs),
(442,885,o),
(635,845,q),
(447,793,o),
(329,577,o),
(329,435,qs),
(329,0,o),
(776,0,qs),
(1113,0,o),
(1113,306,qs),
(1113,515,ls),
(1113,559,o)
);
}
);
width = 1442;
}
);
note = uni17E9;
unicode = 6121;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1008,289,o),
(1008,574,qs),
(1008,882,ls),
(1008,1166,o),
(775,1477,o),
(564,1477,qs),
(353,1477,o),
(121,1166,o),
(121,882,qs),
(121,574,ls),
(121,290,o),
(355,-21,o),
(566,-21,qs),
(777,-21,o)
);
},
{
closed = 1;
nodes = (
(175,324,o),
(175,576,qs),
(175,882,ls),
(175,1136,o),
(374,1423,o),
(564,1423,qs),
(754,1423,o),
(954,1136,o),
(954,882,qs),
(954,576,ls),
(954,323,o),
(755,33,o),
(566,33,qs),
(376,33,o)
);
}
);
width = 1150;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(748,54,l),
(455,54,l),
(455,1464,l),
(63,1380,l),
(63,1330,l),
(401,1406,l),
(401,54,l),
(108,54,l),
(108,0,l),
(748,0,l)
);
}
);
width = 821;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,293,l),
(923,293,l),
(923,54,l),
(184,54,l),
(182,59,l),
(599,546,ls),
(694,657,o),
(828,842,o),
(899,1005,o),
(899,1086,qs),
(899,1210,o),
(800,1385,o),
(620,1477,o),
(499,1477,qs),
(369,1477,o),
(176,1363,o),
(73,1170,o),
(76,1052,q),
(78,1046,l),
(124,1046,l),
(124,1213,o),
(320,1423,o),
(499,1423,qs),
(668,1423,o),
(844,1245,o),
(844,1086,qs),
(844,1021,o),
(789,878,o),
(674,709,o),
(583,604,qs),
(106,54,l),
(106,0,l),
(977,0,l)
);
}
);
width = 1104;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(863,77,o),
(973,259,o),
(973,386,qs),
(973,526,o),
(815,710,o),
(673,745,q),
(796,785,o),
(941,967,o),
(941,1082,qs),
(941,1264,o),
(718,1477,o),
(530,1477,qs),
(409,1477,o),
(214,1377,o),
(103,1199,o),
(106,1081,q),
(108,1075,l),
(154,1075,l),
(154,1180,o),
(252,1337,o),
(422,1423,o),
(530,1423,qs),
(706,1423,o),
(887,1233,o),
(887,1086,qs),
(887,997,o),
(792,855,o),
(616,771,o),
(494,771,qs),
(383,771,l),
(383,715,l),
(494,715,ls),
(690,715,o),
(919,552,o),
(919,382,qs),
(919,218,o),
(719,33,o),
(539,33,qs),
(420,33,o),
(232,129,o),
(123,297,o),
(123,405,q),
(77,405,l),
(75,399,l),
(72,265,o),
(201,77,o),
(416,-21,o),
(539,-21,qs),
(667,-21,o)
);
}
);
width = 1098;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(986,54,l),
(823,54,l),
(823,397,l),
(1075,397,l),
(1075,451,l),
(823,451,l),
(823,1456,l),
(758,1456,l),
(63,427,l),
(63,397,l),
(769,397,l),
(769,54,l),
(606,54,l),
(606,0,l),
(986,0,l)
);
},
{
closed = 1;
nodes = (
(763,1382,l),
(769,1380,l),
(769,451,l),
(147,451,l),
(685,1253,l)
);
}
);
width = 1170;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(840,98,o),
(933,315,o),
(933,464,qs),
(933,603,o),
(830,809,o),
(649,919,o),
(533,916,qs),
(436,913,o),
(309,883,o),
(218,827,o),
(176,785,q),
(237,1403,l),
(834,1403,l),
(834,1265,l),
(888,1265,l),
(888,1456,l),
(188,1456,l),
(110,662,l),
(151,646,l),
(191,751,o),
(374,858,o),
(534,858,qs),
(697,858,o),
(878,646,o),
(878,462,qs),
(878,247,o),
(697,33,o),
(503,33,qs),
(338,33,o),
(146,211,o),
(146,383,q),
(99,383,l),
(97,377,l),
(94,246,o),
(199,69,o),
(385,-21,o),
(503,-21,qs),
(650,-21,o)
);
}
);
width = 1061;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(875,105,o),
(986,322,o),
(986,460,qs),
(986,610,o),
(885,834,o),
(696,957,o),
(565,957,qs),
(429,957,o),
(222,815,o),
(175,706,q),
(175,881,ls),
(175,1154,o),
(399,1423,o),
(574,1423,qs),
(659,1423,o),
(772,1394,o),
(838,1356,q),
(859,1407,l),
(795,1444,o),
(650,1477,o),
(574,1477,qs),
(443,1477,o),
(238,1341,o),
(121,1075,o),
(121,880,qs),
(121,552,ls),
(121,370,o),
(231,114,o),
(426,-21,o),
(555,-21,qs),
(680,-21,o)
);
},
{
closed = 1;
nodes = (
(175,304,o),
(175,551,qs),
(175,554,ls),
(175,649,o),
(281,807,o),
(456,903,o),
(558,903,qs),
(740,903,o),
(932,662,o),
(932,460,qs),
(932,343,o),
(836,148,o),
(666,32,o),
(555,32,qs),
(383,32,o)
);
}
);
width = 1107;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(445,91,l),
(468,301,o),
(567,670,o),
(713,993,o),
(898,1277,o),
(1006,1402,q),
(1006,1456,l),
(76,1456,l),
(76,1163,l),
(130,1163,l),
(130,1402,l),
(941,1402,l),
(791,1224,o),
(564,817,o),
(420,354,o),
(391,91,q),
(385,0,l),
(439,0,l)
);
}
);
width = 1104;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(901,72,o),
(1020,251,o),
(1020,379,qs),
(1020,511,o),
(847,707,o),
(708,745,q),
(829,782,o),
(978,964,o),
(978,1086,qs),
(978,1208,o),
(868,1383,o),
(677,1477,o),
(555,1477,qs),
(432,1477,o),
(241,1384,o),
(133,1209,o),
(133,1086,qs),
(133,963,o),
(279,782,o),
(401,745,q),
(261,708,o),
(92,512,o),
(92,379,qs),
(92,251,o),
(210,72,o),
(420,-21,o),
(557,-21,qs),
(692,-21,o)
);
},
{
closed = 1;
nodes = (
(146,213,o),
(146,374,qs),
(146,477,o),
(252,632,o),
(437,718,o),
(555,718,qs),
(671,718,o),
(857,632,o),
(965,477,o),
(965,374,qs),
(965,267,o),
(859,115,o),
(674,33,o),
(557,33,qs),
(376,33,o)
);
},
{
closed = 1;
nodes = (
(187,945,o),
(187,1091,qs),
(187,1242,o),
(394,1423,o),
(555,1423,qs),
(658,1423,o),
(826,1336,o),
(924,1186,o),
(924,1091,qs),
(924,994,o),
(828,851,o),
(662,772,o),
(557,772,qs),
(395,772,o)
);
}
);
width = 1123;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(850,113,o),
(962,381,o),
(962,580,qs),
(962,923,ls),
(962,1111,o),
(852,1357,o),
(653,1477,o),
(520,1477,qs),
(393,1477,o),
(196,1337,o),
(84,1101,o),
(84,958,qs),
(84,823,o),
(194,600,o),
(387,468,o),
(512,468,qs),
(639,468,o),
(844,592,o),
(900,701,q),
(900,578,ls),
(900,309,o),
(689,33,o),
(501,33,qs),
(415,33,o),
(279,65,o),
(204,99,q),
(188,42,l),
(267,11,o),
(423,-21,o),
(501,-21,qs),
(643,-21,o)
);
},
{
closed = 1;
nodes = (
(237,641,o),
(146,839,o),
(146,958,qs),
(146,1081,o),
(242,1293,o),
(412,1423,o),
(524,1423,qs),
(695,1423,o),
(900,1178,o),
(900,922,qs),
(900,811,l),
(860,692,o),
(660,521,o),
(512,521,qs),
(401,521,o)
);
}
);
width = 1125;
}
);
note = nine;
unicode = 57;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 700;
}
);
note = space;
unicode = 32;
},
{
glyphname = CR;
layers = (
{
layerId = m01;
width = 1044;
}
);
note = CR;
},
{
glyphname = uni0000;
layers = (
{
layerId = m01;
width = 0;
}
);
note = uni0000;
},
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,0,l),
(922,0,l),
(922,1462,l),
(102,1462,l)
);
},
{
closed = 1;
nodes = (
(201,98,l),
(201,1364,l),
(823,1364,l),
(823,98,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
4 1 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79 0 0 7 6 5 4 0 3 0 3 17 5 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = ".notdef";
},
{
glyphname = uni17D4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(512,977,qs),
(619,977,o),
(767,1031,o),
(1050,1237,q),
(1050,163,ls),
(1050,54,o),
(884,54,q),
(884,0,o),
(966,0,qs),
(1113,0,o),
(1113,163,qs),
(1113,1303,l),
(1051,1303,l),
(729,1076,o),
(607,1031,o),
(512,1031,qs),
(392,1031,o),
(392,1141,qs),
(392,1260,o),
(582,1260,q),
(582,1303,o),
(486,1303,qs),
(329,1303,o),
(329,1140,qs),
(329,977,o)
);
}
);
width = 1442;
}
);
note = uni17D4;
unicode = 6100;
},
{
glyphname = uni17D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1210,0,q),
(1393,0,o),
(1393,140,qs),
(1393,1303,l),
(1333,1303,l),
(1333,140,ls),
(1333,30,o)
);
},
{
closed = 1;
nodes = (
(512,977,qs),
(619,977,o),
(767,1031,o),
(1050,1237,q),
(1050,163,ls),
(1050,54,o),
(884,54,q),
(884,0,o),
(966,0,qs),
(1113,0,o),
(1113,163,qs),
(1113,1303,l),
(1051,1303,l),
(729,1076,o),
(607,1031,o),
(512,1031,qs),
(392,1031,o),
(392,1141,qs),
(392,1260,o),
(582,1260,q),
(582,1303,o),
(486,1303,qs),
(329,1303,o),
(329,1140,qs),
(329,977,o)
);
}
);
width = 1722;
}
);
note = uni17D5;
unicode = 6101;
},
{
glyphname = uni17D6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,625,l),
(791,625,l),
(791,678,l),
(186,678,l)
);
},
{
closed = 1;
nodes = (
(372,1212,qs),
(411,1251,o),
(488,1251,qs),
(566,1251,o),
(605,1212,qs),
(645,1171,o),
(645,1094,qs),
(645,1015,o),
(605,976,qs),
(566,938,o),
(488,938,qs),
(411,938,o),
(372,976,qs),
(332,1015,o),
(332,1094,qs),
(332,1171,o)
);
},
{
closed = 1;
nodes = (
(646,1251,qs),
(594,1303,o),
(488,1303,qs),
(383,1303,o),
(331,1251,qs),
(279,1199,o),
(279,1094,qs),
(279,989,o),
(331,936,qs),
(383,884,o),
(488,884,qs),
(594,884,o),
(646,936,qs),
(698,989,o),
(698,1094,qs),
(698,1199,o)
);
},
{
closed = 1;
nodes = (
(372,326,qs),
(411,366,o),
(488,366,qs),
(566,366,o),
(605,326,qs),
(645,287,o),
(645,209,qs),
(645,132,o),
(605,93,qs),
(566,53,o),
(488,53,qs),
(411,53,o),
(372,93,qs),
(332,132,o),
(332,209,qs),
(332,287,o)
);
},
{
closed = 1;
nodes = (
(646,367,qs),
(594,419,o),
(488,419,qs),
(383,419,o),
(331,367,qs),
(279,315,o),
(279,209,qs),
(279,104,o),
(331,52,qs),
(383,0,o),
(488,0,qs),
(594,0,o),
(646,52,qs),
(698,104,o),
(698,209,qs),
(698,315,o)
);
}
);
width = 977;
}
);
note = uni17D6;
unicode = 6102;
},
{
glyphname = uni17D7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(610,963,qs),
(610,1024,o),
(555,1024,q),
(555,927,o),
(501,927,qs),
(392,927,o),
(392,1032,q),
(539,1223,l),
(778,991,l),
(1051,1213,l),
(1051,326,ls),
(1051,54,o),
(776,54,qs),
(451,54,o),
(451,271,q),
(410,271,o),
(410,193,qs),
(410,0,o),
(776,0,qs),
(1113,0,o),
(1113,326,qs),
(1113,1302,l),
(1075,1302,l),
(776,1058,l),
(532,1303,l),
(358,1099,o),
(329,1032,q),
(329,862,o),
(501,862,qs),
(610,862,o)
);
}
);
width = 1442;
}
);
note = uni17D7;
unicode = 6103;
},
{
glyphname = uni17D8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4120,977,qs),
(4227,977,o),
(4375,1031,o),
(4658,1237,q),
(4658,163,ls),
(4658,54,o),
(4492,54,q),
(4492,0,o),
(4574,0,qs),
(4721,0,o),
(4721,163,qs),
(4721,1303,l),
(4659,1303,l),
(4337,1076,o),
(4215,1031,o),
(4120,1031,qs),
(4000,1031,o),
(4000,1141,qs),
(4000,1260,o),
(4190,1260,q),
(4190,1303,o),
(4094,1303,qs),
(3937,1303,o),
(3937,1140,qs),
(3937,977,o)
);
},
{
closed = 1;
nodes = (
(512,977,qs),
(619,977,o),
(767,1031,o),
(1050,1237,q),
(1050,163,ls),
(1050,54,o),
(884,54,q),
(884,0,o),
(966,0,qs),
(1113,0,o),
(1113,163,qs),
(1113,1303,l),
(1051,1303,l),
(729,1076,o),
(607,1031,o),
(512,1031,qs),
(392,1031,o),
(392,1141,qs),
(392,1260,o),
(582,1260,q),
(582,1303,o),
(486,1303,qs),
(329,1303,o),
(329,1140,qs),
(329,977,o)
);
},
{
closed = 1;
nodes = (
(1978,389,o),
(1978,299,qs),
(1978,236,o),
(1892,143,qs),
(1835,81,l),
(1835,389,l),
(1884,389,ls)
);
},
{
closed = 1;
nodes = (
(3087,1018,l),
(3205,1216,l),
(3298,1156,ls),
(3335,1132,o),
(3363,1132,qs),
(3406,1132,o),
(3431,1187,q),
(3421,1186,o),
(3411,1186,qs),
(3367,1186,o),
(3329,1211,qs),
(3189,1303,l),
(3032,1045,l),
(3032,985,l),
(3215,882,l),
(3215,233,ls),
(3215,53,o),
(2932,53,qs),
(2839,53,ls),
(2556,53,o),
(2556,233,qs),
(2556,1103,l),
(2164,1303,l),
(1772,1104,l),
(1772,0,l),
(1835,0,l),
(1933,106,ls),
(2031,212,o),
(2031,300,qs),
(2031,442,o),
(1884,442,qs),
(1835,442,l),
(1835,1081,l),
(2143,1241,l),
(2493,1066,l),
(2493,233,ls),
(2493,0,o),
(2839,0,qs),
(2932,0,ls),
(3278,0,o),
(3278,233,qs),
(3278,909,l)
);
}
);
width = 5050;
}
);
note = uni17D8;
unicode = 6104;
},
{
glyphname = uni17D9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1338,163,qs),
(1500,325,o),
(1500,650,qs),
(1500,975,o),
(1338,1138,qs),
(1174,1300,o),
(850,1300,qs),
(526,1300,o),
(363,1138,qs),
(200,975,o),
(200,650,qs),
(200,325,o),
(363,163,qs),
(526,0,o),
(850,0,qs),
(1174,0,o)
);
},
{
closed = 1;
nodes = (
(1440,650,qs),
(1440,60,o),
(850,60,qs),
(260,60,o),
(260,650,qs),
(260,1240,o),
(850,1240,qs),
(1440,1240,o)
);
},
{
closed = 1;
nodes = (
(1129,371,qs),
(1221,464,o),
(1221,650,qs),
(1221,836,o),
(1129,929,qs),
(1037,1021,o),
(850,1021,qs),
(663,1021,o),
(571,929,qs),
(479,836,o),
(479,650,qs),
(479,464,o),
(571,371,qs),
(663,279,o),
(850,279,qs),
(1037,279,o)
);
},
{
closed = 1;
nodes = (
(1083,884,qs),
(1161,806,o),
(1161,650,qs),
(1161,495,o),
(1083,417,qs),
(1004,339,o),
(850,339,qs),
(696,339,o),
(617,417,qs),
(539,495,o),
(539,650,qs),
(539,806,o),
(617,884,qs),
(696,961,o),
(850,961,qs),
(1004,961,o)
);
}
);
width = 1700;
}
);
note = uni17D9;
unicode = 6105;
},
{
glyphname = uni17DA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3298,638,o),
(3153,585,q),
(3126,616,o),
(3067,669,qs),
(3025,707,o),
(3007,725,q),
(3067,768,o),
(3117,831,o),
(3117,864,qs),
(3117,910,o),
(3053,968,o),
(3004,968,qs),
(2954,968,o),
(2890,910,o),
(2890,864,qs),
(2890,797,o),
(2940,734,q),
(2887,699,o),
(2825,662,qs),
(2808,652,ls),
(2704,589,o),
(2654,553,q),
(2616,596,o),
(2529,675,qs),
(2461,737,o),
(2433,766,q),
(2487,816,o),
(2547,906,o),
(2547,946,qs),
(2547,998,o),
(2473,1065,o),
(2417,1065,qs),
(2361,1065,o),
(2286,998,o),
(2286,946,qs),
(2286,863,o),
(2371,768,q),
(2322,726,o),
(2226,652,qs),
(2113,564,o),
(2070,527,q),
(2030,560,o),
(1950,619,qs),
(1868,679,o),
(1830,710,q),
(1892,793,o),
(1963,921,o),
(1963,950,qs),
(1963,999,o),
(1919,1077,o),
(1841,1121,o),
(1792,1121,qs),
(1743,1121,o),
(1664,1077,o),
(1620,999,o),
(1620,950,qs),
(1620,886,o),
(1700,763,o),
(1772,701,q),
(1656,552,o),
(1347,267,o),
(996,74,o),
(836,74,qs),
(686,74,o),
(535,376,o),
(535,682,qs),
(535,948,o),
(747,1209,o),
(963,1209,qs),
(1132,1209,o),
(1296,1065,o),
(1296,919,qs),
(1296,768,o),
(1164,618,o),
(1016,597,qs),
(996,594,o),
(996,575,qs),
(996,572,ls),
(998,552,o),
(1016,552,qs),
(1021,552,l),
(1186,574,o),
(1341,751,o),
(1341,919,qs),
(1341,1085,o),
(1150,1254,o),
(963,1254,qs),
(728,1254,o),
(490,966,o),
(490,682,qs),
(490,29,o),
(836,29,qs),
(1002,29,o),
(1363,226,o),
(1682,519,o),
(1804,674,q),
(1848,638,o),
(1924,583,qs),
(1996,531,o),
(2037,497,q),
(1916,383,o),
(1916,300,qs),
(1916,233,o),
(2003,147,o),
(2070,147,qs),
(2137,147,o),
(2223,233,o),
(2223,300,qs),
(2223,350,o),
(2161,447,o),
(2104,498,q),
(2126,518,o),
(2211,584,qs),
(2253,617,ls),
(2360,701,o),
(2400,736,q),
(2431,704,o),
(2499,642,qs),
(2584,565,o),
(2618,527,q),
(2508,441,o),
(2508,368,qs),
(2508,314,o),
(2577,242,o),
(2629,242,qs),
(2679,242,o),
(2743,312,o),
(2743,368,qs),
(2743,438,o),
(2682,519,q),
(2736,558,o),
(2848,624,qs),
(2939,679,o),
(2969,699,q),
(2991,677,o),
(3037,635,qs),
(3084,594,o),
(3109,566,q),
(2994,510,o),
(2994,427,qs),
(2994,378,o),
(3058,314,o),
(3107,314,qs),
(3156,314,o),
(3221,378,o),
(3221,427,qs),
(3221,488,o),
(3182,547,q),
(3318,593,o),
(3538,593,qs),
(3561,593,o),
(3561,616,qs),
(3561,638,o),
(3538,638,q),
(3538,638,l),
(3538,638,l)
);
},
{
closed = 1;
nodes = (
(1666,1006,o),
(1736,1076,o),
(1792,1076,qs),
(1848,1076,o),
(1918,1006,o),
(1918,950,qs),
(1918,926,o),
(1855,811,o),
(1799,736,q),
(1735,791,o),
(1666,896,o),
(1666,950,q),
(1666,950,l),
(1666,950,l)
);
},
{
closed = 1;
nodes = (
(2332,979,o),
(2379,1020,o),
(2417,1020,qs),
(2455,1020,o),
(2503,979,o),
(2503,946,qs),
(2503,915,o),
(2452,842,o),
(2404,797,q),
(2369,837,o),
(2332,910,o),
(2332,946,q),
(2332,946,l),
(2332,946,l)
);
},
{
closed = 1;
nodes = (
(2934,891,o),
(2972,923,o),
(3004,923,qs),
(3035,923,o),
(3073,891,o),
(3073,864,qs),
(3073,844,o),
(3029,795,o),
(2977,758,q),
(2934,813,o),
(2934,864,q),
(2934,864,l),
(2934,864,l)
);
},
{
closed = 1;
nodes = (
(3175,396,o),
(3138,359,o),
(3107,359,qs),
(3076,359,o),
(3039,396,o),
(3039,427,qs),
(3039,457,o),
(3090,510,o),
(3138,531,q),
(3175,480,o),
(3175,427,q),
(3175,427,l),
(3175,427,l)
);
},
{
closed = 1;
nodes = (
(2699,331,o),
(2661,287,o),
(2629,287,qs),
(2596,287,o),
(2554,333,o),
(2554,368,qs),
(2554,421,o),
(2646,493,q),
(2699,423,o),
(2699,368,q),
(2699,368,l),
(2699,368,l)
);
},
{
closed = 1;
nodes = (
(2179,252,o),
(2118,192,o),
(2070,192,qs),
(2021,192,o),
(1960,252,o),
(1960,300,qs),
(1960,336,o),
(2018,420,o),
(2071,469,q),
(2123,422,o),
(2179,340,o),
(2179,300,q),
(2179,300,l),
(2179,300,l)
);
}
);
width = 3850;
}
);
note = uni17DA;
unicode = 6106;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(624,653,l),
(154,653,l),
(154,599,l),
(624,599,l)
);
}
);
width = 789;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(965,0,l),
(119,0,l),
(119,-54,l),
(965,-54,l)
);
}
);
width = 1134;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(547,-427,l),
(471,-376,o),
(334,-175,o),
(228,96,o),
(168,405,o),
(168,564,qs),
(168,590,ls),
(168,748,o),
(228,1057,o),
(334,1328,o),
(471,1529,o),
(547,1580,q),
(531,1616,l),
(525,1616,l),
(440,1565,o),
(291,1358,o),
(178,1079,o),
(114,755,o),
(114,586,qs),
(114,566,ls),
(114,389,o),
(177,64,o),
(290,-209,o),
(439,-410,o),
(525,-463,q),
(531,-463,l)
);
}
);
width = 615;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,-410,o),
(268,-209,o),
(380,64,o),
(444,389,o),
(444,566,qs),
(444,586,ls),
(444,755,o),
(380,1079,o),
(266,1358,o),
(117,1565,o),
(33,1616,q),
(27,1616,l),
(11,1580,l),
(87,1529,o),
(224,1328,o),
(329,1057,o),
(390,748,o),
(390,590,qs),
(390,564,ls),
(390,405,o),
(329,96,o),
(224,-175,o),
(87,-376,o),
(11,-427,q),
(27,-463,l),
(33,-463,l)
);
}
);
width = 608;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,-346,o),
(367,-134,o),
(367,20,qs),
(367,265,ls),
(367,384,o),
(263,550,o),
(156,576,q),
(263,601,o),
(367,765,o),
(367,885,qs),
(367,1132,ls),
(367,1287,o),
(504,1506,o),
(647,1552,q),
(632,1597,l),
(459,1542,o),
(313,1303,o),
(313,1132,qs),
(313,885,ls),
(313,753,o),
(191,609,o),
(63,609,q),
(63,543,l),
(191,543,o),
(313,397,o),
(313,265,qs),
(313,20,ls),
(313,-150,o),
(459,-386,o),
(632,-441,q),
(652,-395,l)
);
}
);
width = 693;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(365,-151,o),
(365,20,qs),
(365,265,ls),
(365,396,o),
(487,543,o),
(615,543,q),
(615,609,l),
(487,609,o),
(365,753,o),
(365,885,qs),
(365,1132,ls),
(365,1303,o),
(218,1542,o),
(46,1597,q),
(32,1552,l),
(174,1506,o),
(311,1287,o),
(311,1132,qs),
(311,885,ls),
(311,765,o),
(414,601,o),
(522,576,q),
(414,550,o),
(311,384,o),
(311,265,qs),
(311,20,ls),
(311,-134,o),
(170,-346,o),
(27,-395,q),
(46,-441,l),
(219,-386,o)
);
}
);
width = 692;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(440,-258,l),
(211,-258,l),
(211,1610,l),
(440,1610,l),
(440,1664,l),
(157,1664,l),
(157,-312,l),
(440,-312,l)
);
}
);
width = 527;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(306,1664,l),
(23,1664,l),
(23,1610,l),
(251,1610,l),
(251,-258,l),
(23,-258,l),
(23,-312,l),
(306,-312,l)
);
}
);
width = 505;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(176,525,l),
(470,905,l),
(400,905,l),
(105,535,l),
(105,516,l),
(400,146,l),
(470,146,l)
);
},
{
closed = 1;
nodes = (
(463,525,l),
(757,905,l),
(687,905,l),
(392,535,l),
(392,516,l),
(687,146,l),
(757,146,l)
);
}
);
width = 905;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(469,541,l),
(469,560,l),
(175,940,l),
(105,940,l),
(398,550,l),
(105,171,l),
(175,171,l)
);
},
{
closed = 1;
nodes = (
(759,541,l),
(759,560,l),
(465,940,l),
(395,940,l),
(688,550,l),
(395,171,l),
(465,171,l)
);
}
);
width = 897;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,1391,l),
(236,1560,l),
(181,1560,l),
(181,1389,l),
(166,1122,l),
(216,1122,l)
);
},
{
closed = 1;
nodes = (
(417,1391,l),
(417,1560,l),
(362,1560,l),
(362,1389,l),
(347,1122,l),
(397,1122,l)
);
}
);
width = 602;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,1391,l),
(236,1560,l),
(181,1560,l),
(181,1389,l),
(166,1122,l),
(216,1122,l)
);
}
);
width = 421;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,130,l),
(145,130,l),
(145,0,l),
(231,0,l)
);
}
);
width = 444;
}
);
note = period;
unicode = 46;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(235,-61,o),
(235,27,qs),
(235,159,l),
(181,159,l),
(181,25,ls),
(181,-49,o),
(138,-162,o),
(92,-223,q),
(129,-255,l),
(179,-201,o)
);
}
);
width = 383;
}
);
note = comma;
unicode = 44;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,130,l),
(118,130,l),
(118,0,l),
(204,0,l)
);
},
{
closed = 1;
nodes = (
(204,1079,l),
(118,1079,l),
(118,949,l),
(204,949,l)
);
}
);
width = 364;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,1082,l),
(125,1082,l),
(125,952,l),
(211,952,l)
);
},
{
closed = 1;
nodes = (
(219,-61,o),
(219,27,qs),
(219,159,l),
(165,159,l),
(165,25,ls),
(165,-49,o),
(122,-162,o),
(76,-223,q),
(113,-255,l),
(163,-201,o)
);
}
);
width = 364;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,1456,l),
(163,1456,l),
(163,478,l),
(217,478,l)
);
},
{
closed = 1;
nodes = (
(238,134,l),
(143,134,l),
(143,0,l),
(238,0,l)
);
}
);
width = 437;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(416,467,o),
(429,548,o),
(472,612,o),
(515,650,qs),
(601,727,o),
(713,865,o),
(768,1016,o),
(768,1110,qs),
(768,1275,o),
(579,1477,o),
(415,1477,qs),
(312,1477,o),
(153,1394,o),
(64,1235,o),
(65,1122,q),
(68,1116,l),
(114,1116,l),
(117,1255,o),
(273,1424,o),
(415,1424,qs),
(558,1424,o),
(714,1258,o),
(714,1112,qs),
(714,1018,o),
(668,888,o),
(568,769,o),
(487,692,qs),
(445,653,o),
(395,595,o),
(370,536,o),
(362,459,o),
(362,400,q),
(416,400,l)
);
},
{
closed = 1;
nodes = (
(440,106,l),
(358,106,l),
(358,0,l),
(440,0,l)
);
}
);
width = 901;
}
);
note = question;
unicode = 63;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,1014,l),
(868,1151,l),
(848,1204,l),
(496,1061,l),
(503,1456,l),
(447,1456,l),
(446,1062,l),
(84,1195,l),
(66,1141,l),
(429,1017,l),
(195,693,l),
(240,661,l),
(468,986,l),
(710,664,l),
(757,697,l)
);
}
);
width = 948;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(390,410,l),
(754,410,l),
(679,0,l),
(735,0,l),
(810,410,l),
(1104,410,l),
(1104,462,l),
(819,462,l),
(915,986,l),
(1179,986,l),
(1179,1040,l),
(925,1040,l),
(1001,1456,l),
(945,1456,l),
(869,1040,l),
(504,1040,l),
(580,1456,l),
(524,1456,l),
(449,1040,l),
(139,1040,l),
(139,986,l),
(439,986,l),
(344,462,l),
(63,462,l),
(63,410,l),
(334,410,l),
(260,0,l),
(316,0,l)
);
},
{
closed = 1;
nodes = (
(859,986,l),
(763,462,l),
(400,462,l),
(494,986,l)
);
}
);
width = 1246;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(667,1456,l),
(608,1456,l),
(0,-125,l),
(59,-125,l)
);
}
);
width = 776;
}
);
note = slash;
unicode = 47;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,1456,l),
(36,1456,l),
(644,-125,l),
(702,-125,l)
);
}
);
width = 784;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = uni17DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,143,ls),
(186,236,o),
(186,299,qs),
(186,389,o),
(280,389,qs),
(329,389,l),
(329,81,l)
);
},
{
closed = 1;
nodes = (
(201,1018,l),
(319,1216,l),
(412,1156,ls),
(449,1132,o),
(477,1132,qs),
(520,1132,o),
(545,1187,q),
(535,1186,o),
(525,1186,qs),
(481,1186,o),
(443,1211,qs),
(303,1303,l),
(146,1045,l),
(146,985,l),
(329,882,l),
(329,632,l),
(116,632,l),
(116,579,l),
(329,579,l),
(329,442,l),
(280,442,ls),
(133,442,o),
(133,300,qs),
(133,212,o),
(231,106,qs),
(329,0,l),
(392,0,l),
(392,579,l),
(575,579,l),
(575,632,l),
(392,632,l),
(392,909,l)
);
}
);
width = 721;
}
);
note = uni17DB;
unicode = 6107;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,-20,l),
(749,-10,o),
(957,185,o),
(957,346,qs),
(957,456,o),
(870,601,o),
(689,705,o),
(549,754,qs),
(400,803,o),
(239,901,o),
(178,1025,o),
(178,1112,qs),
(178,1241,o),
(361,1424,o),
(535,1424,qs),
(705,1424,o),
(895,1213,o),
(895,1047,q),
(942,1047,l),
(944,1052,l),
(947,1245,o),
(746,1466,o),
(565,1476,q),
(565,1663,l),
(510,1663,l),
(510,1476,l),
(333,1469,o),
(124,1270,o),
(124,1110,qs),
(124,999,o),
(209,853,o),
(389,749,o),
(532,702,qs),
(674,651,o),
(836,552,o),
(903,431,o),
(903,344,qs),
(903,259,o),
(813,117,o),
(651,32,o),
(542,32,qs),
(430,32,o),
(243,110,o),
(131,276,o),
(131,409,q),
(85,409,l),
(83,403,l),
(80,260,o),
(194,75,o),
(395,-17,o),
(521,-21,q),
(521,-208,l),
(576,-208,l)
);
}
);
width = 1086;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(590,649,l),
(1071,649,l),
(1071,702,l),
(590,702,l),
(590,1206,l),
(535,1206,l),
(535,702,l),
(73,702,l),
(73,649,l),
(535,649,l),
(535,146,l),
(590,146,l)
);
}
);
width = 1145;
}
);
note = plus;
unicode = 43;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(981,897,l),
(147,897,l),
(147,843,l),
(981,843,l)
);
},
{
closed = 1;
nodes = (
(981,490,l),
(147,490,l),
(147,436,l),
(981,436,l)
);
}
);
width = 1127;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(961,566,l),
(125,944,l),
(125,886,l),
(785,582,l),
(903,545,l),
(903,539,l),
(785,503,l),
(125,196,l),
(125,137,l),
(961,516,l)
);
}
);
width = 1052;
}
);
note = greater;
unicode = 62;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,498,l),
(133,534,l),
(133,540,l),
(252,577,l),
(913,885,l),
(913,943,l),
(76,565,l),
(76,515,l),
(913,136,l),
(913,195,l)
);
}
);
width = 1027;
}
);
note = less;
unicode = 60;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1147,524,o),
(1216,659,o),
(1216,740,q),
(1155,753,l),
(1155,637,o),
(1038,496,o),
(952,496,qs),
(889,496,o),
(773,552,o),
(706,614,qs),
(614,695,o),
(469,774,o),
(383,774,qs),
(306,774,o),
(188,695,o),
(121,559,o),
(121,474,q),
(180,462,l),
(180,584,o),
(294,720,o),
(383,720,qs),
(444,720,o),
(563,661,o),
(631,602,qs),
(722,519,o),
(865,443,o),
(952,443,qs),
(1027,443,o)
);
}
);
width = 1368;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(349,1272,l),
(392,1386,l),
(398,1386,l),
(438,1272,l),
(660,729,l),
(721,729,l),
(422,1456,l),
(370,1456,l),
(71,729,l),
(130,729,l)
);
}
);
width = 828;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1054,1300,l),
(343,162,l),
(388,131,l),
(1099,1269,l)
);
},
{
closed = 1;
nodes = (
(1307,59,o),
(1376,195,o),
(1376,279,qs),
(1376,357,ls),
(1376,441,o),
(1307,577,o),
(1184,657,o),
(1104,657,qs),
(1024,657,o),
(902,576,o),
(833,440,o),
(833,357,qs),
(833,279,ls),
(833,195,o),
(902,59,o),
(1025,-21,o),
(1106,-21,qs),
(1185,-21,o)
);
},
{
closed = 1;
nodes = (
(888,178,o),
(888,279,qs),
(888,357,ls),
(888,462,o),
(1001,602,o),
(1104,602,qs),
(1209,602,o),
(1321,463,o),
(1321,357,qs),
(1321,279,ls),
(1321,178,o),
(1209,34,o),
(1106,34,qs),
(1000,34,o)
);
},
{
closed = 1;
nodes = (
(551,880,o),
(620,1015,o),
(620,1099,qs),
(620,1176,ls),
(620,1260,o),
(551,1397,o),
(428,1477,o),
(349,1477,qs),
(269,1477,o),
(146,1397,o),
(77,1260,o),
(77,1176,qs),
(77,1099,ls),
(77,1015,o),
(146,880,o),
(270,800,o),
(351,800,qs),
(430,800,o)
);
},
{
closed = 1;
nodes = (
(132,999,o),
(132,1099,qs),
(132,1176,ls),
(132,1275,o),
(246,1422,o),
(349,1422,qs),
(452,1422,o),
(565,1276,o),
(565,1176,qs),
(565,1099,ls),
(565,999,o),
(453,855,o),
(351,855,qs),
(245,855,o)
);
}
);
width = 1457;
}
);
note = percent;
unicode = 37;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1159,-404,o),
(1221,-364,q),
(1197,-320,l),
(1135,-356,o),
(962,-398,o),
(863,-398,qs),
(619,-398,o),
(287,-175,o),
(127,221,o),
(140,478,qs),
(154,743,o),
(365,1138,o),
(722,1357,o),
(954,1357,qs),
(1331,1357,o),
(1687,919,o),
(1667,523,qs),
(1656,303,o),
(1475,34,o),
(1317,34,qs),
(1277,34,o),
(1205,79,o),
(1166,192,o),
(1173,293,qs),
(1220,831,l),
(1222,858,l),
(1159,913,o),
(1055,968,o),
(972,968,qs),
(858,968,o),
(671,831,o),
(551,583,o),
(535,416,qs),
(516,217,o),
(650,-21,o),
(786,-21,qs),
(1008,-21,o),
(1118,209,q),
(1127,101,o),
(1231,-21,o),
(1314,-21,qs),
(1442,-21,o),
(1620,129,o),
(1718,377,o),
(1724,523,qs),
(1736,803,o),
(1568,1200,o),
(1220,1411,o),
(958,1411,qs),
(706,1411,o),
(322,1180,o),
(98,761,o),
(86,478,qs),
(74,190,o),
(255,-227,o),
(609,-453,o),
(857,-453,qs),
(954,-453,o)
);
},
{
closed = 1;
nodes = (
(570,249,o),
(589,416,qs),
(615,660,o),
(827,913,o),
(969,913,qs),
(1033,913,o),
(1130,870,o),
(1164,831,q),
(1124,371,ls),
(1123,364,o),
(1123,352,o),
(1122,345,q),
(1064,166,o),
(892,33,o),
(784,33,qs),
(671,33,o)
);
}
);
width = 1799;
}
);
note = at;
unicode = 64;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(855,98,o),
(931,177,q),
(1088,0,l),
(1148,0,l),
(1150,5,l),
(965,216,l),
(1028,302,o),
(1098,507,o),
(1098,632,q),
(1043,632,l),
(1043,523,o),
(982,333,o),
(928,257,q),
(453,797,l),
(655,958,ls),
(725,1014,o),
(802,1131,o),
(802,1215,qs),
(802,1294,o),
(737,1412,o),
(614,1477,o),
(526,1477,qs),
(431,1477,o),
(295,1405,o),
(221,1266,o),
(221,1167,qs),
(221,1076,o),
(299,906,o),
(381,803,q),
(368,793,o),
(343,773,o),
(330,762,qs),
(209,660,o),
(74,466,o),
(74,352,qs),
(74,237,o),
(179,70,o),
(373,-21,o),
(508,-21,qs),
(654,-21,o)
);
},
{
closed = 1;
nodes = (
(128,218,o),
(128,352,qs),
(128,430,o),
(224,605,o),
(361,723,q),
(413,764,l),
(896,216,l),
(820,128,o),
(618,33,o),
(508,33,qs),
(324,33,o)
);
},
{
closed = 1;
nodes = (
(276,1090,o),
(276,1169,qs),
(276,1278,o),
(406,1423,o),
(526,1423,qs),
(633,1423,o),
(746,1309,o),
(746,1215,qs),
(746,1157,o),
(690,1050,o),
(630,1000,qs),
(421,834,l),
(346,922,o)
);
}
);
width = 1253;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,1456,l),
(150,1456,l),
(150,-270,l),
(204,-270,l)
);
}
);
width = 405;
}
);
note = bar;
unicode = 124;
},
{
glyphname = uni17B7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-915,1536,qs),
(-329,1536,l),
(-329,1589,l),
(-418,1667,ls),
(-641,1862,o),
(-828,1862,qs),
(-1054,1862,o),
(-1054,1629,qs),
(-1054,1536,o)
);
},
{
closed = 1;
nodes = (
(-461,1633,qs),
(-410,1589,l),
(-915,1589,ls),
(-995,1589,o),
(-995,1629,qs),
(-995,1802,o),
(-828,1802,qs),
(-657,1802,o)
);
}
);
width = 0;
}
);
note = uni17B7;
unicode = 6071;
},
{
glyphname = uni17B7_17CD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-335,1709,qs),
(-335,1740,o),
(-361,1740,qs),
(-388,1740,o),
(-388,1709,qs),
(-388,1679,o),
(-415,1664,q),
(-418,1667,ls),
(-510,1748,o),
(-596,1795,q),
(-585,1890,o),
(-493,1890,qs),
(-398,1890,o),
(-333,1790,q),
(-304,1790,o),
(-272,1801,q),
(-207,1838,o),
(-153,1887,qs),
(-101,1937,o),
(-61,2000,q),
(-51,2010,o),
(-51,2024,qs),
(-51,2038,o),
(-67,2057,o),
(-83,2057,q),
(-93,2055,l),
(-130,1993,o),
(-251,1866,o),
(-309,1851,q),
(-368,1950,o),
(-493,1950,qs),
(-625,1950,o),
(-646,1820,q),
(-741,1862,o),
(-828,1862,qs),
(-1054,1862,o),
(-1054,1629,qs),
(-1054,1536,o),
(-915,1536,qs),
(-329,1536,l),
(-329,1589,l),
(-369,1624,l),
(-335,1654,o)
);
},
{
closed = 1;
nodes = (
(-461,1633,qs),
(-410,1589,l),
(-915,1589,ls),
(-995,1589,o),
(-995,1629,qs),
(-995,1802,o),
(-828,1802,qs),
(-657,1802,o)
);
}
);
width = 0;
}
);
note = uni17B7_17CD;
},
{
glyphname = uni17B8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-461,1633,qs),
(-410,1589,l),
(-915,1589,ls),
(-995,1589,o),
(-995,1629,qs),
(-995,1802,o),
(-828,1802,qs),
(-657,1802,o)
);
},
{
closed = 1;
nodes = (
(-641,1862,o),
(-828,1862,qs),
(-1054,1862,o),
(-1054,1629,qs),
(-1054,1536,o),
(-915,1536,qs),
(-329,1536,l),
(-329,1908,l),
(-382,1908,l),
(-382,1635,l),
(-418,1667,ls)
);
}
);
width = 0;
}
);
note = uni17B8;
unicode = 6072;
},
{
glyphname = uni17B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-828,1862,qs),
(-1054,1862,o),
(-1054,1629,qs),
(-1054,1536,o),
(-915,1536,qs),
(-329,1536,l),
(-329,1589,l),
(-400,1651,l),
(-382,1660,o),
(-369,1673,qs),
(-329,1713,o),
(-329,1793,qs),
(-329,1873,o),
(-369,1912,qs),
(-408,1952,o),
(-489,1952,qs),
(-569,1952,o),
(-608,1912,qs),
(-641,1880,o),
(-647,1820,q),
(-741,1862,o)
);
},
{
closed = 1;
nodes = (
(-568,1873,qs),
(-541,1899,o),
(-489,1899,qs),
(-436,1899,o),
(-409,1873,qs),
(-382,1846,o),
(-382,1793,qs),
(-382,1739,o),
(-409,1713,qs),
(-424,1698,o),
(-447,1691,q),
(-523,1754,o),
(-595,1794,q),
(-595,1846,o)
);
},
{
closed = 1;
nodes = (
(-461,1633,qs),
(-410,1589,l),
(-915,1589,ls),
(-995,1589,o),
(-995,1629,qs),
(-995,1802,o),
(-828,1802,qs),
(-657,1802,o)
);
}
);
width = 0;
}
);
note = uni17B9;
unicode = 6073;
},
{
glyphname = uni17BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-592,1944,l),
(-592,1793,l),
(-716,1862,o),
(-828,1862,qs),
(-1054,1862,o),
(-1054,1629,qs),
(-1054,1536,o),
(-915,1536,qs),
(-329,1536,l),
(-329,1908,l),
(-382,1908,l),
(-382,1635,l),
(-418,1667,ls),
(-480,1721,o),
(-539,1760,q),
(-539,1944,l)
);
},
{
closed = 1;
nodes = (
(-461,1633,qs),
(-410,1589,l),
(-915,1589,ls),
(-995,1589,o),
(-995,1629,qs),
(-995,1802,o),
(-828,1802,qs),
(-657,1802,o)
);
}
);
width = 0;
}
);
note = uni17BA;
unicode = 6074;
},
{
glyphname = uni17BB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-328,-100,o),
(-413,-100,qs),
(-488,-100,o),
(-488,-153,q),
(-391,-153,o),
(-391,-199,qs),
(-391,-658,l),
(-328,-658,l),
(-328,-193,ls)
);
}
);
width = 0;
}
);
note = uni17BB;
unicode = 6075;
},
{
glyphname = uni17BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-744,-153,q),
(-667,-153,o),
(-667,-181,qs),
(-667,-239,o),
(-762,-327,o),
(-891,-391,o),
(-891,-421,qs),
(-891,-527,o),
(-810,-613,o),
(-749,-613,q),
(-630,-580,o),
(-528,-491,qs),
(-425,-400,o),
(-367,-253,qs),
(-334,-169,o),
(-308,-144,o),
(-308,-123,qs),
(-308,-100,o),
(-321,-100,qs),
(-346,-100,o),
(-397,-165,o),
(-485,-384,o),
(-658,-538,o),
(-749,-560,q),
(-828,-560,o),
(-828,-421,q),
(-762,-388,o),
(-679,-313,o),
(-660,-289,qs),
(-604,-210,o),
(-604,-165,qs),
(-604,-100,o),
(-669,-100,qs),
(-744,-100,o)
);
}
);
width = 0;
}
);
note = uni17BC;
unicode = 6076;
},
{
glyphname = uni17BD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-744,-153,q),
(-667,-153,o),
(-667,-191,qs),
(-667,-247,o),
(-725,-290,qs),
(-784,-331,o),
(-891,-379,q),
(-891,-432,ls),
(-891,-482,o),
(-823,-612,o),
(-746,-612,q),
(-643,-519,l),
(-591,-612,l),
(-508,-599,o),
(-365,-389,o),
(-327,-193,qs),
(-318,-147,o),
(-318,-123,qs),
(-319,-100,o),
(-330,-100,qs),
(-341,-100,o),
(-369,-146,o),
(-422,-347,o),
(-500,-500,o),
(-569,-549,q),
(-629,-446,l),
(-753,-549,l),
(-828,-549,o),
(-828,-411,q),
(-679,-333,o),
(-605,-241,o),
(-605,-191,qs),
(-605,-100,o),
(-689,-100,qs),
(-744,-100,o)
);
}
);
width = 0;
}
);
note = uni17BD;
unicode = 6077;
},
{
glyphname = uni17BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-461,1633,qs),
(-410,1589,l),
(-915,1589,ls),
(-995,1589,o),
(-995,1629,qs),
(-995,1802,o),
(-828,1802,qs),
(-657,1802,o)
);
},
{
closed = 1;
nodes = (
(-641,1862,o),
(-828,1862,qs),
(-1054,1862,o),
(-1054,1629,qs),
(-1054,1536,o),
(-915,1536,qs),
(-329,1536,l),
(-329,1908,l),
(-382,1908,l),
(-382,1635,l),
(-418,1667,ls)
);
}
);
width = 0;
}
);
note = uni17BE;
unicode = 6078;
},
{
glyphname = uni17C6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-744,1817,qs),
(-705,1856,o),
(-628,1856,qs),
(-550,1856,o),
(-511,1817,qs),
(-471,1776,o),
(-471,1699,qs),
(-471,1620,o),
(-511,1581,qs),
(-550,1543,o),
(-628,1543,qs),
(-705,1543,o),
(-744,1581,qs),
(-784,1620,o),
(-784,1699,qs),
(-784,1776,o)
);
},
{
closed = 1;
nodes = (
(-470,1856,qs),
(-522,1908,o),
(-628,1908,qs),
(-733,1908,o),
(-785,1856,qs),
(-837,1804,o),
(-837,1699,qs),
(-837,1594,o),
(-785,1542,qs),
(-733,1489,o),
(-628,1489,qs),
(-522,1489,o),
(-470,1542,qs),
(-418,1594,o),
(-418,1699,qs),
(-418,1804,o)
);
}
);
width = 0;
}
);
note = uni17C6;
unicode = 6086;
},
{
glyphname = uni17C9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-806,1925,l),
(-806,1536,l),
(-779,1489,l),
(-753,1536,l),
(-753,1925,l)
);
},
{
closed = 1;
nodes = (
(-498,1925,l),
(-498,1536,l),
(-472,1489,l),
(-445,1536,l),
(-445,1925,l)
);
}
);
width = 0;
}
);
note = uni17C9;
unicode = 6089;
},
{
glyphname = uni17CA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1149,1398,l),
(-920,1518,l),
(-704,1363,l),
(-526,1514,l),
(-421,1438,ls),
(-317,1362,o),
(-292,1362,qs),
(-227,1362,o),
(-204,1460,q),
(-229,1423,o),
(-259,1419,q),
(-265,1419,ls),
(-295,1419,o),
(-346,1457,qs),
(-515,1582,l),
(-692,1428,l),
(-903,1582,l),
(-1214,1418,l),
(-1214,1372,l),
(-1181,1349,l),
(-1080,1349,l)
);
}
);
width = 0;
}
);
note = uni17CA;
unicode = 6090;
},
{
glyphname = uni17CB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-747,1922,l),
(-747,1555,l),
(-721,1489,l),
(-694,1555,l),
(-694,1922,l)
);
}
);
width = 0;
}
);
note = uni17CB;
unicode = 6091;
},
{
glyphname = uni17CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-748,1600,o),
(-577,1600,qs),
(-536,1600,o),
(-457,1562,o),
(-367,1460,o),
(-351,1460,qs),
(-335,1460,o),
(-306,1475,q),
(-306,1491,o),
(-469,1660,o),
(-577,1660,qs),
(-643,1660,o),
(-665,1655,q),
(-587,1702,o),
(-460,1919,o),
(-460,1998,qs),
(-460,2060,o),
(-490,2060,qs),
(-520,2060,o),
(-520,1998,qs),
(-520,1943,o),
(-614,1755,o),
(-735,1686,qs),
(-970,1545,ls),
(-993,1532,o),
(-993,1516,qs),
(-993,1508,o),
(-987,1500,qs),
(-979,1486,o),
(-965,1486,qs),
(-951,1486,o),
(-932,1498,qs),
(-820,1563,l)
);
}
);
width = 0;
}
);
note = uni17CC;
unicode = 6092;
},
{
glyphname = uni17CD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-810,1800,qs),
(-702,1800,o),
(-628,1700,q),
(-594,1700,o),
(-558,1711,q),
(-483,1748,o),
(-422,1797,qs),
(-362,1847,o),
(-317,1910,q),
(-305,1920,o),
(-305,1934,qs),
(-305,1948,o),
(-323,1967,o),
(-342,1967,q),
(-353,1965,l),
(-395,1903,o),
(-534,1776,o),
(-600,1761,q),
(-668,1860,o),
(-810,1860,qs),
(-990,1860,o),
(-990,1675,qs),
(-990,1500,o),
(-810,1500,qs),
(-630,1500,o),
(-630,1619,qs),
(-630,1650,o),
(-660,1650,qs),
(-690,1650,o),
(-690,1619,qs),
(-690,1560,o),
(-810,1560,qs),
(-930,1560,o),
(-930,1676,qs),
(-930,1800,o)
);
}
);
width = 0;
}
);
note = uni17CD;
unicode = 6093;
},
{
glyphname = uni17CE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-694,1490,l),
(-694,1650,l),
(-535,1650,l),
(-535,1703,l),
(-694,1703,l),
(-694,1862,l),
(-747,1862,l),
(-747,1703,l),
(-907,1703,l),
(-907,1650,l),
(-747,1650,l),
(-747,1490,l)
);
}
);
width = 0;
}
);
note = uni17CE;
unicode = 6094;
},
{
glyphname = uni17CF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-610,1850,q),
(-990,1850,o),
(-990,1649,qs),
(-990,1480,o),
(-805,1480,qs),
(-720,1480,o),
(-650,1565,q),
(-580,1480,o),
(-485,1480,qs),
(-310,1480,o),
(-310,1607,qs),
(-310,1734,o),
(-430,1734,qs),
(-500,1734,o),
(-500,1689,q),
(-370,1689,o),
(-370,1607,qs),
(-370,1540,o),
(-490,1540,qs),
(-580,1540,o),
(-650,1660,q),
(-730,1540,o),
(-800,1540,qs),
(-930,1540,o),
(-930,1649,qs),
(-930,1790,o),
(-630,1790,qs),
(-568,1790,l),
(-505,1970,o),
(-370,1970,qs),
(-331,1970,o),
(-331,2000,qs),
(-331,2030,o),
(-370,2030,qs),
(-537,2030,o)
);
}
);
width = 0;
}
);
note = uni17CF;
unicode = 6095;
},
{
glyphname = uni17D0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-700,1662,qs),
(-700,1490,o),
(-450,1490,qs),
(-30,1490,o),
(-30,1757,qs),
(-30,1940,o),
(-190,1940,qs),
(-230,1940,o),
(-230,1910,qs),
(-230,1880,o),
(-190,1880,qs),
(-90,1880,o),
(-90,1757,qs),
(-90,1550,o),
(-450,1550,qs),
(-640,1550,o),
(-640,1662,qs),
(-640,1730,o),
(-552,1730,qs),
(-492,1730,o),
(-492,1678,qs),
(-492,1655,o),
(-505,1620,q),
(-430,1620,o),
(-430,1700,qs),
(-430,1790,o),
(-552,1790,qs),
(-700,1790,o)
);
}
);
width = 0;
}
);
note = uni17D0;
unicode = 6096;
},
{
glyphname = uni17D1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1163,1515,l),
(-280,1515,l),
(-280,1558,l),
(-1163,1558,l)
);
}
);
width = 0;
}
);
note = uni17D1;
unicode = 6097;
},
{
glyphname = uni17D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-578,-559,l),
(-578,-399,l),
(-419,-399,l),
(-419,-346,l),
(-578,-346,l),
(-578,-186,l),
(-631,-186,l),
(-631,-346,l),
(-791,-346,l),
(-791,-399,l),
(-631,-399,l),
(-631,-559,l)
);
}
);
width = 0;
}
);
note = uni17D2;
unicode = 6098;
},
{
glyphname = uni17D2_1780;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1033,-142,o),
(-720,-142,qs),
(-408,-142,o),
(-408,-272,qs),
(-408,-673,l),
(-348,-673,l),
(-348,-272,ls),
(-348,-93,o),
(-720,-93,qs),
(-1093,-93,o),
(-1093,-271,qs),
(-1093,-673,l),
(-1033,-673,l),
(-1033,-272,ls)
);
}
);
width = 0;
}
);
note = uni17D2_1780;
},
{
glyphname = uni17D2_1781;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-325,-442,q),
(-385,-477,l),
(-385,-625,o),
(-697,-625,qs),
(-1011,-625,o),
(-1011,-473,q),
(-668,-430,ls),
(-325,-387,o),
(-325,-259,qs),
(-325,-94,o),
(-697,-94,qs),
(-1070,-94,o),
(-1070,-268,qs),
(-1070,-317,o),
(-1010,-317,q),
(-1010,-142,o),
(-697,-142,qs),
(-387,-142,o),
(-387,-255,qs),
(-387,-351,o),
(-697,-381,qs),
(-1008,-411,l),
(-1070,-420,o),
(-1070,-475,qs),
(-1070,-674,o),
(-697,-674,qs),
(-325,-674,o)
);
}
);
width = 0;
}
);
note = uni17D2_1781;
},
{
glyphname = uni17D2_1782;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1033,-142,o),
(-720,-142,qs),
(-408,-142,o),
(-408,-272,qs),
(-408,-673,l),
(-348,-673,l),
(-348,-272,ls),
(-348,-93,o),
(-720,-93,qs),
(-1093,-93,o),
(-1093,-271,qs),
(-1093,-673,l),
(-1033,-673,l),
(-935,-541,ls),
(-837,-410,o),
(-790,-410,qs),
(-707,-410,o),
(-707,-373,qs),
(-707,-336,o),
(-760,-336,qs),
(-826,-336,o),
(-929,-467,qs),
(-1033,-599,l),
(-1033,-272,ls)
);
}
);
width = 0;
}
);
note = uni17D2_1782;
},
{
glyphname = uni17D2_1784;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-348,-138,qs),
(-348,-93,l),
(-374,-93,o),
(-396,-115,o),
(-399,-138,q),
(-411,-624,o),
(-814,-624,qs),
(-1033,-624,o),
(-1033,-450,qs),
(-1033,-321,o),
(-860,-321,q),
(-860,-272,o),
(-923,-272,qs),
(-1093,-272,o),
(-1093,-450,qs),
(-1093,-673,o),
(-814,-673,qs),
(-360,-673,o)
);
}
);
width = 0;
}
);
note = uni17D2_1784;
},
{
glyphname = uni17D2_1785;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1046,-418,qs),
(-1093,-424,o),
(-1093,-469,qs),
(-1093,-674,o),
(-814,-674,qs),
(-613,-674,o),
(-440,-457,q),
(-350,-457,o),
(-255,-406,o),
(-255,-342,q),
(-333,-406,o),
(-392,-406,q),
(-367,-351,o),
(-367,-324,qs),
(-367,-210,o),
(-488,-210,qs),
(-627,-210,o),
(-627,-334,qs),
(-627,-408,o),
(-486,-438,q),
(-654,-625,o),
(-814,-625,qs),
(-1033,-625,o),
(-1033,-469,q),
(-647,-398,o),
(-647,-138,qs),
(-647,-94,l),
(-681,-94,ls),
(-707,-94,o),
(-707,-138,q),
(-727,-383,o)
);
},
{
closed = 1;
nodes = (
(-574,-334,qs),
(-574,-256,o),
(-488,-256,qs),
(-414,-256,o),
(-414,-324,qs),
(-414,-356,o),
(-453,-398,q),
(-574,-369,o)
);
}
);
width = 0;
}
);
note = uni17D2_1785;
},
{
glyphname = uni17D2_1786;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1093,-139,qs),
(-1093,-371,l),
(-1139,-371,o),
(-1163,-393,qs),
(-1186,-415,o),
(-1186,-460,qs),
(-1186,-513,o),
(-1139,-585,q),
(-1093,-674,l),
(-1033,-674,l),
(-1033,-420,l),
(-907,-420,ls),
(-830,-420,o),
(-684,-674,o),
(-581,-674,qs),
(-348,-674,o),
(-348,-450,qs),
(-348,-94,l),
(-408,-94,l),
(-541,-216,o),
(-541,-295,qs),
(-541,-361,o),
(-442,-361,qs),
(-408,-361,l),
(-408,-450,ls),
(-408,-625,o),
(-581,-625,qs),
(-657,-625,o),
(-814,-371,o),
(-907,-371,qs),
(-1033,-371,l),
(-1033,-94,l),
(-1066,-94,ls),
(-1093,-94,o)
);
},
{
closed = 1;
nodes = (
(-1093,-576,l),
(-1139,-500,o),
(-1139,-460,qs),
(-1139,-420,o),
(-1093,-420,q)
);
},
{
closed = 1;
nodes = (
(-483,-310,o),
(-483,-275,qs),
(-483,-241,o),
(-408,-166,q),
(-408,-310,l),
(-445,-310,ls)
);
}
);
width = 0;
}
);
note = uni17D2_1786;
},
{
glyphname = uni17D2_1787;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-324,-323,qs),
(-324,-316,l),
(-281,-302,ls),
(-234,-284,o),
(-234,-269,qs),
(-234,-254,o),
(-262,-254,q),
(-332,-273,l),
(-362,-93,o),
(-490,-93,qs),
(-630,-93,o),
(-630,-207,qs),
(-630,-341,o),
(-490,-341,qs),
(-478,-341,o),
(-395,-340,o),
(-384,-339,q),
(-385,-624,o),
(-490,-624,qs),
(-559,-624,o),
(-723,-445,q),
(-882,-624,o),
(-956,-624,qs),
(-1062,-624,o),
(-1062,-342,qs),
(-1062,-142,o),
(-956,-142,qs),
(-909,-142,o),
(-909,-117,qs),
(-909,-93,o),
(-956,-93,qs),
(-1122,-93,o),
(-1122,-342,qs),
(-1122,-673,o),
(-956,-673,qs),
(-864,-673,o),
(-723,-517,q),
(-589,-673,o),
(-492,-673,qs),
(-324,-673,o)
);
},
{
closed = 1;
nodes = (
(-387,-291,q),
(-388,-292,o),
(-398,-292,qs),
(-492,-292,ls),
(-577,-292,o),
(-577,-207,qs),
(-577,-142,o),
(-490,-142,qs),
(-397,-142,o)
);
}
);
width = 0;
}
);
note = uni17D2_1787;
},
{
glyphname = uni17D2_1789;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-462,-143,qs),
(-535,-143,o),
(-535,-186,q),
(-392,-186,o),
(-392,-329,qs),
(-392,-555,o),
(-553,-555,qs),
(-701,-555,o),
(-962,-210,o),
(-1093,-210,qs),
(-1233,-210,o),
(-1233,-320,qs),
(-1233,-367,l),
(-1193,-263,o),
(-1093,-263,qs),
(-999,-263,o),
(-736,-609,o),
(-553,-609,qs),
(-332,-609,o),
(-332,-329,qs),
(-332,-143,o)
);
}
);
width = 0;
}
);
note = uni17D2_1789;
},
{
glyphname = uni17D2_178A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-927,-410,o),
(-927,-469,qs),
(-927,-522,o),
(-993,-574,qs),
(-1033,-605,l),
(-1033,-410,l),
(-1000,-410,ls)
);
},
{
closed = 1;
nodes = (
(-720,-142,qs),
(-408,-142,o),
(-408,-272,qs),
(-408,-673,l),
(-348,-673,l),
(-348,-272,ls),
(-348,-93,o),
(-720,-93,qs),
(-1093,-93,o),
(-1093,-272,qs),
(-1093,-673,l),
(-1033,-673,l),
(-953,-606,ls),
(-874,-539,o),
(-874,-468,qs),
(-874,-361,o),
(-1000,-361,qs),
(-1033,-361,l),
(-1033,-272,ls),
(-1033,-142,o)
);
}
);
width = 0;
}
);
note = uni17D2_178A;
},
{
glyphname = uni17D2_178B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-407,-228,q),
(-730,-228,ls),
(-858,-228,o),
(-1092,-292,o),
(-1092,-317,qs),
(-1092,-354,o),
(-1069,-387,qs),
(-900,-635,ls),
(-874,-673,o),
(-865,-673,qs),
(-845,-673,o),
(-810,-630,qs),
(-705,-502,l),
(-388,-673,l),
(-348,-673,o),
(-348,-590,qs),
(-348,-227,ls),
(-348,-103,o),
(-431,-103,qs),
(-494,-103,o),
(-494,-160,qs),
(-494,-217,o)
);
},
{
closed = 1;
nodes = (
(-1032,-338,l),
(-916,-277,o),
(-742,-277,qs),
(-408,-277,l),
(-408,-607,l),
(-710,-446,l),
(-850,-607,l)
);
}
);
width = 0;
}
);
note = uni17D2_178B;
},
{
glyphname = uni17D2_178C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-539,-150,l),
(-408,-234,l),
(-408,-271,ls),
(-408,-340,o),
(-1031,-462,q),
(-1093,-478,o),
(-1093,-523,qs),
(-1093,-651,o),
(-907,-651,qs),
(-601,-651,o),
(-408,-497,q),
(-408,-596,ls),
(-408,-635,o),
(-534,-675,q),
(-395,-675,o),
(-371,-655,qs),
(-348,-635,o),
(-348,-596,qs),
(-348,-413,l),
(-408,-445,l),
(-618,-612,o),
(-907,-612,qs),
(-1033,-612,o),
(-1033,-514,q),
(-348,-364,o),
(-348,-271,qs),
(-348,-214,l),
(-534,-95,l),
(-720,-215,l),
(-907,-95,l),
(-1093,-214,l),
(-1093,-313,ls),
(-1093,-373,o),
(-1063,-373,qs),
(-1033,-373,l),
(-968,-315,o),
(-968,-283,qs),
(-968,-254,o),
(-1033,-254,q),
(-1033,-235,l),
(-899,-150,l),
(-720,-276,l)
);
}
);
width = 0;
}
);
note = uni17D2_178C;
},
{
glyphname = uni17D2_178E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2389,-432,o),
(-2389,-477,qs),
(-2389,-523,o),
(-2492,-604,q),
(-2492,-432,l),
(-2443,-432,ls)
);
},
{
closed = 1;
nodes = (
(-2492,-673,l),
(-2336,-550,o),
(-2336,-476,qs),
(-2336,-384,o),
(-2443,-384,qs),
(-2492,-384,l),
(-2492,-273,l),
(-2184,-148,l),
(-1834,-274,l),
(-1834,-673,l),
(-1771,-673,l),
(-1442,-500,l),
(-1113,-673,l),
(-1050,-673,l),
(-1050,-273,l),
(-742,-148,l),
(-392,-274,l),
(-392,-673,l),
(-329,-673,l),
(-329,-237,l),
(-721,-93,l),
(-1113,-237,l),
(-1113,-612,l),
(-1442,-439,l),
(-1771,-612,l),
(-1771,-237,l),
(-2163,-93,l),
(-2555,-237,l),
(-2555,-673,l)
);
}
);
width = 0;
}
);
note = uni17D2_178E;
},
{
glyphname = uni17D2_178F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-927,-410,o),
(-927,-469,qs),
(-927,-522,o),
(-993,-574,qs),
(-1033,-605,l),
(-1033,-410,l),
(-1000,-410,ls)
);
},
{
closed = 1;
nodes = (
(-720,-142,qs),
(-408,-142,o),
(-408,-272,qs),
(-408,-673,l),
(-348,-673,l),
(-348,-272,ls),
(-348,-93,o),
(-720,-93,qs),
(-1093,-93,o),
(-1093,-272,qs),
(-1093,-673,l),
(-1033,-673,l),
(-953,-606,ls),
(-874,-539,o),
(-874,-468,qs),
(-874,-361,o),
(-1000,-361,qs),
(-1033,-361,l),
(-1033,-272,ls),
(-1033,-142,o)
);
}
);
width = 0;
}
);
note = uni17D2_178F;
},
{
glyphname = uni17D2_1790;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-977,-652,qs),
(-884,-652,o),
(-884,-609,q),
(-1083,-609,o),
(-1083,-409,qs),
(-1083,-142,o),
(-837,-142,qs),
(-615,-142,o),
(-474,-459,qs),
(-390,-652,o),
(-294,-652,qs),
(-232,-652,o),
(-232,-609,q),
(-343,-609,o),
(-432,-404,qs),
(-566,-93,o),
(-837,-93,qs),
(-1143,-93,o),
(-1143,-409,qs),
(-1143,-652,o)
);
}
);
width = 0;
}
);
note = uni17D2_1790;
},
{
glyphname = uni17D2_1791;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1046,-468,qs),
(-1093,-482,o),
(-1093,-504,qs),
(-1093,-673,o),
(-798,-673,qs),
(-654,-673,o),
(-486,-554,o),
(-408,-415,q),
(-408,-554,ls),
(-408,-628,o),
(-530,-673,q),
(-348,-673,o),
(-348,-554,qs),
(-348,-227,ls),
(-348,-182,o),
(-368,-182,qs),
(-388,-182,o),
(-409,-258,qs),
(-451,-421,o),
(-528,-502,qs),
(-646,-628,o),
(-798,-628,qs),
(-1033,-628,o),
(-1033,-507,q),
(-534,-376,o),
(-534,-192,qs),
(-534,-93,o),
(-637,-93,qs),
(-700,-93,o),
(-700,-142,q),
(-594,-142,o),
(-594,-197,qs),
(-594,-351,o)
);
}
);
width = 0;
}
);
note = uni17D2_1791;
},
{
glyphname = uni17D2_1792;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-611,-93,qs),
(-674,-93,o),
(-674,-138,q),
(-587,-138,o),
(-587,-172,q),
(-664,-303,o),
(-893,-442,o),
(-1046,-459,qs),
(-1093,-462,o),
(-1093,-504,qs),
(-1093,-673,o),
(-851,-673,qs),
(-684,-673,o),
(-684,-454,q),
(-614,-519,o),
(-516,-519,qs),
(-348,-519,o),
(-348,-259,qs),
(-348,-93,o),
(-511,-93,qs),
(-534,-93,o),
(-534,-117,qs),
(-534,-142,o),
(-511,-142,qs),
(-408,-142,o),
(-408,-259,qs),
(-408,-471,o),
(-517,-471,qs),
(-600,-471,o),
(-704,-385,q),
(-669,-362,o),
(-534,-206,o),
(-534,-149,qs),
(-534,-93,o)
);
},
{
closed = 1;
nodes = (
(-809,-451,o),
(-737,-406,q),
(-737,-461,ls),
(-737,-628,o),
(-851,-628,qs),
(-1033,-628,o),
(-1033,-504,q),
(-950,-499,o)
);
}
);
width = 0;
}
);
note = uni17D2_1792;
},
{
glyphname = uni17D2_1793;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-438,-519,q),
(-438,-673,o),
(-342,-673,qs),
(-246,-673,o),
(-246,-571,qs),
(-246,-470,o),
(-379,-470,q),
(-379,-242,l),
(-209,-242,l),
(-209,-192,l),
(-379,-192,l),
(-379,-93,l),
(-438,-93,l),
(-438,-192,l),
(-814,-192,ls),
(-1093,-192,o),
(-1093,-383,qs),
(-1093,-568,o),
(-818,-568,qs),
(-792,-568,o)
);
},
{
closed = 1;
nodes = (
(-814,-242,qs),
(-438,-242,l),
(-438,-470,l),
(-782,-519,o),
(-814,-519,qs),
(-1033,-519,o),
(-1033,-383,qs),
(-1033,-242,o)
);
},
{
closed = 1;
nodes = (
(-300,-570,qs),
(-300,-622,o),
(-339,-622,qs),
(-379,-622,o),
(-379,-519,q),
(-300,-519,o)
);
}
);
width = 0;
}
);
note = uni17D2_1793;
},
{
glyphname = uni17D2_1795;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-484,-335,o),
(-484,-286,qs),
(-484,-223,o),
(-433,-178,q),
(-408,-160,l),
(-408,-335,l),
(-431,-335,ls)
);
},
{
closed = 1;
nodes = (
(-408,-92,l),
(-472,-149,ls),
(-537,-206,o),
(-537,-287,qs),
(-537,-384,o),
(-431,-384,qs),
(-408,-384,l),
(-408,-606,l),
(-720,-397,l),
(-1033,-606,l),
(-1033,-93,l),
(-1093,-93,l),
(-1093,-673,l),
(-1033,-673,l),
(-720,-464,l),
(-408,-673,l),
(-348,-673,l),
(-348,-92,l)
);
}
);
width = 0;
}
);
note = uni17D2_1795;
},
{
glyphname = uni17D2_1796;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1033,-604,q),
(-1033,-410,l),
(-995,-410,ls),
(-940,-410,o),
(-940,-460,qs),
(-940,-511,o)
);
},
{
closed = 1;
nodes = (
(-907,-93,l),
(-1093,-227,l),
(-1093,-673,l),
(-1033,-673,l),
(-885,-534,o),
(-885,-460,qs),
(-885,-361,o),
(-995,-361,qs),
(-1033,-361,l),
(-1033,-249,l),
(-899,-149,l),
(-720,-257,l),
(-539,-149,l),
(-408,-248,l),
(-408,-673,l),
(-348,-673,l),
(-348,-227,l),
(-534,-93,l),
(-720,-204,l)
);
}
);
width = 0;
}
);
note = uni17D2_1796;
},
{
glyphname = uni17D2_1797;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1170,-478,qs),
(-1170,-410,o),
(-1093,-410,q),
(-1093,-595,l),
(-1170,-542,o)
);
},
{
closed = 1;
nodes = (
(-1189,-389,qs),
(-1223,-419,o),
(-1223,-477,qs),
(-1223,-539,o),
(-1163,-606,q),
(-1093,-673,l),
(-1034,-673,l),
(-1034,-272,ls),
(-1034,-142,o),
(-721,-142,qs),
(-409,-142,o),
(-409,-272,qs),
(-409,-673,l),
(-349,-673,l),
(-349,-272,ls),
(-349,-93,o),
(-721,-93,qs),
(-1093,-93,o),
(-1093,-272,qs),
(-1093,-361,l),
(-1153,-361,o)
);
}
);
width = 0;
}
);
note = uni17D2_1797;
},
{
glyphname = uni17D2_1798;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-428,-455,q),
(-428,-673,o),
(-301,-673,qs),
(-172,-673,o),
(-172,-539,qs),
(-172,-405,o),
(-368,-405,q),
(-368,-93,l),
(-428,-93,l),
(-428,-405,l),
(-840,-482,o),
(-870,-482,qs),
(-1033,-482,o),
(-1033,-361,qs),
(-1033,-272,l),
(-1093,-272,o),
(-1093,-361,qs),
(-1093,-534,o),
(-906,-534,qs),
(-854,-534,o)
);
},
{
closed = 1;
nodes = (
(-301,-624,qs),
(-368,-624,o),
(-368,-455,q),
(-225,-455,o),
(-225,-539,qs),
(-225,-624,o)
);
}
);
width = 0;
}
);
note = uni17D2_1798;
},
{
glyphname = uni17D2_179B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1024,-652,qs),
(-884,-652,o),
(-884,-539,qs),
(-884,-465,o),
(-937,-465,q),
(-937,-599,o),
(-1024,-599,qs),
(-1120,-599,o),
(-1120,-465,qs),
(-1120,-146,o),
(-931,-146,qs),
(-760,-146,o),
(-627,-652,o),
(-485,-652,qs),
(-311,-652,o),
(-214,-93,q),
(-273,-93,l),
(-354,-599,o),
(-485,-599,qs),
(-598,-599,o),
(-730,-93,o),
(-931,-93,qs),
(-1180,-93,o),
(-1180,-465,qs),
(-1180,-652,o)
);
}
);
width = 0;
}
);
note = uni17D2_179B;
},
{
glyphname = uni17D2_179C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-348,-182,qs),
(-348,-93,l),
(-408,-93,l),
(-563,-247,o),
(-925,-400,o),
(-1093,-401,q),
(-1093,-442,ls),
(-1093,-673,o),
(-814,-673,qs),
(-348,-673,o)
);
},
{
closed = 1;
nodes = (
(-814,-630,qs),
(-1033,-630,o),
(-1033,-442,q),
(-846,-421,o),
(-641,-346,o),
(-410,-179,q),
(-421,-630,o)
);
}
);
width = 0;
}
);
note = uni17D2_179C;
},
{
glyphname = uni17D2_17A0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-973,-266,o),
(-933,-266,qs),
(-894,-266,o),
(-876,-212,q),
(-904,-212,ls),
(-973,-212,o),
(-1070,-93,q),
(-1218,-299,l),
(-1218,-346,l),
(-1117,-414,l),
(-1117,-495,ls),
(-1117,-673,o),
(-904,-673,qs),
(-692,-673,o),
(-692,-495,qs),
(-692,-272,ls),
(-692,-142,o),
(-539,-142,qs),
(-386,-142,o),
(-386,-272,qs),
(-386,-673,l),
(-326,-673,l),
(-326,-272,ls),
(-326,-93,o),
(-538,-93,qs),
(-751,-93,o),
(-751,-272,qs),
(-751,-495,ls),
(-751,-624,o),
(-904,-624,qs),
(-1057,-624,o),
(-1057,-495,qs),
(-1057,-394,l),
(-1164,-315,l),
(-1068,-187,l)
);
}
);
width = 0;
}
);
note = uni17D2_17A0;
},
{
glyphname = uni17D2_17A2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1093,-667,q),
(-1033,-667,l),
(-1033,-439,l),
(-408,-439,l),
(-408,-531,l),
(-431,-531,ls),
(-471,-531,o),
(-471,-573,qs),
(-471,-626,o),
(-408,-667,q),
(-348,-667,l),
(-348,-315,l),
(-469,-248,l),
(-422,-170,l),
(-369,-222,o),
(-330,-222,qs),
(-301,-222,o),
(-284,-179,q),
(-330,-179,o),
(-431,-87,q),
(-501,-211,l),
(-501,-284,l),
(-408,-335,l),
(-408,-397,l),
(-1033,-397,l),
(-1033,-310,l),
(-1124,-242,l),
(-1057,-168,l),
(-994,-242,o),
(-955,-242,qs),
(-926,-242,o),
(-909,-179,q),
(-920,-185,o),
(-932,-185,qs),
(-982,-185,o),
(-1056,-87,q),
(-1166,-211,l),
(-1166,-274,l),
(-1093,-325,l),
(-1093,-531,l),
(-1116,-531,ls),
(-1156,-531,o),
(-1156,-573,qs),
(-1156,-626,o)
);
}
);
width = 0;
}
);
note = uni17D2_17A2;
},
{
glyphname = uni17D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-865,1732,qs),
(-816,1766,o),
(-716,1766,qs),
(-617,1766,o),
(-567,1732,qs),
(-519,1697,o),
(-519,1627,qs),
(-519,1558,o),
(-567,1522,qs),
(-617,1488,o),
(-716,1488,qs),
(-816,1488,o),
(-865,1522,qs),
(-915,1558,o),
(-915,1627,qs),
(-915,1697,o)
);
},
{
closed = 1;
nodes = (
(-547,1769,qs),
(-605,1815,o),
(-721,1815,qs),
(-838,1815,o),
(-895,1769,qs),
(-954,1722,o),
(-954,1629,qs),
(-954,1536,o),
(-895,1489,qs),
(-838,1443,o),
(-721,1443,qs),
(-605,1443,o),
(-547,1489,qs),
(-489,1536,o),
(-489,1629,qs),
(-489,1722,o)
);
}
);
width = 0;
}
);
note = uni17D3;
unicode = 6099;
},
{
glyphname = uni17DD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1077,1553,o),
(-990,1658,o),
(-830,1713,o),
(-724,1713,qs),
(-618,1713,o),
(-458,1658,o),
(-371,1553,o),
(-371,1480,q),
(-332,1480,l),
(-332,1564,o),
(-429,1686,o),
(-606,1750,o),
(-724,1750,qs),
(-842,1750,o),
(-1019,1686,o),
(-1116,1564,o),
(-1116,1480,q),
(-1077,1480,l)
);
}
);
width = 0;
}
);
note = uni17DD;
unicode = 6109;
},
{
glyphname = uni17B7.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-915,1706,qs),
(-329,1706,l),
(-329,1759,l),
(-418,1837,ls),
(-641,2032,o),
(-828,2032,qs),
(-1054,2032,o),
(-1054,1799,qs),
(-1054,1706,o)
);
},
{
closed = 1;
nodes = (
(-461,1803,qs),
(-410,1759,l),
(-915,1759,ls),
(-995,1759,o),
(-995,1799,qs),
(-995,1972,o),
(-828,1972,qs),
(-657,1972,o)
);
}
);
width = 0;
}
);
note = uni17B7.a;
},
{
glyphname = uni17B8.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-461,1803,qs),
(-410,1759,l),
(-915,1759,ls),
(-995,1759,o),
(-995,1799,qs),
(-995,1972,o),
(-828,1972,qs),
(-657,1972,o)
);
},
{
closed = 1;
nodes = (
(-641,2032,o),
(-828,2032,qs),
(-1054,2032,o),
(-1054,1799,qs),
(-1054,1706,o),
(-915,1706,qs),
(-329,1706,l),
(-329,2078,l),
(-382,2078,l),
(-382,1805,l),
(-418,1837,ls)
);
}
);
width = 0;
}
);
note = uni17B8.a;
},
{
glyphname = uni17B9.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-828,2032,qs),
(-1054,2032,o),
(-1054,1799,qs),
(-1054,1706,o),
(-915,1706,qs),
(-329,1706,l),
(-329,1759,l),
(-400,1821,l),
(-382,1830,o),
(-369,1843,qs),
(-329,1883,o),
(-329,1963,qs),
(-329,2043,o),
(-369,2082,qs),
(-408,2122,o),
(-489,2122,qs),
(-569,2122,o),
(-608,2082,qs),
(-641,2050,o),
(-647,1990,q),
(-741,2032,o)
);
},
{
closed = 1;
nodes = (
(-568,2043,qs),
(-541,2069,o),
(-489,2069,qs),
(-436,2069,o),
(-409,2043,qs),
(-382,2016,o),
(-382,1963,qs),
(-382,1909,o),
(-409,1883,qs),
(-424,1868,o),
(-447,1861,q),
(-523,1924,o),
(-595,1964,q),
(-595,2016,o)
);
},
{
closed = 1;
nodes = (
(-461,1803,qs),
(-410,1759,l),
(-915,1759,ls),
(-995,1759,o),
(-995,1799,qs),
(-995,1972,o),
(-828,1972,qs),
(-657,1972,o)
);
}
);
width = 0;
}
);
note = uni17B9.a;
},
{
glyphname = uni17BA.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-592,2114,l),
(-592,1963,l),
(-716,2032,o),
(-828,2032,qs),
(-1054,2032,o),
(-1054,1799,qs),
(-1054,1706,o),
(-915,1706,qs),
(-329,1706,l),
(-329,2078,l),
(-382,2078,l),
(-382,1805,l),
(-418,1837,ls),
(-480,1891,o),
(-539,1930,q),
(-539,2114,l)
);
},
{
closed = 1;
nodes = (
(-461,1803,qs),
(-410,1759,l),
(-915,1759,ls),
(-995,1759,o),
(-995,1799,qs),
(-995,1972,o),
(-828,1972,qs),
(-657,1972,o)
);
}
);
width = 0;
}
);
note = uni17BA.a;
},
{
glyphname = uni17C6.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-744,2027,qs),
(-705,2066,o),
(-628,2066,qs),
(-550,2066,o),
(-511,2027,qs),
(-471,1986,o),
(-471,1909,qs),
(-471,1830,o),
(-511,1791,qs),
(-550,1753,o),
(-628,1753,qs),
(-705,1753,o),
(-744,1791,qs),
(-784,1830,o),
(-784,1909,qs),
(-784,1986,o)
);
},
{
closed = 1;
nodes = (
(-470,2066,qs),
(-522,2118,o),
(-628,2118,qs),
(-733,2118,o),
(-785,2066,qs),
(-837,2014,o),
(-837,1909,qs),
(-837,1804,o),
(-785,1752,qs),
(-733,1699,o),
(-628,1699,qs),
(-522,1699,o),
(-470,1752,qs),
(-418,1804,o),
(-418,1909,qs),
(-418,2014,o)
);
}
);
width = 0;
}
);
note = uni17C6.a;
},
{
glyphname = uni17CE.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-694,1710,l),
(-694,1870,l),
(-535,1870,l),
(-535,1923,l),
(-694,1923,l),
(-694,2082,l),
(-747,2082,l),
(-747,1923,l),
(-907,1923,l),
(-907,1870,l),
(-747,1870,l),
(-747,1710,l)
);
}
);
width = 0;
}
);
note = uni17CE.a;
},
{
glyphname = uni17D0.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-700,1872,qs),
(-700,1700,o),
(-450,1700,qs),
(-30,1700,o),
(-30,1967,qs),
(-30,2150,o),
(-190,2150,qs),
(-230,2150,o),
(-230,2120,qs),
(-230,2090,o),
(-190,2090,qs),
(-90,2090,o),
(-90,1967,qs),
(-90,1760,o),
(-450,1760,qs),
(-640,1760,o),
(-640,1872,qs),
(-640,1940,o),
(-552,1940,qs),
(-492,1940,o),
(-492,1888,qs),
(-492,1865,o),
(-505,1830,q),
(-430,1830,o),
(-430,1910,qs),
(-430,2000,o),
(-552,2000,qs),
(-700,2000,o)
);
}
);
width = 0;
}
);
note = uni17D0.a;
},
{
glyphname = uni17BB.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-328,-710,o),
(-413,-710,qs),
(-488,-710,o),
(-488,-763,q),
(-391,-763,o),
(-391,-809,qs),
(-391,-1118,l),
(-328,-1118,l),
(-328,-803,ls)
);
}
);
width = 0;
}
);
note = uni17BB.b;
},
{
glyphname = uni17BC.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-744,-754,q),
(-667,-754,o),
(-667,-776,qs),
(-667,-823,o),
(-762,-893,o),
(-891,-945,o),
(-891,-969,qs),
(-891,-1054,o),
(-810,-1123,o),
(-749,-1123,q),
(-630,-1096,o),
(-528,-1025,qs),
(-425,-952,o),
(-367,-834,qs),
(-334,-766,o),
(-308,-746,o),
(-308,-729,qs),
(-308,-711,o),
(-321,-711,qs),
(-346,-711,o),
(-397,-763,o),
(-485,-939,o),
(-658,-1063,o),
(-749,-1080,q),
(-828,-1080,o),
(-828,-969,q),
(-762,-942,o),
(-679,-882,o),
(-660,-863,q),
(-604,-799,o),
(-604,-763,qs),
(-604,-711,o),
(-669,-711,qs),
(-744,-711,o)
);
}
);
width = 0;
}
);
note = uni17BC.b;
},
{
glyphname = uni17BD.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-744,-754,q),
(-667,-754,o),
(-667,-784,qs),
(-667,-829,o),
(-725,-864,qs),
(-784,-896,o),
(-891,-935,q),
(-891,-978,ls),
(-891,-1018,o),
(-823,-1122,o),
(-746,-1122,q),
(-643,-1047,l),
(-591,-1122,l),
(-508,-1112,o),
(-365,-943,o),
(-327,-786,qs),
(-318,-749,o),
(-318,-729,qs),
(-319,-711,o),
(-330,-711,qs),
(-341,-711,o),
(-369,-748,o),
(-422,-909,o),
(-500,-1032,o),
(-569,-1071,q),
(-629,-989,l),
(-753,-1071,l),
(-828,-1071,o),
(-828,-961,q),
(-679,-898,o),
(-605,-824,o),
(-605,-784,qs),
(-605,-711,o),
(-689,-711,qs),
(-744,-711,o)
);
}
);
width = 0;
}
);
note = uni17BD.b;
},
{
glyphname = uni17BB.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-732,0);
ref = uni17BB;
}
);
width = 0;
}
);
note = uni17BB.n;
},
{
glyphname = uni17BC.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-749,0);
ref = uni17BC;
}
);
width = 0;
}
);
note = uni17BC.n;
},
{
glyphname = uni17BD.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-779,0);
ref = uni17BD;
}
);
width = 0;
}
);
note = uni17BD.n;
},
{
glyphname = uni17BB.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-772,0);
ref = uni17BB.b;
}
);
width = 0;
}
);
note = uni17BB.n2;
},
{
glyphname = uni17BC.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-769,0);
ref = uni17BC.b;
}
);
width = 0;
}
);
note = uni17BC.n2;
},
{
glyphname = uni17BD.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-779,0);
ref = uni17BD.b;
}
);
width = 0;
}
);
note = uni17BD.n2;
},
{
glyphname = uni17B7.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-615,1536,qs),
(-29,1536,l),
(-29,1589,l),
(-118,1667,ls),
(-341,1862,o),
(-528,1862,qs),
(-754,1862,o),
(-754,1629,qs),
(-754,1536,o)
);
},
{
closed = 1;
nodes = (
(-161,1633,qs),
(-110,1589,l),
(-615,1589,ls),
(-695,1589,o),
(-695,1629,qs),
(-695,1802,o),
(-528,1802,qs),
(-357,1802,o)
);
}
);
width = 0;
}
);
note = uni17B7.r;
},
{
glyphname = uni17B8.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-161,1633,qs),
(-110,1589,l),
(-615,1589,ls),
(-695,1589,o),
(-695,1629,qs),
(-695,1802,o),
(-528,1802,qs),
(-357,1802,o)
);
},
{
closed = 1;
nodes = (
(-341,1862,o),
(-528,1862,qs),
(-754,1862,o),
(-754,1629,qs),
(-754,1536,o),
(-615,1536,qs),
(-29,1536,l),
(-29,1908,l),
(-82,1908,l),
(-82,1635,l),
(-118,1667,ls)
);
}
);
width = 0;
}
);
note = uni17B8.r;
},
{
glyphname = uni17B9.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-528,1862,qs),
(-754,1862,o),
(-754,1629,qs),
(-754,1536,o),
(-615,1536,qs),
(-29,1536,l),
(-29,1589,l),
(-100,1651,l),
(-82,1660,o),
(-69,1673,qs),
(-29,1713,o),
(-29,1793,qs),
(-29,1873,o),
(-69,1912,qs),
(-108,1952,o),
(-189,1952,qs),
(-269,1952,o),
(-308,1912,qs),
(-341,1880,o),
(-347,1820,q),
(-441,1862,o)
);
},
{
closed = 1;
nodes = (
(-268,1873,qs),
(-241,1899,o),
(-189,1899,qs),
(-136,1899,o),
(-109,1873,qs),
(-82,1846,o),
(-82,1793,qs),
(-82,1739,o),
(-109,1713,qs),
(-124,1698,o),
(-147,1691,q),
(-223,1754,o),
(-295,1794,q),
(-295,1846,o)
);
},
{
closed = 1;
nodes = (
(-161,1633,qs),
(-110,1589,l),
(-615,1589,ls),
(-695,1589,o),
(-695,1629,qs),
(-695,1802,o),
(-528,1802,qs),
(-357,1802,o)
);
}
);
width = 0;
}
);
note = uni17B9.r;
},
{
glyphname = uni17BA.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-292,1944,l),
(-292,1793,l),
(-416,1862,o),
(-528,1862,qs),
(-754,1862,o),
(-754,1629,qs),
(-754,1536,o),
(-615,1536,qs),
(-29,1536,l),
(-29,1908,l),
(-82,1908,l),
(-82,1635,l),
(-118,1667,ls),
(-180,1721,o),
(-239,1760,q),
(-239,1944,l)
);
},
{
closed = 1;
nodes = (
(-161,1633,qs),
(-110,1589,l),
(-615,1589,ls),
(-695,1589,o),
(-695,1629,qs),
(-695,1802,o),
(-528,1802,qs),
(-357,1802,o)
);
}
);
width = 0;
}
);
note = uni17BA.r;
},
{
glyphname = uni17C6.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-444,1817,qs),
(-405,1856,o),
(-328,1856,qs),
(-250,1856,o),
(-211,1817,qs),
(-171,1776,o),
(-171,1699,qs),
(-171,1620,o),
(-211,1581,qs),
(-250,1543,o),
(-328,1543,qs),
(-405,1543,o),
(-444,1581,qs),
(-484,1620,o),
(-484,1699,qs),
(-484,1776,o)
);
},
{
closed = 1;
nodes = (
(-170,1856,qs),
(-222,1908,o),
(-328,1908,qs),
(-433,1908,o),
(-485,1856,qs),
(-537,1804,o),
(-537,1699,qs),
(-537,1594,o),
(-485,1542,qs),
(-433,1489,o),
(-328,1489,qs),
(-222,1489,o),
(-170,1542,qs),
(-118,1594,o),
(-118,1699,qs),
(-118,1804,o)
);
}
);
width = 0;
}
);
note = uni17C6.r;
},
{
glyphname = uni17C9.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-506,1925,l),
(-506,1536,l),
(-479,1489,l),
(-453,1536,l),
(-453,1925,l)
);
},
{
closed = 1;
nodes = (
(-198,1925,l),
(-198,1536,l),
(-172,1489,l),
(-145,1536,l),
(-145,1925,l)
);
}
);
width = 0;
}
);
note = uni17C9.r;
},
{
glyphname = uni17CD.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-510,1800,qs),
(-402,1800,o),
(-328,1700,q),
(-294,1700,o),
(-258,1711,q),
(-183,1748,o),
(-122,1797,qs),
(-62,1847,o),
(-17,1910,q),
(-5,1920,o),
(-5,1934,qs),
(-5,1948,o),
(-23,1967,o),
(-42,1967,q),
(-53,1965,l),
(-95,1903,o),
(-234,1776,o),
(-300,1761,q),
(-368,1860,o),
(-510,1860,qs),
(-690,1860,o),
(-690,1675,qs),
(-690,1500,o),
(-510,1500,qs),
(-330,1500,o),
(-330,1619,qs),
(-330,1650,o),
(-360,1650,qs),
(-390,1650,o),
(-390,1619,qs),
(-390,1560,o),
(-510,1560,qs),
(-630,1560,o),
(-630,1676,qs),
(-630,1800,o)
);
}
);
width = 0;
}
);
note = uni17CD.r;
},
{
glyphname = uni17D2_1783_17B6;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-661,-254,qs),
(-661,-207,o),
(-574,-142,q),
(-574,-311,l),
(-598,-311,ls),
(-661,-311,o)
);
},
{
closed = 1;
nodes = (
(203,1017,l),
(541,1239,l),
(1052,1063,l),
(1052,0,l),
(1115,0,l),
(1115,1103,l),
(544,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-495,ls),
(330,-624,o),
(140,-624,qs),
(-86,-624,o),
(-86,-495,qs),
(-86,-394,l),
(-223,-305,l),
(-126,-176,l),
(-32,-266,o),
(-2,-266,qs),
(27,-266,o),
(55,-212,q),
(27,-212,ls),
(-32,-212,o),
(-112,-123,qs),
(-139,-93,l),
(-286,-299,l),
(-286,-326,l),
(-145,-414,l),
(-145,-495,ls),
(-145,-624,o),
(-325,-624,qs),
(-515,-624,o),
(-515,-496,qs),
(-515,-93,l),
(-574,-93,l),
(-714,-183,o),
(-714,-254,qs),
(-714,-360,o),
(-598,-360,qs),
(-574,-360,l),
(-574,-495,ls),
(-574,-673,o),
(-325,-673,qs),
(-173,-673,o),
(-117,-584,q),
(-71,-673,o),
(140,-673,qs),
(393,-673,o),
(393,-495,qs),
(393,909,l)
);
}
);
width = 1444;
}
);
note = uni17D2_1783_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1783_17C5;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-661,-254,qs),
(-661,-207,o),
(-574,-142,q),
(-574,-311,l),
(-598,-311,ls),
(-661,-311,o)
);
},
{
closed = 1;
nodes = (
(1145,1164,qs),
(1145,1536,ls),
(1145,1722,o),
(1008,1722,qs),
(940,1722,o),
(940,1679,q),
(1083,1679,o),
(1083,1536,qs),
(1083,1114,l),
(544,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-495,ls),
(330,-624,o),
(140,-624,qs),
(-86,-624,o),
(-86,-495,qs),
(-86,-394,l),
(-223,-305,l),
(-126,-176,l),
(-32,-266,o),
(-2,-266,qs),
(27,-266,o),
(55,-212,q),
(27,-212,ls),
(-32,-212,o),
(-112,-123,qs),
(-139,-93,l),
(-286,-299,l),
(-286,-326,l),
(-145,-414,l),
(-145,-495,ls),
(-145,-624,o),
(-325,-624,qs),
(-515,-624,o),
(-515,-496,qs),
(-515,-93,l),
(-574,-93,l),
(-714,-183,o),
(-714,-254,qs),
(-714,-360,o),
(-598,-360,qs),
(-574,-360,l),
(-574,-495,ls),
(-574,-673,o),
(-325,-673,qs),
(-173,-673,o),
(-117,-584,q),
(-71,-673,o),
(140,-673,qs),
(393,-673,o),
(393,-495,qs),
(393,909,l),
(203,1017,l),
(541,1239,l),
(1052,1063,l),
(1052,0,l),
(1115,0,l),
(1115,1029,l),
(1145,1102,o)
);
}
);
width = 1444;
}
);
note = uni17D2_1783_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1788_17B6;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-899,-500,ls),
(-858,-500,o),
(-858,-521,qs),
(-858,-553,o),
(-933,-603,q),
(-933,-500,l)
);
},
{
closed = 1;
nodes = (
(203,1017,l),
(541,1239,l),
(1052,1063,l),
(1052,0,l),
(1115,0,l),
(1115,1103,l),
(544,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-495,ls),
(330,-624,o),
(122,-624,qs),
(-86,-624,o),
(-86,-501,qs),
(-86,-394,l),
(-223,-305,l),
(-126,-176,l),
(-32,-266,o),
(-2,-266,qs),
(27,-266,o),
(55,-212,q),
(27,-212,ls),
(-32,-212,o),
(-112,-123,qs),
(-139,-93,l),
(-286,-299,l),
(-286,-326,l),
(-145,-414,l),
(-145,-494,ls),
(-145,-624,o),
(-325,-624,qs),
(-504,-624,o),
(-504,-496,qs),
(-504,-271,ls),
(-504,-93,o),
(-744,-93,qs),
(-993,-93,o),
(-993,-270,qs),
(-993,-673,l),
(-933,-673,l),
(-800,-578,o),
(-800,-521,qs),
(-800,-450,o),
(-899,-450,qs),
(-933,-450,l),
(-933,-271,ls),
(-933,-142,o),
(-744,-142,qs),
(-564,-142,o),
(-564,-271,qs),
(-564,-495,ls),
(-564,-673,o),
(-325,-673,qs),
(-184,-673,o),
(-114,-619,q),
(-45,-673,o),
(122,-673,qs),
(393,-673,o),
(393,-495,qs),
(393,909,l)
);
}
);
width = 1444;
}
);
note = uni17D2_1788_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1788_17C5;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-899,-500,ls),
(-858,-500,o),
(-858,-521,qs),
(-858,-553,o),
(-933,-603,q),
(-933,-500,l)
);
},
{
closed = 1;
nodes = (
(1145,1164,qs),
(1145,1536,ls),
(1145,1722,o),
(1008,1722,qs),
(940,1722,o),
(940,1679,q),
(1083,1679,o),
(1083,1536,qs),
(1083,1114,l),
(544,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-495,ls),
(330,-624,o),
(122,-624,qs),
(-86,-624,o),
(-86,-501,qs),
(-86,-394,l),
(-223,-305,l),
(-126,-176,l),
(-32,-266,o),
(-2,-266,qs),
(27,-266,o),
(55,-212,q),
(27,-212,ls),
(-32,-212,o),
(-112,-123,qs),
(-139,-93,l),
(-286,-299,l),
(-286,-326,l),
(-145,-414,l),
(-145,-494,ls),
(-145,-624,o),
(-325,-624,qs),
(-504,-624,o),
(-504,-496,qs),
(-504,-271,ls),
(-504,-93,o),
(-744,-93,qs),
(-993,-93,o),
(-993,-270,qs),
(-993,-673,l),
(-933,-673,l),
(-800,-578,o),
(-800,-521,qs),
(-800,-450,o),
(-899,-450,qs),
(-933,-450,l),
(-933,-271,ls),
(-933,-142,o),
(-744,-142,qs),
(-564,-142,o),
(-564,-271,qs),
(-564,-495,ls),
(-564,-673,o),
(-325,-673,qs),
(-184,-673,o),
(-114,-619,q),
(-45,-673,o),
(122,-673,qs),
(393,-673,o),
(393,-495,qs),
(393,909,l),
(203,1017,l),
(541,1239,l),
(1052,1063,l),
(1052,0,l),
(1115,0,l),
(1115,1029,l),
(1145,1102,o)
);
}
);
width = 1444;
}
);
note = uni17D2_1788_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_178D_17B6;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1033,-604,q),
(-1033,-410,l),
(-995,-410,ls),
(-940,-410,o),
(-940,-460,qs),
(-940,-511,o)
);
},
{
closed = 1;
nodes = (
(203,1017,l),
(541,1239,l),
(1052,1063,l),
(1052,0,l),
(1115,0,l),
(1115,1103,l),
(544,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-495,ls),
(330,-624,o),
(177,-624,qs),
(88,-624,o),
(-98,-370,o),
(-206,-370,qs),
(-348,-370,l),
(-348,-227,l),
(-534,-93,l),
(-720,-204,l),
(-907,-93,l),
(-1093,-227,l),
(-1093,-673,l),
(-1033,-673,l),
(-885,-534,o),
(-885,-460,qs),
(-885,-361,o),
(-995,-361,qs),
(-1033,-361,l),
(-1033,-249,l),
(-899,-149,l),
(-720,-257,l),
(-539,-149,l),
(-408,-248,l),
(-408,-370,l),
(-475,-370,o),
(-475,-459,qs),
(-475,-513,o),
(-408,-673,q),
(-348,-673,l),
(-348,-419,l),
(-206,-419,ls),
(-126,-419,o),
(57,-673,o),
(177,-673,qs),
(393,-673,o),
(393,-494,qs),
(393,909,l)
);
}
);
width = 1444;
}
);
note = uni17D2_178D_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_178D_17C5;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1033,-604,q),
(-1033,-410,l),
(-995,-410,ls),
(-940,-410,o),
(-940,-460,qs),
(-940,-511,o)
);
},
{
closed = 1;
nodes = (
(1145,1164,qs),
(1145,1536,ls),
(1145,1722,o),
(1008,1722,qs),
(940,1722,o),
(940,1679,q),
(1083,1679,o),
(1083,1536,qs),
(1083,1114,l),
(544,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-495,ls),
(330,-624,o),
(177,-624,qs),
(88,-624,o),
(-98,-370,o),
(-206,-370,qs),
(-348,-370,l),
(-348,-227,l),
(-534,-93,l),
(-720,-204,l),
(-907,-93,l),
(-1093,-227,l),
(-1093,-673,l),
(-1033,-673,l),
(-885,-534,o),
(-885,-460,qs),
(-885,-361,o),
(-995,-361,qs),
(-1033,-361,l),
(-1033,-249,l),
(-899,-149,l),
(-720,-257,l),
(-539,-149,l),
(-408,-248,l),
(-408,-370,l),
(-475,-370,o),
(-475,-459,qs),
(-475,-513,o),
(-408,-673,q),
(-348,-673,l),
(-348,-419,l),
(-206,-419,ls),
(-126,-419,o),
(57,-673,o),
(177,-673,qs),
(393,-673,o),
(393,-494,qs),
(393,909,l),
(203,1017,l),
(541,1239,l),
(1052,1063,l),
(1052,0,l),
(1115,0,l),
(1115,1029,l),
(1145,1102,o)
);
}
);
width = 1444;
}
);
note = uni17D2_178D_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1794_17B6;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-328,-160,l),
(-293,-191,l),
(-242,-243,o),
(-242,-296,qs),
(-242,-335,o),
(-295,-335,qs),
(-328,-335,l)
);
},
{
closed = 1;
nodes = (
(203,1017,l),
(541,1239,l),
(1052,1063,l),
(1052,0,l),
(1115,0,l),
(1115,1103,l),
(544,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-597,l),
(1,-395,l),
(-328,-597,l),
(-328,-384,l),
(-295,-384,ls),
(-189,-384,o),
(-189,-297,qs),
(-189,-226,o),
(-258,-159,qs),
(-328,-92,l),
(-388,-92,l),
(-388,-673,l),
(-328,-673,l),
(1,-471,l),
(330,-673,l),
(393,-673,l),
(393,909,l)
);
}
);
width = 1444;
}
);
note = uni17D2_1794_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1794_17C5;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-328,-160,l),
(-293,-191,l),
(-242,-243,o),
(-242,-296,qs),
(-242,-335,o),
(-295,-335,qs),
(-328,-335,l)
);
},
{
closed = 1;
nodes = (
(1145,1164,qs),
(1145,1536,ls),
(1145,1722,o),
(1008,1722,qs),
(940,1722,o),
(940,1679,q),
(1083,1679,o),
(1083,1536,qs),
(1083,1114,l),
(544,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-597,l),
(1,-395,l),
(-328,-597,l),
(-328,-384,l),
(-295,-384,ls),
(-189,-384,o),
(-189,-297,qs),
(-189,-226,o),
(-258,-159,qs),
(-328,-92,l),
(-388,-92,l),
(-388,-673,l),
(-328,-673,l),
(1,-471,l),
(330,-673,l),
(393,-673,l),
(393,909,l),
(203,1017,l),
(541,1239,l),
(1052,1063,l),
(1052,0,l),
(1115,0,l),
(1115,1029,l),
(1145,1102,o)
);
}
);
width = 1444;
}
);
note = uni17D2_1794_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1799_17B6;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-328,-160,l),
(-290,-191,ls),
(-252,-223,o),
(-252,-266,qs),
(-252,-315,o),
(-295,-315,qs),
(-328,-315,l)
);
},
{
closed = 1;
nodes = (
(203,1017,l),
(541,1239,l),
(1052,1063,l),
(1052,0,l),
(1115,0,l),
(1115,1103,l),
(544,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-495,ls),
(330,-624,o),
(1,-624,qs),
(-328,-624,o),
(-328,-495,qs),
(-328,-364,l),
(-295,-364,ls),
(-199,-364,o),
(-199,-267,qs),
(-199,-206,o),
(-263,-149,qs),
(-328,-92,l),
(-388,-92,l),
(-388,-495,ls),
(-388,-673,o),
(1,-673,qs),
(393,-673,o),
(393,-495,qs),
(393,909,l)
);
}
);
width = 1444;
}
);
note = uni17D2_1799_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1799_17C5;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-328,-160,l),
(-290,-191,ls),
(-252,-223,o),
(-252,-266,qs),
(-252,-315,o),
(-295,-315,qs),
(-328,-315,l)
);
},
{
closed = 1;
nodes = (
(1145,1164,qs),
(1145,1536,ls),
(1145,1722,o),
(1008,1722,qs),
(940,1722,o),
(940,1679,q),
(1083,1679,o),
(1083,1536,qs),
(1083,1114,l),
(544,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-495,ls),
(330,-624,o),
(1,-624,qs),
(-328,-624,o),
(-328,-495,qs),
(-328,-364,l),
(-295,-364,ls),
(-199,-364,o),
(-199,-267,qs),
(-199,-206,o),
(-263,-149,qs),
(-328,-92,l),
(-388,-92,l),
(-388,-495,ls),
(-388,-673,o),
(1,-673,qs),
(393,-673,o),
(393,-495,qs),
(393,909,l),
(203,1017,l),
(541,1239,l),
(1052,1063,l),
(1052,0,l),
(1115,0,l),
(1115,1029,l),
(1145,1102,o)
);
}
);
width = 1444;
}
);
note = uni17D2_1799_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_179F_17B6;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-444,-295,o),
(-444,-256,qs),
(-444,-203,o),
(-388,-160,q),
(-388,-295,l),
(-401,-295,ls)
);
},
{
closed = 1;
nodes = (
(203,1017,l),
(541,1239,l),
(1052,1063,l),
(1052,0,l),
(1115,0,l),
(1115,1103,l),
(544,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,53,l),
(140,53,l),
(140,0,l),
(330,0,l),
(330,-495,ls),
(330,-624,o),
(1,-624,qs),
(-328,-624,o),
(-328,-495,qs),
(-328,-92,l),
(-388,-92,l),
(-497,-186,o),
(-497,-257,qs),
(-497,-344,o),
(-401,-344,qs),
(-388,-344,l),
(-388,-495,ls),
(-388,-673,o),
(1,-673,qs),
(393,-673,o),
(393,-495,qs),
(393,0,l),
(422,0,ls),
(605,0,o),
(605,73,qs),
(605,100,o),
(559,100,q),
(559,53,o),
(422,53,qs),
(393,53,l),
(393,909,l)
);
}
);
width = 1444;
}
);
note = uni17D2_179F_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_179F_17C5;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-444,-295,o),
(-444,-256,qs),
(-444,-203,o),
(-388,-160,q),
(-388,-295,l),
(-401,-295,ls)
);
},
{
closed = 1;
nodes = (
(1145,1164,qs),
(1145,1536,ls),
(1145,1722,o),
(1008,1722,qs),
(940,1722,o),
(940,1679,q),
(1083,1679,o),
(1083,1536,qs),
(1083,1114,l),
(544,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,53,l),
(140,53,l),
(140,0,l),
(330,0,l),
(330,-495,ls),
(330,-624,o),
(1,-624,qs),
(-328,-624,o),
(-328,-495,qs),
(-328,-92,l),
(-388,-92,l),
(-497,-186,o),
(-497,-257,qs),
(-497,-344,o),
(-401,-344,qs),
(-388,-344,l),
(-388,-495,ls),
(-388,-673,o),
(1,-673,qs),
(393,-673,o),
(393,-495,qs),
(393,0,l),
(422,0,ls),
(605,0,o),
(605,73,qs),
(605,100,o),
(559,100,q),
(559,53,o),
(422,53,qs),
(393,53,l),
(393,909,l),
(203,1017,l),
(541,1239,l),
(1052,1063,l),
(1052,0,l),
(1115,0,l),
(1115,1029,l),
(1145,1102,o)
);
}
);
width = 1444;
}
);
note = uni17D2_179F_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D21783;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-661,-254,qs),
(-661,-207,o),
(-574,-142,q),
(-574,-311,l),
(-598,-311,ls),
(-661,-311,o)
);
},
{
closed = 1;
nodes = (
(202,1018,l),
(320,1216,l),
(413,1156,ls),
(450,1132,o),
(478,1132,qs),
(521,1132,o),
(546,1187,q),
(536,1186,o),
(526,1186,qs),
(482,1186,o),
(444,1211,qs),
(304,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-495,ls),
(330,-624,o),
(140,-624,qs),
(-86,-624,o),
(-86,-495,qs),
(-86,-394,l),
(-223,-305,l),
(-126,-176,l),
(-32,-266,o),
(-2,-266,qs),
(27,-266,o),
(55,-212,q),
(27,-212,ls),
(-32,-212,o),
(-112,-123,qs),
(-139,-93,l),
(-286,-299,l),
(-286,-326,l),
(-145,-414,l),
(-145,-495,ls),
(-145,-624,o),
(-325,-624,qs),
(-515,-624,o),
(-515,-496,qs),
(-515,-93,l),
(-574,-93,l),
(-714,-183,o),
(-714,-254,qs),
(-714,-360,o),
(-598,-360,qs),
(-574,-360,l),
(-574,-495,ls),
(-574,-673,o),
(-325,-673,qs),
(-173,-673,o),
(-117,-584,q),
(-71,-673,o),
(140,-673,qs),
(393,-673,o),
(393,-495,qs),
(393,909,l)
);
}
);
width = 721;
}
);
note = uni17D21783;
subCategory = Spacing;
},
{
glyphname = uni17D21788;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-899,-500,ls),
(-858,-500,o),
(-858,-521,qs),
(-858,-553,o),
(-933,-603,q),
(-933,-500,l)
);
},
{
closed = 1;
nodes = (
(202,1018,l),
(320,1216,l),
(413,1156,ls),
(450,1132,o),
(478,1132,qs),
(521,1132,o),
(546,1187,q),
(536,1186,o),
(526,1186,qs),
(482,1186,o),
(444,1211,qs),
(304,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-495,ls),
(330,-624,o),
(122,-624,qs),
(-86,-624,o),
(-86,-501,qs),
(-86,-394,l),
(-223,-305,l),
(-126,-176,l),
(-32,-266,o),
(-2,-266,qs),
(27,-266,o),
(55,-212,q),
(27,-212,ls),
(-32,-212,o),
(-112,-123,qs),
(-139,-93,l),
(-286,-299,l),
(-286,-326,l),
(-145,-414,l),
(-145,-494,ls),
(-145,-624,o),
(-325,-624,qs),
(-504,-624,o),
(-504,-496,qs),
(-504,-271,ls),
(-504,-93,o),
(-744,-93,qs),
(-993,-93,o),
(-993,-270,qs),
(-993,-673,l),
(-933,-673,l),
(-800,-578,o),
(-800,-521,qs),
(-800,-450,o),
(-899,-450,qs),
(-933,-450,l),
(-933,-271,ls),
(-933,-142,o),
(-744,-142,qs),
(-564,-142,o),
(-564,-271,qs),
(-564,-495,ls),
(-564,-673,o),
(-325,-673,qs),
(-184,-673,o),
(-114,-619,q),
(-45,-673,o),
(122,-673,qs),
(393,-673,o),
(393,-495,qs),
(393,909,l)
);
}
);
width = 721;
}
);
note = uni17D21788;
subCategory = Spacing;
},
{
glyphname = uni17D2178D;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1033,-604,q),
(-1033,-410,l),
(-995,-410,ls),
(-940,-410,o),
(-940,-460,qs),
(-940,-511,o)
);
},
{
closed = 1;
nodes = (
(-348,-419,l),
(-206,-419,ls),
(-126,-419,o),
(57,-673,o),
(177,-673,qs),
(393,-673,o),
(393,-494,qs),
(393,909,l),
(202,1018,l),
(320,1216,l),
(413,1156,ls),
(450,1132,o),
(478,1132,qs),
(521,1132,o),
(546,1187,q),
(536,1186,o),
(526,1186,qs),
(482,1186,o),
(444,1211,qs),
(304,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-495,ls),
(330,-624,o),
(177,-624,qs),
(88,-624,o),
(-98,-370,o),
(-206,-370,qs),
(-348,-370,l),
(-348,-227,l),
(-534,-93,l),
(-720,-204,l),
(-907,-93,l),
(-1093,-227,l),
(-1093,-673,l),
(-1033,-673,l),
(-885,-534,o),
(-885,-460,qs),
(-885,-361,o),
(-995,-361,qs),
(-1033,-361,l),
(-1033,-249,l),
(-899,-149,l),
(-720,-257,l),
(-539,-149,l),
(-408,-248,l),
(-408,-370,l),
(-475,-370,o),
(-475,-459,qs),
(-475,-513,o),
(-408,-673,q),
(-348,-673,l)
);
}
);
width = 721;
}
);
note = uni17D2178D;
subCategory = Spacing;
},
{
glyphname = uni17D21794;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-328,-160,l),
(-293,-191,l),
(-242,-243,o),
(-242,-296,qs),
(-242,-335,o),
(-295,-335,qs),
(-328,-335,l)
);
},
{
closed = 1;
nodes = (
(1,-395,l),
(-328,-597,l),
(-328,-384,l),
(-295,-384,ls),
(-189,-384,o),
(-189,-297,qs),
(-189,-226,o),
(-258,-159,qs),
(-328,-92,l),
(-388,-92,l),
(-388,-673,l),
(-328,-673,l),
(1,-471,l),
(330,-673,l),
(393,-673,l),
(393,909,l),
(202,1018,l),
(320,1216,l),
(413,1156,ls),
(450,1132,o),
(478,1132,qs),
(521,1132,o),
(546,1187,q),
(536,1186,o),
(526,1186,qs),
(482,1186,o),
(444,1211,qs),
(304,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-597,l)
);
}
);
width = 721;
}
);
note = uni17D21794;
subCategory = Spacing;
},
{
glyphname = uni17D21799;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-328,-160,l),
(-290,-191,ls),
(-252,-223,o),
(-252,-266,qs),
(-252,-315,o),
(-295,-315,qs),
(-328,-315,l)
);
},
{
closed = 1;
nodes = (
(330,-624,o),
(1,-624,qs),
(-328,-624,o),
(-328,-495,qs),
(-328,-364,l),
(-295,-364,ls),
(-199,-364,o),
(-199,-267,qs),
(-199,-206,o),
(-263,-149,qs),
(-328,-92,l),
(-388,-92,l),
(-388,-495,ls),
(-388,-673,o),
(1,-673,qs),
(393,-673,o),
(393,-495,qs),
(393,909,l),
(202,1018,l),
(320,1216,l),
(413,1156,ls),
(450,1132,o),
(478,1132,qs),
(521,1132,o),
(546,1187,q),
(536,1186,o),
(526,1186,qs),
(482,1186,o),
(444,1211,qs),
(304,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,-495,ls)
);
}
);
width = 721;
}
);
note = uni17D21799;
subCategory = Spacing;
},
{
glyphname = uni17D2179A;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,1018,l),
(319,1216,l),
(412,1156,ls),
(449,1132,o),
(477,1132,qs),
(520,1132,o),
(545,1187,q),
(535,1186,o),
(525,1186,qs),
(481,1186,o),
(443,1211,qs),
(303,1303,l),
(146,1045,l),
(146,985,l),
(329,882,l),
(329,-426,ls),
(329,-659,o),
(721,-659,qs),
(1133,-659,o),
(1133,-426,qs),
(1133,-93,l),
(1074,-93,l),
(1074,-426,ls),
(1074,-605,o),
(721,-605,qs),
(392,-605,o),
(392,-426,qs),
(392,909,l)
);
}
);
width = 721;
}
);
note = uni17D2179A;
subCategory = Spacing;
},
{
glyphname = uni17D2179F;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-444,-295,o),
(-444,-256,qs),
(-444,-203,o),
(-388,-160,q),
(-388,-295,l),
(-401,-295,ls)
);
},
{
closed = 1;
nodes = (
(202,1018,l),
(320,1216,l),
(413,1156,ls),
(450,1132,o),
(478,1132,qs),
(521,1132,o),
(546,1187,q),
(536,1186,o),
(526,1186,qs),
(482,1186,o),
(444,1211,qs),
(304,1303,l),
(147,1045,l),
(147,985,l),
(330,882,l),
(330,53,l),
(140,53,l),
(140,0,l),
(330,0,l),
(330,-495,ls),
(330,-624,o),
(1,-624,qs),
(-328,-624,o),
(-328,-495,qs),
(-328,-92,l),
(-388,-92,l),
(-497,-186,o),
(-497,-257,qs),
(-497,-344,o),
(-401,-344,qs),
(-388,-344,l),
(-388,-495,ls),
(-388,-673,o),
(1,-673,qs),
(393,-673,o),
(393,-495,qs),
(393,0,l),
(422,0,ls),
(605,0,o),
(605,73,qs),
(605,100,o),
(559,100,q),
(559,53,o),
(422,53,qs),
(393,53,l),
(393,909,l)
);
}
);
width = 721;
}
);
note = uni17D2179F;
subCategory = Spacing;
},
{
glyphname = uni17D2179A.b;
lastChange = "2022-11-15 14:39:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,1018,l),
(319,1216,l),
(412,1156,ls),
(449,1132,o),
(477,1132,qs),
(520,1132,o),
(545,1187,q),
(535,1186,o),
(525,1186,qs),
(481,1186,o),
(443,1211,qs),
(303,1303,l),
(146,1045,l),
(146,985,l),
(329,882,l),
(329,-886,ls),
(329,-1119,o),
(721,-1119,qs),
(1133,-1119,o),
(1133,-886,qs),
(1133,-713,l),
(1074,-713,l),
(1074,-886,ls),
(1074,-1065,o),
(721,-1065,qs),
(392,-1065,o),
(392,-886,qs),
(392,909,l)
);
}
);
width = 721;
}
);
note = uni17D2179A.b;
subCategory = Spacing;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,1560,l),
(40,1555,l),
(239,1324,l),
(284,1324,l),
(286,1329,l),
(106,1560,l)
);
}
);
width = 326;
}
);
note = grave;
unicode = 96;
},
{
glyphname = cho.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = cho.half;
},
{
glyphname = coeng_1789khmer.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-488,-427,qs),
(-561,-427,o),
(-561,-466,q),
(-388,-466,o),
(-388,-536,qs),
(-388,-616,o),
(-674,-616,qs),
(-880,-616,o),
(-1252,-467,o),
(-1469,-467,qs),
(-1818,-467,o),
(-1818,-617,q),
(-1702,-516,o),
(-1469,-516,qs),
(-1270,-516,o),
(-907,-665,o),
(-674,-665,qs),
(-338,-665,o),
(-338,-536,qs),
(-338,-427,o)
);
},
{
closed = 1;
nodes = (
(-329,-265,l),
(-721,-80,l),
(-1081,-241,l),
(-1276,-80,l),
(-1442,-198,l),
(-1609,-80,l),
(-1835,-263,l),
(-1835,-380,l),
(-1772,-380,l),
(-1772,-281,l),
(-1611,-149,l),
(-1442,-270,l),
(-1273,-149,l),
(-1114,-282,l),
(-1114,-380,l),
(-1051,-380,l),
(-1051,-284,l),
(-721,-141,l),
(-392,-297,l),
(-392,-380,l),
(-329,-380,l)
);
}
);
width = 0;
}
);
note = coeng_1789khmer.a;
},
{
glyphname = coeng_178Akhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-715,0);
ref = uni17D2_178A;
}
);
width = 0;
}
);
note = coeng_178Akhmer.n;
},
{
glyphname = coeng_178Akhmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (355,0);
ref = uni17D2_178A;
}
);
width = 0;
}
);
note = coeng_178Akhmer.r;
},
{
glyphname = coeng_178Bkhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-716,0);
ref = uni17D2_178B;
}
);
width = 0;
}
);
note = coeng_178Bkhmer.n;
},
{
glyphname = coeng_178Ckhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-725,0);
ref = uni17D2_178C;
}
);
width = 0;
}
);
note = coeng_178Ckhmer.n;
},
{
glyphname = coeng_1797khmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (336,0);
ref = uni17D2_1797;
}
);
width = 0;
}
);
note = coeng_1797khmer.r;
},
{
glyphname = coeng_1798khmer.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-428,-905,q),
(-428,-1123,o),
(-301,-1123,qs),
(-172,-1123,o),
(-172,-989,qs),
(-172,-855,o),
(-368,-855,q),
(-368,-713,l),
(-428,-713,l),
(-428,-855,l),
(-840,-932,o),
(-870,-932,qs),
(-1033,-932,o),
(-1033,-811,qs),
(-1033,-722,l),
(-1093,-722,o),
(-1093,-811,qs),
(-1093,-984,o),
(-906,-984,qs),
(-854,-984,o)
);
},
{
closed = 1;
nodes = (
(-301,-1074,qs),
(-368,-1074,o),
(-368,-905,q),
(-225,-905,o),
(-225,-989,qs),
(-225,-1074,o)
);
}
);
width = 0;
}
);
note = coeng_1798khmer.b;
},
{
glyphname = coeng_1798khmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (263,0);
ref = uni17D2_1798;
}
);
width = 0;
}
);
note = coeng_1798khmer.r;
},
{
glyphname = coeng_17A0khmer.b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1117,-975,ls),
(-1117,-1123,o),
(-904,-1123,qs),
(-692,-1123,o),
(-692,-975,qs),
(-692,-862,ls),
(-692,-762,o),
(-539,-762,qs),
(-386,-762,o),
(-386,-862,qs),
(-386,-1123,l),
(-326,-1123,l),
(-326,-862,ls),
(-326,-713,o),
(-538,-713,qs),
(-751,-713,o),
(-751,-862,qs),
(-751,-975,ls),
(-751,-1074,o),
(-904,-1074,qs),
(-1057,-1074,o),
(-1057,-975,qs),
(-1057,-714,l),
(-1117,-714,l)
);
}
);
width = 0;
}
);
note = coeng_17A0khmer.b;
},
{
glyphname = coeng_17A0khmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-720,0);
ref = uni17D2_17A0;
}
);
width = 0;
}
);
note = coeng_17A0khmer.n;
},
{
glyphname = iMark_17CDkhmer.r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-35,1709,qs),
(-35,1740,o),
(-61,1740,qs),
(-88,1740,o),
(-88,1709,qs),
(-88,1679,o),
(-115,1664,q),
(-118,1667,ls),
(-210,1748,o),
(-296,1795,q),
(-285,1890,o),
(-193,1890,qs),
(-98,1890,o),
(-33,1790,q),
(-4,1790,o),
(28,1801,q),
(93,1838,o),
(147,1887,qs),
(199,1937,o),
(239,2000,q),
(249,2010,o),
(249,2024,qs),
(249,2038,o),
(233,2057,o),
(217,2057,q),
(207,2055,l),
(170,1993,o),
(49,1866,o),
(-9,1851,q),
(-68,1950,o),
(-193,1950,qs),
(-325,1950,o),
(-346,1820,q),
(-441,1862,o),
(-528,1862,qs),
(-754,1862,o),
(-754,1629,qs),
(-754,1536,o),
(-615,1536,qs),
(-29,1536,l),
(-29,1589,l),
(-69,1624,l),
(-35,1654,o)
);
},
{
closed = 1;
nodes = (
(-161,1633,qs),
(-110,1589,l),
(-615,1589,ls),
(-695,1589,o),
(-695,1629,qs),
(-695,1802,o),
(-528,1802,qs),
(-357,1802,o)
);
}
);
width = 0;
}
);
note = iMark_17CDkhmer.r;
},
{
glyphname = nyo_17B6khmer.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(2494,1068,l),
(2494,0,l),
(2557,0,l),
(2557,1103,l),
(2145,1303,l),
(1795,1079,l),
(1443,1303,l),
(1083,1086,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,0,l),
(1113,0,l),
(1113,1028,l),
(1443,1234,l),
(1772,1024,l),
(1772,0,l),
(1835,0,l),
(1835,1047,l),
(2141,1243,l)
);
}
);
width = 2164;
}
);
note = nyo_17B6khmer.a;
},
{
glyphname = nyo_17C5khmer.a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,389,o),
(535,299,qs),
(535,236,o),
(449,143,qs),
(392,81,l),
(392,389,l),
(441,389,ls)
);
},
{
closed = 1;
nodes = (
(2586,1164,qs),
(2586,1536,ls),
(2586,1722,o),
(2449,1722,qs),
(2381,1722,o),
(2381,1679,q),
(2524,1679,o),
(2524,1536,qs),
(2524,1119,l),
(2145,1303,l),
(1795,1079,l),
(1443,1303,l),
(1083,1086,l),
(888,1303,l),
(722,1130,l),
(555,1303,l),
(329,1056,l),
(329,0,l),
(392,0,l),
(490,106,ls),
(588,212,o),
(588,300,qs),
(588,442,o),
(441,442,qs),
(392,442,l),
(392,1046,l),
(553,1223,l),
(722,1047,l),
(891,1223,l),
(1050,1045,l),
(1050,0,l),
(1113,0,l),
(1113,1028,l),
(1443,1234,l),
(1772,1024,l),
(1772,0,l),
(1835,0,l),
(1835,1047,l),
(2141,1243,l),
(2494,1068,l),
(2494,0,l),
(2557,0,l),
(2557,1032,l),
(2586,1103,o)
);
}
);
width = 2164;
}
);
note = nyo_17C5khmer.a;
},
{
glyphname = ru.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ru.half;
},
{
glyphname = ruu.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ruu.half;
},
{
glyphname = ta.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ta.half;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Regular;
properties = (
{
key = styleNames;
values = (
{
language = ENG;
value = Regular;
}
);
},
{
key = postscriptFullName;
value = "Khmer Thin";
},
{
key = postscriptFontName;
value = KhmerThin;
}
);
weightClass = 300;
}
);
kerningLTR = {
m01 = {
A = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -123;
U = -41;
V = -164;
W = -143;
Y = -143;
asterisk = -143;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
question = -123;
quotedbl = -164;
quotesingle = -164;
u = -41;
v = -123;
w = -61;
y = -102;
};
B = {
A = -41;
T = -41;
V = -82;
W = -61;
X = -41;
Y = -82;
Z = -41;
asterisk = -41;
question = -41;
w = -20;
y = -41;
};
D = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
E = {
V = -41;
W = -41;
Y = -41;
};
F = {
A = -143;
a = -82;
c = -82;
d = -82;
e = -82;
g = -82;
o = -82;
q = -82;
};
G = {
T = -41;
V = -41;
W = -41;
Y = -41;
question = -41;
};
K = {
C = -41;
G = -41;
O = -41;
Q = -41;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
u = -41;
w = -61;
y = -61;
};
L = {
T = -143;
V = -102;
W = -102;
Y = -123;
asterisk = -164;
question = -143;
quotedbl = -123;
quotesingle = -123;
};
O = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
P = {
A = -102;
comma = -246;
period = -246;
};
Q = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
R = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -41;
U = -20;
V = -61;
W = -61;
Y = -61;
asterisk = -41;
question = -41;
w = -41;
y = -41;
};
S = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -41;
question = -41;
w = -20;
y = -41;
};
T = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -61;
c = -61;
comma = -184;
d = -61;
e = -61;
g = -61;
o = -61;
period = -184;
q = -61;
};
U = {
A = -41;
};
V = {
A = -164;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -123;
c = -123;
comma = -225;
d = -123;
e = -123;
g = -123;
o = -123;
period = -225;
q = -123;
s = -82;
};
W = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -102;
c = -123;
comma = -184;
d = -123;
e = -123;
g = -123;
o = -123;
period = -184;
q = -123;
};
X = {
C = -41;
G = -41;
O = -41;
Q = -41;
S = -20;
w = -61;
y = -102;
};
Y = {
A = -143;
C = -61;
G = -61;
O = -61;
Q = -61;
S = -41;
a = -123;
c = -143;
comma = -164;
d = -143;
e = -143;
g = -143;
o = -143;
period = -164;
q = -143;
s = -123;
};
a = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
asterisk = {
A = -102;
comma = -246;
period = -246;
};
b = {
y = -41;
};
f = {
asterisk = 164;
braceright = 184;
bracketright = 184;
parenright = 184;
quotedbl = 164;
quotesingle = 164;
};
h = {
quotedbl = -82;
y = -41;
};
k = {
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
};
n = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
o = {
y = -41;
};
p = {
y = -41;
};
quotedbl = {
A = -164;
g = -82;
};
quotesingle = {
A = -164;
g = -82;
};
r = {
a = -41;
asterisk = 61;
};
v = {
comma = -102;
period = -143;
};
w = {
comma = -143;
period = -143;
};
y = {
comma = -184;
period = -184;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2020 The Khmer Project Authors (https://github.com/danhhong/Khmer)";
}
);
},
{
key = familyNames;
values = (
{
language = ENG;
value = "Khmer Thin";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Danh Hong";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Danh Hong";
}
);
},
{
key = designerURL;
value = "http://www.nextspell.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 2048;
versionMajor = 8;
versionMinor = 0;
}
