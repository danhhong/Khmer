{
.appVersion = "3141";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = MONO;
},
{
name = panose;
value = (
2,
2,
6,
0,
6,
5,
0,
2,
2,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
9,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
43,
44,
45,
46,
60,
62,
64,
67,
69
);
},
{
name = codePageRanges;
value = (
"1252"
);
}
);
date = "2020-10-31 04:20:23 +0000";
familyName = Khmer;
featurePrefixes = (
{
code = "lookup SUB_0 {
	sub uni17B7 by uni17B7.r;
	sub uni17B8 by uni17B8.r;
	sub uni17B9 by uni17B9.r;
	sub uni17BA by uni17BA.r;
	sub uni17BE by uni17B8.r;
	sub uni17C6 by uni17C6.r;
	sub uni17C9 by uni17C9.r;
	sub uni17CD by uni17CD.r;
	sub uni17B7_17CD by iMark_17CDkhmer.r;
} SUB_0;
lookup SUB_1 {
	sub uni17B7 by uni17B7.a;
	sub uni17B8 by uni17B8.a;
	sub uni17B9 by uni17B9.a;
	sub uni17BA by uni17BA.a;
	sub uni17BE by uni17B8.a;
	sub uni17C6 by uni17C6.a;
	sub uni17CE by uni17CE.a;
	sub uni17D0 by uni17D0.a;
} SUB_1;
lookup SUB_10 {
	sub uni17C9 uni17B6 by uni17C9;
	sub uni17C9 uni17C4 by uni17C9;
	sub uni17C9 uni17C5 by uni17C9;
	sub uni17CA uni17B6 by uni17CA;
	sub uni17CA uni17C4 by uni17CA;
	sub uni17CA uni17C5 by uni17CA;
	sub uni17CC uni17B6 by uni17CC;
	sub uni17CC uni17C4 by uni17CC;
	sub uni17CC uni17C5 by uni17CC;
	sub uni17C9.r uni17B6 by uni17C9.r;
	sub uni17C9.r uni17C4 by uni17C9.r;
	sub uni17C9.r uni17C5 by uni17C9.r;
} SUB_10;
lookup SUB_11 {
	sub uni17D2_178A by coeng_178Akhmer.r;
	sub uni17D2_178F by coeng_178Akhmer.r;
	sub uni17D2_1797 by coeng_1797khmer.r;
	sub uni17D2_1798 by coeng_1798khmer.r;
} SUB_11;
lookup SUB_12 {
	sub uni17BB by uni17BB.b;
	sub uni17BC by uni17BC.b;
	sub uni17BD by uni17BD.b;
} SUB_12;
lookup SUB_13 {
	sub uni17BF by uni17BF.b;
	sub uni17C0 by uni17C0.b;
} SUB_13;
lookup SUB_14 {
	sub uni17CA by uni17BB;
} SUB_14;
lookup SUB_15 {
	sub uni17C9 by uni17BB;
	sub uni17C9.r by uni17BB;
} SUB_15;
lookup SUB_16 {
	sub uni1789 by uni1789.a;
} SUB_16;
lookup SUB_17 {
	sub uni17D2_1789 by coeng_1789khmer.a;
} SUB_17;
lookup SUB_18 {
	sub uni17D2_178A by coeng_178Akhmer.n;
	sub uni17D2_178B by coeng_178Bkhmer.n;
	sub uni17D2_178C by coeng_178Ckhmer.n;
	sub uni17D2_178F by coeng_178Akhmer.n;
	sub uni17D2_17A0 by coeng_17A0khmer.n;
} SUB_18;
lookup SUB_2 {
	sub uni17BB by uni17BB.n;
	sub uni17BC by uni17BC.n;
	sub uni17BD by uni17BD.n;
} SUB_2;
lookup SUB_3 {
	sub uni17BB.b by uni17BB.n2;
	sub uni17BC.b by uni17BC.n2;
	sub uni17BD.b by uni17BD.n2;
} SUB_3;
lookup SUB_4 {
	sub uni1780 by uni1780_17B6;
	sub uni1781 by uni1781_17B6;
	sub uni1782 by uni1782_17B6;
	sub uni1783 by uni1783_17B6;
	sub uni1784 by uni1784_17B6;
	sub uni1785 by uni1785_17B6;
	sub uni1786 by uni1786_17B6;
	sub uni1787 by uni1787_17B6;
	sub uni1788 by uni1788_17B6;
	sub uni1789 by uni1789_17B6;
	sub uni178A by uni178A_17B6;
	sub uni178B by uni178B_17B6;
	sub uni178C by uni178C_17B6;
	sub uni178D by uni178D_17B6;
	sub uni178E by uni178E_17B6;
	sub uni178F by uni178F_17B6;
	sub uni1790 by uni1790_17B6;
	sub uni1791 by uni1791_17B6;
	sub uni1792 by uni1792_17B6;
	sub uni1793 by uni1793_17B6;
	sub uni1794 by uni1794_17B6;
	sub uni1795 by uni1795_17B6;
	sub uni1796 by uni1796_17B6;
	sub uni1797 by uni1797_17B6;
	sub uni1798 by uni1798_17B6;
	sub uni1799 by uni1799_17B6;
	sub uni179A by uni179A_17B6;
	sub uni179B by uni179B_17B6;
	sub uni179C by uni179C_17B6;
	sub uni179F by uni179F_17B6;
	sub uni17A0 by uni17A0_17B6;
	sub uni17A1 by uni17A1_17B6;
	sub uni17A2 by uni17A2_17B6;
	sub uni1789.a by nyo_17B6khmer.a;
} SUB_4;
lookup SUB_5 {
	sub uni1780 by uni1780_17C5;
	sub uni1781 by uni1781_17C5;
	sub uni1782 by uni1782_17C5;
	sub uni1783 by uni1783_17C5;
	sub uni1784 by uni1784_17C5;
	sub uni1785 by uni1785_17C5;
	sub uni1786 by uni1786_17C5;
	sub uni1787 by uni1787_17C5;
	sub uni1788 by uni1788_17C5;
	sub uni1789 by uni1789_17C5;
	sub uni178A by uni178A_17C5;
	sub uni178B by uni178B_17C5;
	sub uni178C by uni178C_17C5;
	sub uni178D by uni178D_17C5;
	sub uni178E by uni178E_17C5;
	sub uni178F by uni178F_17C5;
	sub uni1790 by uni1790_17C5;
	sub uni1791 by uni1791_17C5;
	sub uni1792 by uni1792_17C5;
	sub uni1793 by uni1793_17C5;
	sub uni1794 by uni1794_17C5;
	sub uni1795 by uni1795_17C5;
	sub uni1796 by uni1796_17C5;
	sub uni1797 by uni1797_17C5;
	sub uni1798 by uni1798_17C5;
	sub uni1799 by uni1799_17C5;
	sub uni179A by uni179A_17C5;
	sub uni179B by uni179B_17C5;
	sub uni179C by uni179C_17C5;
	sub uni179F by uni179F_17C5;
	sub uni17A0 by uni17A0_17C5;
	sub uni17A1 by uni17A1_17C5;
	sub uni17A2 by uni17A2_17C5;
	sub uni1789.a by nyo_17C5khmer.a;
} SUB_5;
lookup SUB_6 {
	sub uni17B6 by uni17B6.space;
	sub uni17C4 by uni17B6.space;
	sub uni17C5 by uni17B6.space;
} SUB_6;
lookup SUB_7 {
	sub uni17D2_1798 by coeng_1798khmer.b;
	sub uni17D2_17A0 by coeng_17A0khmer.b;
} SUB_7;
lookup SUB_8 {
	sub uni17D2179A by uni17D2179A.b;
} SUB_8;
lookup SUB_9 {
	sub uni17D21799 by uni17D2_1799_17B6;
} SUB_9;
";
name = Prefix;
}
);
features = (
{
code = "script khmr;
language dflt;
lookup SUB_19 {
	sub uni17B7 uni17CD by uni17B7_17CD;
} SUB_19;
lookup SUB_20 {
	@SUB_20_0_IN_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17C9 uni17CD uni17B7_17CD];
	sub [uni179A uni179C] @SUB_20_0_IN_0' lookup SUB_0;
	@SUB_20_1_BT_0 = [uni17BB coeng_178Akhmer.r coeng_1797khmer.r coeng_1798khmer.r];
	@SUB_20_1_IN_1 = [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD];
	sub [uni179A uni179C] @SUB_20_1_BT_0 @SUB_20_1_IN_1' lookup SUB_0;
	@SUB_20_2_IN_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17CE uni17D0];
	sub uni17CA @SUB_20_2_IN_0' lookup SUB_1;
} SUB_20;
";
tag = abvs;
},
{
code = "script khmr;
language dflt;
lookup SUB_21 {
	sub uni17D2 uni1780 by uni17D2_1780;
	sub uni17D2 uni1781 by uni17D2_1781;
	sub uni17D2 uni1782 by uni17D2_1782;
	sub uni17D2 uni1784 by uni17D2_1784;
	sub uni17D2 uni1785 by uni17D2_1785;
	sub uni17D2 uni1786 by uni17D2_1786;
	sub uni17D2 uni1787 by uni17D2_1787;
	sub uni17D2 uni1789 by uni17D2_1789;
	sub uni17D2 uni178A by uni17D2_178A;
	sub uni17D2 uni178B by uni17D2_178B;
	sub uni17D2 uni178C by uni17D2_178C;
	sub uni17D2 uni178E by uni17D2_178E;
	sub uni17D2 uni178F by uni17D2_178F;
	sub uni17D2 uni1790 by uni17D2_1790;
	sub uni17D2 uni1791 by uni17D2_1791;
	sub uni17D2 uni1792 by uni17D2_1792;
	sub uni17D2 uni1793 by uni17D2_1793;
	sub uni17D2 uni1795 by uni17D2_1795;
	sub uni17D2 uni1796 by uni17D2_1796;
	sub uni17D2 uni1797 by uni17D2_1797;
	sub uni17D2 uni1798 by uni17D2_1798;
	sub uni17D2 uni179B by uni17D2_179B;
	sub uni17D2 uni179C by uni17D2_179C;
	sub uni17D2 uni17A0 by uni17D2_17A0;
	sub uni17D2 uni17A2 by uni17D2_17A2;
} SUB_21;
lookup SUB_22 {
	@SUB_22_0_IN_0 = [uni17D2_178A uni17D2_178F uni17D2_1797 uni17D2_1798];
	sub [uni179A uni179C] @SUB_22_0_IN_0' lookup SUB_11;
	@SUB_22_1_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_22_1_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_22_2_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_22_2_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni17A1 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_22_6_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_22_6_BT_0 [uni17BF uni17C0]' lookup SUB_13;
	sub [uni1789 uni17A1] [uni17BF uni17C0]' lookup SUB_13;
	@SUB_22_8_LA_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE];
	sub [uni179F uni17A0] uni17CA' lookup SUB_14 @SUB_22_8_LA_0;
	@SUB_22_9_LA_0 = [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6 uni17D0];
	sub [uni17C9 uni17C9.r]' lookup SUB_15 @SUB_22_9_LA_0;
	sub [uni17C9 uni17C9.r]' lookup SUB_15 uni17B6 uni17C6;
	sub [uni179F uni17A0] uni17CA' lookup SUB_14 uni17B6 uni17C6;
} SUB_22;
";
tag = blwf;
},
{
code = "script khmr;
language dflt;
lookup SUB_23 {
	sub uni17D21783 uni17B6 by uni17D2_1783_17B6;
	sub uni17D21783 uni17C4 by uni17D2_1783_17B6;
	sub uni17D21783 uni17C5 by uni17D2_1783_17C5;
	sub uni17D21788 uni17B6 by uni17D2_1788_17B6;
	sub uni17D21788 uni17C4 by uni17D2_1788_17B6;
	sub uni17D21788 uni17C5 by uni17D2_1788_17C5;
	sub uni17D2178D uni17B6 by uni17D2_178D_17B6;
	sub uni17D2178D uni17C4 by uni17D2_178D_17B6;
	sub uni17D2178D uni17C5 by uni17D2_178D_17C5;
	sub uni17D21794 uni17B6 by uni17D2_1794_17B6;
	sub uni17D21794 uni17C4 by uni17D2_1794_17B6;
	sub uni17D21794 uni17C5 by uni17D2_1794_17C5;
	sub uni17D21799 uni17B6 by uni17D2_1799_17B6;
	sub uni17D21799 uni17C4 by uni17D2_1799_17B6;
	sub uni17D21799 uni17C5 by uni17D2_1799_17C5;
	sub uni17D2179F uni17B6 by uni17D2_179F_17B6;
	sub uni17D2179F uni17C4 by uni17D2_179F_17B6;
	sub uni17D2179F uni17C5 by uni17D2_179F_17C5;
} SUB_23;
lookup SUB_24 {
	@SUB_24_0_LA_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D21783 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D21788 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2178D uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D21794 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D21799 uni17D2_179B uni17D2_179C uni17D2179F uni17D2_17A0 uni17D2_17A2];
	sub uni1789' lookup SUB_16 @SUB_24_0_LA_0;
	sub uni1789.a uni17D2_1789' lookup SUB_17;
	@SUB_24_2_IN_0 = [uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178F uni17D2_17A0];
	sub [uni178E uni178E_17B6 uni178E_17C5] @SUB_24_2_IN_0' lookup SUB_18;
	sub uni178E [uni17BB uni17BC uni17BD]' lookup SUB_2;
	@SUB_24_4_BT_0 = [coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_4_BT_0 [uni17BB.b uni17BC.b uni17BD.b]' lookup SUB_3;
	@SUB_24_5_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	sub @SUB_24_5_IN_0' lookup SUB_4 [uni17B6 uni17C4];
	@SUB_24_6_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_6_LA_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_6_IN_0' lookup SUB_4 @SUB_24_6_LA_1 [uni17B6 uni17C4];
	@SUB_24_7_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_7_LA_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_7_IN_0' lookup SUB_4 @SUB_24_7_LA_1 [uni17B6 uni17C4];
	@SUB_24_8_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	sub @SUB_24_8_IN_0' lookup SUB_5 uni17C5;
	@SUB_24_9_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_9_LA_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_9_IN_0' lookup SUB_5 @SUB_24_9_LA_1 uni17C5;
	@SUB_24_10_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_10_LA_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_10_IN_0' lookup SUB_5 @SUB_24_10_LA_1 uni17C5;
	@SUB_24_11_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	sub @SUB_24_11_BT_0 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_12_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_12_BT_1 = [uni17BB uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2 coeng_178Akhmer.n coeng_178Bkhmer.n coeng_178Ckhmer.n coeng_17A0khmer.n];
	sub @SUB_24_12_BT_0 @SUB_24_12_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_13_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_13_BT_1 = [uni17C6 uni17C9 uni17CA uni17CB uni17CC uni17CD uni17CE uni17CF uni17D0 uni17C6.r uni17C9.r uni17CD.r];
	sub @SUB_24_13_BT_0 @SUB_24_13_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	sub [uni17A1 uni17D2179F] [uni17D2_1798 uni17D2_17A0]' lookup SUB_7;
	@SUB_24_15_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_15_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_15_IN_0' lookup SUB_4 @SUB_24_15_LA_1 uni17B6;
	@SUB_24_16_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_16_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_16_IN_0' lookup SUB_4 @SUB_24_16_LA_1 uni17C4;
	@SUB_24_17_IN_0 = [uni1780 uni1781 uni1782 uni1783 uni1784 uni1785 uni1786 uni1787 uni1788 uni1789 uni178A uni178B uni178C uni178D uni178E uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni1799 uni179A uni179B uni179C uni179F uni17A0 uni17A1 uni17A2 uni1789.a];
	@SUB_24_17_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_17_IN_0' lookup SUB_5 @SUB_24_17_LA_1 uni17C5;
	@SUB_24_18_LA_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub uni1789.a' lookup SUB_4 @SUB_24_18_LA_0 [uni17B6 uni17C4];
	@SUB_24_19_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_19_BT_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_19_BT_0 @SUB_24_19_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_20_BT_0 = [uni1780_17B6 uni1781_17B6 uni1782_17B6 uni1783_17B6 uni1784_17B6 uni1785_17B6 uni1786_17B6 uni1787_17B6 uni1788_17B6 uni1789_17B6 uni178A_17B6 uni178B_17B6 uni178C_17B6 uni178D_17B6 uni178E_17B6 uni178F_17B6 uni1790_17B6 uni1791_17B6 uni1792_17B6 uni1793_17B6 uni1794_17B6 uni1795_17B6 uni1796_17B6 uni1797_17B6 uni1798_17B6 uni1799_17B6 uni179A_17B6 uni179B_17B6 uni179C_17B6 uni179F_17B6 uni17A0_17B6 uni17A1_17B6 uni17A2_17B6 nyo_17B6khmer.a uni1780_17C5 uni1781_17C5 uni1782_17C5 uni1783_17C5 uni1784_17C5 uni1785_17C5 uni1786_17C5 uni1787_17C5 uni1788_17C5 uni1789_17C5 uni178A_17C5 uni178B_17C5 uni178C_17C5 uni178D_17C5 uni178E_17C5 uni178F_17C5 uni1790_17C5 uni1791_17C5 uni1792_17C5 uni1793_17C5 uni1794_17C5 uni1795_17C5 uni1796_17C5 uni1797_17C5 uni1798_17C5 uni1799_17C5 uni179A_17C5 uni179B_17C5 uni179C_17C5 uni179F_17C5 uni17A0_17C5 uni17A1_17C5 uni17A2_17C5 nyo_17C5khmer.a];
	@SUB_24_20_BT_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_20_BT_0 @SUB_24_20_BT_1 [uni17B6 uni17C4 uni17C5]' lookup SUB_6;
	@SUB_24_21_BT_0 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub @SUB_24_21_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	@SUB_24_22_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_24_22_BT_0 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni17A1 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789_17B6 [uni17BB uni17BC uni17BD]' lookup SUB_12;
	sub uni1789_17B6 uni17BB.b uni17B6' lookup SUB_6;
} SUB_24;
";
tag = clig;
},
{
code = "script khmr;
language dflt;
lookup SUB_25 {
	sub uni17D2 uni179A by uni17D2179A;
} SUB_25;
lookup SUB_26 {
	@SUB_26_0_LA_0 = [uni1780 uni1781 uni1782 uni1784 uni1785 uni1786 uni1787 uni178A uni178B uni178C uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni17A2];
	@SUB_26_0_LA_1 = [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 coeng_1789khmer.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2];
	sub uni17D2179A' lookup SUB_8 @SUB_26_0_LA_0 @SUB_26_0_LA_1;
	sub [uni17C9 uni17C9.r]' lookup SUB_15 uni17B6.space uni17C6;
} SUB_26;
";
tag = pref;
},
{
code = "script khmr;
language dflt;
lookup SUB_27 {
	sub uni17D2 uni1783 by uni17D21783;
	sub uni17D2 uni1788 by uni17D21788;
	sub uni17D2 uni178D by uni17D2178D;
	sub uni17D2 uni1794 by uni17D21794;
	sub uni17D2 uni1799 by uni17D21799;
	sub uni17D2 uni179F by uni17D2179F;
} SUB_27;
lookup SUB_28 {
	@SUB_28_0_BT_0 = [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F];
	sub @SUB_28_0_BT_0 [uni17BF uni17C0]' lookup SUB_13;
	sub uni17D21799' lookup SUB_9 uni17C9 uni17B6;
	@SUB_28_2_BT_0 = [uni17D2_1783_17B6 uni17D2_1788_17B6 uni17D2_178D_17B6 uni17D2_1794_17B6 uni17D2_1799_17B6 uni17D2_179F_17B6 uni17D2_1783_17C5 uni17D2_1788_17C5 uni17D2_178D_17C5 uni17D2_1794_17C5 uni17D2_1799_17C5 uni17D2_179F_17C5];
	@SUB_28_2_IN_1 = [uni17C9 uni17CA uni17CC uni17C9.r];
	sub @SUB_28_2_BT_0 @SUB_28_2_IN_1' lookup SUB_10 [uni17B6 uni17C4 uni17C5]' lookup SUB_10;
} SUB_28;
";
tag = pstf;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 2150;
},
{
name = typoDescender;
value = -1120;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2150;
},
{
name = winDescent;
value = 1120;
},
{
name = hheaAscender;
value = 2150;
},
{
name = hheaDescender;
value = -1120;
},
{
name = strikeoutPosition;
value = 498;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01240 22 2 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01229 8 15 7 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01237 6 22 5 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\0121920 1024 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\01264 64 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 6 values pushed */\01231 6 17 5 2 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    163,\012    163,\012    93,\012    93,\012    1303,\012    \"-93\",\012    0,\012    \"-559\",\012    \"-888\",\012    1303,\012    \"-93\",\012    0,\012    \"-659\",\012    \"-888\",\012    197,\012    197,\012    154,\012    154,\012    1456,\012    0,\012    1560,\012    1082,\012    0,\012    \"-416\",\012    1477,\012    \"-21\",\012    1581,\012    1102,\012    \"-21\",\012    \"-437\"\012)";
}
);
id = m01;
metricValues = (
{
pos = 2150;
},
{
pos = 1462;
},
{
pos = 1098;
},
{
},
{
pos = -1120;
},
{
}
);
name = Regular;
}
);
glyphs = (
{
glyphname = A;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1045,0,l),
(1463,0,l),
(1463,126,l),
(1356,141,l),
(856,1456,l),
(687,1456,l),
(178,141,l),
(70,126,l),
(70,0,l),
(487,0,l),
(487,126,l),
(377,145,l),
(476,413,l),
(1059,413,l),
(1155,145,l),
(1045,126,l)
);
},
{
closed = 1;
nodes = (
(755,1170,l),
(767,1203,l),
(773,1203,l),
(785,1170,l),
(999,578,l),
(537,578,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
19 1 4 2 15 12 7 4 3 5 1 0 2 76 0 4 0 0 1 4 0 104 0 2 2 31 77 3 1 1 1 32 1 78 18 19 19 19 17 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1533;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1067,0,o),
(1253,144,o),
(1253,411,cs),
(1253,594,o),
(1146,739,o),
(970,775,c),
(1105,824,o),
(1194,933,o),
(1194,1062,cs),
(1194,1325,o),
(1013,1456,o),
(709,1456,cs),
(81,1456,l),
(81,1329,l),
(244,1301,l),
(244,154,l),
(81,126,l),
(81,0,l),
(771,0,ls)
);
},
{
closed = 1;
nodes = (
(441,683,l),
(801,683,ls),
(971,683,o),
(1055,583,o),
(1055,409,cs),
(1055,246,o),
(951,154,o),
(771,154,cs),
(441,154,l)
);
},
{
closed = 1;
nodes = (
(441,1301,l),
(709,1301,ls),
(896,1301,o),
(997,1223,o),
(997,1066,cs),
(997,925,o),
(901,837,o),
(760,837,cs),
(441,837,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
5 1 4 1 14 1 2 5 2 1 0 3 3 76 4 1 4 3 1 3 2 75 0 5 7 1 2 3 5 2 103 8 1 4 4 1 95 0 1 1 31 77 0 3 3 0 95 6 1 0 0 32 0 78 32 31 22 21 1 0 35 33 31 39 32 39 25 23 21 30 22 30 9 6 0 20 1 20 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1322;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(900,-21,o),
(1061,19,o),
(1170,87,c),
(1170,403,l),
(1016,403,l),
(994,200,l),
(935,164,o),
(839,139,o),
(746,139,cs),
(546,139,o),
(405,232,o),
(333,405,cs),
(296,491,o),
(278,595,o),
(278,717,cs),
(278,740,ls),
(278,1082,o),
(437,1314,o),
(721,1314,cs),
(840,1314,o),
(932,1287,o),
(996,1237,c),
(1017,1007,l),
(1174,1007,l),
(1174,1321,l),
(1071,1412,o),
(910,1477,o),
(722,1477,cs),
(455,1477,o),
(260,1341,o),
(157,1119,cs),
(106,1008,o),
(80,881,o),
(80,738,cs),
(80,717,ls),
(80,252,o),
(320,-21,o),
(739,-21,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
12 1 3 1 34 1 0 4 2 76 0 2 3 5 3 2 5 128 0 5 4 3 5 4 126 0 3 3 1 97 0 1 1 37 77 0 4 4 0 97 6 1 0 0 38 0 78 1 0 33 32 29 27 20 18 14 13 10 8 0 36 1 36 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1290;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(918,0,o),
(1111,133,o),
(1214,349,cs),
(1265,456,o),
(1291,577,o),
(1291,712,cs),
(1291,743,ls),
(1291,1019,o),
(1179,1241,o),
(988,1364,cs),
(892,1425,o),
(780,1456,o),
(651,1456,cs),
(81,1456,l),
(81,1329,l),
(244,1301,l),
(244,154,l),
(81,126,l),
(81,0,l),
(661,0,ls)
);
},
{
closed = 1;
nodes = (
(441,1301,l),
(651,1301,ls),
(835,1301,o),
(969,1197,o),
(1041,1030,cs),
(1076,946,o),
(1094,851,o),
(1094,745,cs),
(1094,712,ls),
(1094,507,o),
(1020,330,o),
(888,230,cs),
(822,179,o),
(743,154,o),
(651,154,cs),
(441,154,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
5 1 2 1 2 1 0 3 2 76 4 1 2 3 1 3 2 75 5 1 2 2 1 95 0 1 1 31 77 0 3 3 0 95 4 1 0 0 32 0 78 18 17 1 0 21 19 17 28 18 28 9 6 0 16 1 16 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1356;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(978,830,l),
(441,830,l),
(441,1304,l),
(979,1304,l),
(1001,1106,l),
(1159,1106,l),
(1159,1456,l),
(81,1456,l),
(81,1329,l),
(244,1301,l),
(244,154,l),
(81,126,l),
(81,0,l),
(1190,0,l),
(1190,349,l),
(1033,349,l),
(1011,148,l),
(441,148,l),
(441,675,l),
(978,675,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
10 1 5 3 9 1 4 5 8 1 0 1 7 1 2 0 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 5 6 5 4 114 0 1 7 0 0 1 114 0 6 8 1 7 1 6 7 103 0 5 5 3 95 0 3 3 31 77 0 0 0 2 96 0 2 2 32 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 4 5 6 5 4 6 128 0 1 7 0 7 1 0 128 0 6 8 1 7 1 6 7 103 0 5 5 3 95 0 3 3 31 77 0 0 0 2 96 0 2 2 32 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 19 0 19 17 17 17 21 17 17 17 9 8 29 
CALL[ ]	/* CallFunction */";
};
width = 1306;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(441,1303,l),
(996,1303,l),
(1018,1106,l),
(1176,1106,l),
(1176,1456,l),
(81,1456,l),
(81,1329,l),
(244,1301,l),
(244,154,l),
(81,126,l),
(81,0,l),
(604,0,l),
(604,126,l),
(441,154,l),
(441,644,l),
(974,644,l),
(974,799,l),
(441,799,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
10 1 4 2 9 1 3 4 8 7 4 3 4 1 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 4 5 4 3 114 6 1 5 0 0 1 5 0 103 0 4 4 2 95 0 2 2 31 77 0 1 1 32 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 3 4 5 4 3 5 128 6 1 5 0 0 1 5 0 103 0 4 4 2 95 0 2 2 31 77 0 1 1 32 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 17 0 17 17 17 21 19 17 7 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1256;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(991,-21,o),
(1142,57,o),
(1226,136,c),
(1226,700,l),
(750,700,l),
(750,555,l),
(1029,545,l),
(1029,203,l),
(958,166,o),
(871,140,o),
(738,140,cs),
(446,140,o),
(278,364,o),
(278,716,cs),
(278,742,ls),
(278,971,o),
(361,1147,o),
(494,1243,cs),
(561,1291,o),
(636,1315,o),
(719,1315,cs),
(848,1315,o),
(942,1293,o),
(1007,1250,c),
(1028,1039,l),
(1190,1039,l),
(1190,1333,l),
(1078,1421,o),
(926,1477,o),
(699,1477,cs),
(462,1477,o),
(268,1346,o),
(161,1126,cs),
(107,1015,o),
(80,887,o),
(80,740,cs),
(80,716,ls),
(80,425,o),
(191,197,o),
(388,73,cs),
(487,10,o),
(603,-21,o),
(738,-21,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
12 1 3 1 30 1 4 5 35 1 0 4 3 76 0 2 3 6 3 2 6 128 0 6 0 5 4 6 5 103 0 3 3 1 97 0 1 1 37 77 0 4 4 0 97 7 1 0 0 38 0 78 1 0 34 33 32 31 28 26 19 17 14 13 10 8 0 37 1 37 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1346;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(974,0,l),
(1497,0,l),
(1497,126,l),
(1334,154,l),
(1334,1301,l),
(1497,1329,l),
(1497,1456,l),
(974,1456,l),
(974,1329,l),
(1137,1301,l),
(1137,798,l),
(441,798,l),
(441,1301,l),
(604,1329,l),
(604,1456,l),
(81,1456,l),
(81,1329,l),
(244,1301,l),
(244,154,l),
(81,126,l),
(81,0,l),
(604,0,l),
(604,126,l),
(441,154,l),
(441,643,l),
(1137,643,l),
(1137,154,l),
(974,126,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
22 21 18 17 14 13 10 9 8 3 2 27 24 23 8 7 4 3 0 8 1 0 2 76 0 3 0 0 1 3 0 104 4 1 2 2 31 77 5 1 1 1 32 1 78 21 19 19 21 19 17 6 8 28 
CALL[ ]	/* CallFunction */";
};
width = 1578;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(81,1329,l),
(244,1301,l),
(244,154,l),
(81,126,l),
(81,0,l),
(604,0,l),
(604,126,l),
(441,154,l),
(441,1301,l),
(604,1329,l),
(604,1456,l),
(81,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
10 9 8 7 4 3 2 1 8 0 1 1 76 2 1 1 1 31 77 0 0 0 32 0 78 0 0 0 11 0 11 21 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(781,-21,o),
(937,144,o),
(937,413,cs),
(937,1301,l),
(1100,1329,l),
(1100,1456,l),
(546,1456,l),
(546,1327,l),
(740,1301,l),
(740,413,ls),
(740,244,o),
(662,136,o),
(500,136,cs),
(343,136,o),
(256,225,o),
(251,421,c),
(62,421,l),
(60,415,l),
(72,132,o),
(248,-21,o),
(503,-21,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
19 18 15 14 4 1 3 1 76 0 1 3 2 3 1 2 128 0 3 3 31 77 0 2 2 0 98 4 1 0 0 38 0 78 1 0 17 16 10 8 6 4 0 23 1 23 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1169;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1017,1315,l),
(1013,1310,l),
(441,675,l),
(441,1301,l),
(604,1329,l),
(604,1456,l),
(81,1456,l),
(81,1329,l),
(244,1301,l),
(244,154,l),
(81,126,l),
(81,0,l),
(604,0,l),
(604,126,l),
(441,154,l),
(441,436,l),
(669,684,l),
(1060,141,l),
(1061,140,l),
(941,126,l),
(941,0,l),
(1427,0,l),
(1427,126,l),
(1293,151,l),
(793,820,l),
(1238,1304,l),
(1375,1329,l),
(1375,1456,l),
(908,1456,l),
(908,1329,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
29 27 26 25 24 21 20 19 18 15 14 13 12 10 9 6 4 2 18 1 0 1 76 3 1 0 0 31 77 2 1 1 1 32 1 78 21 24 22 16 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1501;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(604,1456,l),
(81,1456,l),
(81,1329,l),
(244,1301,l),
(244,154,l),
(81,126,l),
(81,0,l),
(1130,0,l),
(1130,381,l),
(979,381,l),
(956,151,l),
(441,151,l),
(441,1301,l),
(604,1329,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
13 10 9 0 4 1 3 8 1 0 1 7 1 2 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 3 0 0 1 114 0 3 3 31 77 0 0 0 2 96 0 2 2 32 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 3 0 3 1 0 128 0 3 3 31 77 0 0 0 2 96 0 2 2 32 2 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
21 17 17 17 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1210;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1059,52,l),
(1532,1188,l),
(1537,1187,l),
(1537,154,l),
(1365,126,l),
(1365,0,l),
(1888,0,l),
(1888,126,l),
(1725,154,l),
(1725,1301,l),
(1888,1329,l),
(1888,1456,l),
(1449,1456,l),
(995,351,l),
(989,351,l),
(520,1456,l),
(94,1456,l),
(94,1329,l),
(257,1301,l),
(257,154,l),
(94,126,l),
(94,0,l),
(617,0,l),
(617,126,l),
(441,154,l),
(441,576,l),
(434,1185,l),
(439,1186,l),
(928,52,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
25 24 23 20 19 18 17 13 10 9 8 7 4 3 0 15 4 1 1 76 0 4 1 0 1 4 0 128 2 1 1 1 31 77 3 1 0 0 32 0 78 21 21 19 21 21 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1982;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1346,1301,l),
(1509,1329,l),
(1509,1456,l),
(986,1456,l),
(986,1329,l),
(1165,1301,l),
(1165,323,l),
(1159,321,l),
(445,1456,l),
(83,1456,l),
(83,1329,l),
(246,1301,l),
(246,154,l),
(83,126,l),
(83,0,l),
(606,0,l),
(606,126,l),
(427,154,l),
(427,1139,l),
(433,1141,l),
(1166,0,l),
(1346,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
20 19 16 15 13 10 9 8 7 4 3 1 12 0 1 1 76 2 1 1 1 31 77 4 3 2 0 0 32 0 78 0 0 0 21 0 21 21 21 21 5 8 25 
CALL[ ]	/* CallFunction */";
};
width = 1592;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(874,-21,o),
(1025,54,o),
(1127,186,cs),
(1229,317,o),
(1281,500,o),
(1281,717,cs),
(1281,738,ls),
(1281,954,o),
(1229,1138,o),
(1127,1270,cs),
(1025,1402,o),
(874,1477,o),
(675,1477,cs),
(487,1477,o),
(336,1402,o),
(232,1270,cs),
(127,1138,o),
(70,954,o),
(70,738,cs),
(70,717,ls),
(70,500,o),
(127,317,o),
(232,186,cs),
(336,54,o),
(487,-21,o),
(675,-21,cs)
);
},
{
closed = 1;
nodes = (
(268,740,ls),
(268,1082,o),
(416,1312,o),
(675,1312,cs),
(866,1312,o),
(984,1210,o),
(1041,1039,cs),
(1069,953,o),
(1083,853,o),
(1083,740,cs),
(1083,717,ls),
(1083,366,o),
(959,143,o),
(675,143,cs),
(414,143,o),
(268,372,o),
(268,717,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 1 97 0 1 1 37 77 5 1 2 2 0 97 4 1 0 0 38 0 78 23 22 1 0 32 30 22 39 23 39 12 10 0 21 1 21 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1351;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(750,584,ls),
(958,584,o),
(1107,659,o),
(1184,790,cs),
(1223,855,o),
(1242,932,o),
(1242,1020,cs),
(1242,1195,o),
(1163,1329,o),
(1016,1402,cs),
(943,1438,o),
(854,1456,o),
(750,1456,cs),
(81,1456,l),
(81,1329,l),
(244,1301,l),
(244,154,l),
(81,126,l),
(81,0,l),
(604,0,l),
(604,126,l),
(441,154,l),
(441,584,l)
);
},
{
closed = 1;
nodes = (
(441,1301,l),
(750,1301,ls),
(947,1301,o),
(1045,1179,o),
(1045,1018,cs),
(1045,857,o),
(947,738,o),
(750,738,cs),
(441,738,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 1 3 1 5 4 1 0 4 0 2 2 76 6 1 3 1 75 0 4 0 2 0 4 2 103 5 1 3 3 1 95 0 1 1 31 77 0 0 0 32 0 78 21 20 24 22 20 28 21 28 38 53 18 6 8 25 
CALL[ ]	/* CallFunction */";
};
width = 1297;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1228,236,o),
(1279,454,o),
(1279,717,cs),
(1279,738,ls),
(1279,1188,o),
(1062,1477,o),
(674,1477,cs),
(304,1477,o),
(70,1188,o),
(70,738,cs),
(70,717,ls),
(70,271,o),
(306,-21,o),
(674,-21,cs),
(747,-21,o),
(818,-8,o),
(885,13,c),
(1237,-245,l),
(1348,-98,l),
(1056,105,l)
);
},
{
closed = 1;
nodes = (
(267,740,ls),
(267,1083,o),
(417,1312,o),
(674,1312,cs),
(865,1312,o),
(983,1210,o),
(1040,1039,cs),
(1068,953,o),
(1082,853,o),
(1082,740,cs),
(1082,717,ls),
(1082,369,o),
(953,143,o),
(674,143,cs),
(411,143,o),
(267,373,o),
(267,717,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
3 1 0 2 1 76 2 1 2 0 73 0 3 3 1 97 0 1 1 37 77 4 1 2 2 0 97 0 0 0 38 0 78 27 26 36 34 26 43 27 43 41 37 5 8 24 
CALL[ ]	/* CallFunction */";
};
width = 1376;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(750,656,l),
(1042,0,l),
(1285,0,l),
(1285,129,l),
(1184,147,l),
(938,679,l),
(1119,727,o),
(1222,853,o),
(1222,1050,cs),
(1222,1223,o),
(1145,1344,o),
(999,1408,cs),
(926,1439,o),
(836,1455,o),
(730,1455,cs),
(81,1455,l),
(81,1329,l),
(244,1301,l),
(244,154,l),
(81,126,l),
(81,0,l),
(604,0,l),
(604,126,l),
(441,154,l),
(441,650,l)
);
},
{
closed = 1;
nodes = (
(441,1301,l),
(730,1301,ls),
(931,1301,o),
(1025,1205,o),
(1025,1052,cs),
(1025,891,o),
(930,805,o),
(710,805,cs),
(441,805,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
7 1 3 1 32 5 4 1 0 5 0 2 2 76 6 1 3 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 2 4 5 114 0 4 0 2 0 4 2 103 7 1 3 3 1 95 0 1 1 31 77 8 6 2 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 5 4 2 4 5 2 128 0 4 0 2 0 4 2 103 7 1 3 3 1 95 0 1 1 31 77 8 6 2 0 0 32 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
28 28 20 19 28 33 28 33 30 29 23 21 19 27 20 27 38 37 18 9 8 25 
CALL[ ]	/* CallFunction */";
};
width = 1385;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(813,-21,o),
(969,51,o),
(1053,172,cs),
(1095,232,o),
(1116,301,o),
(1116,379,cs),
(1116,598,o),
(956,747,o),
(649,823,cs),
(485,864,o),
(390,909,o),
(347,972,cs),
(325,1003,o),
(314,1040,o),
(314,1082,cs),
(314,1225,o),
(430,1319,o),
(598,1319,cs),
(730,1319,o),
(816,1283,o),
(876,1235,c),
(909,1027,l),
(1062,1027,l),
(1062,1318,l),
(961,1406,o),
(802,1477,o),
(598,1477,cs),
(406,1477,o),
(258,1403,o),
(178,1283,cs),
(137,1223,o),
(117,1155,o),
(117,1079,cs),
(117,935,o),
(190,824,o),
(328,746,cs),
(397,707,o),
(481,675,o),
(581,652,cs),
(823,597,o),
(919,516,o),
(919,377,cs),
(919,281,o),
(868,207,o),
(776,167,cs),
(729,146,o),
(673,136,o),
(606,136,cs),
(489,136,o),
(388,167,o),
(301,220,c),
(268,449,l),
(115,449,l),
(115,138,l),
(264,30,o),
(429,-21,o),
(606,-21,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
28 1 4 5 3 1 2 1 2 76 0 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 5 5 3 97 0 3 3 37 77 0 2 2 0 97 6 1 0 0 38 0 78 1 0 35 33 30 29 26 24 10 8 5 4 0 48 1 48 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1206;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1306,1456,l),
(96,1456,l),
(96,1105,l),
(244,1105,l),
(273,1307,l),
(603,1307,l),
(603,154,l),
(440,126,l),
(440,0,l),
(963,0,l),
(963,126,l),
(800,154,l),
(800,1307,l),
(1130,1307,l),
(1160,1105,l),
(1306,1105,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
8 7 4 3 4 1 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
6 5 2 3 0 1 0 3 114 2 1 0 0 4 95 0 4 4 31 77 0 1 1 32 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
6 5 2 3 0 1 0 3 1 128 2 1 0 0 4 95 0 4 4 31 77 0 1 1 32 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 15 0 15 17 17 19 19 17 7 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1406;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1086,-21,o),
(1289,159,o),
(1289,469,cs),
(1289,1301,l),
(1452,1329,l),
(1452,1456,l),
(929,1456,l),
(929,1329,l),
(1092,1301,l),
(1092,469,ls),
(1092,254,o),
(962,137,o),
(758,137,cs),
(557,137,o),
(430,256,o),
(430,469,cs),
(430,1301,l),
(593,1329,l),
(593,1456,l),
(70,1456,l),
(70,1329,l),
(233,1301,l),
(233,469,ls),
(233,265,o),
(330,117,o),
(487,38,cs),
(566,-1,o),
(655,-21,o),
(755,-21,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
25 24 21 20 10 9 6 5 8 2 1 1 76 3 1 1 1 31 77 0 2 2 0 97 4 1 0 0 38 0 78 1 0 23 22 16 14 8 7 0 29 1 29 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1522;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(794,382,l),
(758,267,l),
(752,267,l),
(718,382,l),
(392,1308,l),
(525,1329,l),
(525,1456,l),
(65,1456,l),
(65,1329,l),
(181,1313,l),
(669,0,l),
(838,0,l),
(1326,1313,l),
(1443,1329,l),
(1443,1456,l),
(984,1456,l),
(984,1329,l),
(1132,1309,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
17 14 12 11 8 3 0 7 1 0 1 76 2 1 0 0 31 77 0 1 1 32 1 78 19 19 17 3 8 25 
CALL[ ]	/* CallFunction */";
};
width = 1508;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1942,1314,l),
(2057,1329,l),
(2057,1456,l),
(1593,1456,l),
(1593,1329,l),
(1756,1306,l),
(1568,504,l),
(1516,306,l),
(1510,306,l),
(1453,504,l),
(1157,1456,l),
(984,1456,l),
(691,504,l),
(633,317,l),
(627,318,l),
(583,505,l),
(393,1306,l),
(544,1329,l),
(544,1456,l),
(72,1456,l),
(72,1329,l),
(195,1314,l),
(535,0,l),
(711,0,l),
(1028,1008,l),
(1067,1155,l),
(1073,1155,l),
(1113,1008,l),
(1429,0,l),
(1616,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
27 24 23 20 14 12 11 8 2 9 0 1 1 76 3 2 2 1 1 31 77 5 4 2 0 0 32 0 78 0 0 0 29 0 29 23 23 19 21 6 8 26 
CALL[ ]	/* CallFunction */";
};
width = 2129;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1449,0,l),
(1449,126,l),
(1320,148,l),
(882,739,l),
(1277,1307,l),
(1410,1329,l),
(1410,1456,l),
(935,1456,l),
(935,1329,l),
(1075,1316,l),
(769,867,l),
(447,1316,l),
(584,1329,l),
(584,1456,l),
(112,1456,l),
(112,1329,l),
(239,1307,l),
(657,739,l),
(206,148,l),
(80,126,l),
(80,0,l),
(556,0,l),
(556,126,l),
(423,139,l),
(767,612,l),
(1112,139,l),
(971,126,l),
(971,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
25 23 21 18 17 16 15 14 11 9 7 4 3 2 1 0 16 0 1 1 76 2 1 1 1 31 77 3 1 0 0 32 0 78 22 22 22 21 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1529;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(904,1456,l),
(904,1329,l),
(1076,1310,l),
(752,738,l),
(732,701,l),
(731,699,l),
(401,1310,l),
(567,1329,l),
(567,1456,l),
(65,1456,l),
(65,1329,l),
(185,1310,l),
(633,530,l),
(633,154,l),
(470,126,l),
(470,0,l),
(992,0,l),
(992,126,l),
(829,154,l),
(829,545,l),
(1269,1310,l),
(1396,1329,l),
(1396,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
20 19 16 15 14 11 9 8 7 4 3 2 0 13 0 1 1 76 2 1 1 1 31 77 0 0 0 32 0 78 24 22 21 3 8 25 
CALL[ ]	/* CallFunction */";
};
width = 1461;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,1456,l),
(105,1114,l),
(263,1114,l),
(281,1302,l),
(847,1302,l),
(90,149,l),
(90,0,l),
(1107,0,l),
(1107,360,l),
(950,360,l),
(932,153,l),
(313,153,l),
(1074,1311,l),
(1074,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 3 5 7 1 2 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 1 3 4 114 0 1 0 0 1 112 0 3 3 5 95 0 5 5 31 77 0 0 0 2 96 0 2 2 32 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 1 3 4 114 0 1 0 3 1 0 126 0 3 3 5 95 0 5 5 31 77 0 0 0 2 96 0 2 2 32 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 3 1 3 4 1 128 0 1 0 3 1 0 126 0 3 3 5 95 0 5 5 31 77 0 0 0 2 96 0 2 2 32 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 17 18 17 17 17 6 8 28 
CALL[ ]	/* CallFunction */";
};
width = 1197;
}
);
note = Z;
unicode = 90;
},
{
glyphname = a;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(553,-21,o),
(673,52,o),
(749,149,c),
(752,102,o),
(758,59,o),
(770,0,c),
(1053,0,l),
(1053,126,l),
(948,137,l),
(945,164,o),
(945,190,o),
(945,218,cs),
(945,739,ls),
(945,972,o),
(787,1102,o),
(524,1102,cs),
(367,1102,o),
(236,1061,o),
(139,982,c),
(139,734,l),
(291,734,l),
(312,885,l),
(367,924,o),
(430,947,o),
(521,947,cs),
(665,947,o),
(748,872,o),
(748,741,cs),
(748,635,l),
(555,635,ls),
(356,635,o),
(211,576,o),
(136,474,cs),
(98,423,o),
(79,363,o),
(79,294,cs),
(79,94,o),
(199,-21,o),
(424,-21,cs)
);
},
{
closed = 1;
nodes = (
(276,397,o),
(367,500,o),
(548,500,cs),
(748,500,l),
(748,304,l),
(701,216,o),
(584,144,o),
(453,144,cs),
(334,144,o),
(276,195,o),
(276,290,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
18 1 2 4 40 34 2 6 7 29 1 0 6 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
18 1 2 4 40 34 2 6 7 29 1 5 6 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 2 1 2 3 1 128 0 1 0 7 6 1 7 103 0 2 2 4 97 0 4 4 40 77 9 1 6 6 0 97 5 8 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 1 2 3 1 128 0 1 0 7 6 1 7 103 0 2 2 4 97 0 4 4 40 77 0 5 5 32 77 9 1 6 6 0 97 8 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
38 37 1 0 43 41 37 47 38 47 31 30 22 20 17 16 13 11 8 6 0 36 1 36 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1132;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(825,-21,o),
(953,71,o),
(1021,227,cs),
(1054,305,o),
(1071,396,o),
(1071,500,cs),
(1071,521,ls),
(1071,753,o),
(1002,933,o),
(876,1030,cs),
(813,1078,o),
(736,1102,o),
(647,1102,cs),
(512,1102,o),
(412,1050,o),
(344,954,c),
(344,1560,l),
(-16,1560,l),
(-16,1433,l),
(147,1405,l),
(147,0,l),
(317,0,l),
(335,139,l),
(404,34,o),
(508,-21,o),
(649,-21,cs)
);
},
{
closed = 1;
nodes = (
(344,780,l),
(393,879,o),
(476,942,o),
(597,942,cs),
(783,942,o),
(873,773,o),
(873,521,cs),
(873,500,ls),
(873,283,o),
(784,139,o),
(599,139,cs),
(478,139,o),
(393,202,o),
(344,302,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
7 6 2 3 2 10 1 5 3 34 33 2 4 5 3 76 3 1 4 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 2 33 77 0 5 5 3 97 0 3 3 40 77 7 1 4 4 0 97 1 6 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 33 77 0 5 5 3 97 0 3 3 40 77 0 1 1 32 77 7 1 4 4 0 97 6 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
23 22 1 0 31 29 22 36 23 36 14 12 9 8 5 4 0 21 1 21 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1145;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(743,-21,o),
(866,51,o),
(933,159,cs),
(966,213,o),
(985,271,o),
(988,333,c),
(986,339,l),
(809,339,l),
(789,211,o),
(695,133,o),
(562,133,cs),
(386,133,o),
(275,280,o),
(275,520,cs),
(275,562,ls),
(275,705,o),
(327,826,o),
(416,895,cs),
(460,930,o),
(511,947,o),
(570,947,cs),
(662,947,o),
(730,917,o),
(775,870,c),
(809,681,l),
(963,681,l),
(958,941,l),
(869,1041,o),
(738,1102,o),
(563,1102,cs),
(362,1102,o),
(213,1001,o),
(136,838,cs),
(97,757,o),
(78,665,o),
(78,562,cs),
(78,520,ls),
(78,307,o),
(162,139,o),
(307,48,cs),
(380,2,o),
(465,-21,o),
(563,-21,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
12 1 2 3 1 76 0 2 3 5 3 2 5 128 0 5 4 3 5 4 126 0 3 3 1 97 0 1 1 40 77 0 4 4 0 97 6 1 0 0 38 0 78 1 0 31 30 28 26 19 17 14 13 10 8 0 35 1 35 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1067;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(634,-21,o),
(735,30,o),
(806,129,c),
(822,0,l),
(1156,0,l),
(1156,126,l),
(993,154,l),
(993,1560,l),
(633,1560,l),
(633,1433,l),
(796,1405,l),
(796,964,l),
(727,1053,o),
(629,1102,o),
(501,1102,cs),
(237,1102,o),
(78,875,o),
(78,521,cs),
(78,500,ls),
(78,181,o),
(240,-21,o),
(499,-21,cs)
);
},
{
closed = 1;
nodes = (
(275,521,ls),
(275,773,o),
(365,942,o),
(551,942,cs),
(664,942,o),
(745,885,o),
(796,794,c),
(796,292,l),
(744,195,o),
(666,139,o),
(549,139,cs),
(362,139,o),
(275,283,o),
(275,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
14 13 2 1 2 12 1 5 1 29 28 18 3 4 5 22 19 2 0 4 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
14 13 2 1 2 12 1 5 1 29 28 18 3 4 5 22 19 2 3 4 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 2 33 77 0 5 5 1 97 0 1 1 40 77 7 1 4 4 0 97 3 6 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 33 77 0 5 5 1 97 0 1 1 40 77 0 3 3 32 77 7 1 4 4 0 97 6 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
26 25 1 0 33 31 25 39 26 39 21 20 17 15 10 8 0 24 1 24 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1218;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(746,-21,o),
(873,37,o),
(950,112,c),
(873,240,l),
(800,173,o),
(700,133,o),
(567,133,cs),
(389,133,o),
(279,275,o),
(275,490,c),
(278,495,l),
(980,495,l),
(980,618,ls),
(980,919,o),
(824,1102,o),
(537,1102,cs),
(370,1102,o),
(222,1002,o),
(138,840,cs),
(95,759,o),
(74,667,o),
(74,564,cs),
(74,520,ls),
(74,307,o),
(158,139,o),
(306,48,cs),
(380,2,o),
(467,-21,o),
(567,-21,cs)
);
},
{
closed = 1;
nodes = (
(305,828,o),
(409,947,o),
(537,947,cs),
(696,947,o),
(783,838,o),
(783,675,cs),
(783,649,l),
(284,649,l),
(282,654,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
23 1 3 2 24 1 0 3 2 76 0 4 0 2 3 4 2 103 0 5 5 1 97 0 1 1 40 77 0 3 3 0 97 6 1 0 0 38 0 78 1 0 35 33 29 27 21 19 15 14 10 8 0 26 1 26 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1059;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(666,936,l),
(666,1082,l),
(430,1082,l),
(430,1219,ls),
(430,1350,o),
(485,1420,o),
(601,1420,cs),
(637,1420,o),
(683,1415,o),
(707,1410,c),
(731,1560,l),
(675,1573,o),
(621,1581,o),
(576,1581,cs),
(360,1581,o),
(233,1450,o),
(233,1219,cs),
(233,1082,l),
(64,1082,l),
(64,936,l),
(233,936,l),
(233,154,l),
(70,126,l),
(70,0,l),
(616,0,l),
(616,126,l),
(430,154,l),
(430,936,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
16 1 4 3 17 1 2 4 5 4 1 0 4 0 1 3 76 0 4 4 3 97 0 3 3 39 77 6 1 1 1 2 95 5 1 2 2 34 77 0 0 0 32 0 78 17 19 37 35 17 19 18 7 8 29 
CALL[ ]	/* CallFunction */";
};
width = 725;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(835,-437,o),
(999,-268,o),
(999,14,cs),
(999,927,l),
(1133,956,l),
(1133,1082,l),
(833,1082,l),
(815,946,l),
(746,1047,o),
(643,1102,o),
(507,1102,cs),
(328,1102,o),
(198,1001,o),
(130,826,cs),
(95,739,o),
(78,637,o),
(78,521,cs),
(78,500,ls),
(78,293,o),
(149,132,o),
(277,45,cs),
(341,1,o),
(417,-21,o),
(505,-21,cs),
(633,-21,o),
(731,26,o),
(802,117,c),
(802,14,ls),
(802,-169,o),
(723,-271,o),
(547,-271,cs),
(452,-271,o),
(344,-243,o),
(271,-204,c),
(220,-357,l),
(312,-406,o),
(445,-437,o),
(549,-437,cs)
);
},
{
closed = 1;
nodes = (
(275,521,ls),
(275,787,o),
(375,942,o),
(556,942,cs),
(671,942,o),
(751,884,o),
(802,792,c),
(802,294,l),
(750,195,o),
(673,139,o),
(554,139,cs),
(366,139,o),
(275,283,o),
(275,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
49 26 2 6 3 50 37 36 3 5 6 11 1 2 5 4 1 1 2 3 1 0 1 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
49 26 2 6 4 50 37 36 3 5 6 11 1 2 5 4 1 1 2 3 1 0 1 5 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 6 3 95 10 7 4 3 3 3 34 77 9 1 5 5 2 97 0 2 2 38 77 0 1 1 0 97 8 1 0 0 42 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 7 2 4 4 34 77 0 6 6 3 97 0 3 3 40 77 9 1 5 5 2 97 0 2 2 38 77 0 1 1 0 97 8 1 0 0 42 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
48 48 34 33 1 0 48 51 48 51 41 39 33 47 34 47 28 27 24 22 15 13 8 6 0 32 1 32 11 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1157;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(466,887,o),
(558,942,o),
(666,942,cs),
(818,942,o),
(895,859,o),
(895,680,cs),
(895,154,l),
(732,126,l),
(732,0,l),
(1255,0,l),
(1255,126,l),
(1092,154,l),
(1092,678,ls),
(1092,966,o),
(958,1102,o),
(726,1102,cs),
(594,1102,o),
(484,1042,o),
(409,938,c),
(409,1560,l),
(49,1560,l),
(49,1433,l),
(212,1405,l),
(212,154,l),
(49,126,l),
(49,0,l),
(572,0,l),
(572,126,l),
(409,154,l),
(409,799,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
7 6 2 2 1 29 22 21 18 17 10 5 4 1 0 10 0 4 2 76 0 1 1 33 77 0 4 4 2 97 0 2 2 40 77 3 1 0 0 32 0 78 37 21 35 21 18 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1315;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(220,1349,l),
(427,1349,l),
(427,1560,l),
(220,1560,l)
);
},
{
closed = 1;
nodes = (
(590,0,l),
(590,126,l),
(427,154,l),
(427,1082,l),
(67,1082,l),
(67,955,l),
(230,927,l),
(230,154,l),
(67,126,l),
(67,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
13 12 11 8 7 4 6 3 2 1 76 0 0 0 1 95 4 1 1 1 33 77 0 2 2 34 77 0 3 3 32 3 78 0 0 10 9 6 5 0 3 0 3 17 5 8 23 
CALL[ ]	/* CallFunction */";
};
width = 652;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,-437,o),
(381,-312,o),
(381,-89,cs),
(381,1082,l),
(21,1082,l),
(21,955,l),
(184,927,l),
(184,-89,ls),
(184,-209,o),
(135,-282,o),
(56,-282,cs),
(32,-282,o),
(-24,-276,o),
(-43,-269,c),
(-56,-419,l),
(-19,-431,o),
(13,-437,o),
(56,-437,cs)
);
},
{
closed = 1;
nodes = (
(381,1349,l),
(381,1560,l),
(174,1560,l),
(174,1349,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
12 11 4 3 1 2 3 1 0 1 2 76 0 3 3 4 95 6 1 4 4 33 77 0 2 2 34 77 0 1 1 0 98 5 1 0 0 42 0 78 18 18 1 0 18 21 18 21 20 19 14 13 8 6 0 17 1 17 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 525;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(812,942,l),
(807,936,l),
(424,555,l),
(424,1560,l),
(64,1560,l),
(64,1433,l),
(227,1405,l),
(227,154,l),
(64,126,l),
(64,0,l),
(587,0,l),
(587,126,l),
(424,154,l),
(424,327,l),
(592,496,l),
(866,143,l),
(869,139,l),
(759,126,l),
(759,0,l),
(1248,0,l),
(1248,126,l),
(1092,150,l),
(719,623,l),
(1023,929,l),
(1162,955,l),
(1162,1082,l),
(696,1082,l),
(696,955,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
21 20 2 0 3 27 25 24 19 18 15 14 13 12 10 9 6 4 2 14 1 0 2 76 0 3 3 33 77 0 0 0 34 77 2 1 1 1 32 1 78 21 24 22 16 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1287;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,154,l),
(64,126,l),
(64,0,l),
(587,0,l),
(587,126,l),
(424,154,l),
(424,1560,l),
(64,1560,l),
(64,1433,l),
(227,1405,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
9 8 7 4 3 0 6 1 0 1 76 0 0 0 33 77 0 1 1 32 1 78 19 17 2 8 24 
CALL[ ]	/* CallFunction */";
};
width = 653;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(475,890,o),
(551,942,o),
(671,942,cs),
(814,942,o),
(891,852,o),
(891,649,cs),
(891,154,l),
(728,126,l),
(728,0,l),
(1251,0,l),
(1251,126,l),
(1088,154,l),
(1088,687,l),
(1101,834,o),
(1189,942,o),
(1326,942,cs),
(1470,942,o),
(1544,862,o),
(1544,649,cs),
(1544,154,l),
(1381,126,l),
(1381,0,l),
(1905,0,l),
(1905,126,l),
(1742,154,l),
(1742,647,ls),
(1742,951,o),
(1605,1102,o),
(1384,1102,cs),
(1235,1102,o),
(1121,1025,o),
(1053,902,c),
(1001,1035,o),
(895,1102,o),
(751,1102,cs),
(607,1102,o),
(496,1044,o),
(427,941,c),
(414,1082,l),
(74,1082,l),
(74,955,l),
(237,927,l),
(237,154,l),
(74,126,l),
(74,0,l),
(597,0,l),
(597,126,l),
(434,154,l),
(434,801,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
7 1 5 1 48 41 40 37 36 35 28 27 24 23 16 10 6 5 4 1 0 17 0 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
7 1 5 5 1 97 3 2 2 1 1 34 77 6 4 2 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 1 34 77 7 1 5 5 2 97 3 1 2 2 40 77 6 4 2 0 0 32 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 21 37 21 36 35 21 18 8 8 30 
CALL[ ]	/* CallFunction */";
};
width = 1977;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,884,o),
(576,942,o),
(689,942,cs),
(844,942,o),
(918,870,o),
(918,679,cs),
(918,154,l),
(755,126,l),
(755,0,l),
(1278,0,l),
(1278,126,l),
(1115,154,l),
(1115,683,ls),
(1115,968,o),
(981,1102,o),
(748,1102,cs),
(609,1102,o),
(499,1036,o),
(427,921,c),
(413,1082,l),
(74,1082,l),
(74,955,l),
(237,927,l),
(237,154,l),
(74,126,l),
(74,0,l),
(597,0,l),
(597,126,l),
(434,154,l),
(434,789,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
7 1 4 1 29 22 21 18 17 10 6 5 4 1 0 11 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 4 4 1 97 2 1 1 1 34 77 3 1 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 1 34 77 0 4 4 2 97 0 2 2 40 77 3 1 0 0 32 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
37 21 35 21 18 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1343;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(762,-21,o),
(908,78,o),
(987,244,cs),
(1026,327,o),
(1046,422,o),
(1046,529,cs),
(1046,551,ls),
(1046,766,o),
(964,936,o),
(820,1031,cs),
(747,1078,o),
(661,1102,o),
(561,1102,cs),
(364,1102,o),
(216,1002,o),
(137,836,cs),
(98,753,o),
(78,658,o),
(78,551,cs),
(78,529,ls),
(78,316,o),
(160,144,o),
(305,50,cs),
(377,3,o),
(463,-21,o),
(563,-21,cs)
);
},
{
closed = 1;
nodes = (
(275,551,ls),
(275,784,o),
(375,947,o),
(561,947,cs),
(743,947,o),
(849,800,o),
(849,551,cs),
(849,529,ls),
(849,280,o),
(743,133,o),
(563,133,cs),
(375,133,o),
(275,296,o),
(275,529,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 1 97 0 1 1 40 77 5 1 2 2 0 97 4 1 0 0 38 0 78 19 18 1 0 28 26 18 35 19 35 10 8 0 17 1 17 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1124;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(465,24,o),
(565,-21,o),
(698,-21,cs),
(874,-21,o),
(1001,71,o),
(1069,227,cs),
(1102,305,o),
(1119,396,o),
(1119,500,cs),
(1119,521,ls),
(1119,877,o),
(959,1102,o),
(695,1102,cs),
(559,1102,o),
(456,1049,o),
(384,950,c),
(366,1082,l),
(34,1082,l),
(34,955,l),
(197,927,l),
(197,-261,l),
(44,-289,l),
(44,-416,l),
(566,-416,l),
(566,-289,l),
(394,-261,l),
(394,112,l)
);
},
{
closed = 1;
nodes = (
(394,800,l),
(443,888,o),
(523,942,o),
(635,942,cs),
(818,942,o),
(921,787,o),
(921,521,cs),
(921,500,ls),
(921,283,o),
(824,133,o),
(637,133,cs),
(521,133,o),
(443,184,o),
(394,273,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
10 7 2 5 1 38 37 6 3 4 5 25 1 3 4 5 4 1 0 4 0 3 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 34 77 6 1 4 4 3 97 0 3 3 38 77 0 0 0 36 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 1 34 77 0 5 5 2 97 0 2 2 40 77 6 1 4 4 3 97 0 3 3 38 77 0 0 0 36 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
27 26 35 33 26 40 27 40 39 35 21 18 7 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1197;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(812,1082,l),
(796,963,l),
(727,1054,o),
(628,1102,o),
(501,1102,cs),
(237,1102,o),
(78,875,o),
(78,521,cs),
(78,500,ls),
(78,181,o),
(240,-21,o),
(499,-21,cs),
(620,-21,o),
(716,21,o),
(785,102,c),
(785,-261,l),
(622,-289,l),
(622,-416,l),
(1135,-416,l),
(1135,-289,l),
(982,-261,l),
(982,1082,l)
);
},
{
closed = 1;
nodes = (
(275,521,ls),
(275,774,o),
(365,947,o),
(551,947,cs),
(656,947,o),
(733,895,o),
(785,814,c),
(785,271,l),
(733,183,o),
(658,133,o),
(549,133,cs),
(362,133,o),
(275,281,o),
(275,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
21 1 5 2 28 27 2 4 5 6 1 1 4 5 4 1 0 4 0 1 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
21 1 5 3 28 27 2 4 5 6 1 1 4 5 4 1 0 4 0 1 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 2 97 3 1 2 2 40 77 6 1 4 4 1 97 0 1 1 38 77 0 0 0 36 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 34 77 0 5 5 2 97 0 2 2 40 77 6 1 4 4 1 97 0 1 1 38 77 0 0 0 36 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 32 30 24 38 25 38 19 39 37 18 7 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1139;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(471,858,o),
(541,918,o),
(645,911,cs),
(782,903,l),
(808,1086,l),
(789,1093,o),
(739,1102,o),
(698,1102,cs),
(582,1102,o),
(491,1036,o),
(430,925,c),
(428,944,l),
(411,1082,l),
(72,1082,l),
(72,955,l),
(235,927,l),
(235,154,l),
(72,126,l),
(72,0,l),
(595,0,l),
(595,126,l),
(432,154,l),
(432,767,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
11 7 6 3 3 1 22 5 4 1 0 5 0 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 3 3 1 97 2 1 1 1 34 77 0 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 34 77 0 3 3 2 97 0 2 2 40 77 0 0 0 32 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
35 36 21 18 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 854;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(803,-21,o),
(933,118,o),
(933,301,cs),
(933,461,o),
(829,567,o),
(528,638,cs),
(364,678,o),
(310,713,o),
(310,799,cs),
(310,886,o),
(394,950,o),
(517,950,cs),
(600,950,o),
(663,931,o),
(710,896,c),
(742,752,l),
(890,752,l),
(880,999,l),
(793,1062,o),
(681,1102,o),
(517,1102,cs),
(279,1102,o),
(112,970,o),
(112,793,cs),
(112,625,o),
(232,531,o),
(493,471,cs),
(677,430,o),
(736,372,o),
(736,287,cs),
(736,196,o),
(672,127,o),
(512,127,cs),
(431,127,o),
(365,140,o),
(290,171,c),
(253,326,l),
(104,326,l),
(106,69,l),
(249,8,o),
(367,-21,o),
(512,-21,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
25 1 5 3 3 1 0 2 2 76 0 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 5 5 3 97 0 3 3 40 77 0 2 2 0 97 6 1 0 0 38 0 78 1 0 32 30 27 26 23 21 10 8 5 4 0 43 1 43 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1022;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,-17,o),
(621,-1,o),
(678,16,c),
(651,145,l),
(619,138,o),
(553,127,o),
(506,127,cs),
(437,127,o),
(392,175,o),
(392,279,cs),
(392,936,l),
(627,936,l),
(627,1082,l),
(392,1082,l),
(392,1343,l),
(195,1343,l),
(195,1082,l),
(24,1082,l),
(24,936,l),
(195,936,l),
(195,279,ls),
(195,72,o),
(296,-17,o),
(456,-17,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
20 1 6 1 21 1 0 6 2 76 0 3 2 3 133 5 1 1 1 2 95 4 1 2 2 34 77 0 6 6 0 98 7 1 0 0 38 0 78 1 0 18 16 13 12 11 10 9 8 7 6 5 4 0 23 1 23 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 730;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(690,-21,o),
(799,44,o),
(867,160,c),
(880,0,l),
(1181,0,l),
(1181,126,l),
(1057,154,l),
(1057,1082,l),
(715,1082,l),
(715,955,l),
(860,927,l),
(860,302,l),
(813,198,o),
(723,139,o),
(583,139,cs),
(439,139,o),
(373,211,o),
(373,442,cs),
(373,1082,l),
(52,1082,l),
(52,955,l),
(176,927,l),
(176,444,ls),
(176,125,o),
(315,-21,o),
(550,-21,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
25 21 17 16 15 5 4 7 2 1 22 1 0 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
25 21 17 16 15 5 4 7 2 1 22 1 4 2 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
3 1 1 1 34 77 0 2 2 0 97 4 5 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
3 1 1 1 34 77 0 4 4 32 77 0 2 2 0 97 5 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 24 23 20 18 13 11 8 6 0 27 1 27 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1245;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(645,319,l),
(613,232,l),
(607,232,l),
(579,319,l),
(339,935,l),
(480,955,l),
(480,1082,l),
(26,1082,l),
(26,955,l),
(138,940,l),
(523,0,l),
(696,0,l),
(1062,940,l),
(1176,955,l),
(1176,1082,l),
(723,1082,l),
(723,955,l),
(868,935,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
17 14 12 11 8 3 0 7 1 0 1 76 2 1 0 0 34 77 0 1 1 32 1 78 19 19 17 3 8 25 
CALL[ ]	/* CallFunction */";
};
width = 1206;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1657,938,l),
(1777,955,l),
(1777,1082,l),
(1340,1082,l),
(1340,955,l),
(1476,934,l),
(1325,396,l),
(1278,244,l),
(1272,244,l),
(1224,396,l),
(1000,1082,l),
(834,1082,l),
(599,394,l),
(555,266,l),
(549,266,l),
(515,394,l),
(366,933,l),
(499,955,l),
(499,1082,l),
(52,1082,l),
(52,955,l),
(173,941,l),
(458,0,l),
(627,0,l),
(862,650,l),
(913,823,l),
(919,824,l),
(971,650,l),
(1190,0,l),
(1377,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
27 24 23 20 14 12 11 8 2 9 0 1 1 76 3 2 2 1 1 34 77 5 4 2 0 0 32 0 78 0 0 0 29 0 29 23 23 19 21 6 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1823;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1163,0,l),
(1163,126,l),
(1051,149,l),
(714,550,l),
(1007,932,l),
(1117,955,l),
(1117,1082,l),
(700,1082,l),
(700,955,l),
(816,944,l),
(600,667,l),
(378,943,l),
(486,955,l),
(486,1082,l),
(62,1082,l),
(62,955,l),
(169,932,l),
(485,547,l),
(162,149,l),
(42,126,l),
(42,0,l),
(484,0,l),
(484,126,l),
(367,137,l),
(597,426,l),
(834,137,l),
(704,126,l),
(704,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
25 23 21 18 17 16 15 14 11 9 7 4 3 2 1 0 16 0 1 1 76 2 1 1 1 34 77 3 1 0 0 32 0 78 22 22 22 21 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1203;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(425,-437,o),
(505,-387,o),
(562,-305,cs),
(590,-264,o),
(614,-218,o),
(634,-166,cs),
(1060,939,l),
(1172,955,l),
(1172,1082,l),
(727,1082,l),
(727,955,l),
(865,935,l),
(615,253,l),
(609,253,l),
(558,394,l),
(347,935,l),
(478,955,l),
(478,1082,l),
(24,1082,l),
(24,955,l),
(140,939,l),
(523,22,l),
(476,-92,ls),
(431,-203,o),
(384,-271,o),
(300,-271,cs),
(285,-271,o),
(235,-269,o),
(212,-266,c),
(192,-421,l),
(219,-428,o),
(278,-437,o),
(309,-437,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
25 22 21 19 17 16 13 11 8 1 2 3 1 0 1 2 76 3 1 2 2 34 77 0 1 1 0 98 4 1 0 0 42 0 78 1 0 24 23 15 14 8 4 0 30 1 30 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1192;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,1082,l),
(101,748,l),
(249,748,l),
(274,930,l),
(677,930,l),
(88,138,l),
(88,0,l),
(960,0,l),
(960,333,l),
(813,333,l),
(787,150,l),
(326,150,l),
(921,948,l),
(921,1082,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 3 5 7 1 2 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 1 3 4 114 0 1 0 0 1 112 0 3 3 5 95 0 5 5 34 77 0 0 0 2 96 0 2 2 32 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 3 1 3 4 1 128 0 1 0 3 1 0 126 0 3 3 5 95 0 5 5 34 77 0 0 0 2 96 0 2 2 32 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 17 18 17 17 17 6 8 28 
CALL[ ]	/* CallFunction */";
};
width = 1032;
}
);
note = z;
unicode = 122;
},
{
glyphname = uni1780;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(651,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l),
(442,0,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1001,745,o),
(1001,698,cs),
(1001,0,l),
(1163,0,l),
(1163,698,ls)
);
},
{
closed = 1;
nodes = (
(299,996,ls),
(320,980,o),
(340,972,o),
(361,972,cs),
(363,972,ls),
(384,972,o),
(411,990,o),
(443,1025,c),
(331,1105,l),
(456,1170,l),
(686,1024,l),
(716,1024,l),
(863,1154,l),
(1010,1062,ls),
(1052,1037,o),
(1095,1024,o),
(1138,1024,cs),
(1181,1024,o),
(1221,1071,o),
(1256,1165,c),
(1203,1165,ls),
(1172,1165,o),
(1142,1173,o),
(1115,1190,cs),
(930,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(513,1303,l),
(186,1137,l),
(186,1085,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
40 28 2 8 6 37 36 30 29 25 5 4 8 2 76 0 5 4 3 4 5 3 128 0 8 9 1 4 5 8 4 105 0 3 0 1 0 3 1 105 7 1 6 6 17 77 2 1 0 0 19 0 78 49 47 34 18 20 52 22 52 20 52 16 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1780;
unicode = 6016;
},
{
glyphname = uni1781;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(457,908,o),
(469,906,o),
(476,902,cs),
(484,898,o),
(488,892,o),
(488,884,cs),
(488,869,o),
(484,858,o),
(476,850,cs),
(469,843,o),
(457,839,o),
(442,839,c),
(442,908,l)
);
},
{
closed = 1;
nodes = (
(279,155,o),
(310,97,o),
(372,58,cs),
(434,19,o),
(527,0,o),
(651,0,cs),
(791,0,ls),
(915,0,o),
(1008,33,o),
(1070,98,cs),
(1132,163,o),
(1163,254,o),
(1163,372,cs),
(1163,565,l),
(1000,478,l),
(1000,372,ls),
(1000,288,o),
(983,220,o),
(948,169,cs),
(913,118,o),
(860,93,o),
(791,93,cs),
(651,93,ls),
(582,93,o),
(529,105,o),
(494,128,cs),
(459,151,o),
(442,186,o),
(442,233,cs),
(442,423,l),
(1000,715,ls),
(1054,744,o),
(1095,775,o),
(1122,809,cs),
(1149,844,o),
(1163,884,o),
(1163,931,cs),
(1163,1071,ls),
(1163,1148,o),
(1132,1207,o),
(1070,1246,cs),
(1008,1284,o),
(915,1303,o),
(791,1303,cs),
(651,1303,ls),
(527,1303,o),
(434,1284,o),
(372,1246,cs),
(310,1207,o),
(279,1148,o),
(279,1071,cs),
(279,838,ls),
(279,807,o),
(293,783,o),
(320,768,cs),
(347,753,o),
(388,745,o),
(442,745,cs),
(489,745,o),
(524,757,o),
(547,780,cs),
(570,803,o),
(582,838,o),
(582,884,cs),
(582,923,o),
(570,952,o),
(547,972,cs),
(524,991,o),
(489,1001,o),
(442,1001,c),
(442,1071,ls),
(442,1117,o),
(459,1152,o),
(494,1175,cs),
(529,1198,o),
(582,1210,o),
(651,1210,cs),
(791,1210,ls),
(860,1210,o),
(913,1198,o),
(948,1175,cs),
(983,1152,o),
(1000,1117,o),
(1000,1071,cs),
(1000,931,ls),
(1000,892,o),
(986,856,o),
(959,825,cs),
(932,793,o),
(892,763,o),
(838,734,cs),
(279,442,l),
(279,233,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 0 2 0 2 71 60 59 48 4 5 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 0 0 2 114 0 0 0 3 5 0 3 106 0 1 1 4 97 0 4 4 17 77 0 5 5 6 97 0 6 6 19 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 0 1 2 0 128 0 0 0 3 5 0 3 106 0 1 1 4 97 0 4 4 17 77 0 5 5 6 97 0 6 6 19 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
57 61 55 38 20 59 17 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1781;
unicode = 6017;
},
{
glyphname = uni1782;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1051,1037,o),
(1094,1025,o),
(1138,1025,cs),
(1181,1025,o),
(1221,1072,o),
(1256,1165,c),
(1203,1165,ls),
(1172,1165,o),
(1142,1173,o),
(1115,1190,cs),
(930,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(513,1303,l),
(186,1137,l),
(186,1085,l),
(299,996,ls),
(320,980,o),
(340,972,o),
(361,972,cs),
(363,972,ls),
(384,972,o),
(411,990,o),
(443,1025,c),
(331,1105,l),
(456,1170,l),
(686,1025,l),
(716,1025,l),
(863,1154,l),
(1010,1062,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(442,48,l),
(547,192,ls),
(570,224,o),
(593,247,o),
(616,262,cs),
(639,275,o),
(668,282,o),
(705,282,cs),
(709,282,ls),
(748,282,o),
(776,297,o),
(791,326,cs),
(798,338,o),
(801,349,o),
(801,359,cs),
(801,375,o),
(794,389,o),
(780,402,cs),
(757,424,o),
(729,435,o),
(698,436,cs),
(667,436,o),
(636,428,o),
(605,413,cs),
(574,398,o),
(539,366,o),
(501,316,cs),
(442,239,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1001,745,o),
(1001,698,cs),
(1001,0,l),
(1163,0,l),
(1163,698,ls),
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(651,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
16 4 2 4 2 13 12 5 1 4 0 4 36 1 7 6 46 27 2 8 7 4 76 6 1 0 1 75 0 1 0 9 0 1 9 128 0 4 5 1 0 1 4 0 105 0 9 0 11 6 9 11 105 0 6 0 7 8 6 7 105 3 1 2 2 17 77 10 1 8 8 19 8 78 67 64 60 59 55 52 21 54 38 33 34 18 20 52 18 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1782;
unicode = 6018;
},
{
glyphname = uni1783;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248,954,o),
(225,959,o),
(209,969,cs),
(194,978,o),
(186,993,o),
(186,1014,cs),
(186,1028,o),
(194,1047,o),
(209,1072,cs),
(225,1097,o),
(248,1128,o),
(279,1163,c),
(279,954,l)
);
},
{
closed = 1;
nodes = (
(93,960,o),
(109,921,o),
(140,897,cs),
(171,873,o),
(217,861,o),
(279,861,c),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(444,19,o),
(543,0,o),
(675,0,cs),
(768,0,ls),
(847,0,o),
(912,5,o),
(963,14,cs),
(1015,23,o),
(1052,36,o),
(1075,55,c),
(1098,36,o),
(1137,23,o),
(1191,14,cs),
(1244,5,o),
(1313,0,o),
(1396,0,cs),
(1489,0,ls),
(1621,0,o),
(1720,19,o),
(1786,58,cs),
(1852,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1664,1009,l),
(1755,1125,l),
(1828,1079,ls),
(1861,1058,o),
(1893,1047,o),
(1924,1047,cs),
(1955,1047,o),
(1997,1094,o),
(2048,1187,c),
(2001,1187,ls),
(1975,1187,o),
(1943,1199,o),
(1905,1223,cs),
(1776,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1703,151,o),
(1664,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1260,105,o),
(1221,128,cs),
(1183,151,o),
(1164,186,o),
(1164,233,cs),
(1164,869,l),
(943,1009,l),
(1033,1125,l),
(1107,1079,ls),
(1140,1058,o),
(1172,1047,o),
(1203,1047,cs),
(1234,1047,o),
(1275,1094,o),
(1326,1187,c),
(1280,1187,ls),
(1254,1187,o),
(1222,1199,o),
(1184,1223,cs),
(1055,1303,l),
(838,1025,l),
(838,965,l),
(1001,862,l),
(1001,233,ls),
(1001,186,o),
(981,151,o),
(942,128,cs),
(903,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(501,128,cs),
(462,151,o),
(442,186,o),
(442,233,cs),
(442,1303,l),
(279,1303,l),
(186,1198,ls),
(155,1163,o),
(132,1129,o),
(116,1098,cs),
(101,1067,o),
(93,1039,o),
(93,1013,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
82 57 1 3 7 6 83 72 71 58 47 46 6 0 7 84 70 59 45 4 3 0 14 1 1 5 4 76 73 48 2 4 74 9 1 6 10 1 7 0 6 7 105 11 1 0 0 3 5 0 3 105 0 4 4 17 77 8 1 5 5 1 97 2 12 2 1 1 19 1 78 11 9 0 0 80 78 77 75 66 63 55 53 52 50 41 38 34 33 25 24 20 17 9 88 11 88 0 8 0 8 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni1783;
unicode = 6019;
},
{
glyphname = uni1784;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(790,1162,o),
(795,1175,o),
(804,1184,cs),
(814,1193,o),
(829,1197,o),
(848,1198,cs),
(867,1197,o),
(882,1193,o),
(891,1184,cs),
(900,1175,o),
(904,1163,o),
(904,1147,cs),
(904,1130,o),
(900,1117,o),
(891,1108,cs),
(882,1099,o),
(867,1094,o),
(848,1094,cs),
(829,1094,o),
(814,1099,o),
(804,1108,cs),
(795,1117,o),
(790,1129,o),
(790,1145,cs)
);
},
{
closed = 1;
nodes = (
(116,542,o),
(130,513,o),
(157,494,cs),
(184,475,o),
(224,465,o),
(279,465,c),
(279,0,l),
(442,0,l),
(721,180,l),
(1000,0,l),
(1163,0,l),
(1163,966,l),
(964,1039,l),
(1001,1075,o),
(1019,1110,o),
(1019,1143,cs),
(1019,1196,o),
(1005,1236,o),
(976,1263,cs),
(947,1290,o),
(905,1303,o),
(848,1303,cs),
(791,1303,o),
(748,1290,o),
(719,1263,cs),
(690,1236,o),
(675,1197,o),
(675,1146,cs),
(675,1123,o),
(680,1106,o),
(690,1094,c),
(558,1094,ls),
(519,1094,o),
(491,1100,o),
(472,1111,cs),
(453,1121,o),
(443,1139,o),
(443,1164,cs),
(443,1304,ls),
(443,1365,o),
(431,1412,o),
(407,1443,cs),
(384,1474,o),
(349,1489,o),
(302,1489,cs),
(263,1489,o),
(234,1480,o),
(215,1461,cs),
(196,1442,o),
(186,1412,o),
(186,1373,c),
(217,1373,o),
(240,1367,o),
(256,1355,cs),
(271,1344,o),
(279,1327,o),
(279,1304,cs),
(279,1164,ls),
(279,1105,o),
(302,1063,o),
(349,1038,cs),
(396,1013,o),
(465,1001,o),
(558,1001,cs),
(807,1001,l),
(1000,911,l),
(1000,111,l),
(721,290,l),
(442,111,l),
(442,838,l),
(279,838,l),
(206,758,ls),
(177,724,o),
(154,693,o),
(138,664,cs),
(123,635,o),
(116,607,o),
(116,581,cs)
);
},
{
closed = 1;
nodes = (
(209,595,o),
(215,611,o),
(227,631,cs),
(238,651,o),
(256,674,o),
(279,699,c),
(279,559,l),
(256,559,o),
(238,561,o),
(227,564,cs),
(215,568,o),
(209,574,o),
(209,582,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
46 26 2 6 7 17 1 2 6 45 44 43 29 4 3 5 3 76 0 9 8 9 133 0 8 11 8 133 10 1 0 0 7 6 0 7 103 12 1 2 0 5 3 2 5 105 0 1 1 11 97 0 11 11 17 77 0 6 6 3 95 4 1 3 3 19 3 78 16 16 78 76 71 69 62 60 57 56 49 47 42 41 33 32 31 30 28 27 16 24 16 24 38 35 13 7 24 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1784;
unicode = 6020;
},
{
glyphname = uni1785;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(978,582,o),
(960,584,o),
(948,587,c),
(937,592,o),
(931,598,o),
(931,605,cs),
(931,619,o),
(937,635,o),
(948,654,cs),
(960,673,o),
(978,696,o),
(1001,722,c),
(1001,582,l)
);
},
{
closed = 1;
nodes = (
(279,977,l),
(279,233,ls),
(279,155,o),
(308,97,o),
(367,58,cs),
(425,19,o),
(512,0,o),
(628,0,cs),
(814,0,ls),
(930,0,o),
(1017,19,o),
(1076,58,cs),
(1134,97,o),
(1163,155,o),
(1163,233,cs),
(1163,861,l),
(1001,861,l),
(928,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(838,629,o),
(838,604,cs),
(838,565,o),
(852,537,o),
(879,518,cs),
(906,499,o),
(947,489,o),
(1001,489,c),
(1001,233,ls),
(1001,186,o),
(985,151,o),
(954,128,cs),
(923,105,o),
(876,93,o),
(814,93,cs),
(628,93,ls),
(566,93,o),
(520,105,o),
(489,128,cs),
(458,151,o),
(442,186,o),
(442,233,cs),
(442,977,l),
(331,1105,l),
(456,1170,l),
(686,1024,l),
(716,1024,l),
(863,1154,l),
(1010,1062,ls),
(1052,1037,o),
(1095,1024,o),
(1138,1024,cs),
(1181,1024,o),
(1221,1071,o),
(1256,1165,c),
(1203,1165,ls),
(1172,1165,o),
(1142,1173,o),
(1115,1190,cs),
(930,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(513,1303,l),
(186,1137,l),
(186,1085,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
40 26 2 5 3 41 37 23 22 4 6 5 42 21 2 1 6 5 1 2 0 1 4 76 0 1 6 0 6 1 0 128 0 5 7 1 6 1 5 6 105 10 1 0 0 9 8 0 9 106 4 1 3 3 17 77 0 8 8 2 95 0 2 2 19 2 78 0 0 54 53 49 46 39 38 35 33 32 30 28 27 25 24 17 14 10 9 0 8 0 8 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1785;
unicode = 6021;
},
{
glyphname = uni1786;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(232,279,o),
(236,296,o),
(243,308,cs),
(251,320,o),
(263,326,o),
(279,326,c),
(279,128,l),
(263,142,o),
(251,160,o),
(243,181,cs),
(236,202,o),
(232,227,o),
(232,256,cs)
);
},
{
closed = 1;
nodes = (
(139,215,o),
(145,178,o),
(157,146,cs),
(168,115,o),
(186,88,o),
(209,65,cs),
(279,0,l),
(442,0,l),
(442,326,l),
(511,326,ls),
(558,326,o),
(593,317,o),
(616,299,cs),
(639,281,o),
(651,254,o),
(651,217,cs),
(651,144,o),
(670,90,o),
(709,54,cs),
(748,18,o),
(806,0,o),
(884,0,cs),
(977,0,o),
(1046,19,o),
(1093,58,cs),
(1140,97,o),
(1163,155,o),
(1163,233,cs),
(1163,861,l),
(1000,861,l),
(927,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(837,629,o),
(837,604,cs),
(837,565,o),
(851,537,o),
(878,518,cs),
(905,499,o),
(946,489,o),
(1000,489,c),
(1000,233,ls),
(1000,186,o),
(990,151,o),
(971,128,cs),
(951,105,o),
(922,93,o),
(884,93,cs),
(837,93,o),
(802,103,o),
(779,124,cs),
(756,145,o),
(744,176,o),
(744,217,cs),
(744,284,o),
(725,335,o),
(686,369,cs),
(647,402,o),
(589,419,o),
(511,419,cs),
(442,419,l),
(442,977,l),
(331,1105,l),
(456,1170,l),
(685,1024,l),
(715,1024,l),
(862,1154,l),
(1009,1062,ls),
(1052,1037,o),
(1095,1024,o),
(1138,1024,cs),
(1181,1024,o),
(1220,1071,o),
(1255,1165,c),
(1202,1165,ls),
(1171,1165,o),
(1142,1173,o),
(1115,1190,cs),
(929,1303,l),
(892,1303,l),
(749,1178,l),
(550,1303,l),
(512,1303,l),
(186,1137,l),
(186,1085,l),
(279,977,l),
(279,419,l),
(232,419,o),
(197,405,o),
(174,378,cs),
(151,351,o),
(139,310,o),
(139,256,cs)
);
},
{
closed = 1;
nodes = (
(930,619,o),
(936,635,o),
(948,654,cs),
(960,673,o),
(977,696,o),
(1000,722,c),
(1000,582,l),
(977,582,o),
(960,584,o),
(948,587,c),
(936,592,o),
(930,598,o),
(930,605,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 123 values pushed */
38 24 2 4 2 39 35 21 20 4 5 4 40 19 2 10 5 14 10 2 1 10 4 1 8 0 5 76 0 10 5 1 5 10 1 128 0 4 6 1 5 10 4 5 105 15 1 1 0 9 7 1 9 106 16 14 2 7 12 1 0 8 7 0 106 3 1 2 2 17 77 0 8 8 11 98 13 1 11 11 19 11 78 18 18 9 9 18 89 18 89 81 80 79 77 71 69 65 64 56 55 51 49 43 41 37 36 33 31 30 28 26 25 23 22 9 17 9 17 21 17 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1786;
unicode = 6022;
},
{
glyphname = uni1787;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(721,290,l),
(442,111,l),
(442,956,l),
(298,1070,l),
(453,1168,l),
(652,1001,l),
(838,1001,ls),
(941,1001,o),
(1021,1019,o),
(1078,1054,cs),
(1135,1090,o),
(1163,1142,o),
(1163,1210,cs),
(1163,1288,o),
(1149,1346,o),
(1122,1385,cs),
(1094,1424,o),
(1052,1443,o),
(997,1443,cs),
(960,1443,o),
(931,1436,o),
(912,1421,cs),
(893,1405,o),
(884,1381,o),
(884,1350,c),
(923,1350,o),
(953,1338,o),
(972,1314,cs),
(991,1291,o),
(1001,1257,o),
(1001,1210,cs),
(1001,1175,o),
(988,1147,o),
(961,1126,cs),
(933,1105,o),
(892,1094,o),
(838,1094,cs),
(795,1094,l),
(545,1303,l),
(493,1303,l),
(186,1110,l),
(186,1039,l),
(279,966,l),
(279,0,l),
(442,0,l),
(721,180,l),
(1001,0,l),
(1163,0,l),
(1163,861,l),
(1001,861,l),
(1001,111,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
35 9 2 4 3 36 8 2 7 4 37 7 2 0 7 40 39 38 4 4 1 0 4 76 0 6 5 6 133 0 5 3 5 133 0 4 0 7 0 4 7 104 0 3 3 17 77 0 0 0 1 95 2 1 1 1 19 1 78 38 35 22 33 20 18 17 16 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1787;
unicode = 6023;
},
{
glyphname = uni1788;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l),
(442,349,l),
(488,349,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1075,l),
(637,1163,l),
(1000,998,l),
(1000,233,ls),
(1000,155,o),
(1033,97,o),
(1099,58,cs),
(1165,19,o),
(1264,0,o),
(1396,0,cs),
(1489,0,ls),
(1568,0,o),
(1633,5,o),
(1685,14,cs),
(1736,23,o),
(1773,36,o),
(1796,55,c),
(1819,36,o),
(1858,23,o),
(1912,14,cs),
(1965,5,o),
(2034,0,o),
(2118,0,cs),
(2211,0,ls),
(2342,0,o),
(2441,19,o),
(2508,58,cs),
(2573,97,o),
(2606,155,o),
(2606,233,cs),
(2606,869,l),
(2386,1009,l),
(2476,1125,l),
(2549,1079,ls),
(2583,1058,o),
(2615,1047,o),
(2645,1047,cs),
(2676,1047,o),
(2718,1094,o),
(2769,1187,c),
(2723,1187,ls),
(2697,1187,o),
(2665,1199,o),
(2627,1223,cs),
(2497,1303,l),
(2280,1025,l),
(2280,965,l),
(2443,862,l),
(2443,233,ls),
(2443,186,o),
(2424,151,o),
(2386,128,cs),
(2347,105,o),
(2288,93,o),
(2211,93,cs),
(2118,93,ls),
(2040,93,o),
(1982,105,o),
(1943,128,cs),
(1904,151,o),
(1885,186,o),
(1885,233,cs),
(1885,869,l),
(1664,1009,l),
(1754,1125,l),
(1828,1079,ls),
(1861,1058,o),
(1893,1047,o),
(1924,1047,cs),
(1955,1047,o),
(1996,1094,o),
(2048,1187,c),
(2001,1187,ls),
(1975,1187,o),
(1943,1199,o),
(1905,1223,cs),
(1776,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1702,151,o),
(1663,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1261,105,o),
(1222,128,cs),
(1183,151,o),
(1163,186,o),
(1163,233,cs),
(1163,1103,l),
(721,1303,l),
(279,1104,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 106 values pushed */
91 66 43 41 28 27 6 7 6 93 92 81 80 79 68 67 56 55 54 26 11 3 7 2 1 5 0 16 1 1 5 4 76 82 57 42 3 6 74 9 1 6 10 1 7 3 6 7 105 0 3 11 1 0 5 3 0 105 8 1 5 5 1 97 4 2 12 3 1 1 19 1 78 13 11 1 0 89 87 86 84 75 72 64 62 61 59 50 47 40 39 31 29 22 19 11 97 13 97 0 10 1 10 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2885;
}
);
note = uni1788;
unicode = 6024;
},
{
glyphname = uni1789;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1885,-217,o),
(1871,-171,o),
(1844,-140,cs),
(1817,-109,o),
(1777,-93,o),
(1723,-93,cs),
(1684,-93,o),
(1654,-101,o),
(1635,-116,cs),
(1616,-132,o),
(1606,-155,o),
(1606,-186,c),
(1645,-186,o),
(1674,-194,o),
(1693,-209,cs),
(1713,-225,o),
(1723,-248,o),
(1723,-279,cs),
(1723,-341,o),
(1709,-388,o),
(1680,-419,cs),
(1651,-450,o),
(1609,-465,o),
(1552,-465,cs),
(1493,-465,o),
(1438,-456,o),
(1385,-437,cs),
(1332,-418,o),
(1283,-388,o),
(1237,-349,cs),
(1154,-279,o),
(1060,-227,o),
(956,-192,cs),
(851,-157,o),
(736,-140,o),
(611,-140,cs),
(547,-140,o),
(487,-147,o),
(432,-160,cs),
(320,-189,o),
(279,-207,o),
(279,-270,cs),
(279,-317,l),
(325,-289,o),
(376,-268,o),
(432,-253,cs),
(487,-240,o),
(547,-233,o),
(611,-233,cs),
(691,-233,o),
(770,-248,o),
(847,-279,cs),
(924,-310,o),
(999,-357,o),
(1073,-419,cs),
(1128,-466,o),
(1196,-500,o),
(1276,-523,cs),
(1356,-547,o),
(1448,-559,o),
(1552,-559,cs),
(1663,-559,o),
(1747,-536,o),
(1802,-489,cs),
(1857,-442,o),
(1885,-372,o),
(1885,-279,cs)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,0,l),
(1163,0,l),
(1163,1039,l),
(1373,1155,l),
(1722,961,l),
(1722,0,l),
(1885,0,l),
(1885,1054,l),
(1443,1303,l),
(1100,1110,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,0,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
48 1 7 6 16 1 3 1 2 76 87 86 85 84 83 70 69 68 67 66 63 62 61 58 14 9 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 7 2 7 5 2 128 0 4 2 1 2 4 1 128 0 9 11 1 6 7 9 6 105 0 2 0 1 3 2 1 105 10 8 2 7 7 19 77 0 3 3 0 98 0 0 0 20 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 4 2 1 2 4 1 128 0 9 11 1 6 7 9 6 105 10 8 2 7 7 19 77 0 5 5 18 77 0 1 1 2 97 0 2 2 18 77 0 3 3 0 98 0 0 0 20 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 4 2 1 2 4 1 128 0 9 11 1 6 7 9 6 105 0 3 0 0 3 0 102 10 8 2 7 7 19 77 0 5 5 18 77 0 1 1 2 97 0 2 2 18 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 4 2 1 2 4 1 128 0 9 11 1 6 7 9 6 105 0 2 0 1 3 2 1 105 0 3 0 0 3 0 102 10 8 2 7 7 19 77 0 5 5 18 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
47 46 82 81 73 71 65 64 60 59 46 56 47 56 35 22 38 40 38 35 12 7 28 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni1789;
unicode = 6025;
},
{
glyphname = uni178A;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(597,1094,o),
(539,1100,o),
(501,1112,cs),
(462,1123,o),
(442,1140,o),
(442,1164,cs),
(442,1195,o),
(450,1210,o),
(466,1210,cs),
(481,1210,o),
(489,1195,o),
(489,1164,c),
(520,1164,o),
(543,1170,o),
(558,1181,cs),
(574,1193,o),
(582,1210,o),
(582,1233,cs),
(582,1256,o),
(572,1274,o),
(553,1286,cs),
(533,1297,o),
(503,1303,o),
(464,1303,cs),
(403,1303,o),
(357,1291,o),
(326,1268,cs),
(295,1245,o),
(279,1210,o),
(279,1164,cs),
(279,1109,o),
(312,1069,o),
(378,1042,cs),
(443,1015,o),
(542,1001,o),
(675,1001,cs),
(768,1001,ls),
(900,1001,o),
(999,1019,o),
(1065,1056,cs),
(1130,1093,o),
(1163,1148,o),
(1163,1221,cs),
(1163,1295,o),
(1148,1351,o),
(1117,1388,cs),
(1086,1425,o),
(1039,1443,o),
(977,1443,cs),
(946,1443,o),
(923,1435,o),
(907,1420,cs),
(892,1404,o),
(884,1381,o),
(884,1350,c),
(923,1350,o),
(952,1339,o),
(972,1318,cs),
(991,1297,o),
(1000,1264,o),
(1000,1221,cs),
(1000,1179,o),
(981,1147,o),
(942,1125,cs),
(903,1104,o),
(845,1094,o),
(768,1094,cs),
(675,1094,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(721,180,l),
(1000,0,l),
(1163,0,l),
(1163,861,l),
(1000,861,l),
(1000,111,l),
(721,290,l),
(442,111,l),
(442,861,l),
(279,861,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
57 52 47 3 8 7 1 76 0 5 6 0 6 5 114 0 2 0 1 4 2 1 105 11 1 0 0 3 7 0 3 105 0 6 6 4 97 0 4 4 17 77 10 1 7 7 8 95 9 1 8 8 19 8 78 2 0 56 55 54 53 51 50 49 48 41 39 38 37 31 29 23 20 14 12 9 8 0 45 2 45 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178A;
unicode = 6026;
},
{
glyphname = uni178B;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248,954,o),
(225,959,o),
(209,969,cs),
(194,978,o),
(186,993,o),
(186,1014,cs),
(186,1028,o),
(194,1047,o),
(209,1072,cs),
(225,1097,o),
(248,1128,o),
(279,1163,c),
(279,954,l)
);
},
{
closed = 1;
nodes = (
(93,960,o),
(109,921,o),
(140,897,cs),
(171,873,o),
(217,861,o),
(279,861,c),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(444,19,o),
(543,0,o),
(675,0,cs),
(768,0,ls),
(900,0,o),
(999,19,o),
(1065,58,cs),
(1131,97,o),
(1164,155,o),
(1164,233,cs),
(1164,869,l),
(935,1014,l),
(986,1113,l),
(1025,1091,o),
(1059,1075,o),
(1089,1064,cs),
(1119,1053,o),
(1144,1047,o),
(1165,1047,cs),
(1211,1047,o),
(1246,1067,o),
(1269,1106,cs),
(1292,1145,o),
(1303,1203,o),
(1303,1280,cs),
(1303,1350,o),
(1291,1402,o),
(1268,1437,cs),
(1245,1472,o),
(1210,1489,o),
(1164,1489,cs),
(1133,1489,o),
(1109,1481,o),
(1094,1466,cs),
(1078,1451,o),
(1070,1427,o),
(1070,1396,c),
(1117,1396,o),
(1152,1387,o),
(1175,1368,cs),
(1198,1349,o),
(1210,1319,o),
(1210,1280,cs),
(1210,1257,o),
(1207,1240,o),
(1202,1228,cs),
(1196,1216,o),
(1188,1210,o),
(1177,1210,cs),
(1154,1210,o),
(1116,1226,o),
(1061,1258,cs),
(981,1303,l),
(838,1027,l),
(838,965,l),
(1001,862,l),
(1001,233,ls),
(1001,186,o),
(981,151,o),
(942,128,cs),
(903,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(501,128,cs),
(462,151,o),
(442,186,o),
(442,233,cs),
(442,1303,l),
(279,1303,l),
(186,1198,ls),
(155,1163,o),
(132,1129,o),
(116,1098,cs),
(101,1067,o),
(93,1039,o),
(93,1013,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
66 1 2 8 5 67 38 37 3 0 8 68 36 2 2 0 3 76 39 1 3 1 75 0 7 0 6 3 7 6 105 0 5 0 8 0 5 8 105 9 1 0 0 2 4 0 2 105 0 3 3 17 77 0 4 4 1 97 10 1 1 1 19 1 78 11 9 0 0 63 61 55 53 50 49 42 41 32 29 25 24 16 15 9 72 11 72 0 8 0 8 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178B;
unicode = 6027;
},
{
glyphname = uni178C;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(457,908,o),
(469,906,o),
(476,902,cs),
(484,898,o),
(488,892,o),
(488,884,cs),
(488,869,o),
(484,858,o),
(476,850,cs),
(469,843,o),
(457,839,o),
(442,839,c),
(442,908,l)
);
},
{
closed = 1;
nodes = (
(279,186,o),
(300,117,o),
(343,71,cs),
(386,24,o),
(450,1,o),
(536,1,cs),
(564,1,l),
(1001,250,l),
(1001,117,ls),
(1001,101,o),
(991,89,o),
(972,82,cs),
(953,74,o),
(923,70,o),
(884,70,c),
(884,31,o),
(894,1,o),
(914,-18,cs),
(933,-37,o),
(962,-47,o),
(1001,-47,cs),
(1055,-47,o),
(1095,-33,o),
(1122,-6,cs),
(1149,21,o),
(1163,61,o),
(1163,115,cs),
(1163,535,l),
(1001,535,l),
(1001,357,l),
(541,94,l),
(508,94,o),
(483,109,o),
(467,140,cs),
(450,171,o),
(442,216,o),
(442,277,cs),
(442,415,l),
(1018,702,ls),
(1115,751,o),
(1163,826,o),
(1163,925,cs),
(1163,1056,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,838,ls),
(279,807,o),
(293,783,o),
(320,768,cs),
(347,753,o),
(388,745,o),
(442,745,cs),
(489,745,o),
(524,757,o),
(547,780,cs),
(570,803,o),
(582,838,o),
(582,884,cs),
(582,923,o),
(570,952,o),
(547,972,cs),
(524,991,o),
(489,1001,o),
(442,1001,c),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,925,ls),
(1000,840,o),
(983,789,o),
(949,772,cs),
(279,438,l),
(279,278,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
5 0 2 0 5 63 33 26 10 4 7 1 2 76 59 58 57 56 55 41 40 39 38 37 10 5 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 5 0 0 5 112 0 3 7 4 7 3 4 128 0 0 0 6 1 0 6 106 8 1 7 7 4 97 0 4 4 19 77 0 1 1 2 97 0 2 2 19 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 0 5 133 0 3 7 4 7 3 4 128 0 0 0 6 1 0 6 106 8 1 7 7 4 97 0 4 4 19 77 0 1 1 2 97 0 2 2 19 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 0 5 133 0 3 7 4 7 3 4 128 0 0 0 6 1 0 6 106 0 1 0 2 1 2 101 8 1 7 7 4 97 0 4 4 19 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
9 9 9 67 9 67 38 29 37 19 36 25 17 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178C;
unicode = 6028;
},
{
glyphname = uni178D;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l),
(442,349,l),
(488,349,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,419,l),
(954,419,o),
(919,405,o),
(896,378,cs),
(873,351,o),
(861,310,o),
(861,256,cs),
(861,215,o),
(867,178,o),
(879,146,cs),
(890,115,o),
(908,88,o),
(931,65,cs),
(1000,0,l),
(1163,0,l),
(1163,326,l),
(1233,326,ls),
(1280,326,o),
(1314,317,o),
(1337,299,cs),
(1361,281,o),
(1373,254,o),
(1373,217,cs),
(1373,144,o),
(1392,90,o),
(1431,54,cs),
(1470,18,o),
(1528,0,o),
(1606,0,cs),
(1699,0,o),
(1768,19,o),
(1815,58,cs),
(1862,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1664,1009,l),
(1754,1125,l),
(1828,1079,ls),
(1861,1058,o),
(1893,1047,o),
(1924,1047,cs),
(1955,1047,o),
(1996,1094,o),
(2048,1187,c),
(2001,1187,ls),
(1975,1187,o),
(1943,1199,o),
(1905,1223,cs),
(1776,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1712,151,o),
(1693,128,cs),
(1673,105,o),
(1644,93,o),
(1606,93,cs),
(1559,93,o),
(1524,103,o),
(1501,124,cs),
(1478,145,o),
(1466,176,o),
(1466,217,cs),
(1466,284,o),
(1447,335,o),
(1408,369,cs),
(1369,402,o),
(1311,419,o),
(1233,419,cs),
(1163,419,l),
(1163,1052,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,0,l)
);
},
{
closed = 1;
nodes = (
(954,279,o),
(958,296,o),
(965,308,cs),
(973,320,o),
(985,326,o),
(1000,326,c),
(1000,128,l),
(985,142,o),
(973,160,o),
(965,181,cs),
(958,202,o),
(954,227,o),
(954,256,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
95 93 80 79 77 76 48 21 8 5 4 78 50 49 38 37 36 6 10 5 15 2 2 3 1 3 76 94 39 2 4 74 0 4 0 5 10 4 5 105 0 10 12 1 0 1 10 0 105 9 1 2 7 1 1 3 2 1 105 0 3 3 6 95 11 8 2 6 6 19 6 78 1 0 92 91 83 81 75 74 66 65 64 62 56 54 46 44 43 41 32 30 24 22 17 16 0 10 1 10 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni178D;
unicode = 6029;
},
{
glyphname = uni178E;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l),
(442,349,l),
(488,349,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1075,l),
(637,1163,l),
(1000,998,l),
(1000,0,l),
(1163,0,l),
(1443,180,l),
(1722,0,l),
(1885,0,l),
(1885,1075,l),
(2080,1163,l),
(2443,998,l),
(2443,0,l),
(2606,0,l),
(2606,1103,l),
(2164,1303,l),
(1722,1104,l),
(1722,111,l),
(1443,290,l),
(1163,111,l),
(1163,1103,l),
(721,1303,l),
(279,1104,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
42 41 40 19 2 5 1 0 1 76 44 43 39 38 37 24 23 22 16 15 14 11 12 4 74 0 4 6 1 0 1 4 0 105 5 3 2 3 1 1 19 1 78 1 0 36 35 27 25 21 20 18 17 13 12 0 10 1 10 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2885;
}
);
note = uni178E;
unicode = 6030;
},
{
glyphname = uni178F;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1052,1037,o),
(1095,1024,o),
(1138,1024,cs),
(1181,1024,o),
(1221,1071,o),
(1256,1165,c),
(1203,1165,ls),
(1172,1165,o),
(1142,1173,o),
(1115,1190,cs),
(930,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(513,1303,l),
(186,1137,l),
(186,1085,l),
(299,996,ls),
(320,980,o),
(340,972,o),
(361,972,cs),
(363,972,ls),
(384,972,o),
(411,990,o),
(443,1025,c),
(331,1105,l),
(456,1170,l),
(686,1024,l),
(716,1024,l),
(863,1154,l),
(1010,1062,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(543,442,o),
(489,442,cs),
(442,442,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1001,745,o),
(1001,698,cs),
(1001,0,l),
(1163,0,l),
(1163,698,ls),
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(651,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(489,349,ls),
(512,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
16 4 2 4 2 13 12 6 5 1 5 0 4 28 1 7 6 3 76 0 1 0 11 0 1 11 128 0 4 5 1 0 1 4 0 105 0 11 0 8 9 11 8 105 0 9 12 1 6 7 9 6 106 3 1 2 2 17 77 10 1 7 7 19 7 78 27 26 67 64 60 59 51 49 45 42 38 37 26 36 27 36 33 34 18 20 52 18 13 7 28 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178F;
unicode = 6031;
},
{
glyphname = uni1790;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(978,582,o),
(960,584,o),
(948,587,c),
(937,592,o),
(931,598,o),
(931,605,cs),
(931,619,o),
(937,635,o),
(948,654,cs),
(960,673,o),
(978,696,o),
(1001,722,c),
(1001,582,l)
);
},
{
closed = 1;
nodes = (
(279,966,l),
(279,233,ls),
(279,155,o),
(308,97,o),
(367,58,cs),
(425,19,o),
(512,0,o),
(628,0,cs),
(814,0,ls),
(930,0,o),
(1017,19,o),
(1076,58,cs),
(1134,97,o),
(1163,155,o),
(1163,233,cs),
(1163,861,l),
(1001,861,l),
(928,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(838,629,o),
(838,604,cs),
(838,565,o),
(852,537,o),
(879,518,cs),
(906,499,o),
(947,489,o),
(1001,489,c),
(1001,233,ls),
(1001,186,o),
(985,151,o),
(954,128,cs),
(923,105,o),
(876,93,o),
(814,93,cs),
(628,93,ls),
(566,93,o),
(520,105,o),
(489,128,cs),
(458,151,o),
(442,186,o),
(442,233,cs),
(442,956,l),
(298,1070,l),
(453,1168,l),
(652,1001,l),
(838,1001,ls),
(941,1001,o),
(1021,1019,o),
(1078,1054,cs),
(1135,1090,o),
(1163,1142,o),
(1163,1210,cs),
(1163,1288,o),
(1149,1346,o),
(1122,1385,cs),
(1094,1424,o),
(1052,1443,o),
(997,1443,cs),
(960,1443,o),
(931,1436,o),
(912,1421,cs),
(893,1405,o),
(884,1381,o),
(884,1350,c),
(923,1350,o),
(953,1338,o),
(972,1314,cs),
(991,1291,o),
(1001,1257,o),
(1001,1210,cs),
(1001,1175,o),
(988,1147,o),
(961,1126,cs),
(933,1105,o),
(892,1094,o),
(838,1094,cs),
(795,1094,l),
(545,1303,l),
(493,1303,l),
(186,1110,l),
(186,1039,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
49 23 2 4 3 50 22 2 7 4 51 21 2 1 7 5 1 2 0 1 4 76 0 6 5 6 133 0 5 3 5 133 0 1 7 0 7 1 0 128 0 4 0 7 1 4 7 104 10 1 0 0 9 8 0 9 105 0 3 3 17 77 0 8 8 2 95 0 2 2 19 2 78 0 0 63 62 58 55 48 46 40 38 35 34 28 26 25 24 17 14 10 9 0 8 0 8 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1790;
unicode = 6032;
},
{
glyphname = uni1791;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1046,652,o),
(1070,643,o),
(1070,625,cs),
(1070,606,o),
(1046,597,o),
(998,597,cs),
(942,597,l),
(942,634,o),
(961,652,o),
(998,652,cs)
);
},
{
closed = 1;
nodes = (
(279,711,o),
(316,633,o),
(390,581,cs),
(464,530,o),
(575,504,o),
(722,504,cs),
(779,504,l),
(779,280,ls),
(779,218,o),
(772,172,o),
(759,141,cs),
(746,110,o),
(725,94,o),
(698,94,cs),
(667,94,o),
(643,100,o),
(628,111,cs),
(613,122,o),
(605,140,o),
(605,163,cs),
(605,280,ls),
(605,327,o),
(596,361,o),
(579,384,cs),
(561,408,o),
(534,420,o),
(499,420,cs),
(456,420,o),
(425,412,o),
(404,397,cs),
(383,381,o),
(373,358,o),
(373,327,c),
(419,327,o),
(442,311,o),
(442,280,cs),
(442,163,ls),
(442,108,o),
(463,68,o),
(506,41,cs),
(549,14,o),
(613,0,o),
(698,0,cs),
(779,0,o),
(840,23,o),
(881,70,cs),
(922,117,o),
(942,188,o),
(942,281,cs),
(942,504,l),
(998,504,ls),
(1053,504,o),
(1094,514,o),
(1121,534,cs),
(1149,554,o),
(1163,585,o),
(1163,626,cs),
(1163,665,o),
(1149,695,o),
(1121,715,cs),
(1094,736,o),
(1053,746,o),
(998,746,cs),
(925,746,o),
(871,733,o),
(834,708,cs),
(797,683,o),
(779,646,o),
(779,597,c),
(722,597,ls),
(629,597,o),
(559,615,o),
(512,651,cs),
(465,688,o),
(442,742,o),
(442,815,cs),
(442,1031,ls),
(442,1091,o),
(465,1136,o),
(512,1165,cs),
(559,1195,o),
(628,1210,o),
(721,1210,cs),
(814,1210,o),
(885,1195,o),
(932,1165,cs),
(978,1136,o),
(1001,1091,o),
(1001,1031,cs),
(1001,996,o),
(989,978,o),
(966,978,cs),
(943,978,o),
(931,993,o),
(931,1024,c),
(869,1024,o),
(838,1001,o),
(838,954,cs),
(838,907,o),
(882,884,o),
(970,884,cs),
(1099,884,o),
(1163,933,o),
(1163,1031,cs),
(1163,1122,o),
(1126,1190,o),
(1053,1235,cs),
(979,1280,o),
(868,1303,o),
(721,1303,cs),
(574,1303,o),
(464,1280,o),
(390,1235,cs),
(316,1190,o),
(279,1122,o),
(279,1031,cs),
(279,815,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
0 13 2 14 14 13 114 0 8 5 7 5 8 7 128 0 7 9 5 7 9 126 0 14 0 12 4 14 12 106 0 4 15 1 0 1 4 0 105 3 1 1 10 1 5 8 1 5 105 0 2 2 11 97 0 11 11 17 77 0 9 9 6 97 0 6 6 19 6 78 1 0 87 85 84 83 81 79 75 73 66 64 60 58 51 49 46 45 40 38 34 32 26 24 21 19 12 10 4 2 0 6 1 6 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1791;
unicode = 6033;
},
{
glyphname = uni1792;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(978,582,o),
(960,584,o),
(948,587,c),
(937,592,o),
(931,598,o),
(931,605,cs),
(931,619,o),
(937,635,o),
(948,654,cs),
(960,673,o),
(978,696,o),
(1001,722,c),
(1001,582,l)
);
},
{
closed = 1;
nodes = (
(279,977,l),
(279,0,l),
(442,0,l),
(721,180,l),
(1001,0,l),
(1163,0,l),
(1163,861,l),
(1001,861,l),
(928,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(838,629,o),
(838,604,cs),
(838,565,o),
(852,537,o),
(879,518,cs),
(906,499,o),
(947,489,o),
(1001,489,c),
(1001,111,l),
(721,290,l),
(442,111,l),
(442,977,l),
(331,1105,l),
(456,1170,l),
(686,1024,l),
(716,1024,l),
(863,1154,l),
(1010,1062,ls),
(1052,1037,o),
(1095,1024,o),
(1138,1024,cs),
(1181,1024,o),
(1221,1071,o),
(1256,1165,c),
(1203,1165,ls),
(1172,1165,o),
(1142,1173,o),
(1115,1190,cs),
(930,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(513,1303,l),
(186,1137,l),
(186,1085,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
35 21 2 6 4 36 32 18 17 4 7 6 37 16 2 1 7 5 1 2 0 1 40 39 38 13 4 2 9 5 76 0 6 8 1 7 1 6 7 105 10 1 0 0 9 2 0 9 106 5 1 4 4 17 77 0 1 1 2 95 3 1 2 2 19 2 78 0 0 42 41 34 33 30 28 27 25 23 22 20 19 15 14 12 11 10 9 0 8 0 8 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1792;
unicode = 6034;
},
{
glyphname = uni1793;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,861,o),
(960,867,o),
(948,879,cs),
(937,890,o),
(931,908,o),
(931,931,cs),
(931,938,o),
(937,944,o),
(948,949,c),
(960,952,o),
(977,954,o),
(1000,954,c),
(1000,861,l)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(442,233,l),
(480,233,o),
(513,226,o),
(542,211,cs),
(571,196,o),
(597,174,o),
(618,145,cs),
(652,97,o),
(692,61,o),
(737,36,cs),
(782,12,o),
(832,0,o),
(887,0,cs),
(980,0,o),
(1049,18,o),
(1094,54,cs),
(1140,91,o),
(1163,145,o),
(1163,217,cs),
(1163,529,l),
(512,752,ls),
(465,768,o),
(442,807,o),
(442,869,cs),
(442,1086,ls),
(442,1128,o),
(465,1159,o),
(512,1179,cs),
(559,1200,o),
(628,1210,o),
(721,1210,cs),
(814,1210,o),
(884,1200,o),
(931,1179,cs),
(977,1159,o),
(1000,1128,o),
(1000,1086,cs),
(1000,1047,l),
(946,1047,o),
(906,1037,o),
(879,1018,cs),
(852,999,o),
(838,970,o),
(838,931,cs),
(838,876,o),
(852,836,o),
(879,809,cs),
(906,782,o),
(946,768,o),
(1000,768,cs),
(1054,768,o),
(1095,776,o),
(1122,791,cs),
(1149,806,o),
(1163,829,o),
(1163,860,cs),
(1163,1086,ls),
(1163,1158,o),
(1126,1212,o),
(1053,1249,cs),
(979,1285,o),
(868,1303,o),
(721,1303,cs),
(574,1303,o),
(464,1285,o),
(390,1249,cs),
(316,1212,o),
(279,1158,o),
(279,1086,cs),
(279,869,ls),
(279,824,o),
(296,785,o),
(331,750,cs),
(365,715,o),
(417,686,o),
(487,663,cs),
(1001,487,l),
(1001,217,ls),
(1001,176,o),
(992,145,o),
(973,125,cs),
(954,104,o),
(925,94,o),
(887,94,cs),
(850,94,o),
(816,104,o),
(784,123,cs),
(751,142,o),
(721,171,o),
(693,209,cs),
(665,248,o),
(630,278,o),
(588,297,cs),
(547,316,o),
(498,326,o),
(442,326,c),
(442,543,l),
(279,543,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
75 44 2 10 9 1 76 0 4 0 0 1 4 0 105 12 1 1 0 3 9 1 3 105 0 10 0 7 11 10 7 105 0 5 5 2 97 0 2 2 17 77 0 9 9 6 97 8 1 6 6 19 77 0 11 11 6 97 8 1 6 6 19 6 78 0 0 71 69 63 62 61 60 59 58 57 56 50 48 37 35 31 30 24 22 15 13 0 8 0 8 17 13 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1793;
unicode = 6035;
},
{
glyphname = uni1794;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(899,0,o),
(998,19,o),
(1065,58,cs),
(1130,97,o),
(1163,155,o),
(1163,233,cs),
(1163,869,l),
(943,1009,l),
(1033,1125,l),
(1106,1079,ls),
(1140,1058,o),
(1172,1047,o),
(1202,1047,cs),
(1233,1047,o),
(1275,1094,o),
(1326,1187,c),
(1280,1187,ls),
(1254,1187,o),
(1222,1199,o),
(1184,1223,cs),
(1054,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,233,ls),
(1000,186,o),
(981,151,o),
(943,128,cs),
(904,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(500,128,cs),
(461,151,o),
(442,186,o),
(442,233,cs),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(443,19,o),
(542,0,o),
(675,0,cs),
(768,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
43 18 2 2 1 45 44 33 32 31 20 19 8 7 6 10 3 2 2 76 34 9 2 1 74 4 1 1 5 1 2 3 1 2 105 0 3 3 0 97 6 1 0 0 19 0 78 2 0 41 39 38 36 27 24 16 14 13 11 0 49 2 49 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1794;
unicode = 6036;
},
{
glyphname = uni1795;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(978,582,o),
(960,584,o),
(948,587,c),
(937,592,o),
(931,598,o),
(931,605,cs),
(931,619,o),
(937,635,o),
(948,654,cs),
(960,673,o),
(978,696,o),
(1001,722,c),
(1001,582,l)
);
},
{
closed = 1;
nodes = (
(279,966,l),
(279,0,l),
(442,0,l),
(721,180,l),
(1001,0,l),
(1163,0,l),
(1163,861,l),
(1001,861,l),
(928,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(838,629,o),
(838,604,cs),
(838,565,o),
(852,537,o),
(879,518,cs),
(906,499,o),
(947,489,o),
(1001,489,c),
(1001,111,l),
(721,290,l),
(442,111,l),
(442,956,l),
(298,1070,l),
(453,1168,l),
(652,1001,l),
(838,1001,ls),
(941,1001,o),
(1021,1019,o),
(1078,1054,cs),
(1135,1090,o),
(1163,1142,o),
(1163,1210,cs),
(1163,1288,o),
(1149,1346,o),
(1122,1385,cs),
(1094,1424,o),
(1052,1443,o),
(997,1443,cs),
(960,1443,o),
(931,1436,o),
(912,1421,cs),
(893,1405,o),
(884,1381,o),
(884,1350,c),
(923,1350,o),
(953,1338,o),
(972,1314,cs),
(991,1291,o),
(1001,1257,o),
(1001,1210,cs),
(1001,1175,o),
(988,1147,o),
(961,1126,cs),
(933,1105,o),
(892,1094,o),
(838,1094,cs),
(795,1094,l),
(545,1303,l),
(493,1303,l),
(186,1110,l),
(186,1039,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
44 18 2 5 4 45 17 2 8 5 46 16 2 1 8 5 1 2 0 1 49 48 47 13 4 2 9 5 76 0 7 6 7 133 0 6 4 6 133 0 5 0 8 1 5 8 104 10 1 0 0 9 2 0 9 105 0 4 4 17 77 0 1 1 2 95 3 1 2 2 19 2 78 0 0 51 50 43 41 35 33 30 29 23 21 20 19 15 14 12 11 10 9 0 8 0 8 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1795;
unicode = 6037;
},
{
glyphname = uni1796;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l),
(442,349,l),
(488,349,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,0,l),
(1163,0,l),
(1163,1052,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
2 1 1 0 1 76 34 33 32 19 18 17 16 15 12 9 2 74 0 2 4 1 0 1 2 0 105 3 1 1 1 19 1 78 1 0 31 30 22 20 14 13 0 10 1 10 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1796;
unicode = 6038;
},
{
glyphname = uni1797;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1052,1037,o),
(1095,1024,o),
(1138,1024,cs),
(1181,1024,o),
(1221,1071,o),
(1256,1165,c),
(1203,1165,ls),
(1172,1165,o),
(1142,1173,o),
(1115,1190,cs),
(930,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(513,1303,l),
(186,1137,l),
(186,1085,l),
(299,996,ls),
(320,980,o),
(340,972,o),
(361,972,cs),
(363,972,ls),
(385,972,o),
(412,990,o),
(443,1025,c),
(331,1105,l),
(456,1170,l),
(686,1024,l),
(716,1024,l),
(863,1154,l),
(1010,1062,ls)
);
},
{
closed = 1;
nodes = (
(93,276,o),
(99,249,o),
(112,220,cs),
(124,191,o),
(142,162,o),
(167,133,cs),
(279,0,l),
(442,0,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(652,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(949,802,cs),
(984,779,o),
(1001,745,o),
(1001,698,cs),
(1001,0,l),
(1164,0,l),
(1164,698,ls),
(1164,776,o),
(1133,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(652,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,442,l),
(233,442,ls),
(186,442,o),
(151,431,o),
(128,408,cs),
(105,384,o),
(93,349,o),
(93,303,cs)
);
},
{
closed = 1;
nodes = (
(186,318,o),
(190,330,o),
(197,337,cs),
(205,345,o),
(217,349,o),
(233,349,cs),
(279,349,l),
(279,145,l),
(235,197,ls),
(218,217,o),
(206,236,o),
(198,253,cs),
(190,270,o),
(186,287,o),
(186,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
16 4 2 4 2 13 12 6 5 1 5 0 4 27 1 7 6 3 76 0 1 0 11 0 1 11 128 0 4 5 1 0 1 4 0 105 0 11 0 8 10 11 8 105 0 10 0 6 7 10 6 105 3 1 2 2 17 77 9 1 7 7 19 7 78 67 64 60 58 50 49 52 23 35 33 34 18 20 52 18 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1797;
unicode = 6039;
},
{
glyphname = uni1798;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(899,0,o),
(998,19,o),
(1065,58,cs),
(1130,97,o),
(1163,155,o),
(1163,233,cs),
(1163,869,l),
(943,1009,l),
(1033,1125,l),
(1106,1079,ls),
(1140,1058,o),
(1172,1047,o),
(1202,1047,cs),
(1233,1047,o),
(1275,1094,o),
(1326,1187,c),
(1280,1187,ls),
(1254,1187,o),
(1222,1199,o),
(1184,1223,cs),
(1054,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,652,l),
(442,652,l),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(443,19,o),
(542,0,o),
(675,0,cs),
(768,0,ls)
);
},
{
closed = 1;
nodes = (
(442,559,l),
(1000,559,l),
(1000,233,ls),
(1000,186,o),
(981,151,o),
(943,128,cs),
(904,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(500,128,cs),
(461,151,o),
(442,186,o),
(442,233,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
35 18 2 2 1 37 36 25 24 23 20 19 8 7 6 10 3 2 2 76 26 9 2 1 74 4 1 1 5 1 2 3 1 2 105 0 3 0 6 7 3 6 103 0 7 7 0 97 8 1 0 0 19 0 78 2 0 51 48 44 43 33 31 30 28 22 21 16 14 13 11 0 41 2 41 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1798;
unicode = 6040;
},
{
glyphname = uni1799;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(473,1128,o),
(496,1097,o),
(512,1072,cs),
(527,1047,o),
(535,1028,o),
(535,1014,cs),
(535,993,o),
(527,978,o),
(512,969,cs),
(496,959,o),
(473,954,o),
(442,954,c),
(442,1163,l)
);
},
{
closed = 1;
nodes = (
(279,155,o),
(312,97,o),
(378,58,cs),
(443,19,o),
(542,0,o),
(675,0,cs),
(768,0,ls),
(847,0,o),
(912,5,o),
(963,14,cs),
(1014,23,o),
(1052,36,o),
(1075,55,c),
(1098,36,o),
(1136,23,o),
(1190,14,cs),
(1243,5,o),
(1312,0,o),
(1396,0,cs),
(1489,0,ls),
(1621,0,o),
(1720,19,o),
(1786,58,cs),
(1852,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1664,1009,l),
(1754,1125,l),
(1828,1079,ls),
(1861,1058,o),
(1893,1047,o),
(1924,1047,cs),
(1955,1047,o),
(1996,1094,o),
(2048,1187,c),
(2001,1187,ls),
(1975,1187,o),
(1943,1199,o),
(1905,1223,cs),
(1776,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1703,151,o),
(1664,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1260,105,o),
(1221,128,cs),
(1182,151,o),
(1163,186,o),
(1163,233,cs),
(1163,869,l),
(943,1009,l),
(1033,1125,l),
(1107,1079,ls),
(1140,1058,o),
(1172,1047,o),
(1202,1047,cs),
(1233,1047,o),
(1275,1094,o),
(1326,1187,c),
(1280,1187,ls),
(1254,1187,o),
(1222,1199,o),
(1184,1223,cs),
(1054,1303,l),
(838,1025,l),
(838,965,l),
(1000,862,l),
(1000,233,ls),
(1000,186,o),
(981,151,o),
(942,128,cs),
(903,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(501,128,cs),
(462,151,o),
(442,186,o),
(442,233,cs),
(442,861,l),
(504,861,o),
(551,873,o),
(582,897,cs),
(613,921,o),
(628,960,o),
(628,1013,cs),
(628,1039,o),
(620,1067,o),
(605,1098,cs),
(590,1129,o),
(566,1163,o),
(535,1198,cs),
(442,1303,l),
(279,1303,l),
(279,233,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
82 57 0 3 7 6 83 72 71 58 47 46 6 0 7 84 70 59 45 4 4 0 14 1 1 5 4 76 73 48 2 3 74 9 1 6 10 1 7 0 6 7 105 0 0 0 4 5 0 4 105 0 3 3 17 77 8 1 5 5 1 97 2 11 2 1 1 19 1 78 11 9 80 78 77 75 66 63 55 53 52 50 41 38 34 33 25 24 20 17 9 88 11 88 17 12 7 23 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni1799;
unicode = 6041;
},
{
glyphname = uni179A;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,195,o),
(238,224,o),
(227,248,cs),
(215,271,o),
(209,290,o),
(209,303,cs),
(209,318,o),
(213,330,o),
(220,337,cs),
(228,345,o),
(240,349,o),
(256,349,cs),
(279,349,l),
(279,162,l)
);
},
{
closed = 1;
nodes = (
(116,280,o),
(123,253,o),
(136,222,cs),
(150,191,o),
(170,156,o),
(197,117,cs),
(279,0,l),
(442,0,l),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,442,l),
(256,442,ls),
(209,442,o),
(174,431,o),
(151,408,cs),
(128,384,o),
(116,349,o),
(116,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
36 1 4 3 26 25 24 11 4 2 4 0 1 1 0 3 76 27 1 3 74 0 3 0 4 2 3 4 105 0 2 0 0 1 2 0 105 0 1 1 19 1 78 33 38 40 25 33 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni179A;
unicode = 6042;
},
{
glyphname = uni179B;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l),
(442,349,l),
(488,349,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1075,l),
(637,1163,l),
(1000,998,l),
(1000,233,ls),
(1000,155,o),
(1033,97,o),
(1099,58,cs),
(1165,19,o),
(1264,0,o),
(1396,0,cs),
(1489,0,ls),
(1621,0,o),
(1720,19,o),
(1786,58,cs),
(1852,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1664,1009,l),
(1754,1125,l),
(1828,1079,ls),
(1861,1058,o),
(1893,1047,o),
(1924,1047,cs),
(1955,1047,o),
(1996,1094,o),
(2048,1187,c),
(2001,1187,ls),
(1975,1187,o),
(1943,1199,o),
(1905,1223,cs),
(1776,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1702,151,o),
(1663,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1261,105,o),
(1222,128,cs),
(1183,151,o),
(1163,186,o),
(1163,233,cs),
(1163,1103,l),
(721,1303,l),
(279,1104,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
57 34 32 19 18 5 6 5 59 58 47 46 45 17 6 2 6 2 1 4 0 3 76 48 33 2 5 74 0 5 0 6 2 5 6 105 0 2 7 1 0 4 2 0 105 0 4 4 1 97 3 8 2 1 1 19 1 78 13 11 1 0 55 53 52 50 41 38 31 30 22 20 11 63 13 63 0 10 1 10 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni179B;
unicode = 6043;
},
{
glyphname = uni179C;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,195,o),
(238,224,o),
(227,248,cs),
(215,271,o),
(209,290,o),
(209,303,cs),
(209,318,o),
(213,330,o),
(220,337,cs),
(228,345,o),
(240,349,o),
(256,349,cs),
(279,349,l),
(279,162,l)
);
},
{
closed = 1;
nodes = (
(116,280,o),
(123,253,o),
(136,222,cs),
(150,191,o),
(170,156,o),
(197,117,cs),
(279,0,l),
(442,0,l),
(442,869,l),
(213,1014,l),
(264,1113,l),
(303,1091,o),
(338,1075,o),
(367,1064,cs),
(397,1053,o),
(423,1047,o),
(444,1047,cs),
(490,1047,o),
(524,1067,o),
(547,1106,cs),
(570,1145,o),
(581,1203,o),
(581,1280,cs),
(581,1350,o),
(569,1402,o),
(546,1437,cs),
(523,1472,o),
(489,1489,o),
(442,1489,cs),
(411,1489,o),
(387,1481,o),
(372,1466,cs),
(357,1451,o),
(349,1427,o),
(349,1396,c),
(396,1396,o),
(430,1387,o),
(453,1368,cs),
(476,1349,o),
(488,1319,o),
(488,1280,cs),
(488,1257,o),
(485,1240,o),
(480,1228,cs),
(475,1216,o),
(466,1210,o),
(455,1210,cs),
(432,1210,o),
(394,1226,o),
(339,1258,cs),
(259,1303,l),
(116,1027,l),
(116,965,l),
(279,862,l),
(279,442,l),
(256,442,ls),
(209,442,o),
(174,431,o),
(151,408,cs),
(128,384,o),
(116,349,o),
(116,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
27 1 3 4 54 1 6 3 26 25 24 11 4 2 6 0 1 1 0 4 76 0 5 0 4 3 5 4 105 0 3 0 6 2 3 6 105 0 2 0 0 1 2 0 105 0 1 1 19 1 78 38 35 23 22 40 25 33 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni179C;
unicode = 6044;
},
{
glyphname = uni179D;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1051,1037,o),
(1094,1025,o),
(1138,1025,cs),
(1181,1025,o),
(1221,1072,o),
(1256,1165,c),
(1203,1165,ls),
(1172,1165,o),
(1142,1173,o),
(1115,1190,cs),
(930,1303,l),
(893,1303,l),
(749,1178,l),
(550,1303,l),
(513,1303,l),
(186,1137,l),
(186,1085,l),
(299,996,ls),
(320,980,o),
(340,972,o),
(361,972,cs),
(363,972,ls),
(384,972,o),
(411,990,o),
(443,1025,c),
(331,1105,l),
(456,1170,l),
(686,1025,l),
(716,1025,l),
(863,1154,l),
(1010,1062,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(442,48,l),
(547,192,ls),
(570,224,o),
(593,247,o),
(616,262,cs),
(639,275,o),
(668,282,o),
(705,282,cs),
(709,282,ls),
(748,282,o),
(776,297,o),
(791,326,cs),
(798,338,o),
(801,349,o),
(801,359,cs),
(801,375,o),
(794,389,o),
(780,402,cs),
(757,424,o),
(729,435,o),
(698,436,cs),
(667,436,o),
(636,428,o),
(605,413,cs),
(574,398,o),
(539,366,o),
(501,316,cs),
(442,239,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1001,745,o),
(1001,698,cs),
(1001,419,l),
(861,419,l),
(861,326,l),
(1001,326,l),
(1001,0,l),
(1163,0,l),
(1163,326,l),
(1210,326,ls),
(1241,326,o),
(1265,338,o),
(1280,361,cs),
(1295,384,o),
(1303,419,o),
(1303,465,c),
(1288,434,o),
(1257,419,o),
(1210,419,cs),
(1163,419,l),
(1163,698,ls),
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(651,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
16 4 2 4 2 13 12 5 1 4 0 4 62 1 6 15 36 1 11 10 46 27 2 8 7 5 76 6 1 0 1 75 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
16 4 2 4 2 13 12 5 1 4 0 4 62 1 6 15 36 1 11 6 46 27 2 8 7 5 76 6 1 0 1 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
16 4 2 4 2 13 12 5 1 4 0 4 62 1 6 15 36 1 11 10 46 27 2 8 7 5 76 6 1 0 1 75 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 9 0 1 9 128 0 4 5 1 0 1 4 0 105 0 9 0 15 6 9 15 105 14 1 10 13 1 11 7 10 11 106 0 6 0 7 8 6 7 105 3 1 2 2 17 77 12 1 8 8 19 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 9 0 1 9 128 0 4 5 1 0 1 4 0 105 0 9 0 15 6 9 15 105 13 1 11 7 6 11 90 14 10 2 6 0 7 8 6 7 106 3 1 2 2 17 77 12 1 8 8 19 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 9 0 1 9 128 0 4 5 1 0 1 4 0 105 0 9 0 15 6 9 15 105 14 1 10 13 1 11 7 10 11 106 0 6 0 7 8 6 7 105 3 1 2 2 17 77 12 1 8 8 19 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
80 77 73 72 71 70 69 68 67 65 61 59 55 52 21 54 38 33 34 18 20 52 18 16 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni179D;
unicode = 6045;
},
{
glyphname = uni179E;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(899,0,o),
(998,19,o),
(1065,58,cs),
(1130,97,o),
(1163,155,o),
(1163,233,cs),
(1163,559,l),
(1210,559,ls),
(1241,559,o),
(1264,571,o),
(1280,594,cs),
(1295,617,o),
(1303,651,o),
(1303,698,c),
(1288,667,o),
(1257,652,o),
(1210,652,cs),
(1163,652,l),
(1163,869,l),
(943,1009,l),
(1033,1125,l),
(1106,1079,ls),
(1140,1058,o),
(1172,1047,o),
(1202,1047,cs),
(1233,1047,o),
(1275,1094,o),
(1326,1187,c),
(1280,1187,ls),
(1254,1187,o),
(1222,1199,o),
(1184,1223,cs),
(1054,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,652,l),
(833,652,l),
(833,559,l),
(1000,559,l),
(1000,233,ls),
(1000,186,o),
(981,151,o),
(943,128,cs),
(904,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(500,128,cs),
(461,151,o),
(442,186,o),
(442,233,cs),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(443,19,o),
(542,0,o),
(675,0,cs),
(768,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
47 18 2 2 1 53 49 48 37 36 35 20 19 8 7 6 11 5 2 2 76 38 9 2 1 74 6 1 1 7 1 2 5 1 2 105 8 1 5 9 1 4 3 5 4 105 0 3 3 0 97 10 1 0 0 19 0 78 2 0 58 56 52 50 45 43 42 40 34 33 32 31 27 24 16 14 13 11 0 62 2 62 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni179E;
unicode = 6046;
},
{
glyphname = uni179F;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(726,1037,o),
(769,1024,o),
(812,1024,cs),
(855,1024,o),
(895,1071,o),
(930,1165,c),
(877,1165,ls),
(846,1165,o),
(816,1173,o),
(789,1190,cs),
(604,1303,l),
(567,1303,l),
(326,1091,l),
(326,1024,l),
(495,918,l),
(445,908,o),
(404,893,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1000,745,o),
(1000,698,cs),
(1000,233,ls),
(1000,155,o),
(1033,97,o),
(1099,58,cs),
(1165,19,o),
(1264,0,o),
(1396,0,cs),
(1489,0,ls),
(1621,0,o),
(1720,19,o),
(1786,58,cs),
(1852,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1664,1009,l),
(1754,1125,l),
(1828,1079,ls),
(1861,1058,o),
(1893,1047,o),
(1924,1047,cs),
(1955,1047,o),
(1996,1094,o),
(2048,1187,c),
(2001,1187,ls),
(1975,1187,o),
(1943,1199,o),
(1905,1223,cs),
(1776,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1702,151,o),
(1663,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1261,105,o),
(1222,128,cs),
(1183,151,o),
(1163,186,o),
(1163,233,cs),
(1163,698,ls),
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(650,931,l),
(437,1065,l),
(537,1154,l),
(684,1062,ls)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 109 values pushed */
72 31 2 1 4 3 9 21 1 10 3 32 20 2 0 10 70 33 19 3 5 0 84 1 1 11 5 76 71 1 10 1 75 22 1 8 74 0 2 0 3 10 2 3 105 0 9 0 10 0 9 10 105 0 0 0 5 6 0 5 106 0 6 12 1 11 1 6 11 105 0 8 8 17 77 0 1 1 4 97 7 1 4 4 19 4 78 83 82 82 92 83 92 81 79 78 76 24 24 36 55 56 33 41 55 35 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni179F;
unicode = 6047;
},
{
glyphname = uni17A0;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(899,0,o),
(998,19,o),
(1065,58,cs),
(1130,97,o),
(1163,155,o),
(1163,233,cs),
(1163,869,l),
(966,996,l),
(1202,1152,l),
(1722,984,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,233,ls),
(1000,186,o),
(981,151,o),
(943,128,cs),
(904,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(500,128,cs),
(461,151,o),
(442,186,o),
(442,233,cs),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(443,19,o),
(542,0,o),
(675,0,cs),
(768,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
39 35 18 3 2 1 41 40 38 33 32 31 20 19 8 7 6 11 3 2 2 76 34 9 2 1 74 0 1 0 2 3 1 2 105 0 3 3 0 97 4 5 2 0 0 19 0 78 2 0 37 36 27 24 16 14 13 11 0 45 2 45 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni17A0;
unicode = 6048;
},
{
glyphname = uni17A1;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1046,652,o),
(1070,643,o),
(1070,625,cs),
(1070,606,o),
(1046,597,o),
(998,597,cs),
(942,597,l),
(942,634,o),
(961,652,o),
(998,652,cs)
);
},
{
closed = 1;
nodes = (
(279,711,o),
(316,633,o),
(390,581,cs),
(464,530,o),
(575,504,o),
(722,504,cs),
(779,504,l),
(779,280,ls),
(779,218,o),
(772,172,o),
(759,141,cs),
(746,110,o),
(725,94,o),
(698,94,cs),
(667,94,o),
(643,100,o),
(628,111,cs),
(613,122,o),
(605,140,o),
(605,163,cs),
(605,280,ls),
(605,327,o),
(596,361,o),
(579,384,cs),
(561,408,o),
(534,420,o),
(499,420,cs),
(456,420,o),
(425,412,o),
(404,397,cs),
(383,381,o),
(373,358,o),
(373,327,c),
(419,327,o),
(442,311,o),
(442,280,cs),
(442,163,ls),
(442,108,o),
(463,68,o),
(506,41,cs),
(549,14,o),
(613,0,o),
(698,0,cs),
(779,0,o),
(840,23,o),
(881,70,cs),
(922,117,o),
(942,188,o),
(942,281,cs),
(942,504,l),
(998,504,ls),
(1053,504,o),
(1094,514,o),
(1121,534,cs),
(1149,554,o),
(1163,585,o),
(1163,626,cs),
(1163,665,o),
(1149,695,o),
(1121,715,cs),
(1094,736,o),
(1053,746,o),
(998,746,cs),
(925,746,o),
(871,733,o),
(834,708,cs),
(797,683,o),
(779,646,o),
(779,597,c),
(722,597,ls),
(629,597,o),
(559,615,o),
(512,651,cs),
(465,688,o),
(442,742,o),
(442,815,cs),
(442,1031,ls),
(442,1091,o),
(465,1136,o),
(512,1165,cs),
(559,1195,o),
(628,1210,o),
(721,1210,cs),
(814,1210,o),
(885,1195,o),
(932,1165,cs),
(978,1136,o),
(1001,1091,o),
(1001,1031,cs),
(1001,996,o),
(989,978,o),
(966,978,cs),
(943,978,o),
(931,993,o),
(931,1024,c),
(869,1024,o),
(838,1001,o),
(838,954,cs),
(838,907,o),
(882,884,o),
(970,884,cs),
(1099,884,o),
(1163,933,o),
(1163,1031,cs),
(1163,1122,o),
(1126,1190,o),
(1053,1235,cs),
(979,1280,o),
(868,1303,o),
(721,1303,cs),
(574,1303,o),
(464,1280,o),
(390,1235,cs),
(316,1190,o),
(279,1122,o),
(279,1031,cs),
(279,815,ls)
);
},
{
closed = 1;
nodes = (
(861,-317,o),
(873,-334,o),
(896,-345,cs),
(918,-355,o),
(951,-360,o),
(994,-360,cs),
(1000,-360,l),
(1000,-673,l),
(1163,-673,l),
(1443,-501,l),
(1722,-673,l),
(1885,-673,l),
(1885,869,l),
(1664,1009,l),
(1754,1125,l),
(1828,1079,ls),
(1861,1058,o),
(1893,1047,o),
(1924,1047,cs),
(1955,1047,o),
(1996,1094,o),
(2048,1187,c),
(2001,1187,ls),
(1975,1187,o),
(1943,1199,o),
(1905,1223,cs),
(1776,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,-567,l),
(1443,-395,l),
(1163,-567,l),
(1163,-93,l),
(1000,-93,l),
(931,-161,ls),
(907,-184,o),
(890,-206,o),
(879,-228,cs),
(867,-251,o),
(861,-273,o),
(861,-294,cs)
);
},
{
closed = 1;
nodes = (
(955,-253,o),
(970,-234,o),
(1001,-204,c),
(1000,-272,l),
(970,-272,o),
(955,-268,o),
(955,-261,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
126 1 21 20 116 1 14 21 127 1 15 14 115 1 13 15 114 93 2 5 13 8 1 2 19 113 112 111 96 4 16 18 7 76 117 1 12 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 95 values pushed */
0 14 21 15 15 14 114 0 9 6 8 6 9 8 128 0 8 10 6 8 10 126 0 20 0 21 14 20 21 105 0 15 0 13 5 15 13 106 0 5 22 1 0 1 5 0 105 4 1 1 11 1 6 9 1 6 105 23 1 2 0 18 16 2 18 105 0 19 17 1 16 19 16 99 0 3 3 12 97 0 12 12 17 77 0 10 10 7 97 0 7 7 19 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 98 values pushed */
0 14 21 15 15 14 114 0 9 6 8 6 9 8 128 0 8 10 6 8 10 126 0 20 0 21 14 20 21 105 0 15 0 13 5 15 13 106 0 5 22 1 0 1 5 0 105 4 1 1 11 1 6 9 1 6 105 23 1 2 0 18 16 2 18 105 0 3 3 12 97 0 12 12 17 77 0 10 10 7 97 0 7 7 19 77 17 1 16 16 19 95 0 19 19 18 16 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 55 values pushed */
7 7 1 0 124 122 121 119 110 109 101 99 98 97 95 94 92 90 89 88 86 84 80 78 71 69 65 63 56 54 51 50 45 43 39 37 31 29 26 24 17 15 7 11 7 11 4 2 0 6 1 6 24 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni17A1;
unicode = 6049;
},
{
glyphname = uni17A2;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,195,o),
(238,224,o),
(227,248,cs),
(215,271,o),
(209,290,o),
(209,303,cs),
(209,318,o),
(213,330,o),
(220,337,cs),
(228,345,o),
(240,349,o),
(256,349,cs),
(279,349,l),
(279,162,l)
);
},
{
closed = 1;
nodes = (
(116,280,o),
(123,253,o),
(136,222,cs),
(150,191,o),
(170,156,o),
(197,117,cs),
(279,0,l),
(442,0,l),
(442,559,l),
(1000,559,l),
(1000,442,l),
(977,442,ls),
(930,442,o),
(896,431,o),
(873,408,cs),
(849,384,o),
(837,349,o),
(837,303,cs),
(837,280,o),
(844,253,o),
(858,222,cs),
(871,191,o),
(891,156,o),
(918,117,cs),
(1000,0,l),
(1163,0,l),
(1163,869,l),
(943,1009,l),
(1033,1125,l),
(1106,1079,ls),
(1140,1058,o),
(1172,1047,o),
(1202,1047,cs),
(1233,1047,o),
(1275,1094,o),
(1326,1187,c),
(1280,1187,ls),
(1254,1187,o),
(1222,1199,o),
(1184,1223,cs),
(1054,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,652,l),
(442,652,l),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,442,l),
(256,442,ls),
(209,442,o),
(174,431,o),
(151,408,cs),
(128,384,o),
(116,349,o),
(116,303,cs)
);
},
{
closed = 1;
nodes = (
(931,318,o),
(935,330,o),
(942,337,cs),
(950,345,o),
(962,349,o),
(977,349,cs),
(1000,349,l),
(1000,162,l),
(977,195,o),
(959,224,o),
(948,248,cs),
(937,271,o),
(931,290,o),
(931,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
51 34 2 4 3 53 52 41 40 39 36 35 24 23 22 10 5 4 10 0 2 8 0 3 76 42 25 2 3 74 6 1 3 7 1 4 5 3 4 105 0 5 0 10 2 5 10 103 9 12 2 2 1 1 0 8 2 0 105 11 1 8 8 19 8 78 21 20 69 68 67 66 65 63 55 54 49 47 46 44 38 37 32 30 29 27 20 77 21 77 40 33 13 7 24 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A2;
unicode = 6050;
},
{
glyphname = uni17A5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,1001,l),
(838,1001,ls),
(941,1001,o),
(1021,1019,o),
(1078,1054,cs),
(1135,1090,o),
(1163,1142,o),
(1163,1210,cs),
(1163,1288,o),
(1149,1346,o),
(1122,1385,cs),
(1094,1424,o),
(1052,1443,o),
(997,1443,cs),
(960,1443,o),
(931,1436,o),
(912,1421,cs),
(893,1405,o),
(884,1381,o),
(884,1350,c),
(923,1350,o),
(953,1338,o),
(972,1314,cs),
(991,1291,o),
(1001,1257,o),
(1001,1210,cs),
(1001,1175,o),
(988,1147,o),
(961,1126,cs),
(933,1105,o),
(892,1094,o),
(838,1094,cs),
(795,1094,l),
(545,1303,l),
(493,1303,l),
(186,1110,l),
(186,1039,l),
(346,916,l),
(442,954,l),
(298,1070,l),
(453,1168,l)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(543,442,o),
(489,442,cs),
(442,442,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1001,745,o),
(1001,698,cs),
(1001,0,l),
(1163,0,l),
(1163,698,ls),
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(651,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(489,349,ls),
(512,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
30 4 2 1 0 3 1 4 1 1 1 10 4 2 1 7 10 33 1 6 5 5 76 0 3 2 3 133 0 2 0 2 133 0 1 0 4 10 1 4 104 0 10 0 7 8 10 7 105 0 8 11 1 5 6 8 5 106 0 0 0 17 77 9 1 6 6 19 6 78 32 31 72 69 65 64 56 54 50 47 43 42 31 41 32 41 38 35 22 33 21 12 7 27 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A5;
unicode = 6053;
},
{
glyphname = uni17A6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l),
(442,349,l),
(488,349,ls)
);
},
{
closed = 1;
nodes = (
(442,-698,l),
(577,-609,ls),
(602,-592,o),
(620,-571,o),
(633,-547,cs),
(645,-524,o),
(651,-496,o),
(651,-465,cs),
(651,-427,o),
(637,-398,o),
(610,-379,cs),
(583,-360,o),
(542,-350,o),
(488,-350,cs),
(442,-350,l),
(442,-274,l),
(594,-230,l),
(1000,-346,l),
(1000,-465,ls),
(1000,-543,o),
(1033,-601,o),
(1099,-640,cs),
(1165,-679,o),
(1264,-698,o),
(1396,-698,cs),
(1489,-698,ls),
(1621,-698,o),
(1720,-679,o),
(1786,-640,cs),
(1852,-601,o),
(1885,-543,o),
(1885,-465,cs),
(1885,869,l),
(1656,1014,l),
(1707,1113,l),
(1746,1091,o),
(1781,1075,o),
(1810,1064,cs),
(1840,1053,o),
(1866,1047,o),
(1887,1047,cs),
(1933,1047,o),
(1967,1067,o),
(1990,1106,cs),
(2013,1145,o),
(2024,1203,o),
(2024,1280,cs),
(2024,1350,o),
(2012,1402,o),
(1989,1437,cs),
(1966,1472,o),
(1932,1489,o),
(1885,1489,cs),
(1854,1489,o),
(1830,1481,o),
(1815,1466,cs),
(1800,1451,o),
(1792,1427,o),
(1792,1396,c),
(1839,1396,o),
(1873,1387,o),
(1896,1368,cs),
(1919,1349,o),
(1931,1319,o),
(1931,1280,cs),
(1931,1257,o),
(1928,1240,o),
(1923,1228,cs),
(1918,1216,o),
(1909,1210,o),
(1898,1210,cs),
(1875,1210,o),
(1837,1226,o),
(1782,1258,cs),
(1702,1303,l),
(1559,1027,l),
(1559,965,l),
(1722,862,l),
(1722,-465,ls),
(1722,-512,o),
(1702,-547,o),
(1663,-570,cs),
(1625,-593,o),
(1567,-605,o),
(1489,-605,cs),
(1396,-605,ls),
(1319,-605,o),
(1261,-593,o),
(1222,-570,cs),
(1183,-547,o),
(1163,-512,o),
(1163,-465,cs),
(1163,-222,l),
(721,-93,l),
(279,-222,l),
(279,-698,l)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1075,l),
(637,1163,l),
(1000,998,l),
(1000,0,l),
(1163,0,l),
(1163,1103,l),
(721,1303,l),
(279,1104,l),
(279,0,l)
);
},
{
closed = 1;
nodes = (
(442,-443,l),
(488,-443,ls),
(511,-443,o),
(529,-445,o),
(541,-449,cs),
(552,-452,o),
(558,-458,o),
(558,-466,cs),
(558,-480,o),
(553,-493,o),
(544,-506,cs),
(535,-520,o),
(521,-533,o),
(503,-546,cs),
(442,-586,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
79 30 2 9 10 106 29 16 15 11 5 12 9 108 107 78 77 76 14 6 2 12 2 1 1 0 65 64 63 50 49 48 6 6 1 38 33 2 8 4 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 11 0 10 9 11 10 105 0 9 0 12 2 9 12 105 0 2 13 1 0 1 2 0 105 0 6 14 1 4 8 6 4 105 3 1 1 1 19 77 0 8 8 5 97 7 15 2 5 5 25 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 11 0 10 9 11 10 105 0 9 0 12 2 9 12 105 0 2 13 1 0 1 2 0 105 0 6 14 1 4 8 6 4 105 0 8 7 15 2 5 8 5 101 3 1 1 1 19 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
44 42 32 31 1 0 103 101 95 93 90 89 82 81 72 69 62 61 53 51 42 112 44 112 31 41 32 41 28 27 19 17 13 12 0 10 1 10 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni17A6;
unicode = 6054;
},
{
glyphname = uni17A7;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(457,908,o),
(469,906,o),
(476,902,cs),
(484,898,o),
(488,892,o),
(488,884,cs),
(488,869,o),
(484,858,o),
(476,850,cs),
(469,843,o),
(457,839,o),
(442,839,c),
(442,908,l)
);
},
{
closed = 1;
nodes = (
(279,186,o),
(300,117,o),
(343,71,cs),
(386,24,o),
(450,1,o),
(536,1,cs),
(564,1,l),
(1001,250,l),
(1001,117,ls),
(1001,86,o),
(962,70,o),
(884,70,c),
(884,-8,o),
(923,-47,o),
(1001,-47,cs),
(1055,-47,o),
(1095,-33,o),
(1122,-6,cs),
(1149,21,o),
(1163,61,o),
(1163,115,cs),
(1163,535,l),
(1001,535,l),
(1001,357,l),
(541,94,l),
(508,94,o),
(483,109,o),
(467,140,cs),
(450,171,o),
(442,216,o),
(442,277,cs),
(442,415,l),
(1018,702,ls),
(1115,751,o),
(1163,826,o),
(1163,925,cs),
(1163,1071,ls),
(1163,1148,o),
(1132,1207,o),
(1070,1246,cs),
(1008,1284,o),
(915,1303,o),
(791,1303,cs),
(651,1303,ls),
(527,1303,o),
(434,1284,o),
(372,1246,cs),
(310,1207,o),
(279,1148,o),
(279,1071,cs),
(279,838,ls),
(279,807,o),
(293,783,o),
(320,768,cs),
(347,753,o),
(388,745,o),
(442,745,cs),
(489,745,o),
(524,757,o),
(547,780,cs),
(570,803,o),
(582,838,o),
(582,884,cs),
(582,923,o),
(570,952,o),
(547,972,cs),
(524,991,o),
(489,1001,o),
(442,1001,c),
(442,1071,ls),
(442,1117,o),
(459,1152,o),
(494,1175,cs),
(529,1198,o),
(582,1210,o),
(651,1210,cs),
(791,1210,ls),
(860,1210,o),
(913,1198,o),
(948,1175,cs),
(983,1152,o),
(1000,1117,o),
(1000,1071,cs),
(1000,925,ls),
(1000,840,o),
(983,789,o),
(949,772,cs),
(279,438,l),
(279,278,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 0 2 0 2 71 64 52 46 4 5 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 2 1 0 0 2 114 0 6 3 5 3 6 5 128 0 0 0 3 6 0 3 106 0 1 1 4 97 0 4 4 17 77 0 5 5 9 97 0 9 9 19 77 0 8 8 7 98 0 7 7 19 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 1 0 1 2 0 128 0 6 3 5 3 6 5 128 0 0 0 3 6 0 3 106 0 1 1 4 97 0 4 4 17 77 0 5 5 9 97 0 9 9 19 77 0 8 8 7 98 0 7 7 19 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 6 3 5 3 6 5 128 0 0 0 3 6 0 3 106 0 8 0 7 8 7 102 0 1 1 4 97 0 4 4 17 77 0 5 5 9 97 0 9 9 19 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
67 65 17 36 18 27 55 38 20 59 17 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A7;
unicode = 6055;
},
{
glyphname = uni17A8;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1052,1409,o),
(1095,1396,o),
(1138,1396,cs),
(1181,1396,o),
(1221,1443,o),
(1256,1537,c),
(1203,1537,ls),
(1172,1537,o),
(1142,1545,o),
(1115,1562,cs),
(930,1676,l),
(893,1676,l),
(749,1550,l),
(550,1676,l),
(513,1676,l),
(186,1509,l),
(186,1457,l),
(299,1368,ls),
(320,1352,o),
(340,1344,o),
(361,1344,cs),
(363,1344,ls),
(384,1344,o),
(411,1362,o),
(443,1397,c),
(331,1477,l),
(456,1543,l),
(686,1396,l),
(716,1396,l),
(863,1527,l),
(1010,1435,ls)
);
},
{
closed = 1;
nodes = (
(279,186,o),
(300,117,o),
(343,71,cs),
(386,24,o),
(451,1,o),
(536,1,cs),
(564,1,l),
(1001,250,l),
(1001,117,ls),
(1001,86,o),
(962,70,o),
(884,70,c),
(884,-8,o),
(923,-47,o),
(1001,-47,cs),
(1055,-47,o),
(1095,-33,o),
(1122,-6,cs),
(1149,21,o),
(1163,61,o),
(1163,115,cs),
(1163,535,l),
(1001,535,l),
(1001,357,l),
(541,94,l),
(508,94,o),
(483,109,o),
(467,140,cs),
(450,171,o),
(442,216,o),
(442,277,cs),
(442,415,l),
(1018,702,ls),
(1115,751,o),
(1163,826,o),
(1163,925,cs),
(1163,1071,ls),
(1163,1148,o),
(1132,1207,o),
(1070,1246,cs),
(1008,1284,o),
(915,1303,o),
(791,1303,cs),
(651,1303,ls),
(527,1303,o),
(434,1284,o),
(372,1246,cs),
(310,1207,o),
(279,1148,o),
(279,1071,cs),
(279,838,ls),
(279,807,o),
(293,783,o),
(320,768,cs),
(347,753,o),
(388,745,o),
(442,745,cs),
(489,745,o),
(524,757,o),
(547,780,cs),
(570,803,o),
(582,838,o),
(582,884,cs),
(582,923,o),
(570,952,o),
(547,972,cs),
(524,991,o),
(489,1001,o),
(442,1001,c),
(442,1071,ls),
(442,1117,o),
(459,1152,o),
(494,1175,cs),
(529,1198,o),
(582,1210,o),
(651,1210,cs),
(791,1210,ls),
(860,1210,o),
(913,1198,o),
(948,1175,cs),
(983,1152,o),
(1001,1117,o),
(1001,1071,cs),
(1001,925,ls),
(1001,840,o),
(984,789,o),
(949,772,cs),
(279,438,l),
(279,278,ls)
);
},
{
closed = 1;
nodes = (
(442,908,l),
(457,908,o),
(469,906,o),
(476,902,cs),
(485,898,o),
(489,892,o),
(489,884,cs),
(489,869,o),
(485,858,o),
(476,850,cs),
(469,843,o),
(457,839,o),
(442,839,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
16 4 2 4 2 13 12 6 5 1 5 0 4 31 26 2 6 8 97 90 78 72 4 11 12 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
3 1 2 4 2 133 0 1 0 10 0 1 10 128 0 8 7 6 6 8 114 0 12 9 11 9 12 11 128 0 4 5 1 0 1 4 0 105 0 6 0 9 12 6 9 106 0 7 7 10 97 0 10 10 17 77 0 11 11 15 97 0 15 15 19 77 0 14 14 13 98 0 13 13 19 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
3 1 2 4 2 133 0 1 0 10 0 1 10 128 0 8 7 6 7 8 6 128 0 12 9 11 9 12 11 128 0 4 5 1 0 1 4 0 105 0 6 0 9 12 6 9 106 0 7 7 10 97 0 10 10 17 77 0 11 11 15 97 0 15 15 19 77 0 14 14 13 98 0 13 13 19 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
3 1 2 4 2 133 0 1 0 10 0 1 10 128 0 8 7 6 7 8 6 128 0 12 9 11 9 12 11 128 0 4 5 1 0 1 4 0 105 0 6 0 9 12 6 9 106 0 14 0 13 14 13 102 0 7 7 10 97 0 10 10 17 77 0 11 11 15 97 0 15 15 19 15 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
93 91 88 87 86 84 80 79 77 76 65 62 55 53 20 59 18 33 34 18 20 52 18 16 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A8;
unicode = 6056;
},
{
glyphname = uni17A9;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(457,908,o),
(469,906,o),
(476,902,cs),
(484,898,o),
(488,892,o),
(488,884,cs),
(488,869,o),
(484,858,o),
(476,850,cs),
(469,843,o),
(457,839,o),
(442,839,c),
(442,908,l)
);
},
{
closed = 1;
nodes = (
(279,186,o),
(300,117,o),
(343,71,cs),
(386,24,o),
(450,1,o),
(536,1,cs),
(564,1,l),
(1001,250,l),
(1001,117,ls),
(1001,78,o),
(991,49,o),
(972,30,cs),
(953,10,o),
(923,0,o),
(884,0,c),
(884,-15,o),
(894,-27,o),
(914,-35,cs),
(933,-43,o),
(962,-47,o),
(1001,-47,cs),
(1032,-47,o),
(1055,-33,o),
(1070,-6,cs),
(1086,21,o),
(1094,61,o),
(1094,115,cs),
(1094,535,l),
(1001,535,l),
(1001,357,l),
(541,94,l),
(508,94,o),
(483,109,o),
(467,140,cs),
(450,171,o),
(442,216,o),
(442,277,cs),
(442,415,l),
(1018,702,ls),
(1115,751,o),
(1163,826,o),
(1163,925,cs),
(1163,1071,ls),
(1163,1148,o),
(1132,1207,o),
(1070,1246,cs),
(1008,1284,o),
(915,1303,o),
(791,1303,cs),
(651,1303,ls),
(527,1303,o),
(434,1284,o),
(372,1246,cs),
(310,1207,o),
(279,1148,o),
(279,1071,cs),
(279,838,ls),
(279,807,o),
(293,783,o),
(320,768,cs),
(347,753,o),
(388,745,o),
(442,745,cs),
(489,745,o),
(524,757,o),
(547,780,cs),
(570,803,o),
(582,838,o),
(582,884,cs),
(582,923,o),
(570,952,o),
(547,972,cs),
(524,991,o),
(489,1001,o),
(442,1001,c),
(442,1071,ls),
(442,1117,o),
(459,1152,o),
(494,1175,cs),
(529,1198,o),
(582,1210,o),
(651,1210,cs),
(791,1210,ls),
(860,1210,o),
(913,1198,o),
(948,1175,cs),
(983,1152,o),
(1000,1117,o),
(1000,1071,cs),
(1000,925,ls),
(1000,840,o),
(983,789,o),
(949,772,cs),
(279,438,l),
(279,278,ls)
);
},
{
closed = 1;
nodes = (
(1117,-78,o),
(1140,-93,o),
(1187,-93,cs),
(1218,-93,o),
(1241,-77,o),
(1256,-46,cs),
(1272,-14,o),
(1280,34,o),
(1280,97,cs),
(1280,535,l),
(1187,535,l),
(1187,99,ls),
(1187,56,o),
(1181,21,o),
(1169,-6,cs),
(1158,-33,o),
(1140,-47,o),
(1117,-47,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 0 2 0 2 75 68 52 46 4 5 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 2 1 0 0 2 114 0 8 9 7 9 8 7 128 0 12 7 11 7 12 11 128 0 0 0 3 6 0 3 106 0 11 6 11 85 0 1 1 4 97 0 4 4 17 77 0 5 5 9 97 0 9 9 19 77 10 1 6 6 7 97 0 7 7 19 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 2 1 0 0 2 114 0 8 9 7 9 8 7 128 0 0 0 3 6 0 3 106 0 11 6 11 85 0 1 1 4 97 0 4 4 17 77 0 5 5 9 97 0 9 9 19 77 10 1 6 6 7 97 0 7 7 19 77 0 12 12 18 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 2 1 0 1 2 0 128 0 8 9 7 9 8 7 128 0 0 0 3 6 0 3 106 0 11 6 11 85 0 1 1 4 97 0 4 4 17 77 0 5 5 9 97 0 9 9 19 77 10 1 6 6 7 97 0 7 7 19 77 0 12 12 18 12 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 2 1 0 1 2 0 128 0 8 9 7 9 8 7 128 0 12 7 11 7 12 11 128 0 0 0 3 6 0 3 106 0 7 12 6 7 89 10 1 6 0 11 6 11 101 0 1 1 4 97 0 4 4 17 77 0 5 5 9 97 0 9 9 19 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
89 88 86 84 80 79 71 69 19 36 18 27 55 38 20 59 17 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A9;
unicode = 6057;
},
{
glyphname = uni17AA;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,1396,l),
(838,1396,ls),
(941,1396,o),
(1021,1414,o),
(1078,1449,cs),
(1135,1485,o),
(1163,1537,o),
(1163,1606,cs),
(1163,1684,o),
(1149,1742,o),
(1122,1781,cs),
(1094,1820,o),
(1052,1839,o),
(997,1839,cs),
(960,1839,o),
(931,1831,o),
(912,1816,cs),
(893,1801,o),
(884,1777,o),
(884,1745,c),
(923,1745,o),
(953,1733,o),
(972,1710,cs),
(991,1687,o),
(1001,1653,o),
(1001,1606,cs),
(1001,1571,o),
(988,1543,o),
(961,1522,cs),
(933,1500,o),
(892,1489,o),
(838,1489,cs),
(795,1489,l),
(545,1699,l),
(493,1699,l),
(186,1505,l),
(186,1435,l),
(346,1312,l),
(442,1350,l),
(298,1465,l),
(453,1564,l)
);
},
{
closed = 1;
nodes = (
(279,186,o),
(300,117,o),
(343,71,cs),
(386,24,o),
(451,1,o),
(536,1,cs),
(564,1,l),
(1001,250,l),
(1001,117,ls),
(1001,86,o),
(962,70,o),
(884,70,c),
(884,-8,o),
(923,-47,o),
(1001,-47,cs),
(1055,-47,o),
(1095,-33,o),
(1122,-6,cs),
(1149,21,o),
(1163,61,o),
(1163,115,cs),
(1163,535,l),
(1001,535,l),
(1001,357,l),
(541,94,l),
(508,94,o),
(483,109,o),
(467,140,cs),
(450,171,o),
(442,216,o),
(442,277,cs),
(442,415,l),
(1018,702,ls),
(1115,751,o),
(1163,826,o),
(1163,925,cs),
(1163,1071,ls),
(1163,1148,o),
(1132,1207,o),
(1070,1246,cs),
(1008,1284,o),
(915,1303,o),
(791,1303,cs),
(651,1303,ls),
(527,1303,o),
(434,1284,o),
(372,1246,cs),
(310,1207,o),
(279,1148,o),
(279,1071,cs),
(279,838,ls),
(279,807,o),
(293,783,o),
(320,768,cs),
(347,753,o),
(388,745,o),
(442,745,cs),
(489,745,o),
(524,757,o),
(547,780,cs),
(570,803,o),
(582,838,o),
(582,884,cs),
(582,923,o),
(570,952,o),
(547,972,cs),
(524,991,o),
(489,1001,o),
(442,1001,c),
(442,1071,ls),
(442,1117,o),
(459,1152,o),
(494,1175,cs),
(529,1198,o),
(582,1210,o),
(651,1210,cs),
(791,1210,ls),
(860,1210,o),
(913,1198,o),
(948,1175,cs),
(983,1152,o),
(1001,1117,o),
(1001,1071,cs),
(1001,925,ls),
(1001,840,o),
(984,789,o),
(949,772,cs),
(279,438,l),
(279,278,ls)
);
},
{
closed = 1;
nodes = (
(442,908,l),
(457,908,o),
(469,906,o),
(476,902,cs),
(485,898,o),
(489,892,o),
(489,884,cs),
(489,869,o),
(485,858,o),
(476,850,cs),
(469,843,o),
(457,839,o),
(442,839,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
30 4 2 1 0 3 1 4 1 2 1 2 9 4 36 31 2 5 7 102 95 83 77 4 10 11 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 3 2 3 133 0 2 0 2 133 0 0 1 0 133 0 7 6 5 5 7 114 0 11 8 10 8 11 10 128 0 1 0 4 9 1 4 104 0 5 0 8 11 5 8 106 0 6 6 9 97 0 9 9 17 77 0 10 10 14 97 0 14 14 19 77 0 13 13 12 98 0 12 12 19 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 3 2 3 133 0 2 0 2 133 0 0 1 0 133 0 7 6 5 6 7 5 128 0 11 8 10 8 11 10 128 0 1 0 4 9 1 4 104 0 5 0 8 11 5 8 106 0 6 6 9 97 0 9 9 17 77 0 10 10 14 97 0 14 14 19 77 0 13 13 12 98 0 12 12 19 12 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
0 3 2 3 133 0 2 0 2 133 0 0 1 0 133 0 7 6 5 6 7 5 128 0 11 8 10 8 11 10 128 0 1 0 4 9 1 4 104 0 5 0 8 11 5 8 106 0 13 0 12 13 12 102 0 6 6 9 97 0 9 9 17 77 0 10 10 14 97 0 14 14 19 14 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
98 96 93 92 91 89 85 84 82 81 70 67 38 20 59 19 38 35 22 33 21 15 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17AA;
unicode = 6058;
},
{
glyphname = uni17AB;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(899,0,o),
(998,19,o),
(1065,58,cs),
(1130,97,o),
(1163,155,o),
(1163,233,cs),
(1163,869,l),
(943,1009,l),
(1033,1125,l),
(1106,1079,ls),
(1140,1058,o),
(1172,1047,o),
(1202,1047,cs),
(1233,1047,o),
(1275,1094,o),
(1326,1187,c),
(1280,1187,ls),
(1254,1187,o),
(1222,1199,o),
(1184,1223,cs),
(1054,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,233,ls),
(1000,186,o),
(981,151,o),
(943,128,cs),
(904,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(500,128,cs),
(461,151,o),
(442,186,o),
(442,233,cs),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(443,19,o),
(542,0,o),
(675,0,cs),
(768,0,ls)
);
},
{
closed = 1;
nodes = (
(224,-431,o),
(276,-461,o),
(343,-482,cs),
(410,-502,o),
(492,-512,o),
(588,-512,cs),
(780,-512,o),
(924,-489,o),
(1019,-442,cs),
(1115,-395,o),
(1163,-326,o),
(1163,-233,cs),
(1163,-186,o),
(1153,-151,o),
(1134,-128,cs),
(1115,-105,o),
(1086,-93,o),
(1047,-93,cs),
(1008,-93,o),
(979,-101,o),
(960,-116,cs),
(941,-132,o),
(931,-155,o),
(931,-186,c),
(954,-186,o),
(972,-190,o),
(984,-197,cs),
(995,-205,o),
(1000,-217,o),
(1000,-233,cs),
(1000,-295,o),
(966,-341,o),
(898,-372,cs),
(829,-403,o),
(726,-419,o),
(589,-419,cs),
(436,-419,o),
(301,-410,o),
(186,-391,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
43 18 2 2 1 45 44 33 32 31 20 19 8 7 6 10 3 2 58 1 7 8 3 76 34 9 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 0 8 0 9 8 128 0 8 7 0 8 7 126 4 1 1 5 1 2 3 1 2 105 0 3 3 0 97 10 1 0 0 19 77 0 7 7 6 97 0 6 6 20 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 8 9 7 9 8 7 128 4 1 1 5 1 2 3 1 2 105 0 3 3 0 97 10 1 0 0 19 77 0 9 9 18 77 0 7 7 6 97 0 6 6 20 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 8 9 7 9 8 7 128 4 1 1 5 1 2 3 1 2 105 0 7 0 6 7 6 101 0 3 3 0 97 10 1 0 0 19 77 0 9 9 18 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
2 0 73 71 68 67 61 59 55 53 41 39 38 36 27 24 16 14 13 11 0 49 2 49 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17AB;
unicode = 6059;
},
{
glyphname = uni17AC;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(899,0,o),
(998,19,o),
(1065,58,cs),
(1130,97,o),
(1163,155,o),
(1163,233,cs),
(1163,869,l),
(943,1009,l),
(1033,1125,l),
(1106,1079,ls),
(1140,1058,o),
(1172,1047,o),
(1202,1047,cs),
(1233,1047,o),
(1275,1094,o),
(1326,1187,c),
(1280,1187,ls),
(1254,1187,o),
(1222,1199,o),
(1184,1223,cs),
(1054,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,233,ls),
(1000,186,o),
(981,151,o),
(943,128,cs),
(904,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(500,128,cs),
(461,151,o),
(442,186,o),
(442,233,cs),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(443,19,o),
(542,0,o),
(675,0,cs),
(768,0,ls)
);
},
{
closed = 1;
nodes = (
(225,-431,o),
(277,-461,o),
(344,-482,cs),
(411,-502,o),
(493,-512,o),
(588,-512,cs),
(676,-512,o),
(754,-507,o),
(822,-497,cs),
(889,-487,o),
(947,-472,o),
(995,-453,c),
(1011,-472,o),
(1032,-487,o),
(1058,-497,cs),
(1085,-507,o),
(1116,-512,o),
(1152,-512,cs),
(1203,-512,o),
(1241,-504,o),
(1266,-489,cs),
(1291,-473,o),
(1303,-450,o),
(1303,-420,c),
(1252,-420,o),
(1213,-414,o),
(1184,-402,cs),
(1155,-390,o),
(1138,-372,o),
(1132,-348,c),
(1153,-315,o),
(1164,-276,o),
(1164,-233,cs),
(1164,-186,o),
(1154,-151,o),
(1135,-128,cs),
(1116,-105,o),
(1087,-93,o),
(1049,-93,cs),
(1010,-93,o),
(980,-101,o),
(960,-116,cs),
(941,-132,o),
(931,-155,o),
(931,-186,c),
(977,-186,o),
(1000,-202,o),
(1000,-233,cs),
(1000,-295,o),
(966,-341,o),
(898,-372,cs),
(829,-403,o),
(727,-419,o),
(590,-419,cs),
(436,-419,o),
(302,-410,o),
(187,-391,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
43 18 2 2 1 45 44 33 32 31 20 19 8 7 6 10 3 2 72 52 2 6 10 64 1 7 6 4 76 34 9 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
4 1 1 5 1 2 3 1 2 105 0 11 0 10 6 11 10 105 0 3 3 0 97 12 1 0 0 19 77 9 1 6 6 7 97 8 1 7 7 20 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
4 1 1 5 1 2 3 1 2 105 0 3 3 0 97 12 1 0 0 19 77 0 10 10 11 97 0 11 11 18 77 9 1 6 6 7 97 8 1 7 7 20 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
4 1 1 5 1 2 3 1 2 105 9 1 6 8 1 7 6 7 101 0 3 3 0 97 12 1 0 0 19 77 0 10 10 11 97 0 11 11 18 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
2 0 85 83 80 79 75 73 69 67 61 59 56 55 41 39 38 36 27 24 16 14 13 11 0 49 2 49 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17AC;
unicode = 6060;
},
{
glyphname = uni17AD;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(512,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l),
(442,349,l),
(489,349,ls)
);
},
{
closed = 1;
nodes = (
(224,-431,o),
(276,-461,o),
(343,-482,cs),
(410,-502,o),
(492,-512,o),
(588,-512,cs),
(780,-512,o),
(924,-489,o),
(1019,-442,cs),
(1115,-395,o),
(1163,-326,o),
(1163,-233,cs),
(1163,-186,o),
(1154,-151,o),
(1135,-128,cs),
(1116,-105,o),
(1086,-93,o),
(1047,-93,cs),
(1008,-93,o),
(980,-101,o),
(961,-116,cs),
(942,-132,o),
(932,-155,o),
(932,-186,c),
(955,-186,o),
(972,-190,o),
(984,-197,cs),
(995,-205,o),
(1001,-217,o),
(1001,-233,cs),
(1001,-295,o),
(967,-341,o),
(898,-372,cs),
(829,-403,o),
(726,-419,o),
(589,-419,cs),
(436,-419,o),
(301,-410,o),
(186,-391,c)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(543,442,o),
(489,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1001,1075,l),
(1001,0,l),
(1163,0,l),
(1163,1052,l),
(888,1304,l),
(722,1140,l),
(556,1304,l),
(279,1056,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 0 43 1 5 6 2 76 34 33 32 19 18 17 16 15 12 9 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 1 6 1 7 6 128 0 6 5 1 6 5 126 0 2 8 1 0 1 2 0 105 3 1 1 1 19 77 0 5 5 4 97 0 4 4 20 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 7 5 7 6 5 128 0 2 8 1 0 1 2 0 105 3 1 1 1 19 77 0 7 7 18 77 0 5 5 4 97 0 4 4 20 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 6 7 5 7 6 5 128 0 2 8 1 0 1 2 0 105 0 5 0 4 5 4 101 3 1 1 1 19 77 0 7 7 18 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 58 56 53 52 46 44 40 38 31 30 22 20 14 13 0 10 1 10 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17AD;
unicode = 6061;
},
{
glyphname = uni17AE;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(512,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(522,211,o),
(504,192,cs),
(442,131,l),
(442,349,l),
(489,349,ls)
);
},
{
closed = 1;
nodes = (
(225,-431,o),
(277,-461,o),
(344,-482,cs),
(411,-502,o),
(493,-512,o),
(588,-512,cs),
(676,-512,o),
(754,-507,o),
(822,-497,cs),
(889,-487,o),
(947,-472,o),
(995,-453,c),
(1011,-472,o),
(1032,-487,o),
(1058,-497,cs),
(1085,-507,o),
(1116,-512,o),
(1152,-512,cs),
(1203,-512,o),
(1241,-504,o),
(1266,-489,cs),
(1291,-473,o),
(1303,-450,o),
(1303,-420,c),
(1252,-420,o),
(1213,-414,o),
(1184,-402,cs),
(1155,-390,o),
(1138,-372,o),
(1132,-348,c),
(1153,-315,o),
(1164,-276,o),
(1164,-233,cs),
(1164,-186,o),
(1155,-151,o),
(1136,-128,cs),
(1117,-105,o),
(1088,-93,o),
(1049,-93,cs),
(1010,-93,o),
(980,-101,o),
(961,-116,cs),
(941,-132,o),
(931,-155,o),
(931,-186,c),
(978,-186,o),
(1001,-202,o),
(1001,-233,cs),
(1001,-295,o),
(967,-341,o),
(898,-372,cs),
(829,-403,o),
(727,-419,o),
(590,-419,cs),
(436,-419,o),
(302,-410,o),
(187,-391,c)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(646,241,o),
(652,271,o),
(652,303,cs),
(652,349,o),
(638,384,o),
(611,408,cs),
(584,431,o),
(543,442,o),
(489,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1001,1075,l),
(1001,0,l),
(1164,0,l),
(1164,1052,l),
(888,1304,l),
(722,1140,l),
(556,1304,l),
(279,1056,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
2 1 1 0 57 37 2 4 8 49 1 5 4 3 76 34 33 32 19 18 17 16 15 12 9 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 10 1 0 1 2 0 105 0 9 0 8 4 9 8 105 3 1 1 1 19 77 7 1 4 4 5 97 6 1 5 5 20 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 10 1 0 1 2 0 105 3 1 1 1 19 77 0 8 8 9 97 0 9 9 18 77 7 1 4 4 5 97 6 1 5 5 20 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 10 1 0 1 2 0 105 7 1 4 6 1 5 4 5 101 3 1 1 1 19 77 0 8 8 9 97 0 9 9 18 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
1 0 70 68 65 64 60 58 54 52 46 44 41 40 31 30 22 20 14 13 0 10 1 10 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17AE;
unicode = 6062;
},
{
glyphname = uni17AF;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,559,o),
(238,561,o),
(227,564,cs),
(215,568,o),
(209,574,o),
(209,582,cs),
(209,595,o),
(215,611,o),
(227,631,cs),
(238,651,o),
(256,674,o),
(279,699,c),
(279,559,l)
);
},
{
closed = 1;
nodes = (
(116,542,o),
(130,513,o),
(157,494,cs),
(184,475,o),
(224,465,o),
(279,465,c),
(279,0,l),
(442,0,l),
(721,180,l),
(1000,0,l),
(1163,0,l),
(1163,1103,l),
(721,1303,l),
(442,1178,l),
(442,1304,ls),
(442,1365,o),
(430,1412,o),
(406,1443,cs),
(383,1474,o),
(349,1489,o),
(302,1489,cs),
(263,1489,o),
(234,1480,o),
(215,1461,cs),
(196,1442,o),
(186,1412,o),
(186,1373,c),
(217,1373,o),
(240,1367,o),
(256,1355,cs),
(271,1344,o),
(279,1327,o),
(279,1304,cs),
(279,1164,ls),
(279,1125,o),
(289,1096,o),
(308,1076,cs),
(327,1057,o),
(356,1047,o),
(395,1047,cs),
(426,1048,o),
(442,1057,o),
(442,1075,c),
(637,1163,l),
(1000,998,l),
(1000,111,l),
(721,290,l),
(442,111,l),
(442,838,l),
(279,838,l),
(206,758,ls),
(177,724,o),
(154,693,o),
(138,664,cs),
(123,635,o),
(116,607,o),
(116,581,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
51 50 29 28 27 5 1 2 49 1 7 1 1 1 0 7 48 47 46 32 4 4 6 4 76 0 2 3 1 3 2 1 128 0 3 9 1 1 7 3 1 105 8 1 0 0 6 4 0 6 105 0 7 7 4 95 5 1 4 4 19 4 78 10 9 0 0 45 44 36 35 34 33 31 30 23 21 18 17 9 52 10 52 0 8 0 8 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17AF;
unicode = 6063;
},
{
glyphname = uni17B0;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,-464,o),
(279,-500,o),
(279,-559,cs),
(279,-605,o),
(303,-640,o),
(351,-663,cs),
(398,-686,o),
(470,-698,o),
(567,-698,cs),
(637,-698,o),
(689,-683,o),
(724,-652,cs),
(759,-621,o),
(776,-574,o),
(776,-511,c),
(852,-528,ls),
(886,-535,o),
(917,-538,o),
(946,-538,cs),
(1004,-538,o),
(1050,-523,o),
(1085,-494,cs),
(1137,-450,o),
(1163,-374,o),
(1163,-266,cs),
(1163,-47,l),
(1001,-47,l),
(921,-124,ls),
(841,-200,o),
(752,-265,o),
(654,-320,cs),
(557,-374,o),
(450,-417,o),
(334,-450,c)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,0,l),
(1163,0,l),
(1163,1052,l),
(888,1304,l),
(722,1140,l),
(555,1304,l),
(279,1056,l),
(279,0,l)
);
},
{
closed = 1;
nodes = (
(442,-531,l),
(508,-506,o),
(583,-471,o),
(666,-424,c),
(666,-508,ls),
(666,-541,o),
(658,-565,o),
(641,-581,cs),
(624,-597,o),
(600,-605,o),
(567,-605,cs),
(525,-605,o),
(494,-601,o),
(474,-594,cs),
(453,-586,o),
(442,-574,o),
(442,-559,cs)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
},
{
closed = 1;
nodes = (
(815,-333,o),
(909,-264,o),
(1001,-185,c),
(1001,-266,ls),
(1001,-331,o),
(991,-377,o),
(971,-404,cs),
(955,-425,o),
(934,-436,o),
(907,-436,cs),
(898,-436,o),
(889,-435,o),
(879,-432,cs),
(720,-392,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
48 1 6 5 39 27 25 3 3 0 41 14 2 1 3 3 76 80 79 78 65 64 63 62 61 58 9 7 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 6 3 6 0 3 128 0 7 10 1 5 6 7 5 105 8 1 6 6 19 77 0 3 3 1 98 0 1 1 20 77 9 1 4 4 2 97 0 2 2 25 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 7 10 1 5 6 7 5 105 8 1 6 6 19 77 0 0 0 18 77 0 3 3 1 98 0 1 1 20 77 9 1 4 4 2 97 0 2 2 25 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 7 10 1 5 6 7 5 105 0 3 0 1 4 3 1 106 9 1 4 0 2 4 2 101 8 1 6 6 19 77 0 0 0 18 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 0 6 3 6 0 3 128 0 7 10 1 5 6 7 5 105 0 3 0 1 4 3 1 106 9 1 4 0 2 4 2 101 8 1 6 6 19 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
47 46 35 34 77 76 68 66 60 59 46 56 47 56 34 45 35 45 27 37 36 21 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17B0;
unicode = 6064;
},
{
glyphname = uni17B1;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(552,1559,o),
(605,1553,o),
(658,1540,cs),
(711,1527,o),
(763,1508,o),
(815,1482,cs),
(896,1442,ls),
(957,1411,o),
(1033,1396,o),
(1122,1396,cs),
(1212,1396,o),
(1257,1427,o),
(1257,1489,c),
(1195,1489,o),
(1142,1500,o),
(1099,1521,cs),
(940,1601,ls),
(879,1632,o),
(816,1656,o),
(752,1671,cs),
(687,1686,o),
(622,1694,o),
(556,1694,c),
(186,1508,l),
(186,1415,l),
(307,1345,ls),
(332,1330,o),
(363,1322,o),
(400,1322,c),
(437,1336,l),
(302,1461,l),
(499,1559,l)
);
},
{
closed = 1;
nodes = (
(279,186,o),
(300,117,o),
(343,71,cs),
(386,24,o),
(451,1,o),
(536,1,cs),
(564,1,l),
(1001,250,l),
(1001,117,ls),
(1001,86,o),
(962,70,o),
(884,70,c),
(884,-8,o),
(923,-47,o),
(1001,-47,cs),
(1055,-47,o),
(1095,-33,o),
(1122,-6,cs),
(1149,21,o),
(1163,61,o),
(1163,115,cs),
(1163,535,l),
(1001,535,l),
(1001,357,l),
(541,94,l),
(508,94,o),
(483,109,o),
(467,140,cs),
(450,171,o),
(442,216,o),
(442,277,cs),
(442,415,l),
(1018,702,ls),
(1115,751,o),
(1163,826,o),
(1163,925,cs),
(1163,1071,ls),
(1163,1148,o),
(1132,1207,o),
(1070,1246,cs),
(1008,1284,o),
(915,1303,o),
(791,1303,cs),
(651,1303,ls),
(527,1303,o),
(434,1284,o),
(372,1246,cs),
(310,1207,o),
(279,1148,o),
(279,1071,cs),
(279,838,ls),
(279,807,o),
(293,783,o),
(320,768,cs),
(347,753,o),
(388,745,o),
(442,745,cs),
(489,745,o),
(524,757,o),
(547,780,cs),
(570,803,o),
(582,838,o),
(582,884,cs),
(582,923,o),
(570,952,o),
(547,972,cs),
(524,991,o),
(489,1001,o),
(442,1001,c),
(442,1071,ls),
(442,1117,o),
(459,1152,o),
(494,1175,cs),
(529,1198,o),
(582,1210,o),
(651,1210,cs),
(791,1210,ls),
(860,1210,o),
(913,1198,o),
(948,1175,cs),
(983,1152,o),
(1001,1117,o),
(1001,1071,cs),
(1001,925,ls),
(1001,840,o),
(984,789,o),
(949,772,cs),
(279,438,l),
(279,278,ls)
);
},
{
closed = 1;
nodes = (
(442,908,l),
(457,908,o),
(469,906,o),
(476,902,cs),
(485,898,o),
(489,892,o),
(489,884,cs),
(489,869,o),
(485,858,o),
(476,850,cs),
(469,843,o),
(457,839,o),
(442,839,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 1 2 4 5 1 3 2 1 1 0 3 29 24 2 5 7 95 88 76 70 4 10 11 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 0 3 9 3 0 9 128 0 7 6 5 5 7 114 0 11 8 10 8 11 10 128 0 1 0 4 2 1 4 105 0 2 0 3 0 2 3 105 0 5 0 8 11 5 8 106 0 6 6 9 97 0 9 9 17 77 0 10 10 14 97 0 14 14 19 77 0 13 13 12 98 0 12 12 19 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 0 3 9 3 0 9 128 0 7 6 5 6 7 5 128 0 11 8 10 8 11 10 128 0 1 0 4 2 1 4 105 0 2 0 3 0 2 3 105 0 5 0 8 11 5 8 106 0 6 6 9 97 0 9 9 17 77 0 10 10 14 97 0 14 14 19 77 0 13 13 12 98 0 12 12 19 12 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
0 0 3 9 3 0 9 128 0 7 6 5 6 7 5 128 0 11 8 10 8 11 10 128 0 1 0 4 2 1 4 105 0 2 0 3 0 2 3 105 0 5 0 8 11 5 8 106 0 13 0 12 13 12 102 0 6 6 9 97 0 9 9 17 77 0 10 10 14 97 0 14 14 19 14 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
91 89 86 85 84 82 78 77 75 74 63 60 38 20 59 18 21 33 21 20 18 15 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17B1;
unicode = 6065;
},
{
glyphname = uni17B2;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(946,326,o),
(967,318,o),
(981,303,cs),
(994,287,o),
(1001,264,o),
(1001,233,cs),
(1001,187,o),
(984,152,o),
(949,128,cs),
(914,105,o),
(861,94,o),
(792,94,cs),
(651,94,ls),
(582,94,o),
(529,105,o),
(494,128,cs),
(459,152,o),
(442,187,o),
(442,233,cs),
(442,1075,l),
(637,1163,l),
(1000,998,l),
(1163,1103,l),
(721,1303,l),
(279,1104,l),
(279,233,ls),
(279,155,o),
(310,97,o),
(372,59,cs),
(434,20,o),
(527,0,o),
(651,0,cs),
(792,0,ls),
(915,0,o),
(1008,20,o),
(1070,59,cs),
(1132,97,o),
(1163,155,o),
(1163,233,cs),
(1163,342,o),
(1121,407,o),
(1036,428,c),
(1077,461,ls),
(1134,504,o),
(1163,568,o),
(1163,652,cs),
(1163,722,o),
(1142,774,o),
(1099,809,cs),
(1057,844,o),
(993,861,o),
(907,861,cs),
(826,861,o),
(766,848,o),
(726,823,cs),
(686,797,o),
(666,758,o),
(666,706,cs),
(666,652,o),
(680,611,o),
(707,584,cs),
(735,557,o),
(777,543,o),
(832,543,cs),
(869,543,o),
(887,579,o),
(887,652,c),
(848,652,o),
(829,670,o),
(829,706,cs),
(829,727,o),
(836,742,o),
(849,753,cs),
(862,764,o),
(881,769,o),
(907,769,cs),
(939,769,o),
(963,759,o),
(978,739,cs),
(993,720,o),
(1001,691,o),
(1001,652,cs),
(1001,585,o),
(984,539,o),
(951,514,cs),
(667,286,l),
(667,285,ls),
(667,240,o),
(703,217,o),
(776,217,c),
(910,326,l),
(919,326,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
36 1 7 3 4 1 0 7 2 76 54 53 52 51 50 49 6 4 74 8 1 7 3 0 3 7 0 128 0 0 6 3 0 6 126 0 4 0 1 2 4 1 105 0 2 0 3 7 2 3 105 0 6 6 5 97 0 5 5 19 5 78 0 0 0 67 0 67 61 60 38 33 21 40 18 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17B2;
unicode = 6066;
},
{
glyphname = uni17B3;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(542,1536,o),
(610,1522,o),
(666,1495,cs),
(859,1395,ls),
(900,1375,o),
(935,1365,o),
(966,1365,cs),
(978,1365,o),
(989,1366,o),
(1000,1369,cs),
(1039,1380,o),
(1069,1410,o),
(1092,1459,c),
(1065,1494,o),
(1051,1533,o),
(1051,1576,cs),
(1051,1605,o),
(1057,1635,o),
(1069,1666,c),
(1089,1735,o),
(1136,1769,o),
(1210,1769,cs),
(1242,1769,o),
(1258,1785,o),
(1258,1816,cs),
(1258,1847,o),
(1242,1863,o),
(1209,1863,cs),
(1076,1862,o),
(992,1821,o),
(956,1739,cs),
(933,1688,o),
(921,1642,o),
(921,1602,cs),
(921,1579,o),
(925,1557,o),
(934,1538,c),
(793,1611,ls),
(710,1654,o),
(619,1676,o),
(522,1676,c),
(186,1489,l),
(186,1396,l),
(296,1327,ls),
(335,1302,o),
(369,1290,o),
(398,1290,cs),
(415,1290,o),
(432,1294,o),
(447,1302,c),
(292,1442,l),
(462,1536,l)
);
},
{
closed = 1;
nodes = (
(279,186,o),
(300,117,o),
(343,71,cs),
(386,24,o),
(451,1,o),
(536,1,cs),
(564,1,l),
(1001,250,l),
(1001,117,ls),
(1001,86,o),
(962,70,o),
(884,70,c),
(884,-8,o),
(923,-47,o),
(1001,-47,cs),
(1055,-47,o),
(1095,-33,o),
(1122,-6,cs),
(1149,21,o),
(1163,61,o),
(1163,115,cs),
(1163,535,l),
(1001,535,l),
(1001,357,l),
(541,94,l),
(508,94,o),
(483,109,o),
(467,140,cs),
(450,171,o),
(442,216,o),
(442,277,cs),
(442,415,l),
(1018,702,ls),
(1115,751,o),
(1163,826,o),
(1163,925,cs),
(1163,1071,ls),
(1163,1148,o),
(1132,1207,o),
(1070,1246,cs),
(1008,1284,o),
(915,1303,o),
(791,1303,cs),
(651,1303,ls),
(527,1303,o),
(434,1284,o),
(372,1246,cs),
(310,1207,o),
(279,1148,o),
(279,1071,cs),
(279,838,ls),
(279,807,o),
(293,783,o),
(320,768,cs),
(347,753,o),
(388,745,o),
(442,745,cs),
(489,745,o),
(524,757,o),
(547,780,cs),
(570,803,o),
(582,838,o),
(582,884,cs),
(582,923,o),
(570,952,o),
(547,972,cs),
(524,991,o),
(489,1001,o),
(442,1001,c),
(442,1071,ls),
(442,1117,o),
(459,1152,o),
(494,1175,cs),
(529,1198,o),
(582,1210,o),
(651,1210,cs),
(791,1210,ls),
(860,1210,o),
(913,1198,o),
(948,1175,cs),
(983,1152,o),
(1001,1117,o),
(1001,1071,cs),
(1001,925,ls),
(1001,840,o),
(984,789,o),
(949,772,cs),
(279,438,l),
(279,278,ls)
);
},
{
closed = 1;
nodes = (
(442,908,l),
(457,908,o),
(469,906,o),
(476,902,cs),
(485,898,o),
(489,892,o),
(489,884,cs),
(489,869,o),
(485,858,o),
(476,850,cs),
(469,843,o),
(457,839,o),
(442,839,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
12 1 5 1 28 8 7 1 4 4 5 2 1 0 10 42 37 2 6 8 108 101 89 83 4 11 12 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 4 5 10 5 4 10 128 0 0 10 7 10 0 7 128 0 8 7 6 6 8 114 0 12 9 11 9 12 11 128 0 2 0 3 1 2 3 105 0 1 16 1 5 4 1 5 105 0 6 0 9 12 6 9 106 0 7 7 10 97 0 10 10 17 77 0 11 11 15 97 0 15 15 19 77 0 14 14 13 98 0 13 13 19 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 4 5 10 5 4 10 128 0 0 10 7 10 0 7 128 0 8 7 6 7 8 6 128 0 12 9 11 9 12 11 128 0 2 0 3 1 2 3 105 0 1 16 1 5 4 1 5 105 0 6 0 9 12 6 9 106 0 7 7 10 97 0 10 10 17 77 0 11 11 15 97 0 15 15 19 77 0 14 14 13 98 0 13 13 19 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 4 5 10 5 4 10 128 0 0 10 7 10 0 7 128 0 8 7 6 7 8 6 128 0 12 9 11 9 12 11 128 0 2 0 3 1 2 3 105 0 1 16 1 5 4 1 5 105 0 6 0 9 12 6 9 106 0 14 0 13 14 13 102 0 7 7 10 97 0 10 10 17 77 0 11 11 15 97 0 15 15 19 15 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
0 0 104 102 99 98 97 95 91 90 88 87 76 73 66 64 58 57 53 50 39 38 0 36 0 36 40 34 39 20 35 17 7 27 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17B3;
unicode = 6067;
},
{
glyphname = uni17A3;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,195,o),
(238,224,o),
(227,248,cs),
(215,271,o),
(209,290,o),
(209,303,cs),
(209,318,o),
(213,330,o),
(220,337,cs),
(228,345,o),
(240,349,o),
(256,349,cs),
(279,349,l),
(279,162,l)
);
},
{
closed = 1;
nodes = (
(116,280,o),
(123,253,o),
(136,222,cs),
(150,191,o),
(170,156,o),
(197,117,cs),
(279,0,l),
(442,0,l),
(442,559,l),
(1000,559,l),
(1000,442,l),
(977,442,ls),
(930,442,o),
(896,431,o),
(873,408,cs),
(849,384,o),
(837,349,o),
(837,303,cs),
(837,280,o),
(844,253,o),
(858,222,cs),
(871,191,o),
(891,156,o),
(918,117,cs),
(1000,0,l),
(1163,0,l),
(1163,869,l),
(943,1009,l),
(1033,1125,l),
(1106,1079,ls),
(1140,1058,o),
(1172,1047,o),
(1202,1047,cs),
(1233,1047,o),
(1275,1094,o),
(1326,1187,c),
(1280,1187,ls),
(1254,1187,o),
(1222,1199,o),
(1184,1223,cs),
(1054,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,652,l),
(442,652,l),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,442,l),
(256,442,ls),
(209,442,o),
(174,431,o),
(151,408,cs),
(128,384,o),
(116,349,o),
(116,303,cs)
);
},
{
closed = 1;
nodes = (
(931,318,o),
(935,330,o),
(942,337,cs),
(950,345,o),
(962,349,o),
(977,349,cs),
(1000,349,l),
(1000,162,l),
(977,195,o),
(959,224,o),
(948,248,cs),
(937,271,o),
(931,290,o),
(931,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
51 34 2 4 3 53 52 41 40 39 36 35 24 23 22 10 5 4 10 0 2 8 0 3 76 42 25 2 3 74 6 1 3 7 1 4 5 3 4 105 0 5 0 10 2 5 10 103 9 12 2 2 1 1 0 8 2 0 105 11 1 8 8 19 8 78 21 20 69 68 67 66 65 63 55 54 49 47 46 44 38 37 32 30 29 27 20 77 21 77 40 33 13 7 24 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A3;
unicode = 6051;
},
{
glyphname = uni17A4;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,195,o),
(238,224,o),
(227,248,cs),
(215,271,o),
(209,290,o),
(209,303,cs),
(209,318,o),
(213,330,o),
(220,337,cs),
(228,345,o),
(240,349,o),
(256,349,cs),
(279,349,l),
(279,162,l)
);
},
{
closed = 1;
nodes = (
(116,280,o),
(123,253,o),
(136,222,cs),
(150,191,o),
(170,156,o),
(197,117,cs),
(279,0,l),
(442,0,l),
(442,559,l),
(1000,559,l),
(1000,442,l),
(977,442,ls),
(930,442,o),
(896,431,o),
(873,408,cs),
(849,384,o),
(837,349,o),
(837,303,cs),
(837,280,o),
(844,253,o),
(858,222,cs),
(871,191,o),
(891,156,o),
(918,117,cs),
(1000,0,l),
(1163,0,l),
(1163,869,l),
(966,996,l),
(1202,1152,l),
(1722,984,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,652,l),
(442,652,l),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,442,l),
(256,442,ls),
(209,442,o),
(174,431,o),
(151,408,cs),
(128,384,o),
(116,349,o),
(116,303,cs)
);
},
{
closed = 1;
nodes = (
(931,318,o),
(935,330,o),
(942,337,cs),
(950,345,o),
(962,349,o),
(977,349,cs),
(1000,349,l),
(1000,162,l),
(977,195,o),
(959,224,o),
(948,248,cs),
(937,271,o),
(931,290,o),
(931,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
71 30 26 3 10 9 73 72 61 60 59 32 31 29 24 23 22 11 2 10 10 0 2 3 0 3 76 62 25 2 9 74 0 9 0 10 2 9 10 105 0 2 0 6 5 2 6 103 8 1 5 1 1 0 3 5 0 105 7 4 2 3 3 19 3 78 69 67 66 64 40 17 17 40 21 22 23 40 33 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni17A4;
unicode = 6052;
},
{
glyphname = uni17B4;
layers = (
{
layerId = m01;
width = 1204;
}
);
note = uni17B4;
unicode = 6068;
},
{
glyphname = uni17B5;
layers = (
{
layerId = m01;
width = 1204;
}
);
note = uni17B5;
unicode = 6069;
},
{
glyphname = uni17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-83,1163,l),
(280,998,l),
(280,0,l),
(443,0,l),
(443,1103,l),
(1,1303,l),
(-370,1136,l),
(-279,1075,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
7 6 5 2 1 5 0 74 0 0 0 19 0 78 19 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17B6;
unicode = 6070;
},
{
glyphname = uni17BF;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-147,1755,o),
(-93,1747,o),
(-46,1731,cs),
(0,1716,o),
(39,1693,o),
(70,1662,c),
(-256,1662,ls),
(-271,1662,o),
(-283,1666,o),
(-291,1674,cs),
(-298,1681,o),
(-302,1693,o),
(-302,1708,cs),
(-302,1723,o),
(-294,1735,o),
(-279,1743,cs),
(-264,1751,o),
(-240,1755,o),
(-209,1755,cs)
);
},
{
closed = 1;
nodes = (
(-442,-403,o),
(-415,-462,o),
(-360,-501,cs),
(-306,-540,o),
(-225,-559,o),
(-116,-559,cs),
(117,-559,ls),
(225,-559,o),
(306,-540,o),
(360,-501,cs),
(415,-462,o),
(442,-403,o),
(442,-326,cs),
(442,1383,ls),
(442,1444,o),
(427,1498,o),
(396,1545,cs),
(365,1591,o),
(318,1630,o),
(256,1662,c),
(256,1941,l),
(163,1941,l),
(163,1708,l),
(70,1778,l),
(70,1941,l),
(-23,1941,l),
(-23,1821,l),
(-54,1839,o),
(-116,1848,o),
(-209,1848,cs),
(-271,1848,o),
(-318,1836,o),
(-349,1813,cs),
(-380,1790,o),
(-395,1755,o),
(-395,1708,cs),
(-395,1661,o),
(-383,1626,o),
(-360,1603,cs),
(-337,1580,o),
(-303,1569,o),
(-256,1569,cs),
(163,1569,ls),
(202,1569,o),
(231,1553,o),
(251,1522,cs),
(270,1491,o),
(279,1445,o),
(279,1383,cs),
(279,-326,ls),
(279,-373,o),
(265,-407,o),
(238,-430,cs),
(211,-453,o),
(171,-465,o),
(117,-465,cs),
(-116,-465,ls),
(-171,-465,o),
(-211,-453,o),
(-238,-430,cs),
(-265,-407,o),
(-279,-373,o),
(-279,-326,cs),
(-279,-93,l),
(-442,-93,l),
(-442,-326,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
54 51 2 0 6 55 1 1 0 2 76 58 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
8 1 7 6 1 7 112 0 3 5 4 5 3 4 128 0 6 9 1 0 1 6 0 105 0 1 0 5 3 1 5 104 0 4 4 2 95 0 2 2 20 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
8 1 7 6 7 133 0 3 5 4 5 3 4 128 0 6 9 1 0 1 6 0 105 0 1 0 5 3 1 5 104 0 4 4 2 95 0 2 2 20 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 7 6 7 133 0 6 9 1 0 1 6 0 105 0 1 0 5 3 1 5 104 0 3 3 18 77 0 4 4 2 95 0 2 2 20 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
8 1 7 6 7 133 0 6 9 1 0 1 6 0 105 0 1 0 5 3 1 5 104 0 4 0 2 4 2 99 0 3 3 18 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 57 56 53 52 50 48 42 39 32 29 25 24 20 17 9 7 0 12 1 12 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17BF;
unicode = 6079;
},
{
glyphname = uni17C0;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,-373,o),
(265,-407,o),
(238,-430,cs),
(211,-453,o),
(171,-465,o),
(117,-465,cs),
(-116,-465,ls),
(-171,-465,o),
(-211,-453,o),
(-238,-430,cs),
(-265,-407,o),
(-279,-373,o),
(-279,-326,cs),
(-279,-93,l),
(-442,-93,l),
(-442,-326,ls),
(-442,-403,o),
(-415,-462,o),
(-360,-501,cs),
(-306,-540,o),
(-225,-559,o),
(-116,-559,cs),
(117,-559,ls),
(225,-559,o),
(306,-540,o),
(360,-501,cs),
(415,-462,o),
(442,-403,o),
(442,-326,cs),
(442,1374,ls),
(442,1457,o),
(419,1520,o),
(373,1561,cs),
(326,1603,o),
(256,1624,o),
(163,1624,cs),
(-70,1624,ls),
(-108,1624,o),
(-137,1632,o),
(-157,1647,cs),
(-176,1662,o),
(-186,1686,o),
(-186,1717,cs),
(-186,1800,ls),
(-186,1847,o),
(-198,1882,o),
(-221,1905,cs),
(-244,1928,o),
(-280,1940,o),
(-327,1940,cs),
(-365,1940,o),
(-394,1932,o),
(-413,1917,cs),
(-432,1901,o),
(-442,1878,o),
(-442,1847,c),
(-411,1847,o),
(-387,1843,o),
(-372,1836,cs),
(-357,1828,o),
(-349,1816,o),
(-349,1800,cs),
(-349,1717,ls),
(-349,1655,o),
(-326,1608,o),
(-279,1577,cs),
(-232,1546,o),
(-163,1530,o),
(-70,1530,cs),
(163,1530,ls),
(202,1530,o),
(231,1517,o),
(251,1491,cs),
(270,1465,o),
(279,1426,o),
(279,1374,cs),
(279,-326,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 2 133 0 1 3 1 133 0 5 0 6 0 5 6 128 0 3 0 0 5 3 0 103 0 6 6 4 95 0 4 4 20 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 2 133 0 1 3 1 133 0 3 0 0 5 3 0 103 0 5 5 18 77 0 6 6 4 95 0 4 4 20 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 1 2 133 0 1 3 1 133 0 3 0 0 5 3 0 103 0 6 0 4 6 4 99 0 5 5 18 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 20 55 55 35 23 52 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17C0;
unicode = 6080;
},
{
glyphname = uni17C1;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(496,1042,o),
(528,1031,o),
(558,1031,cs),
(589,1031,o),
(623,1085,o),
(659,1194,c),
(609,1194,ls),
(576,1194,o),
(545,1203,o),
(516,1221,cs),
(388,1303,l),
(279,1303,l),
(279,0,l),
(442,0,l),
(512,80,ls),
(543,116,o),
(566,153,o),
(582,190,cs),
(598,227,o),
(606,265,o),
(606,303,cs),
(606,349,o),
(592,384,o),
(565,407,cs),
(538,430,o),
(497,442,o),
(443,442,c),
(443,1076,l),
(461,1064,ls)
);
},
{
closed = 1;
nodes = (
(443,348,l),
(466,348,o),
(483,344,o),
(495,337,cs),
(506,330,o),
(512,318,o),
(512,303,cs),
(512,276,o),
(506,250,o),
(495,223,cs),
(483,196,o),
(466,170,o),
(443,144,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
1 1 4 3 23 1 1 5 2 76 0 3 0 4 0 3 4 105 0 0 6 1 5 1 0 5 105 0 2 2 17 77 0 1 1 19 1 78 22 22 22 30 22 30 33 34 17 24 18 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17C1;
unicode = 6081;
},
{
glyphname = uni17C2;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,1567,o),
(335,1591,o),
(318,1606,cs),
(301,1621,o),
(276,1629,o),
(241,1629,cs),
(207,1629,o),
(182,1619,o),
(165,1600,cs),
(148,1581,o),
(139,1552,o),
(139,1513,cs),
(139,1474,o),
(160,1444,o),
(203,1425,cs),
(246,1406,o),
(310,1396,o),
(395,1396,cs),
(488,1396,o),
(558,1415,o),
(604,1454,cs),
(651,1493,o),
(674,1552,o),
(674,1629,cs),
(674,1706,o),
(655,1765,o),
(617,1804,cs),
(579,1843,o),
(522,1862,o),
(446,1862,cs),
(378,1862,o),
(344,1831,o),
(344,1769,c),
(400,1769,o),
(442,1757,o),
(469,1733,cs),
(496,1710,o),
(510,1676,o),
(510,1629,cs),
(510,1582,o),
(501,1548,o),
(482,1525,cs),
(463,1501,o),
(434,1489,o),
(395,1489,cs),
(327,1489,o),
(293,1497,o),
(293,1513,cs),
(293,1528,o),
(310,1536,o),
(344,1536,c)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(511,80,ls),
(542,116,o),
(566,153,o),
(582,190,cs),
(597,227,o),
(605,265,o),
(605,303,cs),
(605,349,o),
(591,384,o),
(564,407,cs),
(537,430,o),
(496,442,o),
(442,442,c),
(442,1076,l),
(461,1064,ls),
(495,1042,o),
(527,1031,o),
(558,1031,cs),
(589,1031,o),
(622,1085,o),
(658,1194,c),
(608,1194,ls),
(575,1194,o),
(545,1203,o),
(516,1221,cs),
(388,1303,l),
(279,1303,l),
(279,0,l)
);
},
{
closed = 1;
nodes = (
(442,348,l),
(465,348,o),
(483,344,o),
(495,337,cs),
(506,330,o),
(511,318,o),
(511,303,cs),
(511,276,o),
(506,250,o),
(495,223,cs),
(483,196,o),
(465,170,o),
(442,144,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
35 1 10 9 57 1 7 11 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 2 0 1 5 114 0 0 1 2 0 1 126 0 3 0 2 5 3 2 105 0 1 0 4 8 1 4 106 0 9 0 10 6 9 10 105 0 6 12 1 11 7 6 11 105 0 8 8 17 77 0 7 7 19 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 5 2 0 2 5 0 128 0 0 1 2 0 1 126 0 3 0 2 5 3 2 105 0 1 0 4 8 1 4 106 0 9 0 10 6 9 10 105 0 6 12 1 11 7 6 11 105 0 8 8 17 77 0 7 7 19 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
56 56 56 64 56 64 55 53 52 50 17 24 21 38 38 33 22 34 16 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17C2;
unicode = 6082;
},
{
glyphname = uni17C3;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,1583,o),
(167,1552,o),
(167,1489,cs),
(167,1427,o),
(235,1396,o),
(372,1396,cs),
(458,1396,o),
(522,1412,o),
(565,1443,cs),
(608,1474,o),
(629,1520,o),
(629,1583,cs),
(629,1645,o),
(608,1691,o),
(565,1722,cs),
(522,1753,o),
(458,1769,o),
(372,1769,cs),
(330,1769,l),
(330,1825,o),
(318,1867,o),
(294,1894,cs),
(271,1922,o),
(235,1936,o),
(186,1936,cs),
(124,1936,o),
(93,1905,o),
(93,1843,c),
(142,1843,o),
(167,1818,o),
(167,1769,cs),
(167,1707,o),
(221,1676,o),
(330,1676,cs),
(372,1676,ls),
(403,1676,o),
(427,1668,o),
(442,1652,cs),
(457,1637,o),
(465,1614,o),
(465,1583,cs),
(465,1552,o),
(457,1528,o),
(442,1513,cs),
(427,1497,o),
(403,1489,o),
(372,1489,cs),
(344,1489,o),
(330,1520,o),
(330,1583,c)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(512,80,ls),
(543,116,o),
(566,153,o),
(583,190,cs),
(598,227,o),
(606,265,o),
(606,303,cs),
(606,349,o),
(592,384,o),
(565,407,cs),
(538,430,o),
(497,442,o),
(443,442,c),
(443,1076,l),
(462,1064,ls),
(496,1042,o),
(528,1031,o),
(558,1031,cs),
(589,1031,o),
(623,1085,o),
(659,1194,c),
(609,1194,ls),
(576,1194,o),
(545,1203,o),
(517,1221,cs),
(388,1303,l),
(279,1303,l),
(279,0,l)
);
},
{
closed = 1;
nodes = (
(443,348,l),
(466,348,o),
(483,344,o),
(495,337,cs),
(506,330,o),
(512,318,o),
(512,303,cs),
(512,276,o),
(506,250,o),
(495,223,cs),
(483,196,o),
(466,170,o),
(443,144,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
35 1 11 10 57 1 8 12 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
13 1 6 1 0 0 6 114 0 3 0 2 4 3 2 105 0 4 0 1 6 4 1 105 0 0 0 5 9 0 5 106 0 10 0 11 7 10 11 105 0 7 14 1 12 8 7 12 105 0 9 9 17 77 0 8 8 19 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
13 1 6 1 0 1 6 0 128 0 3 0 2 4 3 2 105 0 4 0 1 6 4 1 105 0 0 0 5 9 0 5 106 0 10 0 11 7 10 11 105 0 7 14 1 12 8 7 12 105 0 9 9 17 77 0 8 8 19 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
56 56 0 0 56 64 56 64 55 53 52 50 48 47 46 45 37 36 0 33 0 33 38 35 33 18 54 33 15 7 28 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17C3;
unicode = 6083;
},
{
glyphname = uni17C4;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-83,1163,l),
(280,998,l),
(280,0,l),
(443,0,l),
(443,1103,l),
(1,1303,l),
(-370,1136,l),
(-279,1075,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
7 6 5 2 1 5 0 74 0 0 0 19 0 78 19 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17C4;
unicode = 6084;
},
{
glyphname = uni17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(474,1086,o),
(489,1133,o),
(489,1164,cs),
(489,1536,ls),
(489,1598,o),
(479,1645,o),
(458,1676,cs),
(437,1707,o),
(405,1722,o),
(362,1722,cs),
(319,1722,o),
(287,1714,o),
(266,1699,cs),
(245,1684,o),
(234,1660,o),
(234,1629,c),
(265,1629,o),
(289,1621,o),
(304,1606,cs),
(319,1591,o),
(327,1567,o),
(327,1536,cs),
(327,1155,l),
(1,1303,l),
(-370,1136,l),
(-279,1075,l),
(-83,1163,l),
(280,998,l),
(280,0,l),
(443,0,l),
(443,1024,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
8 7 6 5 4 3 0 7 0 1 1 76 0 2 1 2 133 0 1 0 1 133 0 0 0 19 0 78 35 26 17 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17C5;
unicode = 6085;
},
{
glyphname = uni17C7;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(395,1125,o),
(403,1148,o),
(419,1164,cs),
(434,1179,o),
(457,1187,o),
(488,1187,cs),
(519,1187,o),
(543,1179,o),
(558,1164,cs),
(574,1148,o),
(582,1125,o),
(582,1094,cs),
(582,1063,o),
(574,1039,o),
(558,1024,cs),
(543,1009,o),
(519,1001,o),
(488,1001,cs),
(457,1001,o),
(434,1009,o),
(419,1024,cs),
(403,1039,o),
(395,1063,o),
(395,1094,cs)
);
},
{
closed = 1;
nodes = (
(279,139,o),
(296,87,o),
(331,52,cs),
(366,17,o),
(418,0,o),
(488,0,cs),
(559,0,o),
(611,17,o),
(646,52,cs),
(681,87,o),
(698,139,o),
(698,209,cs),
(698,280,o),
(681,332,o),
(646,367,cs),
(611,402,o),
(559,419,o),
(488,419,cs),
(418,419,o),
(366,402,o),
(331,367,cs),
(296,332,o),
(279,280,o),
(279,209,cs)
);
},
{
closed = 1;
nodes = (
(279,1024,o),
(296,971,o),
(331,936,cs),
(366,901,o),
(418,884,o),
(488,884,cs),
(559,884,o),
(611,901,o),
(646,936,cs),
(681,971,o),
(698,1024,o),
(698,1094,cs),
(698,1164,o),
(681,1216,o),
(646,1251,cs),
(611,1286,o),
(559,1303,o),
(488,1303,cs),
(418,1303,o),
(366,1286,o),
(331,1251,cs),
(296,1216,o),
(279,1164,o),
(279,1094,cs)
);
},
{
closed = 1;
nodes = (
(395,240,o),
(403,264,o),
(419,279,cs),
(434,295,o),
(457,303,o),
(488,303,cs),
(519,303,o),
(543,295,o),
(558,279,cs),
(574,264,o),
(582,240,o),
(582,209,cs),
(582,178,o),
(574,155,o),
(558,140,cs),
(543,124,o),
(519,116,o),
(488,116,cs),
(457,116,o),
(434,124,o),
(419,140,cs),
(403,155,o),
(395,178,o),
(395,209,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 0 0 2 7 0 2 105 0 7 0 5 4 7 5 105 0 1 1 3 97 0 3 3 17 77 0 4 4 6 97 0 6 6 19 6 78 38 38 38 38 38 38 38 35 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 977;
}
);
note = uni17C7;
unicode = 6087;
},
{
glyphname = uni17C8;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(449,0,o),
(494,10,o),
(529,29,cs),
(564,48,o),
(590,77,o),
(605,115,c),
(574,97,o),
(550,88,o),
(535,88,cs),
(520,88,o),
(512,97,o),
(512,115,cs),
(512,154,o),
(502,184,o),
(483,203,cs),
(464,223,o),
(434,233,o),
(395,233,cs),
(356,233,o),
(327,223,o),
(308,204,cs),
(289,185,o),
(279,155,o),
(279,116,cs),
(279,77,o),
(289,48,o),
(308,29,cs),
(327,10,o),
(356,0,o),
(395,0,cs)
);
},
{
closed = 1;
nodes = (
(279,1006,o),
(289,977,o),
(308,958,cs),
(327,939,o),
(356,929,o),
(395,929,cs),
(449,929,o),
(494,939,o),
(529,958,cs),
(564,977,o),
(590,1006,o),
(605,1044,c),
(574,1026,o),
(550,1017,o),
(535,1017,cs),
(520,1017,o),
(512,1026,o),
(512,1044,cs),
(512,1083,o),
(502,1113,o),
(483,1132,cs),
(464,1152,o),
(434,1162,o),
(395,1162,cs),
(356,1162,o),
(327,1152,o),
(308,1133,cs),
(289,1114,o),
(279,1084,o),
(279,1045,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
36 1 5 4 16 1 2 1 2 76 0 5 4 3 4 5 3 128 0 2 1 0 1 2 0 128 0 4 7 1 3 1 4 3 105 0 1 1 0 97 6 1 0 0 19 0 78 21 20 1 0 35 33 29 27 20 39 21 39 15 13 9 7 0 19 1 19 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 791;
}
);
note = uni17C8;
unicode = 6088;
},
{
glyphname = uni17DC;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(988,-10,o),
(1150,123,o),
(1150,359,cs),
(1150,564,o),
(994,658,o),
(675,658,cs),
(543,658,o),
(466,671,o),
(422,724,cs),
(399,751,o),
(388,790,o),
(388,842,cs),
(388,974,o),
(487,1055,o),
(675,1055,cs),
(864,1055,o),
(963,1002,o),
(963,910,cs),
(963,871,o),
(949,851,o),
(922,851,cs),
(882,851,o),
(862,832,o),
(862,793,cs),
(862,754,o),
(882,734,o),
(922,734,cs),
(1027,734,o),
(1091,750,o),
(1125,802,cs),
(1142,827,o),
(1150,863,o),
(1150,910,cs),
(1150,1106,o),
(990,1210,o),
(675,1210,cs),
(362,1210,o),
(200,1078,o),
(200,842,cs),
(200,637,o),
(356,543,o),
(675,543,cs),
(808,543,o),
(884,531,o),
(929,478,cs),
(952,451,o),
(963,412,o),
(963,360,cs),
(963,227,o),
(864,146,o),
(675,146,cs),
(486,146,o),
(388,199,o),
(388,292,cs),
(388,331,o),
(402,350,o),
(429,350,cs),
(468,350,o),
(489,371,o),
(489,408,cs),
(489,448,o),
(469,468,o),
(429,468,cs),
(324,468,o),
(260,452,o),
(226,401,cs),
(209,376,o),
(200,340,o),
(200,293,cs),
(200,96,o),
(359,-10,o),
(675,-10,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
0 5 0 8 7 5 8 105 0 7 0 6 9 7 6 105 0 9 0 4 1 9 4 105 0 1 0 2 3 1 2 105 0 3 3 0 97 10 1 0 0 19 0 78 1 0 54 52 47 45 42 40 38 36 31 29 25 23 18 16 13 11 8 6 0 58 1 58 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1350;
}
);
note = uni17DC;
unicode = 6108;
},
{
glyphname = uni1789.a;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l),
(442,349,l),
(488,349,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,0,l),
(1163,0,l),
(1163,1039,l),
(1373,1155,l),
(1722,961,l),
(1722,0,l),
(1885,0,l),
(1885,1054,l),
(1443,1303,l),
(1100,1110,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
2 1 1 0 1 76 41 40 39 38 37 24 23 22 21 20 17 16 15 12 14 3 74 0 3 5 1 0 1 3 0 105 4 2 2 1 1 19 1 78 1 0 36 35 27 25 19 18 14 13 0 10 1 10 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni1789.a;
},
{
glyphname = uni17BF.b;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-147,1755,o),
(-93,1747,o),
(-46,1731,cs),
(0,1716,o),
(39,1693,o),
(70,1662,c),
(-256,1662,ls),
(-271,1662,o),
(-283,1666,o),
(-291,1674,cs),
(-298,1681,o),
(-302,1693,o),
(-302,1708,cs),
(-302,1723,o),
(-294,1735,o),
(-279,1743,cs),
(-264,1751,o),
(-240,1755,o),
(-209,1755,cs)
);
},
{
closed = 1;
nodes = (
(-442,-962,o),
(-415,-1020,o),
(-360,-1059,cs),
(-306,-1098,o),
(-225,-1117,o),
(-116,-1117,cs),
(117,-1117,ls),
(225,-1117,o),
(306,-1098,o),
(360,-1059,cs),
(415,-1020,o),
(442,-962,o),
(442,-884,cs),
(442,1383,ls),
(442,1444,o),
(427,1498,o),
(396,1545,cs),
(365,1591,o),
(318,1630,o),
(256,1662,c),
(256,1941,l),
(163,1941,l),
(163,1708,l),
(70,1778,l),
(70,1941,l),
(-23,1941,l),
(-23,1821,l),
(-54,1839,o),
(-116,1848,o),
(-209,1848,cs),
(-271,1848,o),
(-318,1836,o),
(-349,1813,cs),
(-380,1790,o),
(-395,1755,o),
(-395,1708,cs),
(-395,1661,o),
(-383,1626,o),
(-360,1603,cs),
(-337,1580,o),
(-303,1569,o),
(-256,1569,cs),
(163,1569,ls),
(202,1569,o),
(231,1553,o),
(251,1522,cs),
(270,1491,o),
(279,1445,o),
(279,1383,cs),
(279,-884,ls),
(279,-931,o),
(265,-966,o),
(238,-989,cs),
(211,-1012,o),
(171,-1024,o),
(117,-1024,cs),
(-116,-1024,ls),
(-171,-1024,o),
(-211,-1012,o),
(-238,-989,cs),
(-265,-966,o),
(-279,-931,o),
(-279,-884,cs),
(-279,-745,l),
(-442,-745,l),
(-442,-884,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
54 51 2 0 6 55 1 1 0 2 76 58 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
8 1 7 6 1 7 112 0 3 5 4 5 3 4 128 0 6 9 1 0 1 6 0 105 0 1 0 5 3 1 5 104 0 4 2 2 4 87 0 4 4 2 95 0 2 4 2 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
8 1 7 6 7 133 0 3 5 4 5 3 4 128 0 6 9 1 0 1 6 0 105 0 1 0 5 3 1 5 104 0 4 2 2 4 87 0 4 4 2 95 0 2 4 2 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 57 56 53 52 50 48 42 39 32 29 25 24 20 17 9 7 0 12 1 12 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17BF.b;
},
{
glyphname = uni17C0.b;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,-931,o),
(265,-966,o),
(238,-989,cs),
(211,-1012,o),
(171,-1024,o),
(117,-1024,cs),
(-116,-1024,ls),
(-171,-1024,o),
(-211,-1012,o),
(-238,-989,cs),
(-265,-966,o),
(-279,-931,o),
(-279,-884,cs),
(-279,-745,l),
(-442,-745,l),
(-442,-884,ls),
(-442,-962,o),
(-415,-1020,o),
(-360,-1059,cs),
(-306,-1098,o),
(-225,-1117,o),
(-116,-1117,cs),
(117,-1117,ls),
(225,-1117,o),
(306,-1098,o),
(360,-1059,cs),
(415,-1020,o),
(442,-962,o),
(442,-884,cs),
(442,1374,ls),
(442,1457,o),
(419,1520,o),
(373,1561,cs),
(326,1603,o),
(256,1624,o),
(163,1624,cs),
(-70,1624,ls),
(-108,1624,o),
(-137,1632,o),
(-157,1647,cs),
(-176,1662,o),
(-186,1686,o),
(-186,1717,cs),
(-186,1800,ls),
(-186,1847,o),
(-198,1882,o),
(-221,1905,cs),
(-244,1928,o),
(-280,1940,o),
(-327,1940,cs),
(-365,1940,o),
(-394,1932,o),
(-413,1917,cs),
(-432,1901,o),
(-442,1878,o),
(-442,1847,c),
(-411,1847,o),
(-387,1843,o),
(-372,1836,cs),
(-357,1828,o),
(-349,1816,o),
(-349,1800,cs),
(-349,1717,ls),
(-349,1655,o),
(-326,1608,o),
(-279,1577,cs),
(-232,1546,o),
(-163,1530,o),
(-70,1530,cs),
(163,1530,ls),
(202,1530,o),
(231,1517,o),
(251,1491,cs),
(270,1465,o),
(279,1426,o),
(279,1374,cs),
(279,-884,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
0 2 1 2 133 0 1 3 1 133 0 5 0 6 0 5 6 128 0 3 0 0 5 3 0 103 0 6 4 4 6 87 0 6 6 4 95 0 4 6 4 79 52 20 55 55 35 23 52 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17C0.b;
},
{
glyphname = uni17B6.space;
layers = (
{
layerId = m01;
width = 721;
}
);
note = uni17B6.space;
},
{
glyphname = uni1780_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(651,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l),
(442,0,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1001,745,o),
(1001,698,cs),
(1001,0,l),
(1163,0,l),
(1163,698,ls)
);
},
{
closed = 1;
nodes = (
(259,1011,ls),
(306,985,o),
(340,972,o),
(361,972,cs),
(363,972,ls),
(384,972,o),
(411,990,o),
(443,1025,c),
(368,1083,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1339,1303,l),
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
43 40 39 33 32 31 28 24 8 5 7 27 1 6 5 2 76 44 1 7 74 0 5 7 6 7 5 6 128 0 6 3 7 6 3 126 0 3 0 1 0 3 1 106 0 7 7 17 77 4 2 2 0 0 19 0 78 20 52 19 21 52 20 52 16 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1780_17B6;
},
{
glyphname = uni1780_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(651,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l),
(442,0,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1001,745,o),
(1001,698,cs),
(1001,0,l),
(1163,0,l),
(1163,698,ls)
);
},
{
closed = 1;
nodes = (
(259,1011,ls),
(306,985,o),
(340,972,o),
(361,972,cs),
(363,972,ls),
(384,972,o),
(411,990,o),
(443,1025,c),
(368,1083,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l),
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1145,l),
(1339,1303,l),
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
45 43 40 39 33 32 31 28 24 9 5 7 27 1 6 5 2 76 44 1 7 1 75 0 9 8 9 133 0 8 7 8 133 0 5 7 6 7 5 6 128 0 6 3 7 6 3 126 0 3 0 1 0 3 1 106 0 7 7 17 77 4 2 2 0 0 19 0 78 55 53 23 20 52 19 21 52 20 52 16 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1780_17C5;
},
{
glyphname = uni1781_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(457,908,o),
(469,906,o),
(476,902,cs),
(484,898,o),
(488,892,o),
(488,884,cs),
(488,869,o),
(484,858,o),
(476,850,cs),
(469,843,o),
(457,839,o),
(442,839,c),
(442,908,l)
);
},
{
closed = 1;
nodes = (
(279,155,o),
(310,97,o),
(372,58,cs),
(434,19,o),
(527,0,o),
(651,0,cs),
(791,0,ls),
(915,0,o),
(1008,33,o),
(1070,98,cs),
(1132,163,o),
(1163,254,o),
(1163,372,cs),
(1163,565,l),
(1000,478,l),
(1000,372,ls),
(1000,288,o),
(983,220,o),
(948,169,cs),
(913,118,o),
(860,93,o),
(791,93,cs),
(651,93,ls),
(582,93,o),
(529,105,o),
(494,128,cs),
(459,151,o),
(442,186,o),
(442,233,cs),
(442,423,l),
(1000,715,ls),
(1054,744,o),
(1095,775,o),
(1122,809,cs),
(1149,844,o),
(1163,884,o),
(1163,931,cs),
(1163,1075,l),
(1359,1163,l),
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1443,1303,l),
(1142,1167,l),
(1127,1199,o),
(1103,1225,o),
(1070,1246,cs),
(1008,1284,o),
(915,1303,o),
(791,1303,cs),
(651,1303,ls),
(527,1303,o),
(434,1284,o),
(372,1246,cs),
(310,1207,o),
(279,1148,o),
(279,1071,cs),
(279,838,ls),
(279,807,o),
(293,783,o),
(320,768,cs),
(347,753,o),
(388,745,o),
(442,745,cs),
(489,745,o),
(524,757,o),
(547,780,cs),
(570,803,o),
(582,838,o),
(582,884,cs),
(582,923,o),
(570,952,o),
(547,972,cs),
(524,991,o),
(489,1001,o),
(442,1001,c),
(442,1071,ls),
(442,1117,o),
(459,1152,o),
(494,1175,cs),
(529,1198,o),
(582,1210,o),
(651,1210,cs),
(791,1210,ls),
(860,1210,o),
(913,1198,o),
(948,1175,cs),
(983,1152,o),
(1000,1117,o),
(1000,1071,cs),
(1000,931,ls),
(1000,892,o),
(986,856,o),
(959,825,cs),
(932,793,o),
(892,763,o),
(838,734,cs),
(279,442,l),
(279,233,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
78 77 73 71 4 4 3 76 5 0 3 0 4 33 22 21 10 4 1 5 3 76 72 1 6 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 0 0 4 114 0 0 0 5 1 0 5 106 0 3 3 6 97 0 6 6 17 77 0 1 1 2 97 7 1 2 2 19 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 0 3 4 0 128 0 0 0 5 1 0 5 106 0 3 3 6 97 0 6 6 17 77 0 1 1 2 97 7 1 2 2 19 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
22 55 38 20 61 57 60 17 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1781_17B6;
},
{
glyphname = uni1781_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1155,l),
(1443,1303,l),
(1142,1167,l),
(1127,1199,o),
(1103,1225,o),
(1070,1246,cs),
(1008,1284,o),
(915,1303,o),
(791,1303,cs),
(651,1303,ls),
(527,1303,o),
(434,1284,o),
(372,1246,cs),
(310,1207,o),
(279,1148,o),
(279,1071,cs),
(279,838,ls),
(279,807,o),
(293,783,o),
(320,768,cs),
(347,753,o),
(388,745,o),
(442,745,cs),
(489,745,o),
(524,757,o),
(547,780,cs),
(570,803,o),
(582,838,o),
(582,884,cs),
(582,923,o),
(570,952,o),
(547,972,cs),
(524,991,o),
(489,1001,o),
(442,1001,c),
(442,1071,ls),
(442,1117,o),
(459,1152,o),
(494,1175,cs),
(529,1198,o),
(582,1210,o),
(651,1210,cs),
(791,1210,ls),
(860,1210,o),
(913,1198,o),
(948,1175,cs),
(983,1152,o),
(1000,1117,o),
(1000,1071,cs),
(1000,931,ls),
(1000,892,o),
(986,856,o),
(959,825,cs),
(932,793,o),
(892,763,o),
(838,734,cs),
(279,442,l),
(279,233,ls),
(279,155,o),
(310,97,o),
(372,58,cs),
(434,19,o),
(527,0,o),
(651,0,cs),
(791,0,ls),
(915,0,o),
(1008,33,o),
(1070,98,cs),
(1132,163,o),
(1163,254,o),
(1163,372,cs),
(1163,565,l),
(1000,478,l),
(1000,372,ls),
(1000,288,o),
(983,220,o),
(948,169,cs),
(913,118,o),
(860,93,o),
(791,93,cs),
(651,93,ls),
(582,93,o),
(529,105,o),
(494,128,cs),
(459,151,o),
(442,186,o),
(442,233,cs),
(442,423,l),
(1000,715,ls),
(1054,744,o),
(1095,775,o),
(1122,809,cs),
(1149,844,o),
(1163,884,o),
(1163,931,cs),
(1163,1075,l),
(1359,1163,l),
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l)
);
},
{
closed = 1;
nodes = (
(442,908,l),
(457,908,o),
(469,906,o),
(476,902,cs),
(484,898,o),
(488,892,o),
(488,884,cs),
(488,869,o),
(484,858,o),
(476,850,cs),
(469,843,o),
(457,839,o),
(442,839,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
74 72 5 4 0 5 4 3 95 90 3 3 9 4 34 23 22 11 4 1 5 3 76 73 1 6 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 8 7 8 133 0 7 6 7 133 0 4 3 9 9 4 114 0 9 0 5 1 9 5 106 0 3 3 6 97 0 6 6 17 77 0 1 1 0 97 2 1 0 0 19 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 8 7 8 133 0 7 6 7 133 0 4 3 9 3 4 9 128 0 9 0 5 1 9 5 106 0 3 3 6 97 0 6 6 17 77 0 1 1 0 97 2 1 0 0 19 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
92 91 35 25 55 38 20 61 57 61 17 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1781_17C5;
},
{
glyphname = uni1782_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(306,985,o),
(340,972,o),
(361,972,cs),
(363,972,ls),
(384,972,o),
(411,990,o),
(443,1025,c),
(368,1083,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1339,1303,l)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(442,48,l),
(547,192,ls),
(570,224,o),
(593,247,o),
(616,262,cs),
(639,275,o),
(668,282,o),
(705,282,cs),
(709,282,ls),
(748,282,o),
(776,297,o),
(791,326,cs),
(798,338,o),
(801,349,o),
(801,359,cs),
(801,375,o),
(794,389,o),
(780,402,cs),
(757,424,o),
(729,435,o),
(698,436,cs),
(667,436,o),
(636,428,o),
(605,413,cs),
(574,398,o),
(539,366,o),
(501,316,cs),
(442,239,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1001,745,o),
(1001,698,cs),
(1001,0,l),
(1163,0,l),
(1163,698,ls),
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(651,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
19 16 15 9 8 7 4 0 8 1 3 3 1 2 1 31 1 5 4 41 22 2 0 5 4 76 20 1 3 74 0 1 3 2 3 1 2 128 0 2 7 3 2 7 126 0 7 0 9 4 7 9 106 0 4 0 5 0 4 5 105 0 3 3 17 77 8 6 2 0 0 19 0 78 62 59 20 52 21 54 40 20 52 19 17 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1782_17B6;
},
{
glyphname = uni1782_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1145,l),
(1339,1303,l),
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(306,985,o),
(340,972,o),
(361,972,cs),
(363,972,ls),
(384,972,o),
(411,990,o),
(443,1025,c),
(368,1083,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(442,48,l),
(547,192,ls),
(570,224,o),
(593,247,o),
(616,262,cs),
(639,275,o),
(668,282,o),
(705,282,cs),
(709,282,ls),
(748,282,o),
(776,297,o),
(791,326,cs),
(798,338,o),
(801,349,o),
(801,359,cs),
(801,375,o),
(794,389,o),
(780,402,cs),
(757,424,o),
(729,435,o),
(698,436,cs),
(667,436,o),
(636,428,o),
(605,413,cs),
(574,398,o),
(539,366,o),
(501,316,cs),
(442,239,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1001,745,o),
(1001,698,cs),
(1001,0,l),
(1163,0,l),
(1163,698,ls),
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(651,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
21 19 16 15 9 8 7 4 0 9 1 3 3 1 2 1 47 1 7 6 57 38 2 0 7 4 76 20 1 3 1 75 0 5 4 5 133 0 4 3 4 133 0 1 3 2 3 1 2 128 0 2 9 3 2 9 126 0 9 0 11 6 9 11 106 0 6 0 7 0 6 7 105 0 3 3 17 77 10 8 2 0 0 19 0 78 78 75 71 70 66 63 21 54 43 35 23 20 52 19 17 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1782_17C5;
},
{
glyphname = uni1783_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248,954,o),
(225,959,o),
(209,969,cs),
(194,978,o),
(186,993,o),
(186,1014,cs),
(186,1028,o),
(194,1047,o),
(209,1072,cs),
(225,1097,o),
(248,1128,o),
(279,1163,c),
(279,954,l)
);
},
{
closed = 1;
nodes = (
(93,960,o),
(109,921,o),
(140,897,cs),
(171,873,o),
(217,861,o),
(279,861,c),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(444,19,o),
(543,0,o),
(675,0,cs),
(768,0,ls),
(847,0,o),
(912,5,o),
(963,14,cs),
(1015,23,o),
(1052,36,o),
(1075,55,c),
(1098,36,o),
(1137,23,o),
(1191,14,cs),
(1244,5,o),
(1313,0,o),
(1396,0,cs),
(1489,0,ls),
(1621,0,o),
(1720,19,o),
(1786,58,cs),
(1852,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1688,996,l),
(1924,1152,l),
(2444,984,l),
(2444,0,l),
(2606,0,l),
(2606,1103,l),
(1986,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1703,151,o),
(1664,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1260,105,o),
(1221,128,cs),
(1183,151,o),
(1164,186,o),
(1164,233,cs),
(1164,869,l),
(943,1009,l),
(1033,1125,l),
(1107,1079,ls),
(1140,1058,o),
(1172,1047,o),
(1203,1047,cs),
(1234,1047,o),
(1275,1094,o),
(1326,1187,c),
(1280,1187,ls),
(1254,1187,o),
(1222,1199,o),
(1184,1223,cs),
(1055,1303,l),
(838,1025,l),
(838,965,l),
(1001,862,l),
(1001,233,ls),
(1001,186,o),
(981,151,o),
(942,128,cs),
(903,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(501,128,cs),
(462,151,o),
(442,186,o),
(442,233,cs),
(442,1303,l),
(279,1303,l),
(186,1198,ls),
(155,1163,o),
(132,1129,o),
(116,1098,cs),
(101,1067,o),
(93,1039,o),
(93,1013,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
78 74 57 1 4 7 6 79 77 72 71 58 47 46 7 0 7 80 70 59 45 4 3 0 14 1 1 5 4 76 73 48 2 4 74 0 6 0 7 0 6 7 105 10 1 0 0 3 5 0 3 105 0 4 4 17 77 8 1 5 5 1 97 9 2 11 3 1 1 19 1 78 11 9 0 0 76 75 66 63 55 53 52 50 41 38 34 33 25 24 20 17 9 84 11 84 0 8 0 8 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni1783_17B6;
},
{
glyphname = uni1783_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1621,0,o),
(1720,19,o),
(1786,58,cs),
(1852,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1688,996,l),
(1924,1152,l),
(2444,984,l),
(2444,0,l),
(2606,0,l),
(2606,1024,l),
(2637,1086,o),
(2653,1133,o),
(2653,1164,cs),
(2653,1536,ls),
(2653,1598,o),
(2642,1645,o),
(2621,1676,cs),
(2600,1707,o),
(2568,1722,o),
(2525,1722,cs),
(2482,1722,o),
(2451,1714,o),
(2430,1699,cs),
(2409,1684,o),
(2398,1660,o),
(2398,1629,c),
(2429,1629,o),
(2452,1621,o),
(2468,1606,cs),
(2483,1591,o),
(2491,1567,o),
(2491,1536,cs),
(2491,1140,l),
(1986,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1703,151,o),
(1664,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1260,105,o),
(1221,128,cs),
(1183,151,o),
(1164,186,o),
(1164,233,cs),
(1164,869,l),
(943,1009,l),
(1033,1125,l),
(1107,1079,ls),
(1140,1058,o),
(1172,1047,o),
(1203,1047,cs),
(1234,1047,o),
(1275,1094,o),
(1326,1187,c),
(1280,1187,ls),
(1254,1187,o),
(1222,1199,o),
(1184,1223,cs),
(1055,1303,l),
(838,1025,l),
(838,965,l),
(1001,862,l),
(1001,233,ls),
(1001,186,o),
(981,151,o),
(942,128,cs),
(903,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(501,128,cs),
(462,151,o),
(442,186,o),
(442,233,cs),
(442,1303,l),
(279,1303,l),
(186,1198,ls),
(155,1163,o),
(132,1129,o),
(116,1098,cs),
(101,1067,o),
(93,1039,o),
(93,1013,cs),
(93,960,o),
(109,921,o),
(140,897,cs),
(171,873,o),
(217,861,o),
(279,861,c),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(444,19,o),
(543,0,o),
(675,0,cs),
(768,0,ls),
(847,0,o),
(912,5,o),
(963,14,cs),
(1015,23,o),
(1052,36,o),
(1075,55,c),
(1098,36,o),
(1137,23,o),
(1191,14,cs),
(1244,5,o),
(1313,0,o),
(1396,0,cs),
(1489,0,ls)
);
},
{
closed = 1;
nodes = (
(186,1028,o),
(194,1047,o),
(209,1072,cs),
(225,1097,o),
(248,1128,o),
(279,1163,c),
(279,954,l),
(248,954,o),
(225,959,o),
(209,969,cs),
(194,978,o),
(186,993,o),
(186,1014,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 119 values pushed */
93 85 65 48 4 6 5 86 84 81 63 62 49 38 37 8 11 6 87 61 50 36 4 2 11 5 1 0 4 4 76 64 39 2 3 1 75 0 9 8 9 133 0 8 3 8 133 0 5 0 6 11 5 6 105 13 1 11 0 2 4 11 2 105 0 3 3 17 77 7 1 4 4 0 97 10 1 12 3 0 0 19 0 78 92 92 2 0 92 100 92 100 83 82 75 73 70 69 57 54 46 44 43 41 32 29 25 24 16 15 11 8 0 91 2 91 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni1783_17C5;
},
{
glyphname = uni1784_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1012,1109,l),
(1017,1120,o),
(1019,1132,o),
(1019,1143,cs),
(1019,1196,o),
(1005,1236,o),
(976,1263,cs),
(947,1290,o),
(905,1303,o),
(848,1303,cs),
(791,1303,o),
(748,1290,o),
(719,1263,cs),
(690,1236,o),
(675,1197,o),
(675,1146,cs),
(675,1123,o),
(680,1106,o),
(690,1094,c),
(558,1094,ls),
(519,1094,o),
(491,1100,o),
(472,1111,cs),
(453,1121,o),
(443,1139,o),
(443,1164,cs),
(443,1304,ls),
(443,1365,o),
(431,1412,o),
(407,1443,cs),
(384,1474,o),
(349,1489,o),
(302,1489,cs),
(263,1489,o),
(234,1480,o),
(215,1461,cs),
(196,1442,o),
(186,1412,o),
(186,1373,c),
(217,1373,o),
(240,1367,o),
(256,1355,cs),
(271,1344,o),
(279,1327,o),
(279,1304,cs),
(279,1164,ls),
(279,1105,o),
(302,1063,o),
(349,1038,cs),
(396,1013,o),
(465,1001,o),
(558,1001,cs),
(807,1001,l),
(1000,911,l),
(1000,111,l),
(721,290,l),
(442,111,l),
(442,838,l),
(279,838,l),
(206,758,ls),
(177,724,o),
(154,693,o),
(138,664,cs),
(123,635,o),
(116,607,o),
(116,581,cs),
(116,542,o),
(130,513,o),
(157,494,cs),
(184,475,o),
(224,465,o),
(279,465,c),
(279,0,l),
(442,0,l),
(721,180,l),
(1000,0,l),
(1163,0,l),
(1163,966,l),
(1028,1015,l),
(1359,1163,l),
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1443,1303,l)
);
},
{
closed = 1;
nodes = (
(209,595,o),
(215,611,o),
(227,631,cs),
(238,651,o),
(256,674,o),
(279,699,c),
(279,559,l),
(256,559,o),
(238,561,o),
(227,564,cs),
(215,568,o),
(209,574,o),
(209,582,cs)
);
},
{
closed = 1;
nodes = (
(790,1162,o),
(795,1175,o),
(804,1184,cs),
(814,1193,o),
(829,1197,o),
(848,1198,cs),
(867,1197,o),
(882,1193,o),
(891,1184,cs),
(900,1175,o),
(904,1163,o),
(904,1147,cs),
(904,1130,o),
(900,1117,o),
(891,1108,cs),
(882,1099,o),
(867,1094,o),
(848,1094,cs),
(829,1094,o),
(814,1099,o),
(804,1108,cs),
(795,1117,o),
(790,1129,o),
(790,1145,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 110 values pushed */
63 61 4 0 4 8 11 5 1 5 8 26 6 3 3 4 5 82 1 12 4 25 24 23 9 4 0 3 5 76 64 1 9 1 75 0 7 6 7 133 0 6 9 6 133 10 1 8 0 5 4 8 5 103 13 1 12 0 3 0 12 3 105 0 11 11 9 97 0 9 9 17 77 0 4 4 0 95 2 1 2 0 0 19 0 78 81 81 81 89 81 89 78 76 70 68 58 56 39 35 23 37 24 17 18 21 17 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1784_17B6;
},
{
glyphname = uni1784_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1155,l),
(1443,1303,l),
(1012,1109,l),
(1017,1120,o),
(1019,1132,o),
(1019,1143,cs),
(1019,1196,o),
(1005,1236,o),
(976,1263,cs),
(947,1290,o),
(905,1303,o),
(848,1303,cs),
(791,1303,o),
(748,1290,o),
(719,1263,cs),
(690,1236,o),
(675,1197,o),
(675,1146,cs),
(675,1123,o),
(680,1106,o),
(690,1094,c),
(558,1094,ls),
(519,1094,o),
(491,1100,o),
(472,1111,cs),
(453,1121,o),
(443,1139,o),
(443,1164,cs),
(443,1304,ls),
(443,1365,o),
(431,1412,o),
(407,1443,cs),
(384,1474,o),
(349,1489,o),
(302,1489,cs),
(263,1489,o),
(234,1480,o),
(215,1461,cs),
(196,1442,o),
(186,1412,o),
(186,1373,c),
(217,1373,o),
(240,1367,o),
(256,1355,cs),
(271,1344,o),
(279,1327,o),
(279,1304,cs),
(279,1164,ls),
(279,1105,o),
(302,1063,o),
(349,1038,cs),
(396,1013,o),
(465,1001,o),
(558,1001,cs),
(807,1001,l),
(1000,911,l),
(1000,111,l),
(721,290,l),
(442,111,l),
(442,838,l),
(279,838,l),
(206,758,ls),
(177,724,o),
(154,693,o),
(138,664,cs),
(123,635,o),
(116,607,o),
(116,581,cs),
(116,542,o),
(130,513,o),
(157,494,cs),
(184,475,o),
(224,465,o),
(279,465,c),
(279,0,l),
(442,0,l),
(721,180,l),
(1000,0,l),
(1163,0,l),
(1163,966,l),
(1028,1015,l),
(1359,1163,l),
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l)
);
},
{
closed = 1;
nodes = (
(209,595,o),
(215,611,o),
(227,631,cs),
(238,651,o),
(256,674,o),
(279,699,c),
(279,559,l),
(256,559,o),
(238,561,o),
(227,564,cs),
(215,568,o),
(209,574,o),
(209,582,cs)
);
},
{
closed = 1;
nodes = (
(790,1162,o),
(795,1175,o),
(804,1184,cs),
(814,1193,o),
(829,1197,o),
(848,1198,cs),
(867,1197,o),
(882,1193,o),
(891,1184,cs),
(900,1175,o),
(904,1163,o),
(904,1147,cs),
(904,1130,o),
(900,1117,o),
(891,1108,cs),
(882,1099,o),
(867,1094,o),
(848,1094,cs),
(829,1094,o),
(814,1099,o),
(804,1108,cs),
(795,1117,o),
(790,1129,o),
(790,1145,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 125 values pushed */
65 63 61 4 4 8 13 5 0 2 5 8 26 6 3 3 4 5 98 1 14 4 25 24 23 9 4 0 3 5 76 64 1 9 1 75 0 11 10 11 133 0 10 7 10 133 0 7 6 7 133 0 6 9 6 133 12 1 8 0 5 4 8 5 103 15 1 14 0 3 0 14 3 105 0 13 13 9 97 0 9 9 17 77 0 4 4 0 95 2 1 2 0 0 19 0 78 97 97 97 105 97 105 94 92 86 84 75 73 70 69 58 56 39 35 23 37 24 17 18 21 17 16 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1784_17C5;
},
{
glyphname = uni1785_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(978,582,o),
(960,584,o),
(948,587,c),
(937,592,o),
(931,598,o),
(931,605,cs),
(931,619,o),
(937,635,o),
(948,654,cs),
(960,673,o),
(978,696,o),
(1001,722,c),
(1001,582,l)
);
},
{
closed = 1;
nodes = (
(279,977,l),
(279,233,ls),
(279,155,o),
(308,97,o),
(367,58,cs),
(425,19,o),
(512,0,o),
(628,0,cs),
(814,0,ls),
(930,0,o),
(1017,19,o),
(1076,58,cs),
(1134,97,o),
(1163,155,o),
(1163,233,cs),
(1163,861,l),
(1001,861,l),
(928,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(838,629,o),
(838,604,cs),
(838,565,o),
(852,537,o),
(879,518,cs),
(906,499,o),
(947,489,o),
(1001,489,c),
(1001,233,ls),
(1001,186,o),
(985,151,o),
(954,128,cs),
(923,105,o),
(876,93,o),
(814,93,cs),
(628,93,ls),
(566,93,o),
(520,105,o),
(489,128,cs),
(458,151,o),
(442,186,o),
(442,233,cs),
(442,977,l),
(346,1072,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1339,1303,l),
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
55 52 51 17 16 13 9 7 2 7 50 18 12 3 5 2 5 1 2 0 5 3 76 56 1 7 74 0 2 7 5 7 2 5 128 0 5 0 7 5 0 126 8 1 0 0 4 3 0 4 105 0 7 7 17 77 0 3 3 1 95 6 1 1 1 19 1 78 0 0 54 53 46 43 39 38 30 29 25 22 15 14 11 10 0 8 0 8 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1785_17B6;
},
{
glyphname = uni1785_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1145,l),
(1339,1303,l),
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(279,977,l),
(279,233,ls),
(279,155,o),
(308,97,o),
(367,58,cs),
(425,19,o),
(512,0,o),
(628,0,cs),
(814,0,ls),
(930,0,o),
(1017,19,o),
(1076,58,cs),
(1134,97,o),
(1163,155,o),
(1163,233,cs),
(1163,861,l),
(1001,861,l),
(928,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(838,629,o),
(838,604,cs),
(838,565,o),
(852,537,o),
(879,518,cs),
(906,499,o),
(947,489,o),
(1001,489,c),
(1001,233,ls),
(1001,186,o),
(985,151,o),
(954,128,cs),
(923,105,o),
(876,93,o),
(814,93,cs),
(628,93,ls),
(566,93,o),
(520,105,o),
(489,128,cs),
(458,151,o),
(442,186,o),
(442,233,cs),
(442,977,l),
(346,1072,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l)
);
},
{
closed = 1;
nodes = (
(931,619,o),
(937,635,o),
(948,654,cs),
(960,673,o),
(978,696,o),
(1001,722,c),
(1001,582,l),
(978,582,o),
(960,584,o),
(948,587,c),
(937,592,o),
(931,598,o),
(931,605,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
48 46 43 42 8 7 4 0 8 1 6 41 9 3 3 4 1 69 65 2 9 4 3 76 47 1 6 1 75 0 8 7 8 133 0 7 6 7 133 0 1 6 4 6 1 4 128 0 4 9 6 4 9 126 10 1 9 0 3 2 9 3 105 0 6 6 17 77 0 2 2 0 95 5 1 0 0 19 0 78 64 64 64 72 64 72 35 23 23 52 24 20 55 19 17 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1785_17C5;
},
{
glyphname = uni1786_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(232,279,o),
(236,296,o),
(243,308,cs),
(251,320,o),
(263,326,o),
(279,326,c),
(279,128,l),
(263,142,o),
(251,160,o),
(243,181,cs),
(236,202,o),
(232,227,o),
(232,256,cs)
);
},
{
closed = 1;
nodes = (
(139,215,o),
(145,178,o),
(157,146,cs),
(168,115,o),
(186,88,o),
(209,65,cs),
(279,0,l),
(442,0,l),
(442,326,l),
(511,326,ls),
(558,326,o),
(593,317,o),
(616,299,cs),
(639,281,o),
(651,254,o),
(651,217,cs),
(651,144,o),
(670,90,o),
(709,54,cs),
(748,18,o),
(806,0,o),
(884,0,cs),
(977,0,o),
(1046,19,o),
(1093,58,cs),
(1140,97,o),
(1163,155,o),
(1163,233,cs),
(1163,861,l),
(1000,861,l),
(927,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(837,629,o),
(837,604,cs),
(837,565,o),
(851,537,o),
(878,518,cs),
(905,499,o),
(946,489,o),
(1000,489,c),
(1000,233,ls),
(1000,186,o),
(990,151,o),
(971,128,cs),
(951,105,o),
(922,93,o),
(884,93,cs),
(837,93,o),
(802,103,o),
(779,124,cs),
(756,145,o),
(744,176,o),
(744,217,cs),
(744,284,o),
(725,335,o),
(686,369,cs),
(647,402,o),
(589,419,o),
(511,419,cs),
(442,419,l),
(442,977,l),
(346,1072,l),
(551,1169,l),
(1006,1002,l),
(1037,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1884,0,l),
(1884,1103,l),
(1339,1303,l),
(1088,1143,l),
(658,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(279,977,l),
(279,419,l),
(232,419,o),
(197,405,o),
(174,378,cs),
(151,351,o),
(139,310,o),
(139,256,cs)
);
},
{
closed = 1;
nodes = (
(930,619,o),
(936,635,o),
(948,654,cs),
(960,673,o),
(977,696,o),
(1000,722,c),
(1000,582,l),
(977,582,o),
(960,584,o),
(948,587,c),
(936,592,o),
(930,598,o),
(930,605,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 115 values pushed */
83 80 79 26 25 22 18 7 3 12 78 27 21 3 7 3 14 10 2 1 7 4 1 5 0 4 76 84 1 12 74 0 3 12 7 12 3 7 128 0 7 1 12 7 1 126 13 1 1 0 6 4 1 6 105 11 1 4 9 1 0 5 4 0 105 0 12 12 17 77 0 5 5 2 96 10 8 2 2 2 19 2 78 9 9 82 81 77 76 68 67 66 64 58 56 52 51 43 42 38 36 30 28 24 23 20 19 9 17 9 17 21 14 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1786_17B6;
},
{
glyphname = uni1786_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1915,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1920,1645,o),
(1899,1676,cs),
(1878,1707,o),
(1846,1722,o),
(1803,1722,cs),
(1760,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1730,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1145,l),
(1339,1303,l),
(1088,1143,l),
(658,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(279,977,l),
(279,419,l),
(232,419,o),
(197,405,o),
(174,378,cs),
(151,351,o),
(139,310,o),
(139,256,cs),
(139,215,o),
(145,178,o),
(157,146,cs),
(168,115,o),
(186,88,o),
(209,65,cs),
(279,0,l),
(442,0,l),
(442,326,l),
(511,326,ls),
(558,326,o),
(593,317,o),
(616,299,cs),
(639,281,o),
(651,254,o),
(651,217,cs),
(651,144,o),
(670,90,o),
(709,54,cs),
(748,18,o),
(806,0,o),
(884,0,cs),
(977,0,o),
(1046,19,o),
(1093,58,cs),
(1140,97,o),
(1163,155,o),
(1163,233,cs),
(1163,861,l),
(1000,861,l),
(927,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(837,629,o),
(837,604,cs),
(837,565,o),
(851,537,o),
(878,518,cs),
(905,499,o),
(946,489,o),
(1000,489,c),
(1000,233,ls),
(1000,186,o),
(990,151,o),
(971,128,cs),
(951,105,o),
(922,93,o),
(884,93,cs),
(837,93,o),
(802,103,o),
(779,124,cs),
(756,145,o),
(744,176,o),
(744,217,cs),
(744,284,o),
(725,335,o),
(686,369,cs),
(647,402,o),
(589,419,o),
(511,419,cs),
(442,419,l),
(442,977,l),
(346,1072,l),
(551,1169,l),
(1006,1002,l),
(1037,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1884,0,l),
(1884,1024,l)
);
},
{
closed = 1;
nodes = (
(232,279,o),
(236,296,o),
(243,308,cs),
(251,320,o),
(263,326,o),
(279,326,c),
(279,128,l),
(263,142,o),
(251,160,o),
(243,181,cs),
(236,202,o),
(232,227,o),
(232,256,cs)
);
},
{
closed = 1;
nodes = (
(930,619,o),
(936,635,o),
(948,654,cs),
(960,673,o),
(977,696,o),
(1000,722,c),
(1000,582,l),
(977,582,o),
(960,584,o),
(948,587,c),
(936,592,o),
(930,598,o),
(930,605,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 123 values pushed */
67 65 62 61 8 7 4 0 8 1 10 60 9 3 3 5 1 97 93 2 14 5 87 1 3 7 4 76 66 1 10 1 75 0 12 11 12 133 0 11 10 11 133 0 1 10 5 10 1 5 128 0 5 14 10 5 14 126 15 1 14 0 4 2 14 4 105 9 1 2 13 1 7 3 2 7 105 0 10 10 17 77 0 3 3 0 96 8 6 2 0 0 19 0 78 92 92 92 100 92 100 89 88 77 75 72 71 64 63 59 58 17 38 36 24 20 38 36 19 17 16 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1786_17C5;
},
{
glyphname = uni1787_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1470,1303,l),
(1001,861,l),
(1001,111,l),
(721,290,l),
(442,111,l),
(442,956,l),
(298,1070,l),
(453,1168,l),
(652,1001,l),
(838,1001,ls),
(941,1001,o),
(1021,1019,o),
(1078,1054,cs),
(1135,1090,o),
(1163,1142,o),
(1163,1210,cs),
(1163,1288,o),
(1149,1346,o),
(1122,1385,cs),
(1094,1424,o),
(1052,1443,o),
(997,1443,cs),
(960,1443,o),
(931,1436,o),
(912,1421,cs),
(893,1405,o),
(884,1381,o),
(884,1350,c),
(923,1350,o),
(953,1338,o),
(972,1314,cs),
(991,1291,o),
(1001,1257,o),
(1001,1210,cs),
(1001,1175,o),
(988,1147,o),
(961,1126,cs),
(933,1105,o),
(892,1094,o),
(838,1094,cs),
(795,1094,l),
(545,1303,l),
(493,1303,l),
(186,1110,l),
(186,1039,l),
(279,966,l),
(279,0,l),
(442,0,l),
(721,180,l),
(1001,0,l),
(1163,0,l),
(1163,886,l),
(1432,1139,l),
(1722,1000,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
43 35 9 3 3 2 36 8 2 6 3 46 41 40 39 38 37 7 4 1 9 0 6 3 76 42 1 2 1 75 0 5 4 5 133 0 4 2 4 133 0 3 0 6 0 3 6 104 0 2 2 17 77 7 1 2 0 0 19 0 78 26 38 35 22 33 20 18 18 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1787_17B6;
},
{
glyphname = uni1787_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1722,0,l),
(1885,0,l),
(1885,1024,l),
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1159,l),
(1470,1303,l),
(1001,861,l),
(1001,111,l),
(721,290,l),
(442,111,l),
(442,956,l),
(298,1070,l),
(453,1168,l),
(652,1001,l),
(838,1001,ls),
(941,1001,o),
(1021,1019,o),
(1078,1054,cs),
(1135,1090,o),
(1163,1142,o),
(1163,1210,cs),
(1163,1288,o),
(1149,1346,o),
(1122,1385,cs),
(1094,1424,o),
(1052,1443,o),
(997,1443,cs),
(960,1443,o),
(931,1436,o),
(912,1421,cs),
(893,1405,o),
(884,1381,o),
(884,1350,c),
(923,1350,o),
(953,1338,o),
(972,1314,cs),
(991,1291,o),
(1001,1257,o),
(1001,1210,cs),
(1001,1175,o),
(988,1147,o),
(961,1126,cs),
(933,1105,o),
(892,1094,o),
(838,1094,cs),
(795,1094,l),
(545,1303,l),
(493,1303,l),
(186,1110,l),
(186,1039,l),
(279,966,l),
(279,0,l),
(442,0,l),
(721,180,l),
(1001,0,l),
(1163,0,l),
(1163,886,l),
(1432,1139,l),
(1722,1000,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
43 35 9 3 3 2 59 36 8 3 6 3 62 41 40 39 38 37 7 4 1 9 0 6 3 76 42 1 2 1 75 0 8 7 8 133 0 7 5 7 133 0 5 4 5 133 0 4 2 4 133 0 3 0 6 0 3 6 104 0 2 2 17 77 9 1 2 0 0 19 0 78 61 60 35 29 38 35 22 33 20 18 18 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1787_17C5;
},
{
glyphname = uni1788_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l),
(442,349,l),
(488,349,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1075,l),
(637,1163,l),
(1000,998,l),
(1000,233,ls),
(1000,155,o),
(1033,97,o),
(1099,58,cs),
(1165,19,o),
(1264,0,o),
(1396,0,cs),
(1489,0,ls),
(1568,0,o),
(1633,5,o),
(1685,14,cs),
(1736,23,o),
(1773,36,o),
(1796,55,c),
(1819,36,o),
(1858,23,o),
(1912,14,cs),
(1965,5,o),
(2034,0,o),
(2118,0,cs),
(2211,0,ls),
(2342,0,o),
(2441,19,o),
(2508,58,cs),
(2573,97,o),
(2606,155,o),
(2606,233,cs),
(2606,869,l),
(2409,996,l),
(2645,1152,l),
(3165,984,l),
(3165,0,l),
(3328,0,l),
(3328,1103,l),
(2707,1303,l),
(2280,1025,l),
(2280,965,l),
(2443,862,l),
(2443,233,ls),
(2443,186,o),
(2424,151,o),
(2386,128,cs),
(2347,105,o),
(2288,93,o),
(2211,93,cs),
(2118,93,ls),
(2040,93,o),
(1982,105,o),
(1943,128,cs),
(1904,151,o),
(1885,186,o),
(1885,233,cs),
(1885,869,l),
(1664,1009,l),
(1754,1125,l),
(1828,1079,ls),
(1861,1058,o),
(1893,1047,o),
(1924,1047,cs),
(1955,1047,o),
(1996,1094,o),
(2048,1187,c),
(2001,1187,ls),
(1975,1187,o),
(1943,1199,o),
(1905,1223,cs),
(1776,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1702,151,o),
(1663,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1261,105,o),
(1222,128,cs),
(1183,151,o),
(1163,186,o),
(1163,233,cs),
(1163,1103,l),
(721,1303,l),
(279,1104,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 105 values pushed */
87 83 66 43 41 28 27 7 7 6 89 88 86 81 80 79 68 67 56 55 54 26 12 3 7 2 1 5 0 16 1 1 5 4 76 82 57 42 3 6 74 0 6 0 7 3 6 7 105 0 3 10 1 0 5 3 0 105 8 1 5 5 1 97 9 4 2 11 4 1 1 19 1 78 13 11 1 0 85 84 75 72 64 62 61 59 50 47 40 39 31 29 22 19 11 93 13 93 0 10 1 10 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2885;
}
);
note = uni1788_17B6;
},
{
glyphname = uni1788_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2342,0,o),
(2441,19,o),
(2508,58,cs),
(2573,97,o),
(2606,155,o),
(2606,233,cs),
(2606,869,l),
(2409,996,l),
(2645,1152,l),
(3165,984,l),
(3165,0,l),
(3328,0,l),
(3328,1024,l),
(3359,1086,o),
(3374,1133,o),
(3374,1164,cs),
(3374,1536,ls),
(3374,1598,o),
(3364,1645,o),
(3343,1676,cs),
(3322,1707,o),
(3290,1722,o),
(3247,1722,cs),
(3204,1722,o),
(3172,1714,o),
(3151,1699,cs),
(3130,1684,o),
(3119,1660,o),
(3119,1629,c),
(3150,1629,o),
(3174,1621,o),
(3189,1606,cs),
(3204,1591,o),
(3212,1567,o),
(3212,1536,cs),
(3212,1140,l),
(2707,1303,l),
(2280,1025,l),
(2280,965,l),
(2443,862,l),
(2443,233,ls),
(2443,186,o),
(2424,151,o),
(2386,128,cs),
(2347,105,o),
(2288,93,o),
(2211,93,cs),
(2118,93,ls),
(2040,93,o),
(1982,105,o),
(1943,128,cs),
(1904,151,o),
(1885,186,o),
(1885,233,cs),
(1885,869,l),
(1664,1009,l),
(1754,1125,l),
(1828,1079,ls),
(1861,1058,o),
(1893,1047,o),
(1924,1047,cs),
(1955,1047,o),
(1996,1094,o),
(2048,1187,c),
(2001,1187,ls),
(1975,1187,o),
(1943,1199,o),
(1905,1223,cs),
(1776,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1702,151,o),
(1663,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1261,105,o),
(1222,128,cs),
(1183,151,o),
(1163,186,o),
(1163,233,cs),
(1163,1103,l),
(721,1303,l),
(279,1104,l),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1075,l),
(637,1163,l),
(1000,998,l),
(1000,233,ls),
(1000,155,o),
(1033,97,o),
(1099,58,cs),
(1165,19,o),
(1264,0,o),
(1396,0,cs),
(1489,0,ls),
(1568,0,o),
(1633,5,o),
(1685,14,cs),
(1736,23,o),
(1773,36,o),
(1796,55,c),
(1819,36,o),
(1858,23,o),
(1912,14,cs),
(1965,5,o),
(2034,0,o),
(2118,0,cs),
(2211,0,ls)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 120 values pushed */
71 46 31 3 5 8 92 72 55 32 30 17 16 7 6 5 94 93 91 88 70 69 68 57 56 45 44 43 15 13 2 6 101 1 4 11 5 1 0 4 5 76 0 9 8 9 133 0 8 5 8 133 0 5 0 6 2 5 6 105 0 2 13 1 11 4 2 11 105 7 1 4 4 0 97 10 3 1 12 4 0 0 19 0 78 100 99 2 0 99 109 100 109 90 89 82 80 77 76 64 61 53 51 50 48 39 36 29 28 20 18 11 8 0 98 2 98 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2885;
}
);
note = uni1788_17C5;
},
{
glyphname = uni1789_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1763,1122,l),
(1443,1303,l),
(1100,1110,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,0,l),
(1163,0,l),
(1163,1039,l),
(1373,1155,l),
(1722,961,l),
(1722,0,l),
(1885,0,l),
(1885,1054,l),
(1863,1066,l),
(2080,1163,l),
(2443,998,l),
(2443,0,l),
(2606,0,l),
(2606,1103,l),
(2164,1303,l)
);
},
{
closed = 1;
nodes = (
(325,-289,o),
(376,-268,o),
(432,-253,cs),
(487,-240,o),
(547,-233,o),
(611,-233,cs),
(691,-233,o),
(770,-248,o),
(847,-279,cs),
(924,-310,o),
(999,-357,o),
(1073,-419,cs),
(1128,-466,o),
(1196,-500,o),
(1276,-523,cs),
(1356,-547,o),
(1448,-559,o),
(1552,-559,cs),
(1663,-559,o),
(1747,-536,o),
(1802,-489,cs),
(1857,-442,o),
(1885,-372,o),
(1885,-279,cs),
(1885,-217,o),
(1871,-171,o),
(1844,-140,cs),
(1817,-109,o),
(1777,-93,o),
(1723,-93,cs),
(1684,-93,o),
(1654,-101,o),
(1635,-116,cs),
(1616,-132,o),
(1606,-155,o),
(1606,-186,c),
(1645,-186,o),
(1674,-194,o),
(1693,-209,cs),
(1713,-225,o),
(1723,-248,o),
(1723,-279,cs),
(1723,-341,o),
(1709,-388,o),
(1680,-419,cs),
(1651,-450,o),
(1609,-465,o),
(1552,-465,cs),
(1493,-465,o),
(1438,-456,o),
(1385,-437,cs),
(1332,-418,o),
(1283,-388,o),
(1237,-349,cs),
(1154,-279,o),
(1060,-227,o),
(956,-192,cs),
(851,-157,o),
(736,-140,o),
(611,-140,cs),
(547,-140,o),
(487,-147,o),
(432,-160,cs),
(320,-189,o),
(279,-207,o),
(279,-270,cs),
(279,-317,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
width = 2164;
}
);
note = uni1789_17B6;
},
{
glyphname = uni1789_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2637,1086,o),
(2653,1133,o),
(2653,1164,cs),
(2653,1536,ls),
(2653,1598,o),
(2642,1645,o),
(2621,1676,cs),
(2600,1707,o),
(2568,1722,o),
(2525,1722,cs),
(2482,1722,o),
(2450,1714,o),
(2429,1699,cs),
(2408,1684,o),
(2398,1660,o),
(2398,1629,c),
(2429,1629,o),
(2452,1621,o),
(2468,1606,cs),
(2483,1591,o),
(2491,1567,o),
(2491,1536,cs),
(2491,1155,l),
(2164,1303,l),
(1763,1122,l),
(1443,1303,l),
(1100,1110,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,0,l),
(1163,0,l),
(1163,1039,l),
(1373,1155,l),
(1722,961,l),
(1722,0,l),
(1885,0,l),
(1885,1054,l),
(1863,1066,l),
(2080,1163,l),
(2443,998,l),
(2443,0,l),
(2606,0,l),
(2606,1024,l)
);
},
{
closed = 1;
nodes = (
(325,-289,o),
(376,-268,o),
(432,-253,cs),
(487,-240,o),
(547,-233,o),
(611,-233,cs),
(691,-233,o),
(770,-248,o),
(847,-279,cs),
(924,-310,o),
(999,-357,o),
(1073,-419,cs),
(1128,-466,o),
(1196,-500,o),
(1276,-523,cs),
(1356,-547,o),
(1448,-559,o),
(1552,-559,cs),
(1663,-559,o),
(1747,-536,o),
(1802,-489,cs),
(1857,-442,o),
(1885,-372,o),
(1885,-279,cs),
(1885,-217,o),
(1871,-171,o),
(1844,-140,cs),
(1817,-109,o),
(1777,-93,o),
(1723,-93,cs),
(1684,-93,o),
(1654,-101,o),
(1635,-116,cs),
(1616,-132,o),
(1606,-155,o),
(1606,-186,c),
(1645,-186,o),
(1674,-194,o),
(1693,-209,cs),
(1713,-225,o),
(1723,-248,o),
(1723,-279,cs),
(1723,-341,o),
(1709,-388,o),
(1680,-419,cs),
(1651,-450,o),
(1609,-465,o),
(1552,-465,cs),
(1493,-465,o),
(1438,-456,o),
(1385,-437,cs),
(1332,-418,o),
(1283,-388,o),
(1237,-349,cs),
(1154,-279,o),
(1060,-227,o),
(956,-192,cs),
(851,-157,o),
(736,-140,o),
(611,-140,cs),
(547,-140,o),
(487,-147,o),
(432,-160,cs),
(320,-189,o),
(279,-207,o),
(279,-270,cs),
(279,-317,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
39 38 37 36 35 34 33 32 31 18 17 16 15 14 11 10 9 6 5 4 3 0 22 3 5 103 1 0 13 71 1 10 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 6 5 6 133 0 5 3 5 133 0 12 0 9 0 12 9 128 0 11 9 8 9 11 8 128 0 3 14 1 13 0 3 13 105 0 9 0 8 10 9 8 105 4 2 1 3 0 0 19 77 0 10 10 7 98 0 7 7 20 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 6 5 6 133 0 5 3 5 133 0 11 9 8 9 11 8 128 0 3 14 1 13 0 3 13 105 4 2 1 3 0 0 19 77 0 12 12 18 77 0 8 8 9 97 0 9 9 18 77 0 10 10 7 98 0 7 7 20 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 6 5 6 133 0 5 3 5 133 0 11 9 8 9 11 8 128 0 3 14 1 13 0 3 13 105 0 10 0 7 10 7 102 4 2 1 3 0 0 19 77 0 12 12 18 77 0 8 8 9 97 0 9 9 18 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 6 5 6 133 0 5 3 5 133 0 11 9 8 9 11 8 128 0 3 14 1 13 0 3 13 105 0 9 0 8 10 9 8 105 0 10 0 7 10 7 102 4 2 1 3 0 0 19 77 0 12 12 18 12 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
102 101 101 111 102 111 98 96 93 92 86 84 78 76 38 41 35 29 24 38 20 21 17 15 7 31 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni1789_17C5;
},
{
glyphname = uni178A_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(597,1094,o),
(539,1100,o),
(501,1112,cs),
(462,1123,o),
(442,1140,o),
(442,1164,cs),
(442,1195,o),
(450,1210,o),
(466,1210,cs),
(481,1210,o),
(489,1195,o),
(489,1164,c),
(520,1164,o),
(543,1170,o),
(558,1181,cs),
(574,1193,o),
(582,1210,o),
(582,1233,cs),
(582,1256,o),
(572,1274,o),
(553,1286,cs),
(533,1297,o),
(503,1303,o),
(464,1303,cs),
(403,1303,o),
(357,1291,o),
(326,1268,cs),
(295,1245,o),
(279,1210,o),
(279,1164,cs),
(279,1109,o),
(312,1069,o),
(378,1042,cs),
(443,1015,o),
(542,1001,o),
(675,1001,cs),
(768,1001,ls),
(900,1001,o),
(999,1019,o),
(1065,1056,cs),
(1130,1093,o),
(1163,1148,o),
(1163,1221,cs),
(1163,1295,o),
(1148,1351,o),
(1117,1388,cs),
(1086,1425,o),
(1039,1443,o),
(977,1443,cs),
(946,1443,o),
(923,1435,o),
(907,1420,cs),
(892,1404,o),
(884,1381,o),
(884,1350,c),
(923,1350,o),
(952,1339,o),
(972,1318,cs),
(991,1297,o),
(1000,1264,o),
(1000,1221,cs),
(1000,1179,o),
(981,1147,o),
(942,1125,cs),
(903,1104,o),
(845,1094,o),
(768,1094,cs),
(675,1094,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(721,180,l),
(1000,0,l),
(1163,0,l),
(1163,886,l),
(1432,1139,l),
(1722,1000,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1470,1303,l),
(1000,861,l),
(1000,111,l),
(721,290,l),
(442,111,l),
(442,861,l),
(279,861,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 108 values pushed */
62 48 2 0 5 49 47 2 9 3 59 58 57 52 4 7 9 3 76 61 1 4 60 1 9 2 75 0 5 6 0 6 5 114 0 2 0 1 4 2 1 105 11 1 0 0 3 9 0 3 105 0 6 6 4 97 0 4 4 17 77 0 9 9 7 95 12 10 8 3 7 7 19 7 78 46 46 2 0 46 63 46 63 56 55 54 53 51 50 41 39 38 37 31 29 23 20 14 12 9 8 0 45 2 45 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178A_17B6;
},
{
glyphname = uni178A_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1722,0,l),
(1885,0,l),
(1885,1024,l),
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1159,l),
(1470,1303,l),
(1000,861,l),
(1000,111,l),
(721,290,l),
(442,111,l),
(442,861,l),
(279,861,l),
(279,0,l),
(442,0,l),
(721,180,l),
(1000,0,l),
(1163,0,l),
(1163,886,l),
(1432,1139,l),
(1722,1000,l)
);
},
{
closed = 1;
nodes = (
(279,1109,o),
(312,1069,o),
(378,1042,cs),
(443,1015,o),
(542,1001,o),
(675,1001,cs),
(768,1001,ls),
(900,1001,o),
(999,1019,o),
(1065,1056,cs),
(1130,1093,o),
(1163,1148,o),
(1163,1221,cs),
(1163,1295,o),
(1148,1351,o),
(1117,1388,cs),
(1086,1425,o),
(1039,1443,o),
(977,1443,cs),
(946,1443,o),
(923,1435,o),
(907,1420,cs),
(892,1404,o),
(884,1381,o),
(884,1350,c),
(923,1350,o),
(952,1339,o),
(972,1318,cs),
(991,1297,o),
(1000,1264,o),
(1000,1221,cs),
(1000,1179,o),
(981,1147,o),
(942,1125,cs),
(903,1104,o),
(845,1094,o),
(768,1094,cs),
(675,1094,ls),
(597,1094,o),
(539,1100,o),
(501,1112,cs),
(462,1123,o),
(442,1140,o),
(442,1164,cs),
(442,1195,o),
(450,1210,o),
(466,1210,cs),
(481,1210,o),
(489,1195,o),
(489,1164,c),
(520,1164,o),
(543,1170,o),
(558,1181,cs),
(574,1193,o),
(582,1210,o),
(582,1233,cs),
(582,1256,o),
(572,1274,o),
(553,1286,cs),
(533,1297,o),
(503,1303,o),
(464,1303,cs),
(403,1303,o),
(357,1291,o),
(326,1268,cs),
(295,1245,o),
(279,1210,o),
(279,1164,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 114 values pushed */
14 1 6 11 30 1 9 6 33 1 2 2 9 11 10 9 4 4 0 2 4 76 13 1 10 12 1 2 2 75 0 4 3 4 133 0 3 8 3 133 0 11 12 6 12 11 114 0 8 0 7 10 8 7 105 13 1 6 0 9 2 6 9 105 0 12 12 10 97 0 10 10 17 77 0 2 2 0 95 5 1 2 0 0 19 0 78 36 34 75 73 72 71 65 63 57 54 48 46 43 42 34 79 36 79 23 35 26 17 18 18 14 7 28 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178A_17C5;
},
{
glyphname = uni178B_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1302,1239,l),
(1303,1252,o),
(1303,1266,o),
(1303,1280,cs),
(1303,1350,o),
(1291,1402,o),
(1268,1437,cs),
(1245,1472,o),
(1210,1489,o),
(1164,1489,cs),
(1133,1489,o),
(1109,1481,o),
(1094,1466,cs),
(1078,1451,o),
(1070,1427,o),
(1070,1396,c),
(1117,1396,o),
(1152,1387,o),
(1175,1368,cs),
(1198,1349,o),
(1210,1319,o),
(1210,1280,cs),
(1210,1257,o),
(1207,1240,o),
(1202,1228,cs),
(1196,1216,o),
(1188,1210,o),
(1177,1210,cs),
(1154,1210,o),
(1116,1226,o),
(1061,1258,cs),
(981,1303,l),
(838,1027,l),
(838,965,l),
(1001,862,l),
(1001,233,ls),
(1001,186,o),
(981,151,o),
(942,128,cs),
(903,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(501,128,cs),
(462,151,o),
(442,186,o),
(442,233,cs),
(442,1303,l),
(279,1303,l),
(186,1198,ls),
(155,1163,o),
(132,1129,o),
(116,1098,cs),
(101,1067,o),
(93,1039,o),
(93,1013,cs),
(93,960,o),
(109,921,o),
(140,897,cs),
(171,873,o),
(217,861,o),
(279,861,c),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(444,19,o),
(543,0,o),
(675,0,cs),
(768,0,ls),
(900,0,o),
(999,19,o),
(1065,58,cs),
(1131,97,o),
(1164,155,o),
(1164,233,cs),
(1164,869,l),
(935,1014,l),
(986,1113,l),
(1025,1091,o),
(1059,1075,o),
(1089,1064,cs),
(1119,1053,o),
(1144,1047,o),
(1165,1047,cs),
(1211,1047,o),
(1246,1067,o),
(1269,1106,c),
(1272,1113,o),
(1276,1120,o),
(1280,1127,c),
(1359,1163,l),
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1443,1303,l)
);
},
{
closed = 1;
nodes = (
(186,1028,o),
(194,1047,o),
(209,1072,cs),
(225,1097,o),
(248,1128,o),
(279,1163,c),
(279,954,l),
(248,954,o),
(225,959,o),
(209,969,cs),
(194,978,o),
(186,993,o),
(186,1014,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
71 1 6 4 74 13 4 0 4 1 6 49 48 14 3 4 9 1 47 15 2 3 9 4 76 72 50 2 4 1 75 0 8 0 7 4 8 7 105 0 6 0 1 9 6 1 105 10 1 9 0 3 5 9 3 105 0 4 4 17 77 0 5 5 0 97 2 1 0 0 19 0 78 73 73 73 81 73 81 35 23 25 52 24 20 57 38 17 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178B_17B6;
},
{
glyphname = uni178B_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1916,1086,o),
(1932,1133,o),
(1932,1164,cs),
(1932,1536,ls),
(1932,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1762,1591,o),
(1770,1567,o),
(1770,1536,cs),
(1770,1155,l),
(1443,1303,l),
(1302,1239,l),
(1303,1252,o),
(1303,1266,o),
(1303,1280,cs),
(1303,1350,o),
(1291,1402,o),
(1268,1437,cs),
(1245,1472,o),
(1210,1489,o),
(1164,1489,cs),
(1133,1489,o),
(1109,1481,o),
(1094,1466,cs),
(1078,1451,o),
(1070,1427,o),
(1070,1396,c),
(1117,1396,o),
(1152,1387,o),
(1175,1368,cs),
(1198,1349,o),
(1210,1319,o),
(1210,1280,cs),
(1210,1257,o),
(1207,1240,o),
(1202,1228,cs),
(1196,1216,o),
(1188,1210,o),
(1177,1210,cs),
(1154,1210,o),
(1116,1226,o),
(1061,1258,cs),
(981,1303,l),
(838,1027,l),
(838,965,l),
(1001,862,l),
(1001,233,ls),
(1001,186,o),
(981,151,o),
(942,128,cs),
(903,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(501,128,cs),
(462,151,o),
(442,186,o),
(442,233,cs),
(442,1303,l),
(279,1303,l),
(186,1198,ls),
(155,1163,o),
(132,1129,o),
(116,1098,cs),
(101,1067,o),
(93,1039,o),
(93,1013,cs),
(93,960,o),
(109,921,o),
(140,897,cs),
(171,873,o),
(217,861,o),
(279,861,c),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(444,19,o),
(543,0,o),
(675,0,cs),
(768,0,ls),
(900,0,o),
(999,19,o),
(1065,58,cs),
(1131,97,o),
(1164,155,o),
(1164,233,cs),
(1164,869,l),
(935,1014,l),
(986,1113,l),
(1025,1091,o),
(1059,1075,o),
(1089,1064,cs),
(1119,1053,o),
(1144,1047,o),
(1165,1047,cs),
(1211,1047,o),
(1246,1067,o),
(1269,1106,c),
(1272,1113,o),
(1276,1120,o),
(1280,1127,c),
(1359,1163,l),
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l)
);
},
{
closed = 1;
nodes = (
(186,1028,o),
(194,1047,o),
(209,1072,cs),
(225,1097,o),
(248,1128,o),
(279,1163,c),
(279,954,l),
(248,954,o),
(225,959,o),
(209,969,cs),
(194,978,o),
(186,993,o),
(186,1014,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 106 values pushed */
71 1 6 4 90 73 13 4 4 1 6 49 48 14 3 0 5 11 1 47 15 2 3 11 4 76 72 50 2 4 1 75 0 10 9 10 133 0 9 8 9 133 0 8 0 7 4 8 7 105 0 6 0 1 11 6 1 105 12 1 11 0 3 5 11 3 105 0 4 4 17 77 0 5 5 0 97 2 1 0 0 19 0 78 89 89 89 97 89 97 83 81 78 77 35 23 25 52 24 20 57 38 17 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178B_17C5;
},
{
glyphname = uni178C_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1073,1136,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,838,ls),
(279,807,o),
(293,783,o),
(320,768,cs),
(347,753,o),
(388,745,o),
(442,745,cs),
(489,745,o),
(524,757,o),
(547,780,cs),
(570,803,o),
(582,838,o),
(582,884,cs),
(582,923,o),
(570,952,o),
(547,972,cs),
(524,991,o),
(489,1001,o),
(442,1001,c),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,925,ls),
(1000,840,o),
(983,789,o),
(949,772,cs),
(279,438,l),
(279,278,ls),
(279,186,o),
(300,117,o),
(343,71,cs),
(386,24,o),
(450,1,o),
(536,1,cs),
(564,1,l),
(1001,250,l),
(1001,117,ls),
(1001,101,o),
(991,89,o),
(972,82,cs),
(953,74,o),
(923,70,o),
(884,70,c),
(884,31,o),
(894,1,o),
(914,-18,cs),
(933,-37,o),
(962,-47,o),
(1001,-47,cs),
(1055,-47,o),
(1095,-33,o),
(1122,-6,cs),
(1149,21,o),
(1163,61,o),
(1163,115,cs),
(1163,535,l),
(1001,535,l),
(1001,357,l),
(541,94,l),
(508,94,o),
(483,109,o),
(467,140,cs),
(450,171,o),
(442,216,o),
(442,277,cs),
(442,415,l),
(1018,702,ls),
(1115,751,o),
(1163,826,o),
(1163,925,cs),
(1163,1056,l),
(1148,1069,l),
(1359,1163,l),
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1443,1303,l)
);
},
{
closed = 1;
nodes = (
(442,908,l),
(457,908,o),
(469,906,o),
(476,902,cs),
(484,898,o),
(488,892,o),
(488,884,cs),
(488,869,o),
(484,858,o),
(476,850,cs),
(469,843,o),
(457,839,o),
(442,839,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
72 67 3 3 8 6 39 32 16 10 4 1 2 2 76 66 65 64 63 62 61 47 46 45 44 43 6 5 4 0 15 6 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 8 8 6 112 0 4 1 0 1 4 0 128 0 8 0 7 2 8 7 106 0 1 1 0 97 5 1 0 0 19 77 0 2 2 3 97 0 3 3 19 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 8 6 133 0 4 1 0 1 4 0 128 0 8 0 7 2 8 7 106 0 1 1 0 97 5 1 0 0 19 77 0 2 2 3 97 0 3 3 19 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 6 8 6 133 0 4 1 0 1 4 0 128 0 8 0 7 2 8 7 106 0 2 0 3 2 3 101 0 1 1 0 97 5 1 0 0 19 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
27 38 29 37 19 36 18 28 17 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178C_17B6;
},
{
glyphname = uni178C_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1155,l),
(1443,1303,l),
(1073,1136,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,838,ls),
(279,807,o),
(293,783,o),
(320,768,cs),
(347,753,o),
(388,745,o),
(442,745,cs),
(489,745,o),
(524,757,o),
(547,780,cs),
(570,803,o),
(582,838,o),
(582,884,cs),
(582,923,o),
(570,952,o),
(547,972,cs),
(524,991,o),
(489,1001,o),
(442,1001,c),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,925,ls),
(1000,840,o),
(983,789,o),
(949,772,cs),
(279,438,l),
(279,278,ls),
(279,186,o),
(300,117,o),
(343,71,cs),
(386,24,o),
(450,1,o),
(536,1,cs),
(564,1,l),
(1001,250,l),
(1001,117,ls),
(1001,101,o),
(991,89,o),
(972,82,cs),
(953,74,o),
(923,70,o),
(884,70,c),
(884,31,o),
(894,1,o),
(914,-18,cs),
(933,-37,o),
(962,-47,o),
(1001,-47,cs),
(1055,-47,o),
(1095,-33,o),
(1122,-6,cs),
(1149,21,o),
(1163,61,o),
(1163,115,cs),
(1163,535,l),
(1001,535,l),
(1001,357,l),
(541,94,l),
(508,94,o),
(483,109,o),
(467,140,cs),
(450,171,o),
(442,216,o),
(442,277,cs),
(442,415,l),
(1018,702,ls),
(1115,751,o),
(1163,826,o),
(1163,925,cs),
(1163,1056,l),
(1148,1069,l),
(1359,1163,l),
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l)
);
},
{
closed = 1;
nodes = (
(442,908,l),
(457,908,o),
(469,906,o),
(476,902,cs),
(484,898,o),
(488,892,o),
(488,884,cs),
(488,869,o),
(484,858,o),
(476,850,cs),
(469,843,o),
(457,839,o),
(442,839,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
67 66 65 64 63 62 61 47 46 45 44 43 6 5 4 0 16 6 8 88 83 3 3 10 6 39 32 16 10 4 1 2 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 8 9 133 0 8 6 8 133 0 6 10 10 6 112 0 4 1 0 1 4 0 128 0 10 0 7 2 10 7 106 0 1 1 0 97 5 1 0 0 19 77 0 2 2 3 97 0 3 3 19 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 8 9 133 0 8 6 8 133 0 6 10 6 133 0 4 1 0 1 4 0 128 0 10 0 7 2 10 7 106 0 1 1 0 97 5 1 0 0 19 77 0 2 2 3 97 0 3 3 19 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 9 8 9 133 0 8 6 8 133 0 6 10 6 133 0 4 1 0 1 4 0 128 0 10 0 7 2 10 7 106 0 2 0 3 2 3 101 0 1 1 0 97 5 1 0 0 19 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
85 84 77 75 30 38 29 37 19 36 18 28 17 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178C_17C5;
},
{
glyphname = uni178D_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l),
(442,349,l),
(488,349,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,419,l),
(954,419,o),
(919,405,o),
(896,378,cs),
(873,351,o),
(861,310,o),
(861,256,cs),
(861,215,o),
(867,178,o),
(879,146,cs),
(890,115,o),
(908,88,o),
(931,65,cs),
(1000,0,l),
(1163,0,l),
(1163,326,l),
(1233,326,ls),
(1280,326,o),
(1314,317,o),
(1337,299,cs),
(1361,281,o),
(1373,254,o),
(1373,217,cs),
(1373,144,o),
(1392,90,o),
(1431,54,cs),
(1470,18,o),
(1528,0,o),
(1606,0,cs),
(1699,0,o),
(1768,19,o),
(1815,58,cs),
(1862,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1687,996,l),
(1924,1152,l),
(2443,984,l),
(2443,0,l),
(2606,0,l),
(2606,1103,l),
(1985,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1712,151,o),
(1693,128,cs),
(1673,105,o),
(1644,93,o),
(1606,93,cs),
(1559,93,o),
(1524,103,o),
(1501,124,cs),
(1478,145,o),
(1466,176,o),
(1466,217,cs),
(1466,284,o),
(1447,335,o),
(1408,369,cs),
(1369,402,o),
(1311,419,o),
(1233,419,cs),
(1163,419,l),
(1163,1052,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,0,l)
);
},
{
closed = 1;
nodes = (
(954,279,o),
(958,296,o),
(965,308,cs),
(973,320,o),
(985,326,o),
(1000,326,c),
(1000,128,l),
(985,142,o),
(973,160,o),
(965,181,cs),
(958,202,o),
(954,227,o),
(954,256,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
15 2 2 3 1 1 76 91 90 89 76 75 74 73 72 46 45 44 43 40 39 38 37 36 21 18 9 74 0 9 11 1 0 1 9 0 105 8 1 2 6 1 1 3 2 1 105 0 3 3 4 95 10 7 5 3 4 4 19 4 78 1 0 88 87 79 77 71 70 62 61 60 58 52 50 42 41 32 30 24 22 17 16 0 10 1 10 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni178D_17B6;
},
{
glyphname = uni178D_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(555,1303,l),
(279,1056,l),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,419,l),
(954,419,o),
(919,405,o),
(896,378,cs),
(873,351,o),
(861,310,o),
(861,256,cs),
(861,215,o),
(867,178,o),
(879,146,cs),
(890,115,o),
(908,88,o),
(931,65,cs),
(1000,0,l),
(1163,0,l),
(1163,326,l),
(1233,326,ls),
(1280,326,o),
(1314,317,o),
(1337,299,cs),
(1361,281,o),
(1373,254,o),
(1373,217,cs),
(1373,144,o),
(1392,90,o),
(1431,54,cs),
(1470,18,o),
(1528,0,o),
(1606,0,cs),
(1699,0,o),
(1768,19,o),
(1815,58,cs),
(1862,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1687,996,l),
(1924,1152,l),
(2443,984,l),
(2443,0,l),
(2606,0,l),
(2606,1024,l),
(2637,1086,o),
(2653,1133,o),
(2653,1164,cs),
(2653,1536,ls),
(2653,1598,o),
(2642,1645,o),
(2621,1676,cs),
(2600,1707,o),
(2568,1722,o),
(2525,1722,cs),
(2482,1722,o),
(2450,1714,o),
(2429,1699,cs),
(2408,1684,o),
(2398,1660,o),
(2398,1629,c),
(2429,1629,o),
(2452,1621,o),
(2468,1606,cs),
(2483,1591,o),
(2491,1567,o),
(2491,1536,cs),
(2491,1140,l),
(1985,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1712,151,o),
(1693,128,cs),
(1673,105,o),
(1644,93,o),
(1606,93,cs),
(1559,93,o),
(1524,103,o),
(1501,124,cs),
(1478,145,o),
(1466,176,o),
(1466,217,cs),
(1466,284,o),
(1447,335,o),
(1408,369,cs),
(1369,402,o),
(1311,419,o),
(1233,419,cs),
(1163,419,l),
(1163,1052,l),
(888,1303,l),
(722,1140,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
},
{
closed = 1;
nodes = (
(954,279,o),
(958,296,o),
(965,308,cs),
(973,320,o),
(985,326,o),
(1000,326,c),
(1000,128,l),
(985,142,o),
(973,160,o),
(965,181,cs),
(958,202,o),
(954,227,o),
(954,256,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
87 86 85 72 71 70 69 68 42 41 40 39 36 20 19 18 17 16 1 19 9 2 103 90 2 1 6 2 76 0 3 2 3 133 0 2 9 2 133 0 9 13 1 11 6 9 11 105 8 1 0 12 1 6 1 0 6 105 0 1 1 4 95 10 7 5 3 4 4 19 4 78 89 88 105 104 88 98 89 98 84 83 75 73 24 17 38 40 23 35 28 38 34 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni178D_17C5;
},
{
glyphname = uni178E_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2524,1139,l),
(2164,1303,l),
(1722,1104,l),
(1722,111,l),
(1443,290,l),
(1163,111,l),
(1163,1103,l),
(721,1303,l),
(279,1104,l),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1075,l),
(637,1163,l),
(1000,998,l),
(1000,0,l),
(1163,0,l),
(1443,180,l),
(1722,0,l),
(1885,0,l),
(1885,1075,l),
(2080,1163,l),
(2443,998,l),
(2443,0,l),
(2606,0,l),
(2606,1075,l),
(2802,1163,l),
(3165,998,l),
(3165,0,l),
(3328,0,l),
(3328,1103,l),
(2886,1303,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
43 36 35 34 13 5 0 6 1 76 40 39 38 37 33 32 31 18 17 16 10 9 8 5 4 3 0 17 4 74 0 4 7 1 6 0 4 6 105 5 3 2 1 4 0 0 19 0 78 42 41 41 51 42 51 24 36 18 20 20 17 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 2885;
}
);
note = uni178E_17B6;
},
{
glyphname = uni178E_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3359,1086,o),
(3374,1133,o),
(3374,1164,cs),
(3374,1536,ls),
(3374,1598,o),
(3364,1645,o),
(3343,1676,cs),
(3322,1707,o),
(3290,1722,o),
(3247,1722,cs),
(3204,1722,o),
(3172,1714,o),
(3151,1699,cs),
(3130,1684,o),
(3119,1660,o),
(3119,1629,c),
(3150,1629,o),
(3174,1621,o),
(3189,1606,cs),
(3204,1591,o),
(3212,1567,o),
(3212,1536,cs),
(3212,1155,l),
(2886,1303,l),
(2524,1139,l),
(2164,1303,l),
(1722,1104,l),
(1722,111,l),
(1443,290,l),
(1163,111,l),
(1163,1103,l),
(721,1303,l),
(279,1104,l),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1075,l),
(637,1163,l),
(1000,998,l),
(1000,0,l),
(1163,0,l),
(1443,180,l),
(1722,0,l),
(1885,0,l),
(1885,1075,l),
(2080,1163,l),
(2443,998,l),
(2443,0,l),
(2606,0,l),
(2606,1075,l),
(2802,1163,l),
(3165,998,l),
(3165,0,l),
(3328,0,l),
(3328,1024,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
41 40 39 38 37 33 32 31 18 17 16 10 9 8 5 4 3 0 18 4 6 59 36 35 34 13 5 0 8 2 76 0 7 6 7 133 0 6 4 6 133 0 4 9 1 8 0 4 8 105 5 3 2 1 4 0 0 19 0 78 58 57 57 67 58 67 35 31 24 36 18 20 20 17 10 7 30 
CALL[ ]	/* CallFunction */";
};
width = 2885;
}
);
note = uni178E_17C5;
},
{
glyphname = uni178F_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(306,985,o),
(340,972,o),
(361,972,cs),
(363,972,ls),
(384,972,o),
(411,990,o),
(443,1025,c),
(368,1083,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1339,1303,l)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(543,442,o),
(489,442,cs),
(442,442,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1001,745,o),
(1001,698,cs),
(1001,0,l),
(1163,0,l),
(1163,698,ls),
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(651,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(489,349,ls),
(512,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
19 16 15 9 8 7 4 0 8 1 3 3 1 2 1 23 1 0 4 3 76 20 1 3 74 0 1 3 2 3 1 2 128 0 2 9 3 2 9 126 0 9 0 6 7 9 6 106 0 7 10 1 4 0 7 4 105 0 3 3 17 77 8 5 2 0 0 19 0 78 22 21 62 59 55 54 46 44 40 37 33 32 21 31 22 31 20 52 19 17 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178F_17B6;
},
{
glyphname = uni178F_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1145,l),
(1339,1303,l),
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(306,985,o),
(340,972,o),
(361,972,cs),
(363,972,ls),
(384,972,o),
(411,990,o),
(443,1025,c),
(368,1083,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(543,442,o),
(489,442,cs),
(442,442,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1001,745,o),
(1001,698,cs),
(1001,0,l),
(1163,0,l),
(1163,698,ls),
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(651,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(489,349,ls),
(512,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
21 19 16 15 9 8 7 4 0 9 1 3 3 1 2 1 73 1 0 11 3 76 20 1 3 1 75 0 5 4 5 133 0 4 3 4 133 0 1 3 2 3 1 2 128 0 2 10 3 2 10 126 0 10 0 7 8 10 7 106 0 8 12 1 11 0 8 11 105 0 3 3 17 77 9 6 2 0 0 19 0 78 72 71 71 81 72 81 67 64 60 59 36 52 22 35 23 20 52 19 17 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni178F_17C5;
},
{
glyphname = uni1790_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(978,582,o),
(960,584,o),
(948,587,c),
(937,592,o),
(931,598,o),
(931,605,cs),
(931,619,o),
(937,635,o),
(948,654,cs),
(960,673,o),
(978,696,o),
(1001,722,c),
(1001,582,l)
);
},
{
closed = 1;
nodes = (
(279,966,l),
(279,233,ls),
(279,155,o),
(308,97,o),
(367,58,cs),
(425,19,o),
(512,0,o),
(628,0,cs),
(814,0,ls),
(930,0,o),
(1017,19,o),
(1076,58,cs),
(1134,97,o),
(1163,155,o),
(1163,233,cs),
(1163,886,l),
(1432,1139,l),
(1722,1000,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1470,1303,l),
(1001,861,l),
(928,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(838,629,o),
(838,604,cs),
(838,565,o),
(852,537,o),
(879,518,cs),
(906,499,o),
(947,489,o),
(1001,489,c),
(1001,233,ls),
(1001,186,o),
(985,151,o),
(954,128,cs),
(923,105,o),
(876,93,o),
(814,93,cs),
(628,93,ls),
(566,93,o),
(520,105,o),
(489,128,cs),
(458,151,o),
(442,186,o),
(442,233,cs),
(442,956,l),
(298,1070,l),
(453,1168,l),
(652,1001,l),
(838,1001,ls),
(941,1001,o),
(1021,1019,o),
(1078,1054,cs),
(1135,1090,o),
(1163,1142,o),
(1163,1210,cs),
(1163,1288,o),
(1149,1346,o),
(1122,1385,cs),
(1094,1424,o),
(1052,1443,o),
(997,1443,cs),
(960,1443,o),
(931,1436,o),
(912,1421,cs),
(893,1405,o),
(884,1381,o),
(884,1350,c),
(923,1350,o),
(953,1338,o),
(972,1314,cs),
(991,1291,o),
(1001,1257,o),
(1001,1210,cs),
(1001,1175,o),
(988,1147,o),
(961,1126,cs),
(933,1105,o),
(892,1094,o),
(838,1094,cs),
(795,1094,l),
(545,1303,l),
(493,1303,l),
(186,1110,l),
(186,1039,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
73 49 23 3 3 2 50 22 2 6 3 76 51 21 10 5 1 6 0 6 3 76 72 1 2 1 75 0 5 4 5 133 0 4 2 4 133 0 3 0 6 0 3 6 104 10 1 0 0 8 7 0 8 105 0 2 2 17 77 0 7 7 1 95 9 1 1 1 19 1 78 0 0 75 74 63 62 58 55 48 46 40 38 35 34 28 26 25 24 17 14 0 8 0 8 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1790_17B6;
},
{
glyphname = uni1790_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1722,0,l),
(1885,0,l),
(1885,1024,l),
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1159,l),
(1470,1303,l),
(1001,861,l),
(928,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(838,629,o),
(838,604,cs),
(838,565,o),
(852,537,o),
(879,518,cs),
(906,499,o),
(947,489,o),
(1001,489,c),
(1001,233,ls),
(1001,186,o),
(985,151,o),
(954,128,cs),
(923,105,o),
(876,93,o),
(814,93,cs),
(628,93,ls),
(566,93,o),
(520,105,o),
(489,128,cs),
(458,151,o),
(442,186,o),
(442,233,cs),
(442,956,l),
(298,1070,l),
(453,1168,l),
(652,1001,l),
(838,1001,ls),
(941,1001,o),
(1021,1019,o),
(1078,1054,cs),
(1135,1090,o),
(1163,1142,o),
(1163,1210,cs),
(1163,1288,o),
(1149,1346,o),
(1122,1385,cs),
(1094,1424,o),
(1052,1443,o),
(997,1443,cs),
(960,1443,o),
(931,1436,o),
(912,1421,cs),
(893,1405,o),
(884,1381,o),
(884,1350,c),
(923,1350,o),
(953,1338,o),
(972,1314,cs),
(991,1291,o),
(1001,1257,o),
(1001,1210,cs),
(1001,1175,o),
(988,1147,o),
(961,1126,cs),
(933,1105,o),
(892,1094,o),
(838,1094,cs),
(795,1094,l),
(545,1303,l),
(493,1303,l),
(186,1110,l),
(186,1039,l),
(279,966,l),
(279,233,ls),
(279,155,o),
(308,97,o),
(367,58,cs),
(425,19,o),
(512,0,o),
(628,0,cs),
(814,0,ls),
(930,0,o),
(1017,19,o),
(1076,58,cs),
(1134,97,o),
(1163,155,o),
(1163,233,cs),
(1163,886,l),
(1432,1139,l),
(1722,1000,l)
);
},
{
closed = 1;
nodes = (
(931,619,o),
(937,635,o),
(948,654,cs),
(960,673,o),
(978,696,o),
(1001,722,c),
(1001,582,l),
(978,582,o),
(960,584,o),
(948,587,c),
(937,592,o),
(931,598,o),
(931,605,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
64 40 14 3 2 1 80 41 13 3 5 2 89 85 83 42 12 1 6 11 5 3 76 63 1 1 1 75 0 9 8 9 133 0 8 4 8 133 0 4 3 4 133 0 3 1 3 133 0 2 0 5 11 2 5 104 12 1 11 0 7 6 11 7 105 0 1 1 17 77 0 6 6 0 95 10 1 0 0 19 0 78 84 84 84 92 84 92 82 81 74 72 30 20 55 38 35 22 33 23 53 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1790_17C5;
},
{
glyphname = uni1791_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1001,996,o),
(989,978,o),
(966,978,cs),
(943,978,o),
(931,993,o),
(931,1024,c),
(869,1024,o),
(838,1001,o),
(838,954,cs),
(838,907,o),
(882,884,o),
(970,884,cs),
(1099,884,o),
(1163,933,o),
(1163,1031,cs),
(1163,1046,o),
(1162,1060,o),
(1161,1073,c),
(1359,1163,l),
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1443,1303,l),
(1129,1161,l),
(1111,1190,o),
(1086,1215,o),
(1053,1235,cs),
(979,1280,o),
(868,1303,o),
(721,1303,cs),
(574,1303,o),
(464,1280,o),
(390,1235,cs),
(316,1190,o),
(279,1122,o),
(279,1031,cs),
(279,815,ls),
(279,711,o),
(316,633,o),
(390,581,cs),
(464,530,o),
(575,504,o),
(722,504,cs),
(779,504,l),
(779,280,ls),
(779,218,o),
(772,172,o),
(759,141,cs),
(746,110,o),
(725,94,o),
(698,94,cs),
(667,94,o),
(643,100,o),
(628,111,cs),
(613,122,o),
(605,140,o),
(605,163,cs),
(605,280,ls),
(605,327,o),
(596,361,o),
(579,384,cs),
(561,408,o),
(534,420,o),
(499,420,cs),
(456,420,o),
(425,412,o),
(404,397,cs),
(383,381,o),
(373,358,o),
(373,327,c),
(419,327,o),
(442,311,o),
(442,280,cs),
(442,163,ls),
(442,108,o),
(463,68,o),
(506,41,cs),
(549,14,o),
(613,0,o),
(698,0,cs),
(779,0,o),
(840,23,o),
(881,70,cs),
(922,117,o),
(942,188,o),
(942,281,cs),
(942,504,l),
(998,504,ls),
(1053,504,o),
(1094,514,o),
(1121,534,cs),
(1149,554,o),
(1163,585,o),
(1163,626,cs),
(1163,665,o),
(1149,695,o),
(1121,715,cs),
(1094,736,o),
(1053,746,o),
(998,746,cs),
(925,746,o),
(871,733,o),
(834,708,cs),
(797,683,o),
(779,646,o),
(779,597,c),
(722,597,ls),
(629,597,o),
(559,615,o),
(512,651,cs),
(465,688,o),
(442,742,o),
(442,815,cs),
(442,1031,ls),
(442,1091,o),
(465,1136,o),
(512,1165,cs),
(559,1195,o),
(628,1210,o),
(721,1210,cs),
(814,1210,o),
(885,1195,o),
(932,1165,cs),
(978,1136,o),
(1001,1091,o),
(1001,1031,cs)
);
},
{
closed = 1;
nodes = (
(942,634,o),
(961,652,o),
(998,652,cs),
(1046,652,o),
(1070,643,o),
(1070,625,cs),
(1070,606,o),
(1046,597,o),
(998,597,cs),
(942,597,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 117 values pushed */
77 73 71 3 12 0 76 1 13 12 2 76 72 1 9 74 0 12 0 13 13 12 114 0 6 3 5 3 6 5 128 0 5 7 3 5 7 126 0 13 0 11 2 13 11 106 0 2 16 1 14 1 2 14 105 15 1 1 8 1 3 6 1 3 105 0 0 0 9 97 0 9 9 17 77 0 7 7 4 97 10 1 4 4 19 4 78 91 90 94 92 90 96 91 96 89 87 86 85 83 81 75 74 68 66 36 39 35 21 36 38 35 39 35 17 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1791_17B6;
},
{
glyphname = uni1791_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1001,996,o),
(989,978,o),
(966,978,cs),
(943,978,o),
(931,993,o),
(931,1024,c),
(869,1024,o),
(838,1001,o),
(838,954,cs),
(838,907,o),
(882,884,o),
(970,884,cs),
(1099,884,o),
(1163,933,o),
(1163,1031,cs),
(1163,1046,o),
(1162,1060,o),
(1161,1073,c),
(1359,1163,l),
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l),
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1155,l),
(1443,1303,l),
(1129,1161,l),
(1111,1190,o),
(1086,1215,o),
(1053,1235,cs),
(979,1280,o),
(868,1303,o),
(721,1303,cs),
(574,1303,o),
(464,1280,o),
(390,1235,cs),
(316,1190,o),
(279,1122,o),
(279,1031,cs),
(279,815,ls),
(279,711,o),
(316,633,o),
(390,581,cs),
(464,530,o),
(575,504,o),
(722,504,cs),
(779,504,l),
(779,280,ls),
(779,218,o),
(772,172,o),
(759,141,cs),
(746,110,o),
(725,94,o),
(698,94,cs),
(667,94,o),
(643,100,o),
(628,111,cs),
(613,122,o),
(605,140,o),
(605,163,cs),
(605,280,ls),
(605,327,o),
(596,361,o),
(579,384,cs),
(561,408,o),
(534,420,o),
(499,420,cs),
(456,420,o),
(425,412,o),
(404,397,cs),
(383,381,o),
(373,358,o),
(373,327,c),
(419,327,o),
(442,311,o),
(442,280,cs),
(442,163,ls),
(442,108,o),
(463,68,o),
(506,41,cs),
(549,14,o),
(613,0,o),
(698,0,cs),
(779,0,o),
(840,23,o),
(881,70,cs),
(922,117,o),
(942,188,o),
(942,281,cs),
(942,504,l),
(998,504,ls),
(1053,504,o),
(1094,514,o),
(1121,534,cs),
(1149,554,o),
(1163,585,o),
(1163,626,cs),
(1163,665,o),
(1149,695,o),
(1121,715,cs),
(1094,736,o),
(1053,746,o),
(998,746,cs),
(925,746,o),
(871,733,o),
(834,708,cs),
(797,683,o),
(779,646,o),
(779,597,c),
(722,597,ls),
(629,597,o),
(559,615,o),
(512,651,cs),
(465,688,o),
(442,742,o),
(442,815,cs),
(442,1031,ls),
(442,1091,o),
(465,1136,o),
(512,1165,cs),
(559,1195,o),
(628,1210,o),
(721,1210,cs),
(814,1210,o),
(885,1195,o),
(932,1165,cs),
(978,1136,o),
(1001,1091,o),
(1001,1031,cs)
);
},
{
closed = 1;
nodes = (
(942,634,o),
(961,652,o),
(998,652,cs),
(1046,652,o),
(1070,643,o),
(1070,625,cs),
(1070,606,o),
(1046,597,o),
(998,597,cs),
(942,597,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 135 values pushed */
93 73 71 3 14 0 92 1 15 14 2 76 72 1 9 89 1 14 2 75 0 11 10 11 133 0 10 9 10 133 0 14 0 15 15 14 114 0 6 3 5 3 6 5 128 0 5 7 3 5 7 126 0 15 0 13 2 15 13 106 0 2 18 1 16 1 2 16 105 17 1 1 8 1 3 6 1 3 105 0 0 0 9 97 0 9 9 17 77 0 7 7 4 97 12 1 4 4 19 4 78 107 106 110 108 106 112 107 112 105 103 102 101 99 97 91 90 83 81 78 77 68 66 36 39 35 21 36 38 35 39 35 19 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1791_17C5;
},
{
glyphname = uni1792_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(978,582,o),
(960,584,o),
(948,587,c),
(937,592,o),
(931,598,o),
(931,605,cs),
(931,619,o),
(937,635,o),
(948,654,cs),
(960,673,o),
(978,696,o),
(1001,722,c),
(1001,582,l)
);
},
{
closed = 1;
nodes = (
(279,977,l),
(279,0,l),
(442,0,l),
(721,180,l),
(1001,0,l),
(1163,0,l),
(1163,861,l),
(1001,861,l),
(928,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(838,629,o),
(838,604,cs),
(838,565,o),
(852,537,o),
(879,518,cs),
(906,499,o),
(947,489,o),
(1001,489,c),
(1001,111,l),
(721,290,l),
(442,111,l),
(442,977,l),
(346,1072,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1339,1303,l),
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
43 40 39 17 16 13 9 7 2 7 38 18 12 3 4 2 5 1 2 0 4 35 21 20 19 4 1 3 4 76 44 1 7 74 0 2 7 4 7 2 4 128 8 1 0 0 3 1 0 3 105 0 7 7 17 77 0 4 4 1 95 6 5 2 1 1 19 1 78 0 0 42 41 37 36 34 33 32 31 23 22 15 14 11 10 0 8 0 8 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1792_17B6;
},
{
glyphname = uni1792_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1145,l),
(1339,1303,l),
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(279,977,l),
(279,0,l),
(442,0,l),
(721,180,l),
(1001,0,l),
(1163,0,l),
(1163,861,l),
(1001,861,l),
(928,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(838,629,o),
(838,604,cs),
(838,565,o),
(852,537,o),
(879,518,cs),
(906,499,o),
(947,489,o),
(1001,489,c),
(1001,111,l),
(721,290,l),
(442,111,l),
(442,977,l),
(346,1072,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l)
);
},
{
closed = 1;
nodes = (
(931,619,o),
(937,635,o),
(948,654,cs),
(960,673,o),
(978,696,o),
(1001,722,c),
(1001,582,l),
(978,582,o),
(960,584,o),
(948,587,c),
(937,592,o),
(931,598,o),
(931,605,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
36 34 31 30 8 7 4 0 8 1 6 29 9 3 3 3 1 57 53 2 9 3 26 12 11 10 4 0 2 4 76 35 1 6 1 75 0 8 7 8 133 0 7 6 7 133 0 1 6 3 6 1 3 128 10 1 9 0 2 0 9 2 105 0 6 6 17 77 0 3 3 0 95 5 4 2 0 0 19 0 78 52 52 52 60 52 60 35 23 20 18 17 24 23 19 17 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1792_17C5;
},
{
glyphname = uni1793_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,824,o),
(296,785,o),
(331,750,cs),
(365,715,o),
(417,686,o),
(487,663,cs),
(1001,487,l),
(1001,217,ls),
(1001,176,o),
(992,145,o),
(973,125,cs),
(954,104,o),
(925,94,o),
(887,94,cs),
(850,94,o),
(816,104,o),
(784,123,cs),
(751,142,o),
(721,171,o),
(693,209,cs),
(665,248,o),
(630,278,o),
(588,297,cs),
(547,316,o),
(498,326,o),
(442,326,c),
(442,543,l),
(279,543,l),
(279,0,l),
(442,0,l),
(442,233,l),
(480,233,o),
(513,226,o),
(542,211,cs),
(571,196,o),
(597,174,o),
(618,145,cs),
(652,97,o),
(692,61,o),
(737,36,cs),
(782,12,o),
(832,0,o),
(887,0,cs),
(980,0,o),
(1049,18,o),
(1094,54,cs),
(1140,91,o),
(1163,145,o),
(1163,217,cs),
(1163,529,l),
(512,752,ls),
(465,768,o),
(442,807,o),
(442,869,cs),
(442,1086,ls),
(442,1128,o),
(465,1159,o),
(512,1179,cs),
(559,1200,o),
(628,1210,o),
(721,1210,cs),
(814,1210,o),
(884,1200,o),
(931,1179,cs),
(977,1159,o),
(1000,1128,o),
(1000,1086,cs),
(1000,1047,l),
(946,1047,o),
(906,1037,o),
(879,1018,cs),
(852,999,o),
(838,970,o),
(838,931,cs),
(838,876,o),
(852,836,o),
(879,809,cs),
(906,782,o),
(946,768,o),
(1000,768,cs),
(1054,768,o),
(1095,776,o),
(1122,791,cs),
(1149,806,o),
(1163,829,o),
(1163,860,cs),
(1163,1075,l),
(1359,1163,l),
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1443,1303,l),
(1143,1167,l),
(1125,1201,o),
(1095,1228,o),
(1053,1249,cs),
(979,1285,o),
(868,1303,o),
(721,1303,cs),
(574,1303,o),
(464,1285,o),
(390,1249,cs),
(316,1212,o),
(279,1158,o),
(279,1086,cs),
(279,869,ls)
);
},
{
closed = 1;
nodes = (
(931,938,o),
(937,944,o),
(948,949,c),
(960,952,o),
(977,954,o),
(1000,954,c),
(1000,861,l),
(977,861,o),
(960,867,o),
(948,879,cs),
(937,890,o),
(931,908,o),
(931,931,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 106 values pushed */
16 15 11 9 4 3 4 14 1 11 3 73 42 2 9 8 3 76 10 1 0 74 0 3 0 11 12 3 11 105 13 1 12 0 2 8 12 2 105 0 9 0 6 10 9 6 105 0 4 4 0 97 0 0 0 17 77 0 8 8 1 95 7 5 2 1 1 19 77 0 10 10 1 95 7 5 2 1 1 19 1 78 78 78 78 86 78 86 80 79 69 67 61 60 17 17 22 43 36 22 39 22 36 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1793_17B6;
},
{
glyphname = uni1793_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,824,o),
(296,785,o),
(331,750,cs),
(365,715,o),
(417,686,o),
(487,663,cs),
(1001,487,l),
(1001,217,ls),
(1001,176,o),
(992,145,o),
(973,125,cs),
(954,104,o),
(925,94,o),
(887,94,cs),
(850,94,o),
(816,104,o),
(784,123,cs),
(751,142,o),
(721,171,o),
(693,209,cs),
(665,248,o),
(630,278,o),
(588,297,cs),
(547,316,o),
(498,326,o),
(442,326,c),
(442,543,l),
(279,543,l),
(279,0,l),
(442,0,l),
(442,233,l),
(480,233,o),
(513,226,o),
(542,211,cs),
(571,196,o),
(597,174,o),
(618,145,cs),
(652,97,o),
(692,61,o),
(737,36,cs),
(782,12,o),
(832,0,o),
(887,0,cs),
(980,0,o),
(1049,18,o),
(1094,54,cs),
(1140,91,o),
(1163,145,o),
(1163,217,cs),
(1163,529,l),
(512,752,ls),
(465,768,o),
(442,807,o),
(442,869,cs),
(442,1086,ls),
(442,1128,o),
(465,1159,o),
(512,1179,cs),
(559,1200,o),
(628,1210,o),
(721,1210,cs),
(814,1210,o),
(884,1200,o),
(931,1179,cs),
(977,1159,o),
(1000,1128,o),
(1000,1086,cs),
(1000,1047,l),
(946,1047,o),
(906,1037,o),
(879,1018,cs),
(852,999,o),
(838,970,o),
(838,931,cs),
(838,876,o),
(852,836,o),
(879,809,cs),
(906,782,o),
(946,768,o),
(1000,768,cs),
(1054,768,o),
(1095,776,o),
(1122,791,cs),
(1149,806,o),
(1163,829,o),
(1163,860,cs),
(1163,1075,l),
(1359,1163,l),
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l),
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1155,l),
(1443,1303,l),
(1143,1167,l),
(1125,1201,o),
(1095,1228,o),
(1053,1249,cs),
(979,1285,o),
(868,1303,o),
(721,1303,cs),
(574,1303,o),
(464,1285,o),
(390,1249,cs),
(316,1212,o),
(279,1158,o),
(279,1086,cs),
(279,869,ls)
);
},
{
closed = 1;
nodes = (
(931,938,o),
(937,944,o),
(948,949,c),
(960,952,o),
(977,954,o),
(1000,954,c),
(1000,861,l),
(977,861,o),
(960,867,o),
(948,879,cs),
(937,890,o),
(931,908,o),
(931,931,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 122 values pushed */
32 31 11 9 4 5 6 30 27 2 13 5 89 58 2 11 10 3 76 10 1 0 1 75 0 2 1 2 133 0 1 0 1 133 0 5 0 13 14 5 13 105 15 1 14 0 4 10 14 4 105 0 11 0 8 12 11 8 105 0 6 6 0 97 0 0 0 17 77 0 10 10 3 95 9 7 2 3 3 19 77 0 12 12 3 95 9 7 2 3 3 19 3 78 94 94 94 102 94 102 96 95 85 83 77 76 75 74 73 72 22 43 36 22 39 23 35 25 36 16 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1793_17C5;
},
{
glyphname = uni1794_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(279,977,l),
(279,233,ls),
(279,155,o),
(308,97,o),
(367,58,cs),
(425,19,o),
(512,0,o),
(628,0,cs),
(814,0,ls),
(888,0,o),
(950,8,o),
(1001,23,c),
(1001,-47,ls),
(1001,-63,o),
(995,-75,o),
(984,-82,cs),
(972,-89,o),
(954,-93,o),
(931,-93,c),
(931,-125,o),
(941,-149,o),
(961,-164,cs),
(980,-179,o),
(1009,-187,o),
(1048,-187,cs),
(1087,-187,o),
(1116,-175,o),
(1135,-152,cs),
(1154,-129,o),
(1163,-95,o),
(1163,-51,cs),
(1163,861,l),
(1001,861,l),
(1001,233,ls),
(1001,186,o),
(985,151,o),
(954,128,cs),
(923,105,o),
(876,93,o),
(814,93,cs),
(628,93,ls),
(566,93,o),
(520,105,o),
(489,128,cs),
(458,151,o),
(442,186,o),
(442,233,cs),
(442,977,l),
(346,1072,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1339,1303,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
48 45 44 8 7 4 0 7 1 7 43 9 3 3 3 1 35 1 0 2 3 76 49 1 7 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 7 3 7 1 3 128 0 3 2 7 3 2 126 0 5 0 4 0 5 4 128 0 4 4 132 0 7 7 17 77 0 2 2 0 95 6 1 0 0 19 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 7 3 7 1 3 128 0 3 2 7 3 2 126 0 4 5 4 134 0 7 7 17 77 0 2 2 0 95 6 1 0 0 19 77 0 5 5 18 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
23 53 19 36 20 55 19 17 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1794_17B6;
},
{
glyphname = uni1794_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1145,l),
(1339,1303,l),
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(279,977,l),
(279,233,ls),
(279,155,o),
(308,97,o),
(367,58,cs),
(425,19,o),
(512,0,o),
(628,0,cs),
(814,0,ls),
(888,0,o),
(950,8,o),
(1001,23,c),
(1001,-47,ls),
(1001,-63,o),
(995,-75,o),
(984,-82,cs),
(972,-89,o),
(954,-93,o),
(931,-93,c),
(931,-125,o),
(941,-149,o),
(961,-164,cs),
(980,-179,o),
(1009,-187,o),
(1048,-187,cs),
(1087,-187,o),
(1116,-175,o),
(1135,-152,cs),
(1154,-129,o),
(1163,-95,o),
(1163,-51,cs),
(1163,861,l),
(1001,861,l),
(1001,233,ls),
(1001,186,o),
(985,151,o),
(954,128,cs),
(923,105,o),
(876,93,o),
(814,93,cs),
(628,93,ls),
(566,93,o),
(520,105,o),
(489,128,cs),
(458,151,o),
(442,186,o),
(442,233,cs),
(442,977,l),
(346,1072,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
50 48 45 44 8 7 4 0 8 1 7 43 9 3 3 3 1 35 1 0 2 3 76 49 1 7 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 8 9 133 0 8 7 8 133 0 1 7 3 7 1 3 128 0 3 2 7 3 2 126 0 5 0 4 0 5 4 128 0 4 4 132 0 7 7 17 77 0 2 2 0 95 6 1 0 0 19 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 8 9 133 0 8 7 8 133 0 1 7 3 7 1 3 128 0 3 2 7 3 2 126 0 4 5 4 134 0 7 7 17 77 0 2 2 0 95 6 1 0 0 19 77 0 5 5 18 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
60 58 23 23 53 19 36 20 55 19 17 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1794_17C5;
},
{
glyphname = uni1795_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(978,582,o),
(960,584,o),
(948,587,c),
(937,592,o),
(931,598,o),
(931,605,cs),
(931,619,o),
(937,635,o),
(948,654,cs),
(960,673,o),
(978,696,o),
(1001,722,c),
(1001,582,l)
);
},
{
closed = 1;
nodes = (
(279,966,l),
(279,0,l),
(442,0,l),
(721,180,l),
(1001,0,l),
(1163,0,l),
(1163,886,l),
(1432,1139,l),
(1722,1000,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1470,1303,l),
(1001,861,l),
(928,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(838,629,o),
(838,604,cs),
(838,565,o),
(852,537,o),
(879,518,cs),
(906,499,o),
(947,489,o),
(1001,489,c),
(1001,111,l),
(721,290,l),
(442,111,l),
(442,956,l),
(298,1070,l),
(453,1168,l),
(652,1001,l),
(838,1001,ls),
(941,1001,o),
(1021,1019,o),
(1078,1054,cs),
(1135,1090,o),
(1163,1142,o),
(1163,1210,cs),
(1163,1288,o),
(1149,1346,o),
(1122,1385,cs),
(1094,1424,o),
(1052,1443,o),
(997,1443,cs),
(960,1443,o),
(931,1436,o),
(912,1421,cs),
(893,1405,o),
(884,1381,o),
(884,1350,c),
(923,1350,o),
(953,1338,o),
(972,1314,cs),
(991,1291,o),
(1001,1257,o),
(1001,1210,cs),
(1001,1175,o),
(988,1147,o),
(961,1126,cs),
(933,1105,o),
(892,1094,o),
(838,1094,cs),
(795,1094,l),
(545,1303,l),
(493,1303,l),
(186,1110,l),
(186,1039,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 102 values pushed */
60 56 39 13 4 3 2 40 12 2 6 3 61 59 41 11 5 1 6 0 6 64 44 43 42 4 1 7 4 76 55 1 2 1 75 0 5 4 5 133 0 4 2 4 133 0 3 0 6 0 3 6 104 10 1 0 0 7 1 0 7 105 0 2 2 17 77 9 8 2 1 1 19 1 78 0 0 63 62 58 57 46 45 38 36 30 28 25 24 18 16 15 14 10 9 0 8 0 8 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1795_17B6;
},
{
glyphname = uni1795_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1001,0,l),
(1163,0,l),
(1163,886,l),
(1432,1139,l),
(1722,1000,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l),
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1159,l),
(1470,1303,l),
(1001,861,l),
(928,781,ls),
(897,748,o),
(875,717,o),
(860,687,cs),
(845,657,o),
(838,629,o),
(838,604,cs),
(838,565,o),
(852,537,o),
(879,518,cs),
(906,499,o),
(947,489,o),
(1001,489,c),
(1001,111,l),
(721,290,l),
(442,111,l),
(442,956,l),
(298,1070,l),
(453,1168,l),
(652,1001,l),
(838,1001,ls),
(941,1001,o),
(1021,1019,o),
(1078,1054,cs),
(1135,1090,o),
(1163,1142,o),
(1163,1210,cs),
(1163,1288,o),
(1149,1346,o),
(1122,1385,cs),
(1094,1424,o),
(1052,1443,o),
(997,1443,cs),
(960,1443,o),
(931,1436,o),
(912,1421,cs),
(893,1405,o),
(884,1381,o),
(884,1350,c),
(923,1350,o),
(953,1338,o),
(972,1314,cs),
(991,1291,o),
(1001,1257,o),
(1001,1210,cs),
(1001,1175,o),
(988,1147,o),
(961,1126,cs),
(933,1105,o),
(892,1094,o),
(838,1094,cs),
(795,1094,l),
(545,1303,l),
(493,1303,l),
(186,1110,l),
(186,1039,l),
(279,966,l),
(279,0,l),
(442,0,l),
(721,180,l)
);
},
{
closed = 1;
nodes = (
(931,619,o),
(937,635,o),
(948,654,cs),
(960,673,o),
(978,696,o),
(1001,722,c),
(1001,582,l),
(978,582,o),
(960,584,o),
(948,587,c),
(937,592,o),
(931,598,o),
(931,605,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 108 values pushed */
67 47 30 4 4 2 1 63 31 3 3 5 2 77 73 68 66 32 2 6 11 5 71 35 34 33 4 0 6 4 76 46 1 1 1 75 0 8 7 8 133 0 7 4 7 133 0 4 3 4 133 0 3 1 3 133 0 2 0 5 11 2 5 104 12 1 11 0 6 0 11 6 105 0 1 1 17 77 10 9 2 0 0 19 0 78 72 72 72 80 72 80 70 69 65 64 35 30 23 38 35 22 33 20 16 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1795_17C5;
},
{
glyphname = uni1796_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1443,1303,l),
(1071,1136,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,0,l),
(1163,0,l),
(1163,1052,l),
(1146,1068,l),
(1359,1163,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
34 1 0 4 1 76 31 30 27 26 25 24 23 22 21 8 7 6 5 4 1 15 1 74 0 1 5 1 4 0 1 4 105 3 2 2 0 0 19 0 78 33 32 32 42 33 42 24 24 38 18 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1796_17B6;
},
{
glyphname = uni1796_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1722,998,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l),
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1155,l),
(1443,1303,l),
(1071,1136,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,0,l),
(1163,0,l),
(1163,1052,l),
(1146,1068,l),
(1359,1163,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
47 46 43 27 26 25 24 23 22 21 8 7 6 5 4 1 16 1 3 50 1 0 6 2 76 0 4 3 4 133 0 3 1 3 133 0 1 7 1 6 0 1 6 105 5 2 2 0 0 19 0 78 49 48 48 58 49 58 23 35 27 24 38 18 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1796_17C5;
},
{
glyphname = uni1797_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(306,985,o),
(340,972,o),
(361,972,cs),
(363,972,ls),
(385,972,o),
(412,990,o),
(443,1025,c),
(368,1083,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1339,1303,l)
);
},
{
closed = 1;
nodes = (
(93,276,o),
(99,249,o),
(112,220,cs),
(124,191,o),
(142,162,o),
(167,133,cs),
(279,0,l),
(442,0,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(652,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(949,802,cs),
(984,779,o),
(1001,745,o),
(1001,698,cs),
(1001,0,l),
(1164,0,l),
(1164,698,ls),
(1164,776,o),
(1133,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(652,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,442,l),
(233,442,ls),
(186,442,o),
(151,431,o),
(128,408,cs),
(105,384,o),
(93,349,o),
(93,303,cs)
);
},
{
closed = 1;
nodes = (
(186,318,o),
(190,330,o),
(197,337,cs),
(205,345,o),
(217,349,o),
(233,349,cs),
(279,349,l),
(279,145,l),
(235,197,ls),
(218,217,o),
(206,236,o),
(198,253,cs),
(190,270,o),
(186,287,o),
(186,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
19 16 15 9 8 7 4 0 8 1 3 3 1 2 1 22 1 0 4 3 76 20 1 3 74 0 1 3 2 3 1 2 128 0 2 9 3 2 9 126 0 9 0 6 8 9 6 106 0 8 0 4 0 8 4 105 0 3 3 17 77 7 5 2 0 0 19 0 78 62 59 40 20 52 23 37 20 52 19 17 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1797_17B6;
},
{
glyphname = uni1797_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1916,1086,o),
(1932,1133,o),
(1932,1164,cs),
(1932,1536,ls),
(1932,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1762,1591,o),
(1770,1567,o),
(1770,1536,cs),
(1770,1145,l),
(1339,1303,l),
(1088,1143,l),
(659,1303,l),
(617,1303,l),
(186,1102,l),
(186,1051,l),
(259,1011,ls),
(306,985,o),
(340,972,o),
(361,972,cs),
(363,972,ls),
(385,972,o),
(412,990,o),
(443,1025,c),
(368,1083,l),
(552,1169,l),
(1006,1002,l),
(1038,1001,l),
(1276,1153,l),
(1722,990,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l)
);
},
{
closed = 1;
nodes = (
(93,276,o),
(99,249,o),
(112,220,cs),
(124,191,o),
(142,162,o),
(167,133,cs),
(279,0,l),
(442,0,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(652,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(949,802,cs),
(984,779,o),
(1001,745,o),
(1001,698,cs),
(1001,0,l),
(1164,0,l),
(1164,698,ls),
(1164,776,o),
(1133,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(652,931,ls),
(527,931,o),
(434,912,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,442,l),
(233,442,ls),
(186,442,o),
(151,431,o),
(128,408,cs),
(105,384,o),
(93,349,o),
(93,303,cs)
);
},
{
closed = 1;
nodes = (
(186,318,o),
(190,330,o),
(197,337,cs),
(205,345,o),
(217,349,o),
(233,349,cs),
(279,349,l),
(279,145,l),
(235,197,ls),
(218,217,o),
(206,236,o),
(198,253,cs),
(190,270,o),
(186,287,o),
(186,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
21 19 16 15 9 8 7 4 0 9 1 3 3 1 2 1 72 1 0 11 3 76 20 1 3 1 75 0 5 4 5 133 0 4 3 4 133 0 1 3 2 3 1 2 128 0 2 10 3 2 10 126 0 10 0 7 9 10 7 106 0 9 0 11 0 9 11 105 0 3 3 17 77 8 6 2 0 0 19 0 78 75 73 67 64 60 58 20 52 22 35 23 20 52 19 17 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1797_17C5;
},
{
glyphname = uni1798_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1000,186,o),
(981,151,o),
(943,128,cs),
(904,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(500,128,cs),
(461,151,o),
(442,186,o),
(442,233,cs),
(442,559,l),
(1000,559,l),
(1000,233,ls)
);
},
{
closed = 1;
nodes = (
(279,862,l),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(443,19,o),
(542,0,o),
(675,0,cs),
(768,0,ls),
(899,0,o),
(998,19,o),
(1065,58,cs),
(1130,97,o),
(1163,155,o),
(1163,233,cs),
(1163,869,l),
(966,996,l),
(1202,1152,l),
(1722,984,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,652,l),
(442,652,l),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
46 21 17 3 5 4 48 47 36 35 34 23 22 20 15 14 13 11 6 5 2 76 37 16 2 4 74 0 4 0 5 6 4 5 105 7 1 6 0 0 1 6 0 103 0 1 1 2 97 3 1 2 2 19 2 78 12 12 12 49 12 49 33 41 56 25 52 17 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1798_17B6;
},
{
glyphname = uni1798_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(443,19,o),
(542,0,o),
(675,0,cs),
(768,0,ls),
(899,0,o),
(998,19,o),
(1065,58,cs),
(1130,97,o),
(1163,155,o),
(1163,233,cs),
(1163,869,l),
(966,996,l),
(1202,1152,l),
(1722,984,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l),
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1140,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,652,l),
(442,652,l)
);
},
{
closed = 1;
nodes = (
(442,559,l),
(1000,559,l),
(1000,233,ls),
(1000,186,o),
(981,151,o),
(943,128,cs),
(904,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(500,128,cs),
(461,151,o),
(442,186,o),
(442,233,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
41 4 2 4 0 50 25 5 3 5 4 52 51 40 39 38 27 26 24 21 3 2 1 12 6 5 3 76 0 1 0 1 133 0 0 4 0 133 0 4 0 5 6 4 5 105 9 1 6 0 7 8 6 7 103 0 8 8 2 97 3 1 2 2 19 2 78 0 0 63 60 56 55 0 53 0 53 33 41 56 23 35 25 10 7 28 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni1798_17C5;
},
{
glyphname = uni1799_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(473,1128,o),
(496,1097,o),
(512,1072,cs),
(527,1047,o),
(535,1028,o),
(535,1014,cs),
(535,993,o),
(527,978,o),
(512,969,cs),
(496,959,o),
(473,954,o),
(442,954,c),
(442,1163,l)
);
},
{
closed = 1;
nodes = (
(279,155,o),
(312,97,o),
(378,58,cs),
(443,19,o),
(542,0,o),
(675,0,cs),
(768,0,ls),
(847,0,o),
(912,5,o),
(963,14,cs),
(1014,23,o),
(1052,36,o),
(1075,55,c),
(1098,36,o),
(1136,23,o),
(1190,14,cs),
(1243,5,o),
(1312,0,o),
(1396,0,cs),
(1489,0,ls),
(1621,0,o),
(1720,19,o),
(1786,58,cs),
(1852,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1687,996,l),
(1924,1152,l),
(2443,984,l),
(2443,0,l),
(2606,0,l),
(2606,1103,l),
(1985,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1703,151,o),
(1664,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1260,105,o),
(1221,128,cs),
(1182,151,o),
(1163,186,o),
(1163,233,cs),
(1163,869,l),
(943,1009,l),
(1033,1125,l),
(1107,1079,ls),
(1140,1058,o),
(1172,1047,o),
(1202,1047,cs),
(1233,1047,o),
(1275,1094,o),
(1326,1187,c),
(1280,1187,ls),
(1254,1187,o),
(1222,1199,o),
(1184,1223,cs),
(1054,1303,l),
(838,1025,l),
(838,965,l),
(1000,862,l),
(1000,233,ls),
(1000,186,o),
(981,151,o),
(942,128,cs),
(903,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(501,128,cs),
(462,151,o),
(442,186,o),
(442,233,cs),
(442,861,l),
(504,861,o),
(551,873,o),
(582,897,cs),
(613,921,o),
(628,960,o),
(628,1013,cs),
(628,1039,o),
(620,1067,o),
(605,1098,cs),
(590,1129,o),
(566,1163,o),
(535,1198,cs),
(442,1303,l),
(279,1303,l),
(279,233,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
78 74 57 0 4 7 6 79 77 72 71 58 47 46 7 0 7 80 70 59 45 4 4 0 14 1 1 5 4 76 73 48 2 3 74 0 6 0 7 0 6 7 105 0 0 0 4 5 0 4 105 0 3 3 17 77 8 1 5 5 1 97 9 2 10 3 1 1 19 1 78 11 9 76 75 66 63 55 53 52 50 41 38 34 33 25 24 20 17 9 84 11 84 17 11 7 23 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni1799_17B6;
},
{
glyphname = uni1799_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1621,0,o),
(1720,19,o),
(1786,58,cs),
(1852,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1687,996,l),
(1924,1152,l),
(2443,984,l),
(2443,0,l),
(2606,0,l),
(2606,1024,l),
(2637,1086,o),
(2653,1133,o),
(2653,1164,cs),
(2653,1536,ls),
(2653,1598,o),
(2642,1645,o),
(2621,1676,cs),
(2600,1707,o),
(2568,1722,o),
(2525,1722,cs),
(2482,1722,o),
(2450,1714,o),
(2429,1699,cs),
(2408,1684,o),
(2398,1660,o),
(2398,1629,c),
(2429,1629,o),
(2452,1621,o),
(2468,1606,cs),
(2483,1591,o),
(2491,1567,o),
(2491,1536,cs),
(2491,1140,l),
(1985,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1703,151,o),
(1664,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1260,105,o),
(1221,128,cs),
(1182,151,o),
(1163,186,o),
(1163,233,cs),
(1163,869,l),
(943,1009,l),
(1033,1125,l),
(1107,1079,ls),
(1140,1058,o),
(1172,1047,o),
(1202,1047,cs),
(1233,1047,o),
(1275,1094,o),
(1326,1187,c),
(1280,1187,ls),
(1254,1187,o),
(1222,1199,o),
(1184,1223,cs),
(1054,1303,l),
(838,1025,l),
(838,965,l),
(1000,862,l),
(1000,233,ls),
(1000,186,o),
(981,151,o),
(942,128,cs),
(903,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(501,128,cs),
(462,151,o),
(442,186,o),
(442,233,cs),
(442,861,l),
(504,861,o),
(551,873,o),
(582,897,cs),
(613,921,o),
(628,960,o),
(628,1013,cs),
(628,1039,o),
(620,1067,o),
(605,1098,cs),
(590,1129,o),
(566,1163,o),
(535,1198,cs),
(442,1303,l),
(279,1303,l),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(443,19,o),
(542,0,o),
(675,0,cs),
(768,0,ls),
(847,0,o),
(912,5,o),
(963,14,cs),
(1014,23,o),
(1052,36,o),
(1075,55,c),
(1098,36,o),
(1136,23,o),
(1190,14,cs),
(1243,5,o),
(1312,0,o),
(1396,0,cs),
(1489,0,ls)
);
},
{
closed = 1;
nodes = (
(442,1163,l),
(473,1128,o),
(496,1097,o),
(512,1072,cs),
(527,1047,o),
(535,1028,o),
(535,1014,cs),
(535,993,o),
(527,978,o),
(512,969,cs),
(496,959,o),
(473,954,o),
(442,954,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 114 values pushed */
92 85 65 48 4 6 5 86 84 81 63 62 49 38 37 8 11 6 87 61 50 36 4 3 11 5 1 0 4 4 76 64 39 2 2 1 75 0 9 8 9 133 0 8 2 8 133 0 5 0 6 11 5 6 105 0 11 0 3 4 11 3 105 0 2 2 17 77 7 1 4 4 0 97 10 1 12 3 0 0 19 0 78 2 0 94 93 83 82 75 73 70 69 57 54 46 44 43 41 32 29 25 24 16 15 11 8 0 91 2 91 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni1799_17C5;
},
{
glyphname = uni179A_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,195,o),
(238,224,o),
(227,248,cs),
(215,271,o),
(209,290,o),
(209,303,cs),
(209,318,o),
(213,330,o),
(220,337,cs),
(228,345,o),
(240,349,o),
(256,349,cs),
(279,349,l),
(279,162,l)
);
},
{
closed = 1;
nodes = (
(116,280,o),
(123,253,o),
(136,222,cs),
(150,191,o),
(170,156,o),
(197,117,cs),
(279,0,l),
(442,0,l),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(459,1047,o),
(508,1047,cs),
(557,1047,o),
(591,1055,o),
(610,1071,cs),
(702,1144,l),
(1000,1000,l),
(1000,0,l),
(1163,0,l),
(1163,1103,l),
(748,1303,l),
(635,1210,ls),
(616,1195,o),
(590,1187,o),
(558,1187,cs),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,442,l),
(256,442,ls),
(209,442,o),
(174,431,o),
(151,408,cs),
(128,384,o),
(116,349,o),
(116,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
44 38 34 3 5 3 37 26 25 24 11 5 2 5 0 1 1 0 3 76 33 27 2 3 74 0 3 0 5 2 3 5 105 0 2 0 0 1 2 0 105 4 1 1 1 19 1 78 36 20 38 40 25 33 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni179A_17B6;
},
{
glyphname = uni179A_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(385,1079,ls),
(418,1058,o),
(459,1047,o),
(508,1047,cs),
(557,1047,o),
(591,1055,o),
(610,1071,cs),
(702,1144,l),
(1000,1000,l),
(1000,0,l),
(1163,0,l),
(1163,1024,l),
(1194,1086,o),
(1210,1133,o),
(1210,1164,cs),
(1210,1536,ls),
(1210,1598,o),
(1199,1645,o),
(1178,1676,cs),
(1157,1707,o),
(1125,1722,o),
(1082,1722,cs),
(1039,1722,o),
(1007,1714,o),
(986,1699,cs),
(965,1684,o),
(955,1660,o),
(955,1629,c),
(986,1629,o),
(1009,1621,o),
(1025,1606,cs),
(1040,1591,o),
(1048,1567,o),
(1048,1536,cs),
(1048,1159,l),
(748,1303,l),
(635,1210,ls),
(616,1195,o),
(590,1187,o),
(558,1187,cs),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,442,l),
(256,442,ls),
(209,442,o),
(174,431,o),
(151,408,cs),
(128,384,o),
(116,349,o),
(116,303,cs),
(116,280,o),
(123,253,o),
(136,222,cs),
(150,191,o),
(170,156,o),
(197,117,cs),
(279,0,l),
(442,0,l),
(442,869,l),
(221,1009,l),
(311,1125,l)
);
},
{
closed = 1;
nodes = (
(209,318,o),
(213,330,o),
(220,337,cs),
(228,345,o),
(240,349,o),
(256,349,cs),
(279,349,l),
(279,162,l),
(256,195,o),
(238,224,o),
(227,248,cs),
(215,271,o),
(209,290,o),
(209,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
23 17 2 2 3 50 44 24 3 6 2 43 40 16 15 14 1 6 1 6 51 1 0 7 4 76 0 4 3 4 133 0 3 2 3 133 0 2 0 6 1 2 6 105 0 1 0 7 0 1 7 105 5 1 0 0 19 0 78 36 36 23 35 23 38 40 18 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni179A_17C5;
},
{
glyphname = uni179B_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l),
(442,349,l),
(488,349,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1075,l),
(637,1163,l),
(1000,998,l),
(1000,233,ls),
(1000,155,o),
(1033,97,o),
(1099,58,cs),
(1165,19,o),
(1264,0,o),
(1396,0,cs),
(1489,0,ls),
(1621,0,o),
(1720,19,o),
(1786,58,cs),
(1852,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1687,996,l),
(1924,1152,l),
(2443,984,l),
(2443,0,l),
(2606,0,l),
(2606,1103,l),
(1985,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1702,151,o),
(1663,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1261,105,o),
(1222,128,cs),
(1183,151,o),
(1163,186,o),
(1163,233,cs),
(1163,1103,l),
(721,1303,l),
(279,1104,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
2 1 5 0 1 76 50 49 48 35 34 33 22 21 20 19 16 15 14 13 12 15 3 74 0 3 6 1 0 5 3 0 105 0 5 5 1 95 4 2 2 1 1 19 1 78 1 0 57 54 47 46 38 36 29 26 18 17 0 10 1 10 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni179B_17B6;
},
{
glyphname = uni179B_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1722,186,o),
(1702,151,o),
(1663,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1261,105,o),
(1222,128,cs),
(1183,151,o),
(1163,186,o),
(1163,233,cs),
(1163,1103,l),
(721,1303,l),
(279,1104,l),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1075,l),
(637,1163,l),
(1000,998,l),
(1000,233,ls),
(1000,155,o),
(1033,97,o),
(1099,58,cs),
(1165,19,o),
(1264,0,o),
(1396,0,cs),
(1489,0,ls),
(1621,0,o),
(1720,19,o),
(1786,58,cs),
(1852,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1687,996,l),
(1924,1152,l),
(2443,984,l),
(2443,0,l),
(2606,0,l),
(2606,1024,l),
(2637,1086,o),
(2653,1133,o),
(2653,1164,cs),
(2653,1536,ls),
(2653,1598,o),
(2642,1645,o),
(2621,1676,cs),
(2600,1707,o),
(2568,1722,o),
(2525,1722,cs),
(2482,1722,o),
(2450,1714,o),
(2429,1699,cs),
(2408,1684,o),
(2398,1660,o),
(2398,1629,c),
(2429,1629,o),
(2452,1621,o),
(2468,1606,cs),
(2483,1591,o),
(2491,1567,o),
(2491,1536,cs),
(2491,1140,l),
(1985,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
55 54 53 40 39 38 27 26 25 24 21 5 4 3 2 1 16 4 0 67 1 6 7 2 76 0 1 0 1 133 0 0 4 0 133 0 4 8 1 7 6 4 7 105 0 6 6 2 95 5 3 2 2 2 19 2 78 66 65 65 75 66 75 55 24 39 56 23 35 25 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni179B_17C5;
},
{
glyphname = uni179C_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(581,1239,l),
(581,1280,ls),
(581,1350,o),
(569,1402,o),
(546,1437,cs),
(523,1472,o),
(489,1489,o),
(442,1489,cs),
(411,1489,o),
(387,1481,o),
(372,1466,cs),
(357,1451,o),
(349,1427,o),
(349,1396,c),
(396,1396,o),
(430,1387,o),
(453,1368,cs),
(476,1349,o),
(488,1319,o),
(488,1280,cs),
(488,1257,o),
(485,1240,o),
(480,1228,cs),
(475,1216,o),
(466,1210,o),
(455,1210,cs),
(432,1210,o),
(394,1226,o),
(339,1258,cs),
(259,1303,l),
(116,1027,l),
(116,965,l),
(279,862,l),
(279,442,l),
(256,442,ls),
(209,442,o),
(174,431,o),
(151,408,cs),
(128,384,o),
(116,349,o),
(116,303,cs),
(116,280,o),
(123,253,o),
(136,222,cs),
(150,191,o),
(170,156,o),
(197,117,cs),
(279,0,l),
(442,0,l),
(442,869,l),
(213,1014,l),
(264,1113,l),
(303,1091,o),
(338,1075,o),
(367,1064,cs),
(397,1053,o),
(423,1047,o),
(444,1047,cs),
(490,1047,o),
(524,1067,o),
(547,1106,cs),
(551,1113,o),
(555,1120,o),
(558,1127,c),
(637,1163,l),
(1000,998,l),
(1000,0,l),
(1163,0,l),
(1163,1103,l),
(721,1303,l)
);
},
{
closed = 1;
nodes = (
(209,318,o),
(213,330,o),
(220,337,cs),
(228,345,o),
(240,349,o),
(256,349,cs),
(279,349,l),
(279,162,l),
(256,195,o),
(238,224,o),
(227,248,cs),
(215,271,o),
(209,290,o),
(209,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
53 52 31 3 4 5 13 4 0 3 1 4 30 29 28 15 14 3 6 3 1 54 1 0 7 4 76 0 6 0 5 4 6 5 105 0 4 0 1 3 4 1 105 0 3 0 7 0 3 7 105 2 1 0 0 19 0 78 40 35 23 22 40 22 38 17 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni179C_17B6;
},
{
glyphname = uni179C_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1194,1086,o),
(1210,1133,o),
(1210,1164,cs),
(1210,1536,ls),
(1210,1598,o),
(1199,1645,o),
(1178,1676,cs),
(1157,1707,o),
(1125,1722,o),
(1082,1722,cs),
(1039,1722,o),
(1007,1714,o),
(986,1699,cs),
(965,1684,o),
(955,1660,o),
(955,1629,c),
(986,1629,o),
(1009,1621,o),
(1025,1606,cs),
(1040,1591,o),
(1048,1567,o),
(1048,1536,cs),
(1048,1155,l),
(721,1303,l),
(581,1239,l),
(581,1280,ls),
(581,1350,o),
(569,1402,o),
(546,1437,cs),
(523,1472,o),
(489,1489,o),
(442,1489,cs),
(411,1489,o),
(387,1481,o),
(372,1466,cs),
(357,1451,o),
(349,1427,o),
(349,1396,c),
(396,1396,o),
(430,1387,o),
(453,1368,cs),
(476,1349,o),
(488,1319,o),
(488,1280,cs),
(488,1257,o),
(485,1240,o),
(480,1228,cs),
(475,1216,o),
(466,1210,o),
(455,1210,cs),
(432,1210,o),
(394,1226,o),
(339,1258,cs),
(259,1303,l),
(116,1027,l),
(116,965,l),
(279,862,l),
(279,442,l),
(256,442,ls),
(209,442,o),
(174,431,o),
(151,408,cs),
(128,384,o),
(116,349,o),
(116,303,cs),
(116,280,o),
(123,253,o),
(136,222,cs),
(150,191,o),
(170,156,o),
(197,117,cs),
(279,0,l),
(442,0,l),
(442,869,l),
(213,1014,l),
(264,1113,l),
(303,1091,o),
(338,1075,o),
(367,1064,cs),
(397,1053,o),
(423,1047,o),
(444,1047,cs),
(490,1047,o),
(524,1067,o),
(547,1106,cs),
(551,1113,o),
(555,1120,o),
(558,1127,c),
(637,1163,l),
(1000,998,l),
(1000,0,l),
(1163,0,l),
(1163,1024,l)
);
},
{
closed = 1;
nodes = (
(209,318,o),
(213,330,o),
(220,337,cs),
(228,345,o),
(240,349,o),
(256,349,cs),
(279,349,l),
(279,162,l),
(256,195,o),
(238,224,o),
(227,248,cs),
(215,271,o),
(209,290,o),
(209,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
53 52 31 3 4 5 54 13 4 3 1 4 30 29 28 15 14 3 0 7 3 1 70 1 0 9 4 76 0 8 7 8 133 0 7 6 7 133 0 6 0 5 4 6 5 105 0 4 0 1 3 4 1 105 0 3 0 9 0 3 9 105 2 1 0 0 19 0 78 73 71 35 27 35 23 22 40 22 38 17 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni179C_17C5;
},
{
glyphname = uni179F_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(726,1037,o),
(769,1024,o),
(812,1024,cs),
(855,1024,o),
(895,1071,o),
(930,1165,c),
(877,1165,ls),
(846,1165,o),
(816,1173,o),
(789,1190,cs),
(604,1303,l),
(567,1303,l),
(326,1091,l),
(326,1024,l),
(495,918,l),
(445,908,o),
(404,893,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1000,745,o),
(1000,698,cs),
(1000,233,ls),
(1000,155,o),
(1033,97,o),
(1099,58,cs),
(1165,19,o),
(1264,0,o),
(1396,0,cs),
(1489,0,ls),
(1621,0,o),
(1720,19,o),
(1786,58,cs),
(1852,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1687,996,l),
(1924,1152,l),
(2443,984,l),
(2443,0,l),
(2606,0,l),
(2606,1103,l),
(1985,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1702,151,o),
(1663,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1261,105,o),
(1222,128,cs),
(1183,151,o),
(1163,186,o),
(1163,233,cs),
(1163,698,ls),
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(650,931,l),
(437,1065,l),
(537,1154,l),
(684,1062,ls)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
68 27 23 21 2 1 6 9 8 28 26 20 3 0 9 66 29 19 3 4 0 80 1 1 10 4 76 67 1 9 1 75 22 1 7 74 0 8 0 9 0 8 9 105 0 0 0 4 5 0 4 106 0 5 11 1 10 1 5 10 105 0 7 7 17 77 0 1 1 2 95 6 3 2 2 2 19 2 78 79 78 78 88 79 88 77 75 34 24 24 36 55 56 25 55 35 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni179F_17B6;
},
{
glyphname = uni179F_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(726,1037,o),
(769,1024,o),
(812,1024,cs),
(855,1024,o),
(895,1071,o),
(930,1165,c),
(877,1165,ls),
(846,1165,o),
(816,1173,o),
(789,1190,cs),
(604,1303,l),
(567,1303,l),
(326,1091,l),
(326,1024,l),
(495,918,l),
(445,908,o),
(404,893,o),
(372,873,cs),
(310,834,o),
(279,776,o),
(279,698,cs),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,698,ls),
(442,745,o),
(459,779,o),
(494,802,cs),
(529,826,o),
(582,838,o),
(651,838,cs),
(791,838,ls),
(860,838,o),
(913,826,o),
(948,802,cs),
(983,779,o),
(1000,745,o),
(1000,698,cs),
(1000,233,ls),
(1000,155,o),
(1033,97,o),
(1099,58,cs),
(1165,19,o),
(1264,0,o),
(1396,0,cs),
(1489,0,ls),
(1621,0,o),
(1720,19,o),
(1786,58,cs),
(1852,97,o),
(1885,155,o),
(1885,233,cs),
(1885,869,l),
(1687,996,l),
(1924,1152,l),
(2443,984,l),
(2443,0,l),
(2606,0,l),
(2606,1024,l),
(2637,1086,o),
(2653,1133,o),
(2653,1164,cs),
(2653,1536,ls),
(2653,1598,o),
(2642,1645,o),
(2621,1676,cs),
(2600,1707,o),
(2568,1722,o),
(2525,1722,cs),
(2482,1722,o),
(2450,1714,o),
(2429,1699,cs),
(2408,1684,o),
(2398,1660,o),
(2398,1629,c),
(2429,1629,o),
(2452,1621,o),
(2468,1606,cs),
(2483,1591,o),
(2491,1567,o),
(2491,1536,cs),
(2491,1140,l),
(1985,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,233,ls),
(1722,186,o),
(1702,151,o),
(1663,128,cs),
(1625,105,o),
(1567,93,o),
(1489,93,cs),
(1396,93,ls),
(1319,93,o),
(1261,105,o),
(1222,128,cs),
(1183,151,o),
(1163,186,o),
(1163,233,cs),
(1163,698,ls),
(1163,776,o),
(1132,834,o),
(1070,873,cs),
(1008,912,o),
(915,931,o),
(791,931,cs),
(650,931,l),
(437,1065,l),
(537,1154,l),
(684,1062,ls)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 113 values pushed */
84 43 23 21 2 1 6 11 10 44 42 20 3 0 11 82 45 19 3 6 0 96 1 1 12 4 76 22 1 9 83 39 2 11 2 75 0 3 2 3 133 0 2 9 2 133 0 10 0 11 0 10 11 105 0 0 0 6 7 0 6 106 0 7 13 1 12 1 7 12 105 0 9 9 17 77 0 1 1 4 95 8 5 2 4 4 19 4 78 95 94 94 104 95 104 93 91 90 88 86 85 24 36 55 56 23 35 28 55 35 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni179F_17C5;
},
{
glyphname = uni17A0_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1789,1134,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,233,ls),
(1000,186,o),
(981,151,o),
(943,128,cs),
(904,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(500,128,cs),
(461,151,o),
(442,186,o),
(442,233,cs),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(443,19,o),
(542,0,o),
(675,0,cs),
(768,0,ls),
(899,0,o),
(998,19,o),
(1065,58,cs),
(1130,97,o),
(1163,155,o),
(1163,233,cs),
(1163,869,l),
(966,996,l),
(1202,1152,l),
(1722,984,l),
(1722,0,l),
(1885,0,l),
(1885,1075,l),
(2080,1163,l),
(2443,998,l),
(2443,0,l),
(2606,0,l),
(2606,1103,l),
(2164,1303,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
51 34 9 5 4 0 6 4 3 49 48 47 36 35 24 23 22 11 10 8 3 12 5 4 2 76 52 50 25 3 3 74 0 3 0 4 5 3 4 105 0 5 5 0 95 2 1 2 0 0 19 0 78 56 33 41 56 20 17 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni17A0_17B6;
},
{
glyphname = uni17A0_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2637,1086,o),
(2653,1133,o),
(2653,1164,cs),
(2653,1536,ls),
(2653,1598,o),
(2642,1645,o),
(2621,1676,cs),
(2600,1707,o),
(2568,1722,o),
(2525,1722,cs),
(2482,1722,o),
(2450,1714,o),
(2429,1699,cs),
(2408,1684,o),
(2398,1660,o),
(2398,1629,c),
(2429,1629,o),
(2452,1621,o),
(2467,1606,cs),
(2483,1591,o),
(2491,1567,o),
(2491,1536,cs),
(2491,1155,l),
(2164,1303,l),
(1789,1134,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,233,ls),
(1000,186,o),
(981,151,o),
(943,128,cs),
(904,105,o),
(845,93,o),
(768,93,cs),
(675,93,ls),
(597,93,o),
(539,105,o),
(500,128,cs),
(461,151,o),
(442,186,o),
(442,233,cs),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,233,ls),
(279,155,o),
(312,97,o),
(378,58,cs),
(443,19,o),
(542,0,o),
(675,0,cs),
(768,0,ls),
(899,0,o),
(998,19,o),
(1065,58,cs),
(1130,97,o),
(1163,155,o),
(1163,233,cs),
(1163,869,l),
(966,996,l),
(1202,1152,l),
(1722,984,l),
(1722,0,l),
(1885,0,l),
(1885,1075,l),
(2080,1163,l),
(2443,998,l),
(2443,0,l),
(2606,0,l),
(2606,1024,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
52 50 25 3 3 6 53 51 34 9 5 4 6 4 3 49 48 47 36 35 24 23 22 11 10 8 3 0 13 5 4 3 76 0 7 6 7 133 0 6 3 6 133 0 3 0 4 5 3 4 105 0 5 5 0 95 2 1 2 0 0 19 0 78 35 30 56 33 41 56 20 17 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni17A0_17C5;
},
{
glyphname = uni17A1_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1046,652,o),
(1070,643,o),
(1070,625,cs),
(1070,606,o),
(1046,597,o),
(998,597,cs),
(942,597,l),
(942,634,o),
(961,652,o),
(998,652,cs)
);
},
{
closed = 1;
nodes = (
(279,711,o),
(316,633,o),
(390,581,cs),
(464,530,o),
(575,504,o),
(722,504,cs),
(779,504,l),
(779,280,ls),
(779,218,o),
(772,172,o),
(759,141,cs),
(746,110,o),
(725,94,o),
(698,94,cs),
(667,94,o),
(643,100,o),
(628,111,cs),
(613,122,o),
(605,140,o),
(605,163,cs),
(605,280,ls),
(605,327,o),
(596,361,o),
(579,384,cs),
(561,408,o),
(534,420,o),
(499,420,cs),
(456,420,o),
(425,412,o),
(404,397,cs),
(383,381,o),
(373,358,o),
(373,327,c),
(419,327,o),
(442,311,o),
(442,280,cs),
(442,163,ls),
(442,108,o),
(463,68,o),
(506,41,cs),
(549,14,o),
(613,0,o),
(698,0,cs),
(779,0,o),
(840,23,o),
(881,70,cs),
(922,117,o),
(942,188,o),
(942,281,cs),
(942,504,l),
(998,504,ls),
(1053,504,o),
(1094,514,o),
(1121,534,cs),
(1149,554,o),
(1163,585,o),
(1163,626,cs),
(1163,665,o),
(1149,695,o),
(1121,715,cs),
(1094,736,o),
(1053,746,o),
(998,746,cs),
(925,746,o),
(871,733,o),
(834,708,cs),
(797,683,o),
(779,646,o),
(779,597,c),
(722,597,ls),
(629,597,o),
(559,615,o),
(512,651,cs),
(465,688,o),
(442,742,o),
(442,815,cs),
(442,1031,ls),
(442,1091,o),
(465,1136,o),
(512,1165,cs),
(559,1195,o),
(628,1210,o),
(721,1210,cs),
(814,1210,o),
(885,1195,o),
(932,1165,cs),
(978,1136,o),
(1001,1091,o),
(1001,1031,cs),
(1001,996,o),
(989,978,o),
(966,978,cs),
(943,978,o),
(931,993,o),
(931,1024,c),
(869,1024,o),
(838,1001,o),
(838,954,cs),
(838,907,o),
(882,884,o),
(970,884,cs),
(1099,884,o),
(1163,933,o),
(1163,1031,cs),
(1163,1122,o),
(1126,1190,o),
(1053,1235,cs),
(979,1280,o),
(868,1303,o),
(721,1303,cs),
(574,1303,o),
(464,1280,o),
(390,1235,cs),
(316,1190,o),
(279,1122,o),
(279,1031,cs),
(279,815,ls)
);
},
{
closed = 1;
nodes = (
(861,-326,o),
(873,-344,o),
(896,-356,cs),
(918,-367,o),
(951,-372,o),
(994,-372,cs),
(1000,-372,l),
(1000,-698,l),
(1163,-698,l),
(1443,-519,l),
(1722,-698,l),
(1885,-698,l),
(1885,869,l),
(1687,996,l),
(1924,1152,l),
(2443,984,l),
(2443,0,l),
(2606,0,l),
(2606,1103,l),
(1985,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,-587,l),
(1443,-408,l),
(1163,-587,l),
(1163,-93,l),
(1000,-93,l),
(931,-164,ls),
(907,-187,o),
(890,-211,o),
(879,-234,cs),
(867,-257,o),
(861,-280,o),
(861,-303,cs)
);
},
{
closed = 1;
nodes = (
(955,-260,o),
(970,-240,o),
(1001,-209,c),
(1000,-280,l),
(970,-280,o),
(955,-276,o),
(955,-268,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
102 98 96 3 13 2 103 101 2 14 13 95 1 12 14 104 94 2 4 12 89 1 15 20 123 122 107 93 4 17 19 6 76 97 1 11 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 13 2 14 14 13 114 0 8 5 7 5 8 7 128 0 7 9 5 7 9 126 0 14 0 12 4 14 12 106 0 4 21 1 0 1 4 0 105 3 1 1 10 1 5 8 1 5 105 22 1 15 0 19 17 15 19 105 0 20 18 1 17 20 17 99 0 2 2 11 97 0 11 11 17 77 0 9 9 6 97 16 1 6 6 19 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 91 values pushed */
0 13 2 14 14 13 114 0 8 5 7 5 8 7 128 0 7 9 5 7 9 126 0 14 0 12 4 14 12 106 0 4 21 1 0 1 4 0 105 3 1 1 10 1 5 8 1 5 105 22 1 15 0 19 17 15 19 105 0 2 2 11 97 0 11 11 17 77 0 9 9 6 97 16 1 6 6 19 77 18 1 17 17 20 95 0 20 20 18 17 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 53 values pushed */
88 88 1 0 121 120 112 110 109 108 106 105 100 99 88 92 88 92 87 85 84 83 81 79 75 73 66 64 60 58 51 49 46 45 40 38 34 32 26 24 21 19 12 10 4 2 0 6 1 6 23 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni17A1_17B6;
},
{
glyphname = uni17A1_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1163,-587,l),
(1163,-93,l),
(1000,-93,l),
(931,-164,ls),
(907,-187,o),
(890,-211,o),
(879,-234,cs),
(867,-257,o),
(861,-280,o),
(861,-303,cs),
(861,-326,o),
(873,-344,o),
(896,-356,cs),
(918,-367,o),
(951,-372,o),
(994,-372,cs),
(1000,-372,l),
(1000,-698,l),
(1163,-698,l),
(1443,-519,l),
(1722,-698,l),
(1885,-698,l),
(1885,869,l),
(1687,996,l),
(1924,1152,l),
(2443,984,l),
(2443,0,l),
(2606,0,l),
(2606,1024,l),
(2637,1086,o),
(2653,1133,o),
(2653,1164,cs),
(2653,1536,ls),
(2653,1598,o),
(2642,1645,o),
(2621,1676,cs),
(2600,1707,o),
(2568,1722,o),
(2525,1722,cs),
(2482,1722,o),
(2450,1714,o),
(2429,1699,cs),
(2408,1684,o),
(2398,1660,o),
(2398,1629,c),
(2429,1629,o),
(2452,1621,o),
(2468,1606,cs),
(2483,1591,o),
(2491,1567,o),
(2491,1536,cs),
(2491,1140,l),
(1985,1303,l),
(1559,1025,l),
(1559,965,l),
(1722,862,l),
(1722,-587,l),
(1443,-408,l)
);
},
{
closed = 1;
nodes = (
(279,711,o),
(316,633,o),
(390,581,cs),
(464,530,o),
(575,504,o),
(722,504,cs),
(779,504,l),
(779,280,ls),
(779,218,o),
(772,172,o),
(759,141,cs),
(746,110,o),
(725,94,o),
(698,94,cs),
(667,94,o),
(643,100,o),
(628,111,cs),
(613,122,o),
(605,140,o),
(605,163,cs),
(605,280,ls),
(605,327,o),
(596,361,o),
(579,384,cs),
(561,408,o),
(534,420,o),
(499,420,cs),
(456,420,o),
(425,412,o),
(404,397,cs),
(383,381,o),
(373,358,o),
(373,327,c),
(419,327,o),
(442,311,o),
(442,280,cs),
(442,163,ls),
(442,108,o),
(463,68,o),
(506,41,cs),
(549,14,o),
(613,0,o),
(698,0,cs),
(779,0,o),
(840,23,o),
(881,70,cs),
(922,117,o),
(942,188,o),
(942,281,cs),
(942,504,l),
(998,504,ls),
(1053,504,o),
(1094,514,o),
(1121,534,cs),
(1149,554,o),
(1163,585,o),
(1163,626,cs),
(1163,665,o),
(1149,695,o),
(1121,715,cs),
(1094,736,o),
(1053,746,o),
(998,746,cs),
(925,746,o),
(871,733,o),
(834,708,cs),
(797,683,o),
(779,646,o),
(779,597,c),
(722,597,ls),
(629,597,o),
(559,615,o),
(512,651,cs),
(465,688,o),
(442,742,o),
(442,815,cs),
(442,1031,ls),
(442,1091,o),
(465,1136,o),
(512,1165,cs),
(559,1195,o),
(628,1210,o),
(721,1210,cs),
(814,1210,o),
(885,1195,o),
(932,1165,cs),
(978,1136,o),
(1001,1091,o),
(1001,1031,cs),
(1001,996,o),
(989,978,o),
(966,978,cs),
(943,978,o),
(931,993,o),
(931,1024,c),
(869,1024,o),
(838,1001,o),
(838,954,cs),
(838,907,o),
(882,884,o),
(970,884,cs),
(1099,884,o),
(1163,933,o),
(1163,1031,cs),
(1163,1122,o),
(1126,1190,o),
(1053,1235,cs),
(979,1280,o),
(868,1303,o),
(721,1303,cs),
(574,1303,o),
(464,1280,o),
(390,1235,cs),
(316,1190,o),
(279,1122,o),
(279,1031,cs),
(279,815,ls)
);
},
{
closed = 1;
nodes = (
(942,634,o),
(961,652,o),
(998,652,cs),
(1046,652,o),
(1070,643,o),
(1070,625,cs),
(1070,606,o),
(1046,597,o),
(998,597,cs),
(942,597,l)
);
},
{
closed = 1;
nodes = (
(955,-260,o),
(970,-240,o),
(1001,-209,c),
(1000,-280,l),
(970,-280,o),
(955,-276,o),
(955,-268,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
25 5 3 3 18 7 26 24 2 19 18 2 1 17 19 27 1 2 9 17 136 1 22 6 46 45 30 0 4 3 5 6 76 4 1 16 21 1 18 2 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 98 values pushed */
0 1 0 1 133 0 0 16 0 133 0 18 7 19 19 18 114 0 13 10 12 10 13 12 128 0 12 14 10 12 14 126 0 19 0 17 9 19 17 106 0 9 23 1 20 8 9 20 105 21 1 8 15 1 10 13 8 10 105 24 1 22 0 5 3 22 5 105 0 6 4 1 3 6 3 99 0 7 7 16 97 0 16 16 17 77 0 14 14 2 97 11 1 2 2 19 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 101 values pushed */
0 1 0 1 133 0 0 16 0 133 0 18 7 19 19 18 114 0 13 10 12 10 13 12 128 0 12 14 10 12 14 126 0 19 0 17 9 19 17 106 0 9 23 1 20 8 9 20 105 21 1 8 15 1 10 13 8 10 105 24 1 22 0 5 3 22 5 105 0 7 7 16 97 0 16 16 17 77 0 14 14 2 97 11 1 2 2 19 77 4 1 3 3 6 95 0 6 6 18 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
135 135 129 128 135 139 135 139 132 130 128 134 129 134 127 125 124 123 121 119 115 113 106 104 100 98 91 89 86 85 80 78 74 72 66 64 39 38 24 33 18 21 23 35 25 25 7 31 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = uni17A1_17C5;
},
{
glyphname = uni17A2_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,195,o),
(238,224,o),
(227,248,cs),
(215,271,o),
(209,290,o),
(209,303,cs),
(209,318,o),
(213,330,o),
(220,337,cs),
(228,345,o),
(240,349,o),
(256,349,cs),
(279,349,l),
(279,162,l)
);
},
{
closed = 1;
nodes = (
(116,280,o),
(123,253,o),
(136,222,cs),
(150,191,o),
(170,156,o),
(197,117,cs),
(279,0,l),
(442,0,l),
(442,559,l),
(1000,559,l),
(1000,442,l),
(977,442,ls),
(930,442,o),
(896,431,o),
(873,408,cs),
(849,384,o),
(837,349,o),
(837,303,cs),
(837,280,o),
(844,253,o),
(858,222,cs),
(871,191,o),
(891,156,o),
(918,117,cs),
(1000,0,l),
(1163,0,l),
(1163,869,l),
(966,996,l),
(1202,1152,l),
(1722,984,l),
(1722,0,l),
(1885,0,l),
(1885,1103,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,652,l),
(442,652,l),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,442,l),
(256,442,ls),
(209,442,o),
(174,431,o),
(151,408,cs),
(128,384,o),
(116,349,o),
(116,303,cs)
);
},
{
closed = 1;
nodes = (
(931,318,o),
(935,330,o),
(942,337,cs),
(950,345,o),
(962,349,o),
(977,349,cs),
(1000,349,l),
(1000,162,l),
(977,195,o),
(959,224,o),
(948,248,cs),
(937,271,o),
(931,290,o),
(931,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
71 30 26 3 10 9 73 72 61 60 59 32 31 29 24 23 22 11 2 10 10 0 2 3 0 3 76 62 25 2 9 74 0 9 0 10 2 9 10 105 0 2 0 6 5 2 6 103 8 1 5 1 1 0 3 5 0 105 7 4 2 3 3 19 3 78 69 67 66 64 40 17 17 40 21 22 23 40 33 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A2_17B6;
},
{
glyphname = uni17A2_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,442,l),
(256,442,ls),
(209,442,o),
(174,431,o),
(151,408,cs),
(128,384,o),
(116,349,o),
(116,303,cs),
(116,280,o),
(123,253,o),
(136,222,cs),
(150,191,o),
(170,156,o),
(197,117,cs),
(279,0,l),
(442,0,l),
(442,559,l),
(1000,559,l),
(1000,442,l),
(977,442,ls),
(930,442,o),
(896,431,o),
(873,408,cs),
(849,384,o),
(837,349,o),
(837,303,cs),
(837,280,o),
(844,253,o),
(858,222,cs),
(871,191,o),
(891,156,o),
(918,117,cs),
(1000,0,l),
(1163,0,l),
(1163,869,l),
(966,996,l),
(1202,1152,l),
(1722,984,l),
(1722,0,l),
(1885,0,l),
(1885,1024,l),
(1916,1086,o),
(1931,1133,o),
(1931,1164,cs),
(1931,1536,ls),
(1931,1598,o),
(1921,1645,o),
(1900,1676,cs),
(1879,1707,o),
(1847,1722,o),
(1804,1722,cs),
(1761,1722,o),
(1729,1714,o),
(1708,1699,cs),
(1687,1684,o),
(1676,1660,o),
(1676,1629,c),
(1707,1629,o),
(1731,1621,o),
(1746,1606,cs),
(1761,1591,o),
(1769,1567,o),
(1769,1536,cs),
(1769,1140,l),
(1264,1303,l),
(837,1025,l),
(837,965,l),
(1000,862,l),
(1000,652,l),
(442,652,l),
(442,869,l)
);
},
{
closed = 1;
nodes = (
(209,318,o),
(213,330,o),
(220,337,cs),
(228,345,o),
(240,349,o),
(256,349,cs),
(279,349,l),
(279,162,l),
(256,195,o),
(238,224,o),
(227,248,cs),
(215,271,o),
(209,290,o),
(209,303,cs)
);
},
{
closed = 1;
nodes = (
(931,318,o),
(935,330,o),
(942,337,cs),
(950,345,o),
(962,349,o),
(977,349,cs),
(1000,349,l),
(1000,162,l),
(977,195,o),
(959,224,o),
(948,248,cs),
(937,271,o),
(931,290,o),
(931,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
58 5 2 9 1 67 26 6 3 10 9 69 68 57 56 55 28 27 25 22 4 3 2 12 0 10 80 70 2 3 11 4 76 0 2 1 2 133 0 1 9 1 133 0 9 0 10 0 9 10 105 0 0 0 6 5 0 6 103 8 1 5 12 1 11 3 5 11 105 7 4 2 3 3 19 3 78 83 81 73 71 65 63 62 60 40 17 17 40 21 23 35 25 16 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17A2_17C5;
},
{
glyphname = uni17E0;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1016,0,o),
(1163,109,o),
(1163,326,cs),
(1163,977,ls),
(1163,1194,o),
(1016,1303,o),
(721,1303,cs),
(426,1303,o),
(279,1194,o),
(279,977,cs),
(279,326,ls),
(279,109,o),
(426,0,o),
(721,0,cs)
);
},
{
closed = 1;
nodes = (
(442,977,ls),
(442,1132,o),
(535,1210,o),
(721,1210,cs),
(907,1210,o),
(1000,1132,o),
(1000,977,cs),
(1000,326,ls),
(1000,171,o),
(907,94,o),
(721,94,cs),
(535,94,o),
(442,171,o),
(442,326,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
5 1 2 2 1 97 0 1 1 17 77 0 3 3 0 97 4 1 0 0 19 0 78 11 10 1 0 16 14 10 19 11 19 6 4 0 9 1 9 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E0;
unicode = 6112;
},
{
glyphname = uni17E1;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1016,0,o),
(1163,145,o),
(1163,435,cs),
(1163,977,ls),
(1163,1194,o),
(1016,1303,o),
(721,1303,cs),
(426,1303,o),
(279,1194,o),
(279,977,cs),
(279,869,ls),
(279,724,o),
(389,652,o),
(610,652,cs),
(747,652,o),
(815,706,o),
(815,815,cs),
(815,861,o),
(792,884,o),
(745,884,cs),
(699,884,o),
(676,861,o),
(676,815,cs),
(676,769,o),
(654,746,o),
(610,746,cs),
(498,746,o),
(442,787,o),
(442,869,cs),
(442,977,ls),
(442,1132,o),
(535,1210,o),
(721,1210,cs),
(908,1210,o),
(1001,1132,o),
(1001,977,cs),
(1001,435,ls),
(1001,208,o),
(908,94,o),
(721,94,cs),
(500,94,o),
(390,189,o),
(390,380,c),
(316,380,o),
(279,344,o),
(279,272,cs),
(279,91,o),
(426,0,o),
(721,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 5 3 4 4 5 114 0 1 6 2 2 1 114 0 4 0 6 1 4 6 106 0 3 3 7 97 0 7 7 17 77 0 2 2 0 98 8 1 0 0 19 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 4 4 5 114 0 1 6 2 6 1 2 128 0 4 0 6 1 4 6 106 0 3 3 7 97 0 7 7 17 77 0 2 2 0 98 8 1 0 0 19 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 3 4 3 5 4 128 0 1 6 2 6 1 2 128 0 4 0 6 1 4 6 106 0 3 3 7 97 0 7 7 17 77 0 2 2 0 98 8 1 0 0 19 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 30 28 25 23 21 19 17 15 12 10 7 5 4 3 0 33 1 33 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E1;
unicode = 6113;
},
{
glyphname = uni17E2;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(605,1303,l),
(605,815,ls),
(605,737,o),
(659,698,o),
(768,698,cs),
(815,698,o),
(838,722,o),
(838,769,c),
(835,769,ls),
(790,769,o),
(768,784,o),
(768,815,cs),
(768,1109,l),
(939,1002,l),
(1095,1096,l),
(1095,217,ls),
(1095,135,o),
(986,94,o),
(768,94,cs),
(551,94,o),
(442,135,o),
(442,217,cs),
(442,1421,ls),
(442,1529,o),
(399,1583,o),
(314,1583,cs),
(229,1583,o),
(186,1552,o),
(186,1489,c),
(248,1489,o),
(279,1466,o),
(279,1421,cs),
(279,217,ls),
(279,72,o),
(442,0,o),
(768,0,cs),
(1094,0,o),
(1257,72,o),
(1257,217,cs),
(1257,1303,l),
(939,1112,l),
(632,1303,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
21 20 19 3 4 6 1 76 1 1 6 1 75 0 2 0 1 6 2 1 105 0 4 0 5 3 4 5 106 0 6 6 17 77 0 3 3 0 97 0 0 0 19 0 78 18 34 22 35 33 19 35 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1536;
}
);
note = uni17E2;
unicode = 6114;
},
{
glyphname = uni17E3;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(636,1303,l),
(279,1056,l),
(279,0,l),
(442,0,l),
(515,73,ls),
(545,102,o),
(567,135,o),
(582,172,cs),
(597,209,o),
(605,249,o),
(605,293,cs),
(605,343,o),
(591,380,o),
(564,405,cs),
(537,430,o),
(496,442,o),
(442,442,c),
(442,1055,l),
(573,1146,l),
(838,960,l),
(838,0,l),
(1000,0,l),
(1000,1044,l),
(989,1052,l),
(1129,1149,l),
(1373,977,l),
(1373,0,l),
(1536,0,l),
(1536,1061,l),
(1190,1303,l),
(908,1109,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(465,349,o),
(482,344,o),
(494,335,cs),
(506,325,o),
(512,311,o),
(512,292,cs),
(512,263,o),
(506,235,o),
(494,208,cs),
(482,181,o),
(465,157,o),
(442,134,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
28 1 0 4 1 76 26 25 24 12 11 10 6 5 4 1 10 2 74 0 2 5 1 4 0 2 4 105 3 1 2 0 0 19 0 78 27 27 27 35 27 35 24 20 21 18 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1815;
}
);
note = uni17E3;
unicode = 6115;
},
{
glyphname = uni17E4;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1022,792,o),
(1039,780,o),
(1052,757,cs),
(1064,734,o),
(1070,699,o),
(1070,652,cs),
(1070,629,o),
(1064,611,o),
(1052,600,cs),
(1039,589,o),
(1022,583,o),
(1000,583,c),
(1000,792,l)
);
},
{
closed = 1;
nodes = (
(279,72,o),
(389,0,o),
(610,0,cs),
(1163,0,l),
(1163,127,l),
(1000,369,l),
(1000,489,l),
(1053,489,o),
(1094,503,o),
(1121,530,cs),
(1149,557,o),
(1163,597,o),
(1163,652,cs),
(1163,807,o),
(1109,884,o),
(1000,884,cs),
(892,884,o),
(838,843,o),
(838,760,cs),
(838,380,l),
(1078,94,l),
(610,94,ls),
(498,94,o),
(442,135,o),
(442,217,cs),
(442,1089,l),
(617,1216,l),
(999,1086,l),
(1108,1086,o),
(1163,1158,o),
(1163,1303,cs),
(1163,1396,ls),
(1163,1458,o),
(1194,1489,o),
(1256,1489,c),
(1256,1552,o),
(1225,1583,o),
(1163,1583,cs),
(1054,1583,o),
(1000,1521,o),
(1000,1396,cs),
(1000,1303,ls),
(1000,1229,o),
(992,1192,o),
(977,1192,c),
(653,1303,l),
(580,1303,l),
(279,1086,l),
(279,217,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 101 values pushed */
10 1 10 7 26 25 15 3 2 4 2 76 31 1 10 1 75 0 7 6 10 6 7 10 128 0 10 3 6 10 3 126 0 8 0 9 6 8 9 105 0 3 11 1 1 0 3 1 105 0 0 0 4 2 0 4 105 0 6 6 17 77 0 2 2 5 95 0 5 5 19 5 78 0 0 46 45 42 41 40 38 35 34 33 32 29 27 24 23 19 17 14 12 0 8 0 8 17 12 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E4;
unicode = 6116;
},
{
glyphname = uni17E5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(676,1260,o),
(658,1225,o),
(622,1202,c),
(557,1222,ls),
(512,1237,o),
(489,1264,o),
(489,1305,cs),
(489,1366,o),
(520,1397,o),
(582,1397,cs),
(645,1397,o),
(676,1366,o),
(676,1305,cs)
);
},
{
closed = 1;
nodes = (
(279,76,o),
(389,0,o),
(610,0,cs),
(1163,0,l),
(1163,151,l),
(1001,293,l),
(1001,349,l),
(1055,349,o),
(1095,363,o),
(1122,391,cs),
(1149,419,o),
(1163,461,o),
(1163,516,cs),
(1163,669,o),
(1109,745,o),
(1001,745,cs),
(892,745,o),
(838,706,o),
(838,629,cs),
(838,276,l),
(1069,93,l),
(610,93,ls),
(498,94,o),
(442,139,o),
(442,229,cs),
(442,969,l),
(636,1098,l),
(1000,977,l),
(1109,977,o),
(1163,1052,o),
(1163,1203,cs),
(1163,1396,ls),
(1163,1458,o),
(1194,1489,o),
(1256,1489,c),
(1256,1552,o),
(1225,1583,o),
(1163,1583,cs),
(1054,1583,o),
(1000,1521,o),
(1000,1396,cs),
(1001,1203,ls),
(1001,1124,o),
(993,1084,o),
(978,1084,c),
(725,1167,l),
(736,1180,o),
(744,1193,o),
(750,1206,cs),
(762,1233,o),
(768,1267,o),
(768,1306,cs),
(768,1428,o),
(706,1489,o),
(582,1489,cs),
(458,1489,o),
(396,1427,o),
(396,1303,cs),
(396,1219,o),
(439,1163,o),
(520,1135,c),
(279,974,l),
(279,229,ls)
);
},
{
closed = 1;
nodes = (
(1001,653,l),
(1024,653,o),
(1042,641,o),
(1054,618,cs),
(1065,595,o),
(1070,561,o),
(1070,516,cs),
(1070,491,o),
(1065,473,o),
(1054,461,cs),
(1042,448,o),
(1024,442,o),
(1001,442,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
54 43 8 3 8 0 42 21 2 4 11 37 36 26 3 3 5 3 76 0 8 0 11 0 8 11 128 0 11 4 0 11 4 126 0 9 0 10 7 9 10 105 0 7 0 0 8 7 0 105 0 4 12 1 2 1 4 2 105 0 1 0 5 3 1 5 105 0 3 3 6 95 0 6 6 19 6 78 11 11 67 66 63 62 61 59 56 55 49 47 40 38 35 34 30 28 25 23 11 19 11 19 25 33 13 7 24 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E5;
unicode = 6117;
},
{
glyphname = uni17E6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(442,1443,ls),
(442,1536,o),
(395,1583,o),
(302,1583,cs),
(225,1583,o),
(186,1552,o),
(186,1489,c),
(248,1489,o),
(279,1474,o),
(279,1443,cs),
(279,869,l),
(442,869,l),
(442,1038,l),
(653,1156,l),
(1001,958,l),
(1001,326,ls),
(1001,171,o),
(908,94,o),
(721,94,cs),
(535,94,o),
(442,171,o),
(442,326,cs),
(442,435,ls),
(442,518,o),
(480,559,o),
(556,559,cs),
(595,559,o),
(614,536,o),
(614,489,cs),
(614,453,o),
(641,435,o),
(696,435,cs),
(750,435,o),
(777,453,o),
(777,489,cs),
(777,598,o),
(703,652,o),
(556,652,cs),
(371,652,o),
(279,580,o),
(279,435,cs),
(279,326,ls),
(279,109,o),
(426,0,o),
(721,0,cs),
(1016,0,o),
(1163,109,o),
(1163,326,cs),
(1163,1054,l),
(721,1303,l),
(442,1148,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
37 27 26 25 1 5 5 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 6 1 6 5 1 128 0 2 3 4 3 2 114 0 7 0 6 5 7 6 105 0 1 0 3 2 1 3 105 0 4 4 0 97 0 0 0 19 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 5 6 1 6 5 1 128 0 2 3 4 3 2 4 128 0 7 0 6 5 7 6 105 0 1 0 3 2 1 3 105 0 4 4 0 97 0 0 0 19 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
33 18 21 35 34 34 35 35 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E6;
unicode = 6118;
},
{
glyphname = uni17E7;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l),
(442,349,l),
(488,349,ls)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,0,l),
(1256,0,ls),
(1411,0,o),
(1489,62,o),
(1489,186,cs),
(1489,1443,ls),
(1489,1536,o),
(1443,1583,o),
(1350,1583,cs),
(1272,1583,o),
(1233,1552,o),
(1233,1489,c),
(1295,1489,o),
(1326,1474,o),
(1326,1443,cs),
(1326,186,ls),
(1326,125,o),
(1303,94,o),
(1256,94,cs),
(1163,94,l),
(1163,1052,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
47 46 45 44 31 30 29 28 27 11 10 5 2 2 1 1 0 2 76 0 3 0 2 5 3 2 105 0 5 7 1 0 1 5 0 105 0 1 1 4 95 6 1 4 4 19 4 78 1 0 43 42 34 32 26 24 21 19 18 17 14 12 0 10 1 10 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1768;
}
);
note = uni17E7;
unicode = 6119;
},
{
glyphname = uni17E8;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(978,628,o),
(960,634,o),
(948,646,cs),
(937,658,o),
(931,675,o),
(931,698,cs),
(931,722,o),
(937,740,o),
(948,751,cs),
(960,763,o),
(978,769,o),
(1001,769,c),
(1001,628,l)
);
},
{
closed = 1;
nodes = (
(442,0,l),
(721,200,l),
(1001,0,l),
(1163,0,l),
(1163,761,ls),
(1163,828,o),
(1109,861,o),
(1001,861,cs),
(946,861,o),
(906,848,o),
(879,821,cs),
(852,794,o),
(838,753,o),
(838,698,cs),
(838,644,o),
(852,603,o),
(879,576,cs),
(906,549,o),
(946,535,o),
(1001,535,c),
(1001,114,l),
(721,313,l),
(442,114,l),
(442,1089,l),
(610,1210,l),
(652,1210,l),
(1007,1086,l),
(1111,1086,o),
(1163,1158,o),
(1163,1303,cs),
(1163,1396,ls),
(1163,1458,o),
(1194,1489,o),
(1256,1489,c),
(1256,1552,o),
(1225,1583,o),
(1163,1583,cs),
(1054,1583,o),
(1000,1521,o),
(1000,1396,cs),
(1001,1303,ls),
(1001,1230,o),
(993,1194,o),
(977,1194,c),
(665,1303,l),
(582,1303,l),
(279,1086,l),
(279,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 110 values pushed */
35 1 9 6 38 37 36 14 4 3 11 2 76 17 1 9 1 75 0 6 10 9 10 6 9 128 0 9 2 10 9 2 126 0 7 0 8 5 7 8 105 13 1 2 0 0 1 2 0 106 12 1 1 0 11 3 1 11 105 0 10 10 5 95 0 5 5 17 77 4 1 3 3 19 3 78 10 9 0 0 40 39 34 33 32 31 28 27 26 24 21 20 19 18 16 15 13 12 9 46 10 46 0 8 0 8 17 14 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E8;
unicode = 6120;
},
{
glyphname = uni17E9;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(978,326,o),
(960,332,o),
(948,344,cs),
(937,355,o),
(931,373,o),
(931,396,cs),
(931,419,o),
(937,437,o),
(948,449,cs),
(960,460,o),
(978,466,o),
(1001,466,c),
(1001,326,l)
);
},
{
closed = 1;
nodes = (
(279,145,o),
(445,0,o),
(776,0,cs),
(1034,0,o),
(1163,109,o),
(1163,326,cs),
(1163,435,ls),
(1163,518,o),
(1109,559,o),
(1001,559,cs),
(946,559,o),
(906,546,o),
(879,519,cs),
(852,492,o),
(838,451,o),
(838,396,cs),
(838,342,o),
(852,301,o),
(879,274,cs),
(906,247,o),
(946,233,o),
(1001,233,c),
(1001,140,o),
(926,94,o),
(776,94,cs),
(553,94,o),
(442,208,o),
(442,435,cs),
(442,673,o),
(572,792,o),
(832,792,cs),
(939,792,o),
(1021,777,o),
(1078,748,cs),
(1103,736,o),
(1122,730,o),
(1136,730,cs),
(1154,730,o),
(1163,740,o),
(1163,761,cs),
(1163,789,o),
(1149,810,o),
(1121,824,cs),
(1035,864,o),
(939,884,o),
(832,884,cs),
(647,884,o),
(555,945,o),
(555,1068,cs),
(555,1163,o),
(629,1210,o),
(776,1210,cs),
(926,1210,o),
(1001,1150,o),
(1001,1031,cs),
(1001,995,o),
(1028,977,o),
(1082,977,cs),
(1136,977,o),
(1163,995,o),
(1163,1031,cs),
(1163,1396,ls),
(1163,1521,o),
(1117,1583,o),
(1024,1583,cs),
(962,1583,o),
(931,1552,o),
(931,1489,c),
(977,1489,o),
(1000,1458,o),
(1000,1396,cs),
(1001,1242,l),
(935,1283,o),
(860,1303,o),
(776,1303,cs),
(520,1303,o),
(392,1225,o),
(392,1068,cs),
(392,946,o),
(446,872,o),
(555,845,c),
(463,804,o),
(394,749,o),
(348,680,cs),
(302,611,o),
(279,530,o),
(279,435,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 114 values pushed */
24 1 7 3 18 1 10 8 2 76 0 6 7 8 7 6 8 128 0 9 10 13 10 9 13 128 0 5 0 4 3 5 4 105 0 8 0 10 9 8 10 105 0 13 0 0 1 13 0 105 14 1 1 0 12 11 1 12 105 0 7 7 3 97 0 3 3 17 77 0 11 11 2 97 0 2 2 19 2 78 0 0 67 65 59 58 57 55 53 51 49 47 43 41 39 37 35 33 30 28 27 26 23 21 13 11 0 8 0 8 17 15 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17E9;
unicode = 6121;
},
{
glyphname = zero;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(872,-21,o),
(1048,183,o),
(1048,555,cs),
(1048,900,ls),
(1048,1271,o),
(870,1477,o),
(583,1477,cs),
(298,1477,o),
(121,1271,o),
(121,900,cs),
(121,555,ls),
(121,184,o),
(300,-21,o),
(585,-21,cs)
);
},
{
closed = 1;
nodes = (
(318,942,ls),
(318,1194,o),
(411,1322,o),
(583,1322,cs),
(758,1322,o),
(851,1194,o),
(851,942,cs),
(851,515,ls),
(851,262,o),
(760,133,o),
(585,133,cs),
(413,133,o),
(318,263,o),
(318,515,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 1 97 0 1 1 37 77 5 1 2 2 0 97 4 1 0 0 38 0 78 15 14 1 0 22 20 14 27 15 27 8 6 0 13 1 13 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1168;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,154,l),
(121,126,l),
(121,0,l),
(767,0,l),
(767,126,l),
(543,154,l),
(543,1456,l),
(117,1364,l),
(117,1241,l),
(346,1245,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
8 7 4 3 4 0 1 1 76 2 1 2 1 74 2 1 1 0 1 133 0 0 0 32 0 78 0 0 0 9 0 9 21 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 844;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(340,154,l),
(338,159,l),
(721,576,ls),
(834,699,o),
(917,808,o),
(959,913,cs),
(980,966,o),
(990,1019,o),
(990,1072,cs),
(990,1229,o),
(915,1355,o),
(783,1425,cs),
(716,1460,o),
(637,1477,o),
(545,1477,cs),
(349,1477,o),
(204,1394,o),
(129,1260,cs),
(92,1193,o),
(74,1117,o),
(76,1033,c),
(78,1027,l),
(267,1027,l),
(267,1215,o),
(367,1322,o),
(538,1322,cs),
(702,1322,o),
(793,1209,o),
(793,1064,cs),
(793,985,o),
(771,918,o),
(707,828,cs),
(675,783,o),
(631,728,o),
(574,665,cs),
(97,135,l),
(97,0,l),
(1040,0,l),
(1040,321,l),
(873,321,l),
(857,154,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
4 1 1 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 2 0 2 3 0 128 0 0 5 5 0 112 0 2 2 4 97 0 4 4 37 77 0 5 5 1 96 0 1 1 32 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 0 2 3 0 128 0 0 5 2 0 5 126 0 2 2 4 97 0 4 4 37 77 0 5 5 1 96 0 1 1 32 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 36 18 40 17 16 6 8 28 
CALL[ ]	/* CallFunction */";
};
width = 1131;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(710,-21,o),
(855,50,o),
(935,178,cs),
(974,241,o),
(994,317,o),
(994,406,cs),
(994,558,o),
(929,690,o),
(754,747,c),
(899,810,o),
(972,943,o),
(972,1063,cs),
(972,1328,o),
(799,1477,o),
(530,1477,cs),
(351,1477,o),
(212,1401,o),
(138,1281,cs),
(101,1221,o),
(83,1154,o),
(85,1081,c),
(87,1075,l),
(276,1075,l),
(276,1226,o),
(375,1322,o),
(530,1322,cs),
(691,1322,o),
(775,1234,o),
(775,1067,cs),
(775,963,o),
(746,888,o),
(675,849,cs),
(640,829,o),
(593,819,o),
(535,819,cs),
(363,819,l),
(363,665,l),
(535,665,ls),
(716,665,o),
(797,582,o),
(797,402,cs),
(797,225,o),
(697,133,o),
(530,133,cs),
(366,133,o),
(266,230,o),
(266,384,c),
(78,384,l),
(75,378,l),
(71,214,o),
(154,92,o),
(293,28,cs),
(362,-5,o),
(441,-21,o),
(530,-21,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
42 1 3 4 1 76 0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 4 0 3 1 4 3 103 0 5 5 7 97 0 7 7 37 77 0 2 2 0 97 8 1 0 0 38 0 78 1 0 37 35 31 30 27 25 20 18 17 15 11 9 6 4 0 48 1 48 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1106;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(913,1456,l),
(705,1456,l),
(63,447,l),
(63,336,l),
(717,336,l),
(717,154,l),
(554,126,l),
(554,0,l),
(1076,0,l),
(1076,126,l),
(913,154,l),
(913,336,l),
(1114,336,l),
(1114,490,l),
(913,490,l)
);
},
{
closed = 1;
nodes = (
(691,1124,l),
(711,1177,l),
(717,1175,l),
(717,490,l),
(273,490,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
18 1 4 3 11 1 0 4 8 7 4 3 4 1 0 3 76 5 6 2 4 2 1 0 1 4 0 104 0 3 3 31 77 0 1 1 32 1 78 0 0 17 16 0 14 0 14 18 19 19 17 7 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1187;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(816,-21,o),
(982,163,o),
(982,464,cs),
(982,664,o),
(910,815,o),
(781,895,cs),
(716,934,o),
(639,954,o),
(550,953,cs),
(456,951,o),
(378,918,o),
(318,872,c),
(365,1281,l),
(800,1281,l),
(819,1168,l),
(967,1168,l),
(967,1456,l),
(198,1456,l),
(114,657,l),
(278,640,l),
(310,736,o),
(368,782,o),
(523,782,cs),
(687,782,o),
(785,650,o),
(785,462,cs),
(785,258,o),
(689,133,o),
(522,133,cs),
(378,133,o),
(277,226,o),
(277,383,c),
(99,383,l),
(97,377,l),
(91,127,o),
(250,-21,o),
(522,-21,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
26 1 3 7 19 18 2 1 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 6 7 6 5 114 0 1 3 2 3 1 2 128 0 7 0 3 1 7 3 105 0 6 6 4 95 0 4 4 31 77 0 2 2 0 97 8 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 6 7 6 5 7 128 0 1 3 2 3 1 2 128 0 7 0 3 1 7 3 105 0 6 6 4 95 0 4 4 31 77 0 2 2 0 97 8 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 31 29 25 24 23 22 21 20 16 14 10 8 6 4 0 37 1 37 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1081;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(797,-21,o),
(936,71,o),
(1011,224,cs),
(1048,301,o),
(1067,389,o),
(1067,490,cs),
(1067,674,o),
(994,824,o),
(866,906,cs),
(802,947,o),
(727,967,o),
(640,967,cs),
(515,967,o),
(403,923,o),
(328,854,c),
(324,858,l),
(332,1169,o),
(460,1322,o),
(664,1322,cs),
(760,1322,o),
(832,1301,o),
(895,1270,c),
(933,1417,l),
(869,1452,o),
(763,1477,o),
(664,1477,cs),
(452,1477,o),
(283,1368,o),
(191,1158,cs),
(144,1053,o),
(121,923,o),
(121,769,cs),
(121,573,ls),
(121,321,o),
(212,141,o),
(361,49,cs),
(435,2,o),
(519,-21,o),
(614,-21,cs)
);
},
{
closed = 1;
nodes = (
(317,671,l),
(367,760,o),
(461,820,o),
(597,820,cs),
(768,820,o),
(870,682,o),
(870,490,cs),
(870,355,o),
(828,243,o),
(752,180,cs),
(714,149,o),
(668,133,o),
(614,133,cs),
(443,133,o),
(317,283,o),
(317,554,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
12 1 2 1 13 1 3 2 19 1 5 3 42 1 4 5 4 76 0 3 0 5 4 3 5 105 0 2 2 1 97 0 1 1 37 77 7 1 4 4 0 97 6 1 0 0 38 0 78 32 31 1 0 39 37 31 45 32 45 24 22 17 15 10 8 0 30 1 30 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1144;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(598,388,o),
(634,571,o),
(704,745,cs),
(774,919,o),
(884,1092,o),
(1060,1301,c),
(1060,1456,l),
(76,1456,l),
(76,1134,l),
(244,1134,l),
(259,1301,l),
(867,1301,l),
(680,1072,o),
(548,842,o),
(464,582,cs),
(422,452,o),
(392,310,o),
(373,157,cs),
(357,0,l),
(554,0,l),
(570,157,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
13 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 1 0 1 2 114 0 1 1 3 95 0 3 3 31 77 0 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 1 0 1 2 0 128 0 1 1 3 95 0 3 3 31 77 0 0 0 32 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
17 17 21 17 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1128;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(856,-21,o),
(1039,130,o),
(1039,394,cs),
(1039,558,o),
(930,690,o),
(762,749,c),
(907,805,o),
(999,924,o),
(999,1076,cs),
(999,1247,o),
(921,1367,o),
(790,1430,cs),
(725,1461,o),
(649,1477,o),
(564,1477,cs),
(392,1477,o),
(259,1413,o),
(187,1294,cs),
(151,1234,o),
(133,1161,o),
(133,1076,cs),
(133,924,o),
(221,805,o),
(366,749,c),
(198,690,o),
(92,558,o),
(92,394,cs),
(92,129,o),
(272,-21,o),
(566,-21,cs)
);
},
{
closed = 1;
nodes = (
(289,561,o),
(401,672,o),
(564,672,cs),
(728,672,o),
(843,559,o),
(843,398,cs),
(843,237,o),
(736,133,o),
(566,133,cs),
(398,133,o),
(289,233,o),
(289,398,cs)
);
},
{
closed = 1;
nodes = (
(330,1223,o),
(424,1322,o),
(564,1322,cs),
(703,1322,o),
(802,1217,o),
(802,1072,cs),
(802,924,o),
(706,827,o),
(566,827,cs),
(425,827,o),
(330,924,o),
(330,1072,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
21 7 2 3 4 1 76 8 1 4 0 3 2 4 3 105 0 5 5 1 97 0 1 1 37 77 7 1 2 2 0 97 6 1 0 0 38 0 78 44 43 29 28 1 0 52 50 43 56 44 56 37 35 28 42 29 42 15 13 0 27 1 27 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1131;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(719,-21,o),
(877,75,o),
(962,274,cs),
(1005,373,o),
(1026,499,o),
(1026,650,cs),
(1026,913,ls),
(1026,1161,o),
(944,1329,o),
(797,1414,cs),
(724,1456,o),
(636,1477,o),
(535,1477,cs),
(368,1477,o),
(225,1383,o),
(145,1227,cs),
(104,1149,o),
(84,1059,o),
(84,958,cs),
(84,746,o),
(161,595,o),
(298,516,cs),
(367,477,o),
(448,457,o),
(543,457,cs),
(663,457,o),
(764,507,o),
(817,596,c),
(821,591,l),
(817,270,o),
(700,133,o),
(511,133,cs),
(404,133,o),
(324,148,o),
(243,187,c),
(213,38,l),
(297,-2,o),
(410,-21,o),
(511,-21,cs)
);
},
{
closed = 1;
nodes = (
(281,1169,o),
(392,1322,o),
(541,1322,cs),
(729,1322,o),
(829,1190,o),
(829,933,cs),
(829,779,l),
(786,682,o),
(688,612,o),
(543,612,cs),
(384,612,o),
(281,744,o),
(281,958,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
34 1 4 5 10 1 2 4 4 1 1 2 3 1 0 1 4 76 7 1 4 0 2 1 4 2 105 0 5 5 3 97 0 3 3 37 77 0 1 1 0 97 6 1 0 0 38 0 78 32 31 1 0 39 37 31 45 32 45 23 21 15 13 8 6 0 30 1 30 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1154;
}
);
note = nine;
unicode = 57;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 700;
}
);
note = space;
unicode = 32;
},
{
glyphname = CR;
layers = (
{
layerId = m01;
width = 1044;
}
);
note = CR;
},
{
glyphname = uni0000;
layers = (
{
layerId = m01;
width = 0;
}
);
note = uni0000;
},
{
glyphname = .notdef;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,0,l),
(922,0,l),
(922,1462,l),
(102,1462,l)
);
},
{
closed = 1;
nodes = (
(201,1364,l),
(823,1364,l),
(823,98,l),
(201,98,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
4 1 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79 0 0 7 6 5 4 0 3 0 3 17 5 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = ".notdef";
},
{
glyphname = uni17D4;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,1086,o),
(299,1045,o),
(338,1018,cs),
(376,991,o),
(434,977,o),
(512,977,cs),
(550,977,o),
(594,986,o),
(644,1004,cs),
(693,1022,o),
(748,1049,o),
(809,1084,cs),
(1000,1197,l),
(1000,163,ls),
(1000,140,o),
(991,122,o),
(972,111,cs),
(953,100,o),
(923,94,o),
(884,94,c),
(884,63,o),
(893,39,o),
(910,23,cs),
(927,8,o),
(952,0,o),
(986,0,cs),
(1045,0,o),
(1090,14,o),
(1119,41,cs),
(1148,68,o),
(1163,109,o),
(1163,163,cs),
(1163,1303,l),
(1001,1303,l),
(757,1162,ls),
(705,1131,o),
(659,1109,o),
(619,1094,cs),
(578,1079,o),
(542,1071,o),
(512,1071,cs),
(489,1071,o),
(471,1077,o),
(460,1088,cs),
(448,1100,o),
(442,1118,o),
(442,1141,cs),
(442,1164,o),
(454,1182,o),
(477,1193,cs),
(500,1204,o),
(535,1210,o),
(582,1210,c),
(582,1241,o),
(572,1265,o),
(551,1280,cs),
(530,1295,o),
(498,1303,o),
(456,1303,cs),
(397,1303,o),
(353,1289,o),
(324,1262,cs),
(294,1235,o),
(279,1194,o),
(279,1140,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
36 1 2 1 1 76 0 1 0 2 0 1 2 128 0 2 0 6 5 2 6 106 3 1 0 0 17 77 0 5 5 4 97 0 4 4 19 4 78 40 19 36 20 38 19 35 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D4;
unicode = 6100;
},
{
glyphname = uni17D5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1303,109,o),
(1295,81,o),
(1280,58,cs),
(1264,35,o),
(1241,15,o),
(1210,0,c),
(1287,0,o),
(1346,12,o),
(1385,35,cs),
(1424,58,o),
(1443,93,o),
(1443,140,cs),
(1443,1303,l),
(1303,1303,l),
(1303,140,ls)
);
},
{
closed = 1;
nodes = (
(279,1086,o),
(299,1045,o),
(338,1018,cs),
(376,991,o),
(434,977,o),
(512,977,cs),
(550,977,o),
(594,986,o),
(644,1004,cs),
(693,1022,o),
(748,1049,o),
(809,1084,cs),
(1000,1197,l),
(1000,163,ls),
(1000,140,o),
(991,122,o),
(972,111,cs),
(953,100,o),
(923,94,o),
(884,94,c),
(884,63,o),
(893,39,o),
(910,23,cs),
(927,8,o),
(952,0,o),
(986,0,cs),
(1045,0,o),
(1090,14,o),
(1119,41,cs),
(1148,68,o),
(1163,109,o),
(1163,163,cs),
(1163,1303,l),
(1001,1303,l),
(757,1162,ls),
(705,1131,o),
(659,1109,o),
(619,1094,cs),
(578,1079,o),
(542,1071,o),
(512,1071,cs),
(489,1071,o),
(471,1077,o),
(460,1088,cs),
(448,1100,o),
(442,1118,o),
(442,1141,cs),
(442,1164,o),
(454,1182,o),
(477,1193,cs),
(500,1204,o),
(535,1210,o),
(582,1210,c),
(582,1241,o),
(572,1265,o),
(551,1280,cs),
(530,1295,o),
(498,1303,o),
(456,1303,cs),
(397,1303,o),
(353,1289,o),
(324,1262,cs),
(294,1235,o),
(279,1194,o),
(279,1140,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
47 1 4 3 1 76 0 3 0 4 0 3 4 128 0 4 0 8 7 4 8 106 5 2 2 0 0 17 77 0 7 7 1 97 6 1 1 1 19 1 78 40 19 36 20 38 19 39 20 17 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1722;
}
);
note = uni17D5;
unicode = 6101;
},
{
glyphname = uni17D6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(395,1125,o),
(403,1148,o),
(419,1164,cs),
(434,1179,o),
(458,1187,o),
(489,1187,cs),
(520,1187,o),
(543,1179,o),
(558,1164,cs),
(574,1148,o),
(582,1125,o),
(582,1094,cs),
(582,1063,o),
(574,1039,o),
(558,1024,cs),
(543,1009,o),
(520,1001,o),
(489,1001,cs),
(458,1001,o),
(434,1009,o),
(419,1024,cs),
(403,1039,o),
(395,1063,o),
(395,1094,cs)
);
},
{
closed = 1;
nodes = (
(791,581,l),
(791,721,l),
(186,721,l),
(186,581,l)
);
},
{
closed = 1;
nodes = (
(279,139,o),
(296,87,o),
(331,52,cs),
(366,17,o),
(418,0,o),
(489,0,cs),
(559,0,o),
(611,17,o),
(646,52,cs),
(681,87,o),
(698,139,o),
(698,209,cs),
(698,280,o),
(681,332,o),
(646,367,cs),
(611,402,o),
(559,419,o),
(489,419,cs),
(418,419,o),
(366,402,o),
(331,367,cs),
(296,332,o),
(279,280,o),
(279,209,cs)
);
},
{
closed = 1;
nodes = (
(279,1024,o),
(296,971,o),
(331,936,cs),
(366,901,o),
(418,884,o),
(489,884,cs),
(559,884,o),
(611,901,o),
(646,936,cs),
(681,971,o),
(698,1024,o),
(698,1094,cs),
(698,1164,o),
(681,1216,o),
(646,1251,cs),
(611,1286,o),
(559,1303,o),
(489,1303,cs),
(418,1303,o),
(366,1286,o),
(331,1251,cs),
(296,1216,o),
(279,1164,o),
(279,1094,cs)
);
},
{
closed = 1;
nodes = (
(395,240,o),
(403,264,o),
(419,279,cs),
(434,295,o),
(458,303,o),
(489,303,cs),
(520,303,o),
(543,295,o),
(558,279,cs),
(574,264,o),
(582,240,o),
(582,209,cs),
(582,178,o),
(574,155,o),
(558,140,cs),
(543,124,o),
(520,116,o),
(489,116,cs),
(458,116,o),
(434,124,o),
(419,140,cs),
(403,155,o),
(395,178,o),
(395,209,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
0 0 0 2 9 0 2 105 10 1 9 0 8 7 9 8 103 0 7 0 5 4 7 5 105 0 1 1 3 97 0 3 3 17 77 0 4 4 6 97 0 6 6 19 6 78 64 64 64 67 64 67 20 38 38 38 38 38 38 38 35 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 977;
}
);
note = uni17D6;
unicode = 6102;
},
{
glyphname = uni17D7;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(537,862,o),
(564,869,o),
(583,882,cs),
(601,895,o),
(610,916,o),
(610,943,cs),
(610,970,o),
(605,991,o),
(596,1004,cs),
(587,1017,o),
(574,1024,o),
(555,1024,c),
(555,1009,o),
(551,997,o),
(542,990,cs),
(533,981,o),
(519,977,o),
(501,977,cs),
(481,977,o),
(466,982,o),
(457,991,cs),
(447,1000,o),
(442,1013,o),
(442,1032,c),
(569,1153,l),
(778,991,l),
(1001,1153,l),
(1001,326,ls),
(1001,248,o),
(983,190,o),
(946,152,cs),
(908,113,o),
(851,94,o),
(776,94,cs),
(684,94,o),
(615,109,o),
(569,138,cs),
(524,167,o),
(501,212,o),
(501,271,c),
(426,271,o),
(390,235,o),
(390,163,cs),
(390,108,o),
(422,68,o),
(487,41,cs),
(551,14,o),
(647,0,o),
(776,0,cs),
(905,0,o),
(1002,27,o),
(1067,81,cs),
(1131,136,o),
(1163,217,o),
(1163,326,cs),
(1163,1302,l),
(1045,1302,l),
(776,1108,l),
(532,1303,l),
(467,1258,o),
(413,1212,o),
(371,1167,cs),
(329,1122,o),
(298,1077,o),
(279,1032,c),
(279,978,o),
(296,936,o),
(329,907,cs),
(363,877,o),
(420,862,o),
(501,862,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
35 34 32 9 4 5 6 1 33 1 5 6 2 76 8 1 1 74 0 6 1 5 1 6 5 128 0 3 0 4 0 3 4 128 0 5 7 1 0 3 5 0 105 0 1 1 17 77 0 4 4 2 97 0 2 2 19 2 78 1 0 44 43 40 38 28 26 23 22 17 15 11 10 0 50 1 50 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D7;
unicode = 6103;
},
{
glyphname = uni17D8;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,1086,o),
(299,1045,o),
(338,1018,cs),
(376,991,o),
(434,977,o),
(512,977,cs),
(550,977,o),
(594,986,o),
(644,1004,cs),
(693,1022,o),
(748,1049,o),
(809,1084,cs),
(1000,1197,l),
(1000,163,ls),
(1000,140,o),
(991,122,o),
(972,111,cs),
(953,100,o),
(923,94,o),
(884,94,c),
(884,63,o),
(893,39,o),
(910,23,cs),
(927,8,o),
(952,0,o),
(986,0,cs),
(1045,0,o),
(1090,14,o),
(1119,41,cs),
(1148,68,o),
(1163,109,o),
(1163,163,cs),
(1163,1303,l),
(1001,1303,l),
(757,1162,ls),
(705,1131,o),
(659,1109,o),
(619,1094,cs),
(578,1079,o),
(542,1071,o),
(512,1071,cs),
(489,1071,o),
(471,1077,o),
(460,1088,cs),
(448,1100,o),
(442,1118,o),
(442,1141,cs),
(442,1164,o),
(454,1182,o),
(477,1193,cs),
(500,1204,o),
(535,1210,o),
(582,1210,c),
(582,1241,o),
(572,1265,o),
(551,1280,cs),
(530,1295,o),
(498,1303,o),
(456,1303,cs),
(397,1303,o),
(353,1289,o),
(324,1262,cs),
(294,1235,o),
(279,1194,o),
(279,1140,cs)
);
},
{
closed = 1;
nodes = (
(1885,0,l),
(2020,133,ls),
(2045,157,o),
(2063,183,o),
(2076,212,cs),
(2088,241,o),
(2094,271,o),
(2094,303,cs),
(2094,349,o),
(2080,384,o),
(2053,408,cs),
(2026,431,o),
(1985,442,o),
(1931,442,cs),
(1885,442,l),
(1885,1075,l),
(2080,1163,l),
(2443,998,l),
(2443,233,ls),
(2443,155,o),
(2476,97,o),
(2542,58,cs),
(2608,19,o),
(2707,0,o),
(2839,0,cs),
(2932,0,ls),
(3063,0,o),
(3162,19,o),
(3229,58,cs),
(3295,97,o),
(3328,155,o),
(3328,233,cs),
(3328,869,l),
(3107,1009,l),
(3197,1125,l),
(3271,1079,ls),
(3304,1058,o),
(3336,1047,o),
(3367,1047,cs),
(3398,1047,o),
(3439,1094,o),
(3491,1187,c),
(3444,1187,ls),
(3418,1187,o),
(3386,1199,o),
(3348,1223,cs),
(3219,1303,l),
(3002,1025,l),
(3002,965,l),
(3165,862,l),
(3165,233,ls),
(3165,186,o),
(3145,151,o),
(3106,128,cs),
(3067,105,o),
(3009,93,o),
(2932,93,cs),
(2839,93,ls),
(2762,93,o),
(2704,105,o),
(2665,128,cs),
(2626,151,o),
(2606,186,o),
(2606,233,cs),
(2606,1103,l),
(2164,1303,l),
(1722,1104,l),
(1722,0,l)
);
},
{
closed = 1;
nodes = (
(1885,349,l),
(1931,349,ls),
(1954,349,o),
(1972,345,o),
(1983,337,cs),
(1995,330,o),
(2001,318,o),
(2001,303,cs),
(2001,284,o),
(1996,266,o),
(1987,247,cs),
(1978,229,o),
(1964,211,o),
(1946,192,cs),
(1885,131,l)
);
},
{
closed = 1;
nodes = (
(3886,1086,o),
(3906,1045,o),
(3945,1018,cs),
(3984,991,o),
(4042,977,o),
(4119,977,cs),
(4158,977,o),
(4202,986,o),
(4251,1004,cs),
(4300,1022,o),
(4355,1049,o),
(4416,1084,cs),
(4608,1197,l),
(4608,163,ls),
(4608,140,o),
(4598,122,o),
(4579,111,cs),
(4560,100,o),
(4530,94,o),
(4491,94,c),
(4491,63,o),
(4500,39,o),
(4517,23,cs),
(4534,8,o),
(4560,0,o),
(4594,0,cs),
(4653,0,o),
(4697,14,o),
(4726,41,cs),
(4756,68,o),
(4771,109,o),
(4771,163,cs),
(4771,1303,l),
(4609,1303,l),
(4364,1162,ls),
(4313,1131,o),
(4267,1109,o),
(4226,1094,cs),
(4185,1079,o),
(4150,1071,o),
(4119,1071,cs),
(4096,1071,o),
(4079,1077,o),
(4067,1088,cs),
(4055,1100,o),
(4049,1118,o),
(4049,1141,cs),
(4049,1164,o),
(4061,1182,o),
(4085,1193,cs),
(4108,1204,o),
(4143,1210,o),
(4190,1210,c),
(4190,1241,o),
(4179,1265,o),
(4158,1280,cs),
(4137,1295,o),
(4105,1303,o),
(4063,1303,cs),
(4004,1303,o),
(3960,1289,o),
(3931,1262,cs),
(3901,1235,o),
(3886,1194,o),
(3886,1140,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 143 values pushed */
145 36 2 12 1 102 79 77 64 63 5 2 12 103 92 62 3 6 13 104 91 90 3 9 6 47 1 5 7 5 76 93 78 2 0 74 15 1 1 0 12 0 1 12 128 0 12 0 13 6 12 13 105 16 1 2 20 1 6 9 2 6 106 0 9 21 1 7 5 9 7 105 17 14 3 3 0 0 17 77 19 11 2 5 5 4 97 18 10 22 8 4 4 4 19 4 78 58 56 46 45 151 149 141 140 137 135 131 130 126 124 118 117 114 112 100 98 97 95 86 83 76 75 67 65 56 108 58 108 45 55 46 55 40 19 36 20 38 19 35 23 7 29 
CALL[ ]	/* CallFunction */";
};
width = 5050;
}
);
note = uni17D8;
unicode = 6104;
},
{
glyphname = uni17D9;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(868,0,o),
(979,54,o),
(1053,163,cs),
(1126,272,o),
(1163,435,o),
(1163,652,cs),
(1163,869,o),
(1126,1031,o),
(1053,1140,cs),
(979,1249,o),
(868,1303,o),
(721,1303,cs),
(574,1303,o),
(464,1249,o),
(390,1140,cs),
(316,1031,o),
(279,869,o),
(279,652,cs),
(279,435,o),
(316,272,o),
(390,163,cs),
(464,54,o),
(574,0,o),
(721,0,cs)
);
},
{
closed = 1;
nodes = (
(390,833,o),
(418,968,o),
(473,1059,cs),
(528,1149,o),
(610,1194,o),
(721,1194,cs),
(832,1194,o),
(915,1149,o),
(970,1059,cs),
(1025,968,o),
(1053,833,o),
(1053,652,cs),
(1053,471,o),
(1025,335,o),
(970,244,cs),
(915,154,o),
(832,109,o),
(721,109,cs),
(610,109,o),
(528,154,o),
(473,244,cs),
(418,335,o),
(390,471,o),
(390,652,cs)
);
},
{
closed = 1;
nodes = (
(501,507,o),
(519,399,o),
(555,326,cs),
(592,253,o),
(647,217,o),
(721,217,cs),
(795,217,o),
(850,253,o),
(887,326,cs),
(924,399,o),
(942,507,o),
(942,652,cs),
(942,797,o),
(924,905,o),
(887,977,cs),
(850,1050,o),
(795,1086,o),
(721,1086,cs),
(647,1086,o),
(592,1050,o),
(555,977,cs),
(519,905,o),
(501,797,o),
(501,652,cs)
);
},
{
closed = 1;
nodes = (
(610,761,o),
(619,842,o),
(638,896,cs),
(657,950,o),
(684,977,o),
(721,977,cs),
(758,977,o),
(785,950,o),
(804,896,cs),
(823,842,o),
(832,761,o),
(832,652,cs),
(832,543,o),
(823,462,o),
(804,408,cs),
(785,353,o),
(758,326,o),
(721,326,cs),
(684,326,o),
(657,353,o),
(638,408,cs),
(619,462,o),
(610,543,o),
(610,652,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
0 5 11 1 6 7 5 6 105 0 7 10 1 4 3 7 4 105 9 1 2 2 1 97 0 1 1 17 77 0 3 3 0 97 8 1 0 0 19 0 78 49 48 33 32 17 16 1 0 57 55 48 63 49 63 41 39 32 47 33 47 25 23 16 31 17 31 9 7 0 15 1 15 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D9;
unicode = 6105;
},
{
glyphname = uni17DA;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,1303,o),
(279,1185,o),
(279,949,cs),
(279,355,ls),
(279,118,o),
(372,0,o),
(558,0,cs),
(721,0,o),
(871,196,o),
(1008,589,cs),
(1163,1035,l),
(1397,118,l),
(1490,118,l),
(1629,829,l),
(1768,237,l),
(1862,237,l),
(1956,589,l),
(2095,589,ls),
(2126,589,o),
(2141,609,o),
(2141,649,cs),
(2141,688,o),
(2126,708,o),
(2095,708,cs),
(1909,708,l),
(1815,443,l),
(1675,1061,l),
(1582,1061,l),
(1444,317,l),
(1211,1180,l),
(1117,1180,l),
(933,649,ls),
(871,468,o),
(809,333,o),
(747,246,cs),
(684,159,o),
(622,115,o),
(560,115,cs),
(435,115,o),
(372,195,o),
(372,355,cs),
(372,949,ls),
(372,1106,o),
(435,1185,o),
(560,1185,cs),
(683,1185,o),
(745,1106,o),
(745,949,cs),
(745,869,o),
(699,829,o),
(608,829,cs),
(576,829,o),
(560,809,o),
(560,770,cs),
(560,731,o),
(576,711,o),
(608,711,cs),
(763,711,o),
(840,789,o),
(840,946,cs),
(840,1184,o),
(746,1303,o),
(558,1303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 115 values pushed */
39 1 2 6 26 23 2 9 8 2 76 36 1 2 1 75 0 5 3 6 3 5 6 128 0 6 2 3 6 2 126 0 9 8 10 8 9 10 128 0 10 4 8 10 4 126 0 2 0 1 7 2 1 105 0 7 0 8 9 7 8 105 0 3 3 0 97 12 1 0 0 17 77 0 4 4 11 97 0 11 11 19 11 78 1 0 43 41 38 37 35 34 33 31 29 27 25 24 22 21 18 16 13 11 9 7 5 3 0 46 1 46 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 2420;
}
);
note = uni17DA;
unicode = 6106;
},
{
glyphname = hyphen;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,538,l),
(643,538,l),
(643,692,l),
(154,692,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 3 0 3 17 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 797;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = underscore;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,-154,l),
(1041,-154,l),
(1041,0,l),
(119,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 3 0 3 17 3 8 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1168;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = parenleft;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(558,-278,o),
(474,-160,o),
(412,-3,cs),
(350,153,o),
(311,348,o),
(311,580,cs),
(311,593,ls),
(311,825,o),
(349,1020,o),
(412,1176,cs),
(475,1332,o),
(558,1447,o),
(650,1519,c),
(613,1635,l),
(607,1636,l),
(491,1575,o),
(369,1445,o),
(273,1264,cs),
(177,1083,o),
(114,854,o),
(114,591,cs),
(114,582,ls),
(114,318,o),
(177,89,o),
(273,-91,cs),
(369,-272,o),
(491,-400,o),
(607,-463,c),
(613,-463,l),
(650,-355,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
13 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 662;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,-400,o),
(291,-272,o),
(388,-91,cs),
(484,89,o),
(547,318,o),
(547,582,cs),
(547,591,ls),
(547,854,o),
(484,1083,o),
(388,1264,cs),
(291,1445,o),
(170,1575,o),
(54,1636,c),
(48,1636,l),
(11,1528,l),
(98,1455,o),
(181,1336,o),
(245,1177,cs),
(309,1018,o),
(350,821,o),
(350,593,cs),
(350,580,ls),
(350,348,o),
(311,149,o),
(248,-9,cs),
(185,-167,o),
(102,-284,o),
(11,-355,c),
(48,-463,l),
(54,-463,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 0 1 50 
CALL[ ]	/* CallFunction */";
};
width = 654;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = braceleft;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(524,-198,o),
(468,-75,o),
(468,101,cs),
(468,306,ls),
(468,443,o),
(412,555,o),
(299,616,c),
(412,676,o),
(468,786,o),
(468,926,cs),
(468,1132,ls),
(468,1308,o),
(524,1433,o),
(671,1480,c),
(631,1597,l),
(371,1524,o),
(271,1360,o),
(271,1132,cs),
(271,926,ls),
(271,775,o),
(204,690,o),
(63,690,c),
(63,543,l),
(204,543,o),
(271,455,o),
(271,306,cs),
(271,101,ls),
(271,-126,o),
(371,-291,o),
(631,-364,c),
(671,-246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
24 1 0 1 1 76 17 16 2 1 74 1 1 0 73 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 17 23 2 8 24 
CALL[ ]	/* CallFunction */";
};
width = 701;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = braceright;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,-291,o),
(426,-126,o),
(426,101,cs),
(426,306,ls),
(426,455,o),
(492,543,o),
(635,543,c),
(635,690,l),
(492,690,o),
(426,775,o),
(426,926,cs),
(426,1132,ls),
(426,1360,o),
(326,1524,o),
(67,1597,c),
(27,1480,l),
(171,1433,o),
(229,1308,o),
(229,1132,cs),
(229,926,ls),
(229,781,o),
(288,671,o),
(413,616,c),
(288,559,o),
(229,449,o),
(229,306,cs),
(229,101,ls),
(229,-75,o),
(171,-198,o),
(27,-246,c),
(67,-364,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
8 1 1 0 1 76 16 15 2 0 74 1 1 1 73 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 25 24 23 22 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 701;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = bracketleft;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,-312,l),
(541,-312,l),
(541,-157,l),
(354,-157,l),
(354,1509,l),
(541,1509,l),
(541,1664,l),
(157,1664,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
4 1 3 0 0 1 3 0 103 0 1 2 2 1 87 0 1 1 2 95 0 2 1 2 79 0 0 0 7 0 7 17 17 17 5 8 25 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = bracketright;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,-312,l),
(408,-312,l),
(408,1664,l),
(23,1664,l),
(23,1509,l),
(211,1509,l),
(211,-157,l),
(23,-157,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 1 0 0 3 1 0 103 4 1 3 2 2 3 87 4 1 3 3 2 95 0 2 3 2 79 0 0 0 7 0 7 17 17 17 5 8 25 
CALL[ ]	/* CallFunction */";
};
width = 552;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = guillemotleft;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(501,117,l),
(246,515,l),
(501,914,l),
(353,914,l),
(58,525,l),
(58,506,l),
(353,117,l)
);
},
{
closed = 1;
nodes = (
(687,117,l),
(835,117,l),
(580,515,l),
(835,914,l),
(687,914,l),
(392,525,l),
(392,506,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
11 4 2 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 19 18 18 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 935;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = guillemotright;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,152,l),
(548,541,l),
(548,560,l),
(253,949,l),
(105,949,l),
(359,550,l),
(105,152,l)
);
},
{
closed = 1;
nodes = (
(598,152,l),
(893,541,l),
(893,560,l),
(598,949,l),
(450,949,l),
(704,550,l),
(450,152,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
10 3 2 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 19 18 19 17 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 938;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = quotedbl;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(324,1560,l),
(166,1560,l),
(166,1055,l),
(263,1055,l),
(324,1337,l)
);
},
{
closed = 1;
nodes = (
(573,1055,l),
(634,1337,l),
(634,1560,l),
(476,1560,l),
(476,1055,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
9 4 2 0 1 1 76 2 1 0 0 1 95 3 1 1 1 33 0 78 17 18 17 16 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 770;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = quotesingle;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(324,1560,l),
(166,1560,l),
(166,1055,l),
(263,1055,l),
(324,1337,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 33 0 78 17 16 2 8 24 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = period;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,0,l),
(342,0,l),
(342,202,l),
(145,202,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 32 0 78 0 0 0 3 0 3 17 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = period;
unicode = 46;
},
{
glyphname = comma;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,-216,o),
(315,-59,o),
(315,72,cs),
(315,221,l),
(118,221,l),
(118,69,ls),
(118,-43,o),
(86,-141,o),
(23,-237,c),
(134,-311,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
1 1 0 73 0 0 0 118 21 1 8 23 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = comma;
unicode = 44;
},
{
glyphname = colon;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,880,l),
(342,880,l),
(342,1082,l),
(145,1082,l)
);
},
{
closed = 1;
nodes = (
(342,0,l),
(342,202,l),
(145,202,l),
(145,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 0 1 95 4 1 1 1 34 77 5 1 3 3 2 95 0 2 2 32 2 78 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23 
CALL[ ]	/* CallFunction */";
};
width = 419;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,-216,o),
(345,-59,o),
(345,72,cs),
(345,221,l),
(148,221,l),
(148,69,ls),
(148,-43,o),
(116,-141,o),
(53,-237,c),
(164,-311,l)
);
},
{
closed = 1;
nodes = (
(343,880,l),
(343,1082,l),
(146,1082,l),
(146,880,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
1 1 0 73 0 0 1 0 134 0 1 1 2 95 3 1 2 2 34 1 78 10 10 10 13 10 13 21 21 4 8 24 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = exclam;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,478,l),
(340,478,l),
(340,1456,l),
(143,1456,l)
);
},
{
closed = 1;
nodes = (
(340,0,l),
(340,204,l),
(143,204,l),
(143,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 0 1 95 4 1 1 1 31 77 5 1 3 3 2 95 0 2 2 32 2 78 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = question;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,491,o),
(561,536,o),
(582,576,cs),
(593,595,o),
(610,617,o),
(633,641,cs),
(748,757,o),
(824,846,o),
(862,940,cs),
(881,987,o),
(890,1039,o),
(890,1096,cs),
(890,1336,o),
(738,1477,o),
(475,1477,cs),
(315,1477,o),
(187,1416,o),
(117,1309,cs),
(82,1256,o),
(65,1193,o),
(66,1122,c),
(69,1116,l),
(257,1116,l),
(257,1244,o),
(354,1311,o),
(475,1311,cs),
(615,1311,o),
(693,1232,o),
(693,1091,cs),
(693,979,o),
(645,881,o),
(510,759,cs),
(376,639,o),
(360,602,o),
(360,410,c),
(557,410,l)
);
},
{
closed = 1;
nodes = (
(563,0,l),
(563,208,l),
(358,208,l),
(358,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 2 1 0 1 2 0 128 0 0 5 1 0 5 126 0 1 1 3 97 0 3 3 37 77 6 1 5 5 4 95 0 4 4 32 4 78 33 33 33 36 33 36 27 36 18 43 16 7 8 27 
CALL[ ]	/* CallFunction */";
};
width = 953;
}
);
note = question;
unicode = 63;
},
{
glyphname = asterisk;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(411,1114,l),
(115,1225,l),
(66,1071,l),
(362,982,l),
(164,708,l),
(296,615,l),
(472,894,l),
(653,607,l),
(784,703,l),
(591,973,l),
(893,1062,l),
(845,1218,l),
(552,1108,l),
(562,1456,l),
(401,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
13 12 11 10 9 8 7 6 5 4 3 2 1 13 0 73 1 1 0 0 31 0 78 0 0 0 14 0 14 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 958;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = numbersign;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1104,550,l),
(884,550,l),
(952,898,l),
(1179,898,l),
(1179,1040,l),
(979,1040,l),
(1061,1456,l),
(910,1456,l),
(828,1040,l),
(573,1040,l),
(655,1456,l),
(504,1456,l),
(422,1040,l),
(139,1040,l),
(139,898,l),
(394,898,l),
(326,550,l),
(63,550,l),
(63,410,l),
(298,410,l),
(218,0,l),
(369,0,l),
(449,410,l),
(705,410,l),
(625,0,l),
(776,0,l),
(856,410,l),
(1104,410,l)
);
},
{
closed = 1;
nodes = (
(545,898,l),
(801,898,l),
(733,550,l),
(477,550,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
15 12 2 4 16 13 3 3 1 0 4 1 103 9 1 7 7 31 77 14 11 2 5 5 6 95 10 8 2 6 6 34 77 2 1 0 0 32 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
10 8 2 6 14 11 2 5 4 6 5 104 15 12 2 4 16 13 3 3 1 0 4 1 103 9 1 7 7 31 77 2 1 0 0 32 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
0 0 31 30 29 28 0 27 0 27 26 25 24 23 22 21 20 19 17 17 17 17 17 17 17 17 17 17 8 31 
CALL[ ]	/* CallFunction */";
};
width = 1246;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = slash;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,-125,l),
(167,-125,l),
(774,1456,l),
(608,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 1 0 134 2 1 1 1 31 1 78 0 0 0 3 0 3 17 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 824;
}
);
note = slash;
unicode = 47;
},
{
glyphname = backslash;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(644,-125,l),
(830,-125,l),
(222,1456,l),
(36,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 1 0 134 2 1 1 1 31 1 78 0 0 0 3 0 3 17 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 841;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = uni17DB;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,195,o),
(238,224,o),
(227,248,cs),
(215,271,o),
(209,290,o),
(209,303,cs),
(209,318,o),
(213,330,o),
(220,337,cs),
(228,345,o),
(240,349,o),
(256,349,cs),
(279,349,l),
(279,162,l)
);
},
{
closed = 1;
nodes = (
(116,280,o),
(123,253,o),
(136,222,cs),
(150,191,o),
(170,156,o),
(197,117,cs),
(279,0,l),
(442,0,l),
(442,559,l),
(605,559,l),
(605,652,l),
(442,652,l),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,652,l),
(116,653,l),
(116,559,l),
(279,559,l),
(279,442,l),
(256,442,ls),
(209,442,o),
(174,431,o),
(151,408,cs),
(128,384,o),
(116,349,o),
(116,303,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
40 1 7 6 42 41 30 29 28 5 5 7 0 1 2 0 3 76 31 1 6 74 0 6 0 7 5 6 7 105 8 1 5 4 1 1 3 5 1 103 0 3 0 0 2 3 0 105 0 2 2 19 2 78 21 33 38 17 17 40 17 23 33 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17DB;
unicode = 6107;
},
{
glyphname = dollar;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(866,8,o),
(1012,149,o),
(1012,378,cs),
(1012,529,o),
(954,632,o),
(835,709,cs),
(776,747,o),
(701,781,o),
(610,810,cs),
(469,858,o),
(391,906,o),
(356,970,cs),
(339,1001,o),
(330,1038,o),
(330,1081,cs),
(330,1224,o),
(409,1311,o),
(566,1311,cs),
(715,1311,o),
(803,1188,o),
(803,1007,c),
(999,1007,l),
(999,1275,o),
(870,1439,o),
(647,1471,c),
(647,1693,l),
(489,1693,l),
(489,1472,l),
(268,1444,o),
(133,1298,o),
(133,1078,cs),
(133,927,o),
(195,819,o),
(316,742,cs),
(377,703,o),
(452,670,o),
(541,643,cs),
(732,579,o),
(815,499,o),
(815,376,cs),
(815,234,o),
(716,144,o),
(542,144,cs),
(442,144,o),
(357,180,o),
(310,264,cs),
(286,306,o),
(274,361,o),
(274,429,c),
(84,429,l),
(82,424,l),
(79,240,o),
(148,115,o),
(267,47,cs),
(326,12,o),
(394,-9,o),
(470,-17,c),
(470,-208,l),
(626,-208,l),
(626,-17,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
31 28 2 5 3 3 0 2 0 2 2 76 0 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 3 0 5 4 3 5 105 0 2 0 0 2 89 0 2 2 0 95 0 0 2 0 79 34 36 31 35 37 17 6 8 28 
CALL[ ]	/* CallFunction */";
};
width = 1110;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = plus;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(474,783,l),
(73,783,l),
(73,605,l),
(474,605,l),
(474,146,l),
(671,146,l),
(671,605,l),
(1071,605,l),
(1071,783,l),
(671,783,l),
(671,1206,l),
(474,1206,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
6 1 5 0 2 5 87 4 1 0 3 1 1 2 0 1 103 6 1 5 5 2 95 0 2 5 2 79 0 0 0 11 0 11 17 17 17 17 17 7 8 27 
CALL[ ]	/* CallFunction */";
};
width = 1145;
}
);
note = plus;
unicode = 43;
},
{
glyphname = equal;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,823,l),
(981,823,l),
(981,987,l),
(147,987,l)
);
},
{
closed = 1;
nodes = (
(981,407,l),
(981,571,l),
(147,571,l),
(147,407,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
4 1 1 0 0 3 1 0 103 5 1 3 2 2 3 87 5 1 3 3 2 95 0 2 3 2 79 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23 
CALL[ ]	/* CallFunction */";
};
width = 1127;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(723,521,l),
(125,283,l),
(125,87,l),
(980,466,l),
(980,615,l),
(125,993,l),
(125,798,l),
(723,564,l),
(807,544,l),
(807,538,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
6 3 1 50 
CALL[ ]	/* CallFunction */";
};
width = 1060;
}
);
note = greater;
unicode = 62;
},
{
glyphname = less;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,635,l),
(76,486,l),
(892,107,l),
(892,308,l),
(333,536,l),
(248,555,l),
(248,561,l),
(333,579,l),
(892,812,l),
(892,1013,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
9 6 1 50 
CALL[ ]	/* CallFunction */";
};
width = 1017;
}
);
note = less;
unicode = 60;
},
{
glyphname = asciitilde;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1068,401,o),
(1164,468,o),
(1217,572,cs),
(1244,623,o),
(1257,679,o),
(1257,740,c),
(1115,758,l),
(1115,655,o),
(1040,567,o),
(952,567,cs),
(884,567,o),
(826,596,o),
(747,664,cs),
(634,757,o),
(541,803,o),
(424,803,cs),
(307,803,o),
(212,739,o),
(160,640,cs),
(134,590,o),
(121,535,o),
(121,474,c),
(262,456,l),
(262,556,o),
(335,637,o),
(424,637,cs),
(489,637,o),
(551,605,o),
(631,541,c),
(744,442,o),
(833,401,o),
(952,401,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 52 values pushed */
24 23 2 1 2 10 9 2 0 3 2 76 0 2 0 1 3 2 1 105 0 3 0 0 3 89 0 3 3 0 97 4 1 0 3 0 81 1 0 21 19 15 13 7 5 0 27 1 27 5 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1386;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = asciicircum;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(504,1456,l),
(370,1456,l),
(71,729,l),
(253,729,l),
(416,1148,l),
(432,1218,l),
(438,1218,l),
(454,1148,l),
(620,729,l),
(802,729,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 76 0 1 0 1 133 3 2 2 0 0 118 0 0 0 9 0 9 17 21 4 8 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 864;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = percent;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1205,-21,o),
(1298,35,o),
(1347,126,cs),
(1372,171,o),
(1384,222,o),
(1384,279,cs),
(1384,357,ls),
(1384,470,o),
(1332,565,o),
(1241,618,cs),
(1196,644,o),
(1143,657,o),
(1082,657,cs),
(961,657,o),
(868,600,o),
(819,509,cs),
(794,464,o),
(782,413,o),
(782,357,cs),
(782,279,ls),
(782,166,o),
(833,71,o),
(924,19,cs),
(969,-8,o),
(1023,-21,o),
(1084,-21,cs)
);
},
{
closed = 1;
nodes = (
(77,986,o),
(129,892,o),
(220,840,cs),
(265,813,o),
(318,800,o),
(379,800,cs),
(500,800,o),
(593,857,o),
(642,947,cs),
(667,992,o),
(679,1042,o),
(679,1099,cs),
(679,1176,ls),
(679,1289,o),
(628,1385,o),
(537,1438,cs),
(492,1464,o),
(438,1477,o),
(377,1477,cs),
(256,1477,o),
(163,1420,o),
(114,1329,cs),
(89,1284,o),
(77,1233,o),
(77,1176,cs),
(77,1099,ls)
);
},
{
closed = 1;
nodes = (
(223,1176,ls),
(223,1275,o),
(278,1355,o),
(377,1355,cs),
(476,1355,o),
(533,1275,o),
(533,1176,cs),
(533,1099,ls),
(533,999,o),
(476,922,o),
(379,922,cs),
(279,922,o),
(223,1000,o),
(223,1099,cs)
);
},
{
closed = 1;
nodes = (
(422,110,l),
(1133,1248,l),
(1024,1315,l),
(313,177,l)
);
},
{
closed = 1;
nodes = (
(928,357,ls),
(928,456,o),
(983,535,o),
(1082,535,cs),
(1181,535,o),
(1238,456,o),
(1238,357,cs),
(1238,279,ls),
(1238,179,o),
(1183,101,o),
(1084,101,cs),
(984,101,o),
(928,179,o),
(928,279,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
65 1 6 7 67 66 2 2 3 2 76 11 1 6 10 1 4 1 6 4 105 0 1 0 3 2 1 3 105 0 7 7 5 97 0 5 5 37 77 9 1 2 2 0 97 8 1 0 0 38 0 78 51 50 33 32 19 18 1 0 58 56 50 63 51 63 42 40 32 49 33 49 26 24 18 31 19 31 10 8 0 17 1 17 12 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1460;
}
);
note = percent;
unicode = 37;
},
{
glyphname = at;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(994,-453,o),
(1145,-420,o),
(1236,-364,c),
(1197,-257,l),
(1114,-304,o),
(984,-335,o),
(867,-335,cs),
(588,-335,o),
(391,-198,o),
(295,45,cs),
(247,166,o),
(227,311,o),
(235,478,cs),
(248,807,o),
(370,1066,o),
(574,1206,cs),
(676,1276,o),
(796,1311,o),
(933,1311,cs),
(1380,1311,o),
(1595,1011,o),
(1572,502,cs),
(1561,269,o),
(1458,100,o),
(1294,100,cs),
(1223,100,o),
(1179,151,o),
(1191,293,cs),
(1242,878,l),
(1240,882,l),
(1137,954,o),
(1071,988,o),
(931,988,cs),
(786,988,o),
(664,889,o),
(588,718,cs),
(549,632,o),
(525,531,o),
(515,416,cs),
(491,155,o),
(593,-21,o),
(760,-21,cs),
(887,-21,o),
(983,32,o),
(1049,137,c),
(1080,37,o),
(1155,-21,o),
(1252,-21,cs),
(1448,-21,o),
(1579,83,o),
(1647,241,cs),
(1681,320,o),
(1700,407,o),
(1704,502,cs),
(1719,883,o),
(1600,1167,o),
(1366,1318,cs),
(1249,1393,o),
(1106,1431,o),
(937,1431,cs),
(606,1431,o),
(351,1262,o),
(207,975,cs),
(135,832,o),
(95,666,o),
(86,478,cs),
(69,94,o),
(194,-189,o),
(432,-340,cs),
(551,-415,o),
(694,-453,o),
(863,-453,cs)
);
},
{
closed = 1;
nodes = (
(719,713,o),
(802,857,o),
(969,857,cs),
(1010,857,o),
(1048,847,o),
(1083,831,c),
(1036,293,ls),
(1033,272,o),
(1033,255,o),
(1034,239,c),
(975,155,o),
(904,126,o),
(820,126,cs),
(721,126,o),
(676,228,o),
(691,416,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
31 1 9 4 65 61 19 3 5 9 54 1 7 2 55 1 0 7 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
31 1 9 4 65 61 19 3 8 9 54 1 7 2 55 1 0 7 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 0 9 5 4 9 105 0 6 6 1 97 0 1 1 31 77 11 8 2 5 5 2 97 3 1 2 2 38 77 0 7 7 0 97 10 1 0 0 42 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 4 0 9 8 4 9 105 0 6 6 1 97 0 1 1 31 77 11 1 8 8 2 97 3 1 2 2 38 77 0 5 5 2 97 3 1 2 2 38 77 0 7 7 0 97 10 1 0 0 42 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 6 4 1 6 105 0 4 0 9 8 4 9 105 11 1 8 8 2 97 3 1 2 2 38 77 0 5 5 2 97 3 1 2 2 38 77 0 7 7 0 97 10 1 0 0 42 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
59 58 1 0 69 67 58 73 59 73 52 50 44 42 38 36 29 27 22 20 17 15 9 7 0 57 1 57 12 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1821;
}
);
note = at;
unicode = 64;
},
{
glyphname = ampersand;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(687,-21,o),
(819,22,o),
(926,102,c),
(1011,0,l),
(1240,0,l),
(1242,5,l),
(1057,229,l),
(1156,348,o),
(1209,498,o),
(1209,673,c),
(1033,673,l),
(1033,556,o),
(1001,449,o),
(946,362,c),
(606,771,l),
(715,851,ls),
(852,951,o),
(923,1036,o),
(923,1167,cs),
(923,1282,o),
(860,1379,o),
(753,1435,cs),
(700,1463,o),
(638,1477,o),
(567,1477,cs),
(334,1477,o),
(201,1348,o),
(201,1125,cs),
(201,1016,o),
(251,921,o),
(355,789,c),
(352,788,o),
(349,786,o),
(345,783,cs),
(165,662,o),
(74,552,o),
(74,392,cs),
(74,229,o),
(156,102,o),
(298,32,cs),
(369,-3,o),
(452,-21,o),
(548,-21,cs)
);
},
{
closed = 1;
nodes = (
(271,459,o),
(300,543,o),
(421,634,cs),
(461,663,l),
(822,228,l),
(739,167,o),
(644,133,o),
(548,133,cs),
(368,133,o),
(271,241,o),
(271,392,cs)
);
},
{
closed = 1;
nodes = (
(398,1236,o),
(459,1322,o),
(567,1322,cs),
(671,1322,o),
(742,1248,o),
(742,1167,cs),
(742,1095,o),
(720,1037,o),
(644,986,cs),
(506,891,l),
(434,982,o),
(398,1056,o),
(398,1127,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
25 7 2 2 5 44 43 33 26 4 4 2 37 1 0 4 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
25 7 2 2 5 44 43 33 26 4 4 2 37 1 3 4 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 5 1 97 0 1 1 37 77 0 2 2 0 97 3 6 2 0 0 38 77 7 1 4 4 0 97 3 6 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 1 97 0 1 1 37 77 0 2 2 3 95 0 3 3 32 77 7 1 4 4 0 97 6 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
41 40 1 0 59 57 40 50 41 50 36 34 30 29 18 16 0 39 1 39 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 1289;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = bar;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,-270,l),
(307,-270,l),
(307,1456,l),
(150,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 1 0 134 2 1 1 1 31 1 78 0 0 0 3 0 3 17 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = bar;
unicode = 124;
},
{
glyphname = uni17B7;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1024,1598,o),
(-1011,1575,o),
(-984,1559,cs),
(-957,1544,o),
(-918,1536,o),
(-865,1536,cs),
(-279,1536,l),
(-279,1629,l),
(-379,1702,ls),
(-453,1755,o),
(-521,1795,o),
(-584,1822,cs),
(-648,1849,o),
(-706,1862,o),
(-758,1862,cs),
(-847,1862,o),
(-913,1843,o),
(-958,1804,cs),
(-1002,1765,o),
(-1024,1706,o),
(-1024,1629,cs)
);
},
{
closed = 1;
nodes = (
(-865,1660,o),
(-856,1684,o),
(-838,1699,cs),
(-820,1714,o),
(-793,1722,o),
(-758,1722,cs),
(-697,1722,o),
(-641,1714,o),
(-590,1699,cs),
(-539,1684,o),
(-492,1660,o),
(-450,1629,c),
(-865,1629,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 43 values pushed */
9 1 3 1 75 0 0 4 1 2 3 0 2 105 0 3 1 1 3 87 0 3 3 1 95 0 1 3 1 79 16 15 20 19 15 23 16 23 37 35 5 7 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17B7;
unicode = 6071;
},
{
glyphname = uni17B7_17CD;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-362,1653,o),
(-347,1676,o),
(-316,1676,cs),
(-277,1676,o),
(-234,1660,o),
(-188,1629,c),
(-167,1629,o),
(-145,1632,o),
(-123,1639,c),
(-29,1684,o),
(46,1746,o),
(101,1825,c),
(109,1831,o),
(113,1838,o),
(113,1847,cs),
(113,1856,o),
(108,1866,o),
(99,1879,cs),
(84,1897,o),
(71,1906,o),
(60,1906,c),
(49,1904,l),
(-4,1815,o),
(-77,1754,o),
(-171,1723,c),
(-207,1754,o),
(-255,1769,o),
(-316,1769,cs),
(-419,1769,o),
(-479,1731,o),
(-496,1656,c),
(-571,1700,o),
(-638,1722,o),
(-697,1722,cs),
(-852,1722,o),
(-930,1644,o),
(-930,1489,cs),
(-930,1427,o),
(-883,1396,o),
(-790,1396,cs),
(-278,1396,l),
(-278,1448,l),
(-210,1459,o),
(-176,1495,o),
(-176,1554,cs),
(-176,1573,o),
(-192,1583,o),
(-223,1583,cs),
(-254,1583,o),
(-269,1573,o),
(-269,1554,cs),
(-269,1543,o),
(-285,1537,o),
(-316,1537,cs),
(-347,1537,o),
(-362,1560,o),
(-362,1607,cs)
);
},
{
closed = 1;
nodes = (
(-790,1552,o),
(-759,1583,o),
(-697,1583,cs),
(-620,1583,o),
(-551,1566,o),
(-491,1533,c),
(-485,1516,o),
(-477,1501,o),
(-466,1489,c),
(-790,1489,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
22 1 3 4 18 1 5 6 10 1 2 8 3 76 0 5 6 7 6 5 7 128 0 1 7 0 7 1 0 128 0 0 8 8 0 112 0 4 0 6 5 4 6 105 0 3 9 1 7 1 3 7 105 0 8 2 2 8 87 0 8 8 2 96 0 2 8 2 80 40 39 42 41 39 45 40 45 33 29 34 34 36 34 33 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17B7_17CD;
},
{
glyphname = uni17B8;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-697,1722,o),
(-641,1714,o),
(-590,1699,cs),
(-539,1684,o),
(-492,1660,o),
(-450,1629,c),
(-865,1629,l),
(-865,1660,o),
(-856,1684,o),
(-838,1699,cs),
(-820,1714,o),
(-793,1722,o),
(-758,1722,cs)
);
},
{
closed = 1;
nodes = (
(-1024,1598,o),
(-1011,1575,o),
(-984,1559,cs),
(-957,1544,o),
(-918,1536,o),
(-865,1536,cs),
(-279,1536,l),
(-279,1908,l),
(-385,1908,l),
(-385,1706,l),
(-457,1757,o),
(-523,1796,o),
(-584,1822,cs),
(-648,1849,o),
(-706,1862,o),
(-758,1862,cs),
(-847,1862,o),
(-913,1843,o),
(-958,1804,cs),
(-1002,1765,o),
(-1024,1706,o),
(-1024,1629,cs)
);
}
);
width = 0;
}
);
note = uni17B8;
unicode = 6072;
},
{
glyphname = uni17B9;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-697,1722,o),
(-641,1714,o),
(-590,1699,cs),
(-539,1684,o),
(-492,1660,o),
(-450,1629,c),
(-865,1629,l),
(-865,1660,o),
(-856,1684,o),
(-838,1699,cs),
(-820,1714,o),
(-793,1722,o),
(-758,1722,cs)
);
},
{
closed = 1;
nodes = (
(-1024,1598,o),
(-1011,1575,o),
(-984,1559,cs),
(-957,1544,o),
(-918,1536,o),
(-865,1536,cs),
(-279,1536,l),
(-279,1629,l),
(-328,1665,l),
(-316,1676,o),
(-306,1689,o),
(-297,1704,cs),
(-286,1727,o),
(-280,1757,o),
(-280,1792,cs),
(-280,1845,o),
(-293,1885,o),
(-319,1912,cs),
(-346,1939,o),
(-387,1952,o),
(-440,1952,cs),
(-488,1952,o),
(-525,1941,o),
(-552,1918,cs),
(-576,1897,o),
(-591,1867,o),
(-597,1827,c),
(-656,1850,o),
(-709,1862,o),
(-758,1862,cs),
(-847,1862,o),
(-913,1843,o),
(-958,1804,cs),
(-1002,1765,o),
(-1024,1706,o),
(-1024,1629,cs)
);
},
{
closed = 1;
nodes = (
(-493,1809,o),
(-488,1823,o),
(-479,1832,cs),
(-470,1841,o),
(-457,1846,o),
(-440,1846,cs),
(-422,1846,o),
(-408,1842,o),
(-399,1833,cs),
(-390,1824,o),
(-385,1810,o),
(-385,1792,cs),
(-385,1774,o),
(-390,1761,o),
(-399,1752,cs),
(-407,1744,o),
(-418,1739,o),
(-432,1738,c),
(-452,1751,o),
(-472,1764,o),
(-492,1775,c),
(-493,1780,o),
(-493,1786,o),
(-493,1791,cs)
);
}
);
width = 0;
}
);
note = uni17B9;
unicode = 6073;
},
{
glyphname = uni17BA;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-697,1722,o),
(-641,1714,o),
(-590,1699,cs),
(-539,1684,o),
(-492,1660,o),
(-450,1629,c),
(-865,1629,l),
(-865,1660,o),
(-856,1684,o),
(-838,1699,cs),
(-820,1714,o),
(-793,1722,o),
(-758,1722,cs)
);
},
{
closed = 1;
nodes = (
(-1024,1598,o),
(-1011,1575,o),
(-984,1559,cs),
(-957,1544,o),
(-918,1536,o),
(-865,1536,cs),
(-279,1536,l),
(-279,1908,l),
(-385,1908,l),
(-385,1706,l),
(-422,1733,o),
(-458,1756,o),
(-492,1775,c),
(-492,1964,l),
(-599,1964,l),
(-599,1828,l),
(-657,1851,o),
(-710,1862,o),
(-758,1862,cs),
(-847,1862,o),
(-913,1843,o),
(-958,1804,cs),
(-1002,1765,o),
(-1024,1706,o),
(-1024,1629,cs)
);
}
);
width = 0;
}
);
note = uni17BA;
unicode = 6074;
},
{
glyphname = uni17BB;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-279,-162,o),
(-288,-138,o),
(-305,-123,cs),
(-322,-108,o),
(-348,-100,o),
(-383,-100,cs),
(-418,-100,o),
(-445,-108,o),
(-462,-123,cs),
(-479,-138,o),
(-488,-162,o),
(-488,-193,c),
(-473,-193,o),
(-461,-197,o),
(-454,-204,cs),
(-445,-212,o),
(-441,-224,o),
(-441,-239,cs),
(-441,-658,l),
(-279,-658,l),
(-279,-193,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 0 2 1 0 128 0 2 1 0 2 89 0 2 2 0 95 0 0 2 0 79 35 20 17 3 7 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17BB;
unicode = 6075;
},
{
glyphname = uni17BC;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-694,-100,o),
(-713,-108,o),
(-725,-123,cs),
(-738,-138,o),
(-744,-162,o),
(-744,-193,c),
(-713,-193,o),
(-697,-199,o),
(-697,-211,cs),
(-697,-230,o),
(-713,-250,o),
(-745,-273,cs),
(-776,-296,o),
(-824,-320,o),
(-887,-347,c),
(-916,-363,o),
(-930,-394,o),
(-930,-441,cs),
(-930,-498,o),
(-915,-541,o),
(-885,-570,cs),
(-855,-599,o),
(-810,-613,o),
(-749,-613,c),
(-650,-591,o),
(-566,-550,o),
(-498,-491,cs),
(-429,-430,o),
(-376,-351,o),
(-337,-253,cs),
(-315,-197,o),
(-300,-165,o),
(-291,-157,cs),
(-282,-148,o),
(-278,-137,o),
(-278,-123,cs),
(-278,-108,o),
(-292,-100,o),
(-321,-100,cs),
(-351,-100,o),
(-378,-111,o),
(-401,-132,cs),
(-425,-154,o),
(-446,-187,o),
(-463,-231,c),
(-498,-306,o),
(-539,-368,o),
(-586,-415,cs),
(-634,-464,o),
(-688,-499,o),
(-749,-520,c),
(-763,-520,o),
(-773,-514,o),
(-780,-501,cs),
(-787,-488,o),
(-790,-468,o),
(-790,-441,c),
(-713,-370,o),
(-665,-321,o),
(-640,-289,cs),
(-616,-256,o),
(-604,-225,o),
(-604,-195,cs),
(-604,-163,o),
(-610,-139,o),
(-621,-124,cs),
(-632,-108,o),
(-648,-100,o),
(-669,-100,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
43 41 9 3 1 0 1 76 2 4 2 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 1 0 32 31 22 20 13 12 0 46 1 46 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17BC;
unicode = 6076;
},
{
glyphname = uni17BD;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-694,-100,o),
(-713,-108,o),
(-725,-123,cs),
(-738,-138,o),
(-744,-162,o),
(-744,-193,c),
(-713,-193,o),
(-697,-199,o),
(-697,-211,cs),
(-697,-235,o),
(-716,-261,o),
(-755,-290,cs),
(-794,-317,o),
(-853,-347,o),
(-930,-379,c),
(-930,-472,ls),
(-930,-519,o),
(-914,-553,o),
(-882,-576,cs),
(-849,-600,o),
(-801,-612,o),
(-736,-612,c),
(-643,-519,l),
(-591,-612,l),
(-516,-603,o),
(-452,-564,o),
(-401,-494,cs),
(-350,-424,o),
(-312,-324,o),
(-287,-193,cs),
(-281,-162,o),
(-278,-139,o),
(-278,-123,cs),
(-279,-108,o),
(-294,-100,o),
(-325,-100,cs),
(-349,-100,o),
(-369,-108,o),
(-384,-123,cs),
(-401,-138,o),
(-412,-162,o),
(-419,-194,cs),
(-441,-289,o),
(-463,-364,o),
(-486,-418,cs),
(-509,-473,o),
(-533,-506,o),
(-559,-519,c),
(-619,-426,l),
(-743,-519,l),
(-758,-519,o),
(-770,-513,o),
(-778,-502,cs),
(-786,-491,o),
(-790,-474,o),
(-790,-451,c),
(-683,-372,o),
(-605,-273,o),
(-605,-193,cs),
(-605,-162,o),
(-610,-138,o),
(-621,-123,cs),
(-632,-108,o),
(-648,-100,o),
(-669,-100,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 58 values pushed */
44 42 38 14 9 5 1 0 1 76 32 15 2 1 1 75 31 1 3 73 2 4 2 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 1 0 34 33 24 22 13 12 0 47 1 47 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17BD;
unicode = 6077;
},
{
glyphname = uni17BE;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1024,1600,o),
(-1011,1576,o),
(-984,1560,cs),
(-957,1544,o),
(-918,1536,o),
(-865,1536,cs),
(-279,1536,l),
(-279,1908,l),
(-385,1908,l),
(-385,1713,l),
(-458,1766,o),
(-525,1807,o),
(-586,1834,cs),
(-649,1861,o),
(-706,1875,o),
(-758,1875,cs),
(-847,1875,o),
(-913,1855,o),
(-958,1814,cs),
(-1002,1774,o),
(-1024,1714,o),
(-1024,1633,cs)
);
},
{
closed = 1;
nodes = (
(-865,1664,o),
(-856,1688,o),
(-838,1705,cs),
(-820,1721,o),
(-793,1729,o),
(-758,1729,cs),
(-697,1729,o),
(-641,1721,o),
(-590,1705,cs),
(-539,1688,o),
(-492,1664,o),
(-450,1633,c),
(-865,1633,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 4 1 112 0 0 5 1 3 4 0 3 105 0 4 2 2 4 87 0 4 4 2 96 0 2 4 2 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 1 133 0 0 5 1 3 4 0 3 105 0 4 2 2 4 87 0 4 4 2 96 0 2 4 2 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
17 16 21 20 16 24 17 24 33 20 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17BE;
unicode = 6078;
},
{
glyphname = uni17C6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-721,1730,o),
(-713,1753,o),
(-697,1769,cs),
(-682,1784,o),
(-659,1792,o),
(-628,1792,cs),
(-597,1792,o),
(-573,1784,o),
(-558,1769,cs),
(-542,1753,o),
(-534,1730,o),
(-534,1699,cs),
(-534,1668,o),
(-542,1644,o),
(-558,1629,cs),
(-573,1614,o),
(-597,1606,o),
(-628,1606,cs),
(-659,1606,o),
(-682,1614,o),
(-697,1629,cs),
(-713,1644,o),
(-721,1668,o),
(-721,1699,cs)
);
},
{
closed = 1;
nodes = (
(-837,1629,o),
(-820,1577,o),
(-785,1542,cs),
(-750,1507,o),
(-698,1489,o),
(-628,1489,cs),
(-557,1489,o),
(-505,1507,o),
(-470,1542,cs),
(-435,1577,o),
(-418,1629,o),
(-418,1699,cs),
(-418,1769,o),
(-435,1821,o),
(-470,1856,cs),
(-505,1891,o),
(-557,1908,o),
(-628,1908,cs),
(-698,1908,o),
(-750,1891,o),
(-785,1856,cs),
(-820,1821,o),
(-837,1769,o),
(-837,1699,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 3 0 1 0 3 1 105 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 38 38 38 35 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17C6;
unicode = 6086;
},
{
glyphname = uni17C9;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-838,1925,l),
(-837,1536,l),
(-779,1489,l),
(-722,1536,l),
(-722,1925,l)
);
},
{
closed = 1;
nodes = (
(-530,1536,l),
(-472,1489,l),
(-414,1536,l),
(-414,1925,l),
(-531,1925,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
7 6 5 2 1 0 6 0 73 1 1 0 0 118 20 19 2 7 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17C9;
unicode = 6089;
},
{
glyphname = uni17CA;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-384,1360,o),
(-351,1350,o),
(-324,1350,cs),
(-296,1350,o),
(-266,1389,o),
(-233,1466,c),
(-282,1466,ls),
(-306,1466,o),
(-331,1473,o),
(-358,1488,cs),
(-527,1583,l),
(-575,1583,l),
(-720,1473,l),
(-868,1583,l),
(-917,1583,l),
(-1210,1443,l),
(-1210,1399,l),
(-1142,1350,l),
(-994,1350,l),
(-1082,1413,l),
(-940,1478,l),
(-772,1350,l),
(-740,1350,l),
(-581,1471,l),
(-421,1381,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 47 values pushed */
12 4 1 3 4 2 9 8 5 3 0 4 2 76 3 1 2 4 2 133 0 4 0 0 4 89 0 4 4 0 95 5 1 2 0 4 0 79 33 34 18 19 19 18 6 7 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17CA;
unicode = 6090;
},
{
glyphname = uni17CB;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-791,1922,l),
(-791,1555,l),
(-721,1489,l),
(-650,1555,l),
(-650,1922,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
2 1 0 3 0 73 0 0 0 118 19 1 7 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17CB;
unicode = 6091;
},
{
glyphname = uni17CC;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-907,1677,o),
(-868,1706,o),
(-791,1706,cs),
(-742,1706,o),
(-698,1694,o),
(-659,1670,cs),
(-620,1647,o),
(-580,1613,o),
(-539,1566,c),
(-508,1535,o),
(-463,1519,o),
(-406,1519,cs),
(-381,1519,o),
(-353,1550,o),
(-322,1613,c),
(-404,1613,o),
(-453,1621,o),
(-468,1636,cs),
(-492,1659,ls),
(-538,1706,o),
(-584,1740,o),
(-631,1763,cs),
(-678,1787,o),
(-731,1799,o),
(-791,1799,cs),
(-962,1799,o),
(-1047,1739,o),
(-1047,1619,cs),
(-1047,1588,o),
(-1035,1565,o),
(-1012,1549,cs),
(-989,1534,o),
(-954,1526,o),
(-907,1526,cs),
(-856,1526,o),
(-831,1510,o),
(-831,1479,c),
(-738,1479,l),
(-738,1515,ls),
(-738,1538,o),
(-750,1561,o),
(-773,1584,cs),
(-796,1607,o),
(-841,1619,o),
(-907,1619,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 2 1 113 0 3 0 6 0 3 6 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 36 33 21 36 33 20 16 7 7 29 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17CC;
unicode = 6092;
},
{
glyphname = uni17CD;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-820,1676,o),
(-816,1694,o),
(-809,1705,cs),
(-801,1716,o),
(-779,1722,o),
(-744,1722,cs),
(-705,1722,o),
(-662,1707,o),
(-616,1676,c),
(-595,1676,o),
(-574,1679,o),
(-551,1686,c),
(-504,1709,o),
(-462,1735,o),
(-425,1766,cs),
(-388,1797,o),
(-355,1832,o),
(-327,1871,c),
(-320,1877,o),
(-316,1884,o),
(-316,1893,cs),
(-316,1902,o),
(-321,1913,o),
(-330,1925,cs),
(-344,1943,o),
(-357,1952,o),
(-369,1952,c),
(-379,1950,l),
(-405,1905,o),
(-437,1868,o),
(-474,1838,cs),
(-511,1808,o),
(-553,1785,o),
(-600,1770,c),
(-636,1800,o),
(-684,1815,o),
(-744,1815,cs),
(-826,1815,o),
(-882,1801,o),
(-913,1774,cs),
(-944,1747,o),
(-960,1706,o),
(-960,1652,cs),
(-960,1598,o),
(-946,1557,o),
(-919,1530,cs),
(-892,1503,o),
(-851,1489,o),
(-797,1489,cs),
(-723,1489,o),
(-672,1498,o),
(-645,1517,cs),
(-618,1536,o),
(-604,1563,o),
(-604,1600,cs),
(-604,1619,o),
(-620,1629,o),
(-651,1629,cs),
(-682,1629,o),
(-697,1619,o),
(-697,1600,cs),
(-697,1589,o),
(-713,1583,o),
(-744,1583,cs),
(-779,1583,o),
(-801,1589,o),
(-809,1601,cs),
(-816,1612,o),
(-820,1630,o),
(-820,1653,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 55 values pushed */
24 1 5 3 1 76 0 4 5 1 5 4 1 128 0 1 0 0 1 112 0 3 0 5 4 3 5 105 0 0 2 2 0 89 0 0 0 2 98 0 2 0 2 82 44 42 41 40 38 36 34 35 6 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17CD;
unicode = 6093;
},
{
glyphname = uni17CE;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-674,1723,l),
(-674,1862,l),
(-767,1862,l),
(-767,1723,l),
(-907,1723,l),
(-907,1629,l),
(-767,1629,l),
(-767,1490,l),
(-674,1490,l),
(-674,1629,l),
(-535,1629,l),
(-535,1723,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 1 4 87 5 1 3 2 1 0 1 3 0 103 0 4 4 1 95 0 1 4 1 79 17 17 17 17 17 16 6 7 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17CE;
unicode = 6094;
},
{
glyphname = uni17CF;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-465,1458,o),
(-419,1499,o),
(-419,1580,cs),
(-419,1654,o),
(-466,1691,o),
(-560,1691,cs),
(-583,1691,o),
(-595,1675,o),
(-595,1644,cs),
(-595,1613,o),
(-589,1597,o),
(-577,1597,cs),
(-535,1597,o),
(-514,1591,o),
(-514,1580,cs),
(-514,1561,o),
(-529,1551,o),
(-558,1551,cs),
(-576,1551,o),
(-617,1574,o),
(-681,1621,c),
(-706,1586,o),
(-730,1562,o),
(-755,1551,c),
(-810,1589,o),
(-822,1615,o),
(-838,1658,c),
(-777,1711,o),
(-716,1738,o),
(-654,1738,cs),
(-596,1738,o),
(-564,1753,o),
(-558,1784,c),
(-525,1869,o),
(-438,1877,o),
(-371,1877,cs),
(-340,1877,o),
(-325,1890,o),
(-325,1916,cs),
(-325,1942,o),
(-341,1955,o),
(-372,1955,cs),
(-496,1955,o),
(-588,1904,o),
(-651,1831,c),
(-762,1831,o),
(-855,1777,o),
(-930,1669,c),
(-920,1572,o),
(-866,1502,o),
(-767,1458,c),
(-735,1458,o),
(-707,1479,o),
(-682,1521,c),
(-651,1479,o),
(-610,1458,o),
(-558,1458,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
37 33 29 22 6 5 6 7 2 1 0 6 2 76 27 1 6 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 6 6 7 114 0 3 0 4 2 3 4 105 0 2 0 5 7 2 5 105 0 6 0 0 6 89 0 6 6 0 98 1 8 2 0 6 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 7 5 6 5 7 6 128 0 3 0 4 2 3 4 105 0 2 0 5 7 2 5 105 0 6 0 0 6 89 0 6 6 0 98 1 8 2 0 6 0 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 40 38 32 30 21 19 16 14 12 10 8 7 4 3 0 42 1 42 9 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17CF;
unicode = 6095;
},
{
glyphname = uni17D0;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-790,1738,o),
(-837,1707,o),
(-837,1645,cs),
(-837,1583,o),
(-818,1536,o),
(-779,1505,cs),
(-740,1474,o),
(-682,1459,o),
(-604,1459,cs),
(-465,1459,o),
(-360,1483,o),
(-290,1531,cs),
(-220,1580,o),
(-185,1653,o),
(-185,1750,cs),
(-185,1819,o),
(-197,1870,o),
(-221,1904,cs),
(-244,1938,o),
(-278,1955,o),
(-325,1955,cs),
(-356,1955,o),
(-372,1939,o),
(-372,1908,cs),
(-372,1877,o),
(-356,1862,o),
(-325,1862,cs),
(-294,1862,o),
(-278,1825,o),
(-278,1750,cs),
(-278,1684,o),
(-305,1635,o),
(-360,1602,cs),
(-414,1569,o),
(-495,1553,o),
(-604,1553,cs),
(-697,1553,o),
(-747,1584,o),
(-753,1645,c),
(-747,1614,o),
(-721,1598,o),
(-674,1598,cs),
(-627,1598,o),
(-604,1621,o),
(-604,1668,cs),
(-604,1715,o),
(-635,1738,o),
(-697,1738,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 58 values pushed */
6 1 1 0 1 76 0 4 0 3 0 4 3 105 6 1 0 0 1 2 0 1 105 0 2 5 5 2 89 0 2 2 5 97 0 5 2 5 81 1 0 27 25 19 17 15 13 9 7 5 3 0 31 1 31 7 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D0;
unicode = 6096;
},
{
glyphname = uni17D1;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1163,1489,l),
(-280,1489,l),
(-280,1583,l),
(-1163,1583,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 3 0 3 17 3 7 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D1;
unicode = 6097;
},
{
glyphname = uni17D2;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-791,-326,l),
(-791,-419,l),
(-651,-419,l),
(-651,-559,l),
(-558,-559,l),
(-558,-419,l),
(-419,-419,l),
(-419,-326,l),
(-558,-326,l),
(-558,-186,l),
(-651,-186,l),
(-651,-326,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 3 0 87 5 1 1 4 1 2 3 1 2 103 0 0 0 3 95 0 3 0 3 79 17 17 17 17 17 16 6 7 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D2;
unicode = 6098;
},
{
glyphname = uni17D2_1780;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-565,-182,o),
(-488,-212,o),
(-488,-272,cs),
(-488,-673,l),
(-348,-673,l),
(-348,-272,ls),
(-348,-153,o),
(-472,-93,o),
(-720,-93,cs),
(-969,-93,o),
(-1093,-152,o),
(-1093,-271,cs),
(-1093,-673,l),
(-953,-673,l),
(-953,-272,ls),
(-953,-212,o),
(-875,-182,o),
(-720,-182,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 1 0 1 134 0 2 0 0 2 89 0 2 2 0 97 4 1 0 2 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 0 1 134 4 1 0 0 2 97 0 2 2 18 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 11 10 8 6 4 3 0 13 1 13 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1780;
},
{
glyphname = uni17D2_1781;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-449,-674,o),
(-325,-597,o),
(-325,-442,c),
(-465,-477,l),
(-465,-549,o),
(-542,-585,o),
(-697,-585,cs),
(-853,-585,o),
(-931,-554,o),
(-931,-493,c),
(-649,-453,ls),
(-433,-422,o),
(-325,-358,o),
(-325,-259,cs),
(-325,-149,o),
(-449,-94,o),
(-697,-94,cs),
(-946,-94,o),
(-1070,-139,o),
(-1070,-228,cs),
(-1070,-287,o),
(-1023,-317,o),
(-930,-317,c),
(-930,-227,o),
(-852,-182,o),
(-697,-182,cs),
(-544,-182,o),
(-467,-206,o),
(-467,-255,cs),
(-467,-306,o),
(-528,-340,o),
(-651,-359,cs),
(-1008,-411,ls),
(-1049,-417,o),
(-1070,-445,o),
(-1070,-495,cs),
(-1070,-614,o),
(-946,-674,o),
(-697,-674,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
25 24 20 3 4 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 4 1 2 114 0 3 0 1 2 3 1 105 0 4 4 0 97 5 1 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 4 1 2 114 0 1 1 3 97 0 3 3 18 77 0 4 4 0 97 5 1 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 1 4 1 2 114 0 4 5 1 0 4 0 101 0 1 1 3 97 0 3 3 18 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 4 1 2 4 128 0 4 5 1 0 4 0 101 0 1 1 3 97 0 3 3 18 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 23 21 16 14 12 11 10 8 0 26 1 26 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1781;
},
{
glyphname = uni17D2_1782;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-953,-212,o),
(-875,-182,o),
(-720,-182,cs),
(-565,-182,o),
(-488,-212,o),
(-488,-272,cs),
(-488,-673,l),
(-348,-673,l),
(-348,-272,ls),
(-348,-153,o),
(-472,-93,o),
(-720,-93,cs),
(-969,-93,o),
(-1093,-152,o),
(-1093,-271,cs),
(-1093,-673,l),
(-953,-673,l),
(-826,-521,ls),
(-787,-474,o),
(-751,-450,o),
(-720,-450,cs),
(-658,-450,o),
(-627,-428,o),
(-627,-383,cs),
(-627,-338,o),
(-658,-316,o),
(-720,-316,cs),
(-751,-316,o),
(-797,-353,o),
(-860,-428,cs),
(-953,-539,l),
(-953,-272,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
4 1 2 1 2 134 0 3 0 5 0 3 5 105 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
4 1 2 1 2 134 0 0 0 1 2 0 1 105 0 5 5 3 97 0 3 3 18 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
34 18 34 18 34 35 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1782;
},
{
glyphname = uni17D2_1784;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-511,-673,o),
(-356,-495,o),
(-348,-138,cs),
(-348,-93,l),
(-395,-93,ls),
(-420,-93,o),
(-435,-107,o),
(-439,-138,c),
(-447,-435,o),
(-572,-584,o),
(-814,-584,cs),
(-907,-584,o),
(-953,-539,o),
(-953,-450,cs),
(-953,-391,o),
(-922,-361,o),
(-860,-361,c),
(-860,-302,o),
(-891,-272,o),
(-953,-272,cs),
(-1046,-272,o),
(-1093,-331,o),
(-1093,-450,cs),
(-1093,-599,o),
(-1000,-673,o),
(-814,-673,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 1 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 1 4 133 0 1 0 2 3 1 2 105 0 3 3 0 98 5 1 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 2 3 1 2 105 0 4 4 18 77 0 3 3 0 98 5 1 0 0 25 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 2 3 1 2 105 0 3 5 1 0 3 0 102 0 4 4 18 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 16 14 11 9 7 6 5 3 0 18 1 18 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1784;
},
{
glyphname = uni17D2_1785;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-767,-301,o),
(-860,-395,o),
(-1046,-418,cs),
(-1077,-422,o),
(-1093,-452,o),
(-1093,-509,cs),
(-1093,-619,o),
(-1000,-674,o),
(-814,-674,cs),
(-680,-674,o),
(-555,-602,o),
(-440,-457,c),
(-320,-457,o),
(-255,-427,o),
(-255,-342,c),
(-300,-365,o),
(-331,-376,o),
(-348,-376,cs),
(-382,-376,l),
(-372,-359,o),
(-367,-342,o),
(-367,-324,cs),
(-367,-248,o),
(-407,-210,o),
(-488,-210,cs),
(-581,-210,o),
(-627,-251,o),
(-627,-334,cs),
(-627,-383,o),
(-600,-418,o),
(-546,-438,c),
(-638,-536,o),
(-727,-585,o),
(-814,-585,cs),
(-907,-585,o),
(-953,-560,o),
(-953,-509,c),
(-736,-435,o),
(-627,-311,o),
(-627,-138,cs),
(-627,-94,l),
(-721,-94,ls),
(-752,-94,o),
(-767,-109,o),
(-767,-138,cs)
);
},
{
closed = 1;
nodes = (
(-534,-309,o),
(-519,-296,o),
(-488,-296,cs),
(-465,-296,o),
(-454,-305,o),
(-454,-324,cs),
(-454,-332,o),
(-464,-347,o),
(-483,-368,c),
(-517,-362,o),
(-534,-351,o),
(-534,-334,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
21 1 3 6 10 1 4 3 6 1 1 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 2 0 133 0 2 0 6 3 2 6 105 0 3 0 4 1 3 4 105 0 1 1 5 98 0 5 5 25 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 0 6 3 2 6 105 0 3 0 4 1 3 4 105 0 0 0 18 77 0 1 1 5 98 0 5 5 25 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 6 3 2 6 105 0 3 0 4 1 3 4 105 0 1 0 5 1 5 102 0 0 0 18 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 33 19 35 36 36 33 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1785;
},
{
glyphname = uni17D2_1786;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1077,-94,o),
(-1093,-109,o),
(-1093,-139,cs),
(-1093,-371,l),
(-1124,-371,o),
(-1147,-378,o),
(-1163,-393,cs),
(-1178,-408,o),
(-1186,-430,o),
(-1186,-460,cs),
(-1186,-495,o),
(-1170,-537,o),
(-1139,-585,c),
(-1093,-674,l),
(-953,-674,l),
(-953,-460,l),
(-907,-460,ls),
(-876,-460,o),
(-829,-496,o),
(-767,-567,cs),
(-705,-638,o),
(-643,-674,o),
(-581,-674,cs),
(-426,-674,o),
(-348,-599,o),
(-348,-450,cs),
(-348,-94,l),
(-488,-94,l),
(-550,-182,o),
(-581,-249,o),
(-581,-295,cs),
(-581,-335,o),
(-562,-361,o),
(-522,-361,cs),
(-488,-361,l),
(-488,-450,ls),
(-488,-540,o),
(-519,-585,o),
(-581,-585,cs),
(-612,-585,o),
(-658,-549,o),
(-720,-478,cs),
(-783,-407,o),
(-845,-371,o),
(-907,-371,cs),
(-953,-371,l),
(-953,-94,l),
(-1046,-94,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 1 0 3 1 128 8 1 1 0 6 2 1 6 105 4 9 2 0 0 5 97 7 1 5 5 25 77 0 2 2 5 98 7 1 5 5 25 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 0 1 0 3 1 128 8 1 1 0 6 2 1 6 105 4 9 2 0 0 18 77 0 2 2 5 98 7 1 5 5 25 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 1 0 3 1 128 8 1 1 0 6 2 1 6 105 0 2 5 5 2 89 7 1 5 5 0 97 4 9 2 0 0 18 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 32 31 25 24 23 21 20 18 16 15 11 9 7 5 4 2 0 34 1 34 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1786;
},
{
glyphname = uni17D2_1787;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-367,-673,o),
(-304,-563,o),
(-304,-343,cs),
(-304,-336,l),
(-261,-322,ls),
(-230,-310,o),
(-214,-291,o),
(-214,-264,cs),
(-214,-244,o),
(-223,-234,o),
(-242,-234,c),
(-312,-253,l),
(-332,-146,o),
(-391,-93,o),
(-490,-93,cs),
(-583,-93,o),
(-630,-138,o),
(-630,-227,cs),
(-630,-316,o),
(-583,-361,o),
(-490,-361,cs),
(-474,-361,o),
(-459,-360,o),
(-444,-359,c),
(-445,-509,o),
(-460,-584,o),
(-490,-584,cs),
(-536,-584,o),
(-614,-531,o),
(-723,-425,c),
(-829,-531,o),
(-907,-584,o),
(-956,-584,cs),
(-987,-584,o),
(-1002,-503,o),
(-1002,-342,cs),
(-1002,-235,o),
(-987,-182,o),
(-956,-182,cs),
(-925,-182,o),
(-909,-167,o),
(-909,-138,cs),
(-909,-108,o),
(-925,-93,o),
(-956,-93,cs),
(-1080,-93,o),
(-1142,-176,o),
(-1142,-342,cs),
(-1142,-563,o),
(-1080,-673,o),
(-956,-673,cs),
(-895,-673,o),
(-817,-631,o),
(-723,-547,c),
(-634,-631,o),
(-557,-673,o),
(-492,-673,cs)
);
},
{
closed = 1;
nodes = (
(-537,-197,o),
(-521,-182,o),
(-490,-182,cs),
(-468,-182,o),
(-454,-212,o),
(-447,-271,c),
(-448,-272,o),
(-451,-272,o),
(-458,-272,cs),
(-492,-272,ls),
(-522,-272,o),
(-537,-257,o),
(-537,-227,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
31 1 10 8 37 1 6 10 18 2 2 4 6 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 3 10 3 8 10 128 7 1 2 12 9 2 3 8 2 3 105 0 10 0 6 4 10 6 105 5 1 4 4 0 97 1 11 2 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 8 3 10 3 8 10 128 0 10 0 6 4 10 6 105 12 9 2 3 3 2 97 7 1 2 2 18 77 5 1 4 4 0 97 1 11 2 0 0 25 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 8 3 10 3 8 10 128 0 10 0 6 4 10 6 105 5 1 4 1 11 2 0 4 0 101 12 9 2 3 3 2 97 7 1 2 2 18 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
41 40 1 0 45 43 40 48 41 48 33 32 30 28 26 22 21 19 17 15 13 11 9 7 5 3 0 39 1 39 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1787;
},
{
glyphname = uni17D2_1789;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-302,-205,o),
(-349,-143,o),
(-442,-143,cs),
(-504,-143,o),
(-535,-174,o),
(-535,-236,c),
(-473,-236,o),
(-442,-267,o),
(-442,-329,cs),
(-442,-453,o),
(-479,-515,o),
(-553,-515,cs),
(-625,-515,o),
(-691,-475,o),
(-751,-395,cs),
(-852,-258,o),
(-966,-190,o),
(-1093,-190,cs),
(-1186,-190,o),
(-1233,-233,o),
(-1233,-320,cs),
(-1233,-367,l),
(-1206,-311,o),
(-1160,-283,o),
(-1093,-283,cs),
(-1037,-283,o),
(-961,-347,o),
(-866,-474,cs),
(-799,-564,o),
(-695,-609,o),
(-553,-609,cs),
(-386,-609,o),
(-302,-516,o),
(-302,-329,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 5 0 4 1 5 4 105 0 2 0 1 3 2 1 105 0 3 3 0 97 0 0 0 20 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 4 1 5 4 105 0 2 0 1 3 2 1 105 0 3 0 0 3 89 0 3 3 0 97 0 0 3 0 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 5 0 4 1 5 4 105 0 2 0 1 3 2 1 105 0 3 3 0 97 0 0 0 20 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 4 1 5 4 105 0 2 0 1 3 2 1 105 0 3 0 0 3 89 0 3 3 0 97 0 0 3 0 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 1 3 2 1 105 0 4 4 5 97 0 5 5 18 77 0 3 3 0 97 0 0 0 20 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 4 1 5 4 105 0 2 0 1 3 2 1 105 0 3 0 0 3 89 0 3 3 0 97 0 0 3 0 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 0 1 3 2 1 105 0 3 0 0 3 0 101 0 4 4 5 97 0 5 5 18 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 4 1 5 4 105 0 2 0 1 3 2 1 105 0 3 0 0 3 89 0 3 3 0 97 0 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
33 18 34 35 34 33 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1789;
},
{
glyphname = uni17D2_178A;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-922,-450,o),
(-907,-456,o),
(-907,-469,cs),
(-907,-491,o),
(-922,-516,o),
(-953,-545,c),
(-953,-450,l)
);
},
{
closed = 1;
nodes = (
(-953,-673,l),
(-883,-606,ls),
(-837,-561,o),
(-814,-515,o),
(-814,-468,cs),
(-814,-432,o),
(-825,-405,o),
(-848,-388,cs),
(-871,-370,o),
(-906,-361,o),
(-953,-361,c),
(-953,-272,ls),
(-953,-212,o),
(-875,-182,o),
(-720,-182,cs),
(-565,-182,o),
(-488,-212,o),
(-488,-272,cs),
(-488,-673,l),
(-348,-673,l),
(-348,-272,ls),
(-348,-153,o),
(-472,-93,o),
(-720,-93,cs),
(-969,-93,o),
(-1093,-153,o),
(-1093,-272,cs),
(-1093,-673,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
3 1 0 3 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 4 1 4 0 1 128 3 1 1 1 132 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 4 1 4 0 1 128 3 1 1 1 132 0 4 4 2 97 0 2 2 18 4 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
34 18 34 22 22 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_178A;
},
{
glyphname = uni17D2_178B;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-534,-198,o),
(-518,-221,o),
(-487,-228,c),
(-730,-228,ls),
(-815,-228,o),
(-909,-235,o),
(-1010,-250,cs),
(-1065,-258,o),
(-1092,-280,o),
(-1092,-317,cs),
(-1092,-355,o),
(-1084,-385,o),
(-1069,-407,cs),
(-910,-635,ls),
(-893,-660,o),
(-878,-673,o),
(-865,-673,cs),
(-852,-673,o),
(-833,-661,o),
(-810,-638,cs),
(-705,-532,l),
(-448,-673,l),
(-381,-673,o),
(-348,-645,o),
(-348,-590,cs),
(-348,-227,ls),
(-348,-138,o),
(-379,-93,o),
(-441,-93,cs),
(-503,-93,o),
(-534,-115,o),
(-534,-160,cs)
);
},
{
closed = 1;
nodes = (
(-888,-324,o),
(-818,-317,o),
(-742,-317,cs),
(-488,-317,l),
(-488,-557,l),
(-720,-426,l),
(-850,-557,l),
(-952,-338,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
29 28 24 8 4 1 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 3 3 0 112 0 3 0 4 1 3 4 104 2 1 1 1 25 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 4 1 3 4 104 0 0 0 18 77 2 1 1 1 25 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
2 1 1 4 1 134 0 3 0 4 1 3 4 104 0 0 0 18 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 40 19 19 33 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_178B;
},
{
glyphname = uni17D2_178C;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-539,-190,l),
(-488,-224,l),
(-488,-271,ls),
(-488,-304,o),
(-529,-331,o),
(-612,-353,cs),
(-1031,-462,ls),
(-1072,-473,o),
(-1093,-493,o),
(-1093,-523,cs),
(-1093,-608,o),
(-1031,-651,o),
(-907,-651,cs),
(-736,-651,o),
(-597,-620,o),
(-488,-557,c),
(-488,-596,ls),
(-488,-622,o),
(-503,-648,o),
(-534,-675,c),
(-441,-675,o),
(-387,-668,o),
(-371,-655,cs),
(-356,-642,o),
(-348,-622,o),
(-348,-596,cs),
(-348,-413,l),
(-488,-445,l),
(-575,-530,o),
(-714,-572,o),
(-907,-572,cs),
(-938,-572,o),
(-953,-556,o),
(-953,-524,c),
(-591,-429,ls),
(-429,-386,o),
(-348,-333,o),
(-348,-271,cs),
(-348,-214,l),
(-534,-95,l),
(-720,-185,l),
(-907,-95,l),
(-1093,-214,l),
(-1093,-313,ls),
(-1093,-353,o),
(-1070,-373,o),
(-1023,-373,cs),
(-953,-373,l),
(-910,-334,o),
(-888,-304,o),
(-888,-283,cs),
(-888,-264,o),
(-910,-254,o),
(-953,-254,c),
(-953,-225,l),
(-899,-190,l),
(-720,-276,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
43 1 1 0 31 23 18 3 2 1 2 76 42 41 14 13 12 11 10 1 8 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 2 0 112 0 1 2 1 133 0 2 2 4 98 0 4 4 25 77 0 3 3 25 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 0 1 0 133 0 1 2 1 133 0 2 2 4 98 0 4 4 25 77 0 3 3 25 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 133 0 1 2 1 133 0 3 4 3 134 0 2 4 4 2 89 0 2 2 4 98 0 4 2 4 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 22 43 35 18 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_178C;
},
{
glyphname = uni17D2_178E;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2118,-509,o),
(-2133,-542,o),
(-2164,-584,c),
(-2164,-450,l),
(-2146,-450,ls),
(-2127,-450,o),
(-2118,-462,o),
(-2118,-486,cs)
);
},
{
closed = 1;
nodes = (
(-2164,-673,l),
(-2102,-614,o),
(-2063,-562,o),
(-2048,-517,cs),
(-2040,-494,o),
(-2036,-475,o),
(-2036,-455,cs),
(-2036,-436,o),
(-2040,-421,o),
(-2048,-405,cs),
(-2064,-376,o),
(-2087,-361,o),
(-2118,-361,cs),
(-2164,-361,l),
(-2164,-303,l),
(-1988,-219,l),
(-1699,-356,l),
(-1699,-673,l),
(-1559,-673,l),
(-1326,-524,l),
(-1094,-673,l),
(-954,-673,l),
(-954,-305,l),
(-774,-219,l),
(-489,-355,l),
(-489,-673,l),
(-349,-673,l),
(-349,-272,l),
(-721,-93,l),
(-1094,-271,l),
(-1094,-566,l),
(-1326,-417,l),
(-1559,-566,l),
(-1559,-272,l),
(-1932,-93,l),
(-2304,-271,l),
(-2304,-673,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
27 1 0 1 39 28 26 4 4 2 0 2 76 36 35 34 31 30 29 25 24 23 9 8 7 12 1 74 6 5 4 3 4 2 0 2 134 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 6 6 6 40 6 40 20 26 25 40 17 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_178E;
},
{
glyphname = uni17D2_178F;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-922,-450,o),
(-907,-456,o),
(-907,-469,cs),
(-907,-491,o),
(-922,-516,o),
(-953,-545,c),
(-953,-450,l)
);
},
{
closed = 1;
nodes = (
(-953,-673,l),
(-883,-606,ls),
(-837,-561,o),
(-814,-515,o),
(-814,-468,cs),
(-814,-432,o),
(-825,-405,o),
(-848,-388,cs),
(-871,-370,o),
(-906,-361,o),
(-953,-361,c),
(-953,-272,ls),
(-953,-212,o),
(-875,-182,o),
(-720,-182,cs),
(-565,-182,o),
(-488,-212,o),
(-488,-272,cs),
(-488,-673,l),
(-348,-673,l),
(-348,-272,ls),
(-348,-153,o),
(-472,-93,o),
(-720,-93,cs),
(-969,-93,o),
(-1093,-153,o),
(-1093,-272,cs),
(-1093,-673,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
3 1 0 3 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 4 1 4 0 1 128 3 1 1 1 132 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 4 1 4 0 1 128 3 1 1 1 132 0 4 4 2 97 0 2 2 18 4 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
34 18 34 22 22 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_178F;
},
{
glyphname = uni17D2_1790;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1163,-571,o),
(-1101,-652,o),
(-977,-652,cs),
(-915,-652,o),
(-884,-621,o),
(-884,-559,c),
(-977,-559,o),
(-1023,-509,o),
(-1023,-409,cs),
(-1023,-260,o),
(-961,-186,o),
(-837,-186,cs),
(-713,-186,o),
(-612,-277,o),
(-534,-459,cs),
(-478,-588,o),
(-398,-652,o),
(-294,-652,cs),
(-253,-652,o),
(-232,-621,o),
(-232,-559,c),
(-301,-559,o),
(-357,-507,o),
(-402,-404,cs),
(-491,-197,o),
(-636,-93,o),
(-837,-93,cs),
(-1054,-93,o),
(-1163,-198,o),
(-1163,-409,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 3 1 0 3 105 4 1 1 1 2 97 5 1 2 2 25 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 0 97 0 0 0 18 77 4 1 1 1 2 97 5 1 2 2 25 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
4 1 1 5 1 2 1 2 101 0 3 3 0 97 0 0 0 18 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
33 18 34 33 18 33 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1790;
},
{
glyphname = uni17D2_1791;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-674,-276,o),
(-798,-340,o),
(-1046,-418,cs),
(-1077,-427,o),
(-1093,-456,o),
(-1093,-504,cs),
(-1093,-617,o),
(-985,-673,o),
(-768,-673,cs),
(-659,-673,o),
(-565,-627,o),
(-488,-535,c),
(-488,-584,ls),
(-488,-613,o),
(-502,-643,o),
(-530,-673,c),
(-409,-673,o),
(-348,-643,o),
(-348,-584,cs),
(-348,-227,ls),
(-348,-197,o),
(-368,-182,o),
(-409,-182,cs),
(-448,-182,o),
(-475,-207,o),
(-489,-258,cs),
(-517,-367,o),
(-554,-448,o),
(-601,-503,cs),
(-644,-557,o),
(-700,-584,o),
(-768,-584,cs),
(-891,-584,o),
(-953,-558,o),
(-953,-507,c),
(-674,-420,o),
(-534,-311,o),
(-534,-182,cs),
(-534,-123,o),
(-565,-93,o),
(-627,-93,cs),
(-689,-93,o),
(-720,-123,o),
(-720,-182,c),
(-689,-182,o),
(-674,-197,o),
(-674,-227,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
24 8 2 2 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 0 3 1 0 105 0 3 3 4 97 5 1 4 4 25 77 0 2 2 4 97 5 1 4 4 25 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 97 0 1 1 18 77 0 3 3 4 97 5 1 4 4 25 77 0 2 2 4 97 5 1 4 4 25 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 2 4 3 89 0 2 5 1 4 2 4 101 0 0 0 1 97 0 1 1 18 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 19 36 36 33 17 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1791;
},
{
glyphname = uni17D2_1792;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-534,-115,o),
(-550,-93,o),
(-581,-93,cs),
(-643,-93,o),
(-674,-108,o),
(-674,-138,c),
(-643,-138,o),
(-627,-153,o),
(-627,-182,c),
(-665,-236,o),
(-719,-284,o),
(-788,-325,cs),
(-858,-367,o),
(-944,-404,o),
(-1046,-435,c),
(-1077,-450,o),
(-1093,-480,o),
(-1093,-524,cs),
(-1093,-623,o),
(-1012,-673,o),
(-851,-673,cs),
(-733,-673,o),
(-674,-613,o),
(-674,-494,c),
(-611,-506,ls),
(-566,-515,o),
(-538,-519,o),
(-526,-519,cs),
(-407,-519,o),
(-348,-432,o),
(-348,-259,cs),
(-348,-148,o),
(-402,-93,o),
(-511,-93,cs),
(-526,-93,o),
(-534,-108,o),
(-534,-138,cs),
(-534,-167,o),
(-526,-182,o),
(-511,-182,cs),
(-496,-182,o),
(-488,-208,o),
(-488,-259,cs),
(-488,-367,o),
(-514,-421,o),
(-567,-421,cs),
(-589,-421,o),
(-618,-415,o),
(-655,-402,cs),
(-704,-385,l),
(-681,-370,o),
(-655,-348,o),
(-627,-321,cs),
(-565,-258,o),
(-534,-204,o),
(-534,-159,cs)
);
},
{
closed = 1;
nodes = (
(-918,-507,o),
(-885,-491,o),
(-855,-475,cs),
(-824,-459,o),
(-795,-443,o),
(-767,-426,c),
(-767,-491,ls),
(-767,-553,o),
(-795,-584,o),
(-851,-584,cs),
(-919,-584,o),
(-953,-564,o),
(-953,-524,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
4 1 0 1 43 22 2 3 0 38 1 7 3 3 76 32 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 1 2 5 89 6 1 2 0 1 0 2 1 105 0 0 0 3 97 0 3 3 20 77 0 7 7 4 97 0 4 4 25 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 5 2 97 6 1 2 2 18 77 0 1 1 2 97 6 1 2 2 18 77 0 0 0 3 97 0 3 3 20 77 0 7 7 4 97 0 4 4 25 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 0 0 3 7 0 3 105 0 7 0 4 7 4 101 0 5 5 2 97 6 1 2 2 18 77 0 1 1 2 97 6 1 2 2 18 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 33 24 36 18 34 34 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1792;
},
{
glyphname = uni17D2_1793;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-801,-568,o),
(-691,-558,o),
(-488,-539,c),
(-488,-628,o),
(-449,-673,o),
(-372,-673,cs),
(-295,-673,o),
(-256,-636,o),
(-256,-561,cs),
(-256,-487,o),
(-287,-450,o),
(-349,-450,c),
(-349,-272,l),
(-209,-272,l),
(-209,-182,l),
(-349,-182,l),
(-349,-93,l),
(-488,-93,l),
(-488,-182,l),
(-814,-182,ls),
(-1000,-182,o),
(-1093,-249,o),
(-1093,-383,cs),
(-1093,-506,o),
(-1001,-568,o),
(-818,-568,cs)
);
},
{
closed = 1;
nodes = (
(-953,-309,o),
(-907,-272,o),
(-814,-272,cs),
(-488,-272,l),
(-488,-450,l),
(-684,-469,o),
(-793,-479,o),
(-814,-479,cs),
(-907,-479,o),
(-953,-447,o),
(-953,-383,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
18 1 0 7 1 76 24 1 5 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 2 133 3 1 1 8 1 4 5 1 4 103 0 7 7 0 97 9 1 0 0 20 77 0 5 5 6 98 0 6 6 25 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
3 1 1 8 1 4 5 1 4 103 0 2 2 18 77 0 7 7 0 97 9 1 0 0 20 77 0 5 5 6 98 0 6 6 25 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 8 1 4 5 1 4 103 0 7 9 1 0 6 7 0 105 0 5 0 6 5 6 102 0 2 2 18 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 27 25 23 21 17 15 13 12 11 10 9 8 7 6 5 3 0 19 1 19 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1793;
},
{
glyphname = uni17D2_1795;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-581,-294,o),
(-558,-316,o),
(-511,-316,cs),
(-488,-316,l),
(-488,-566,l),
(-720,-417,l),
(-953,-566,l),
(-953,-93,l),
(-1093,-93,l),
(-1093,-673,l),
(-953,-673,l),
(-720,-524,l),
(-488,-673,l),
(-348,-673,l),
(-348,-93,l),
(-488,-93,l),
(-534,-138,ls),
(-565,-167,o),
(-581,-204,o),
(-581,-249,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
14 13 12 7 4 1 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 0 1 0 4 1 128 3 1 0 4 1 0 87 3 1 0 0 1 95 2 1 1 0 1 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 4 0 1 0 4 1 128 2 1 1 1 0 95 3 1 0 0 18 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 18 17 19 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1795;
},
{
glyphname = uni17D2_1796;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-910,-479,o),
(-912,-488,o),
(-916,-499,cs),
(-953,-584,l),
(-953,-450,l),
(-935,-450,ls),
(-918,-450,o),
(-910,-457,o),
(-910,-471,cs)
);
},
{
closed = 1;
nodes = (
(-953,-673,l),
(-891,-614,o),
(-853,-563,o),
(-839,-521,cs),
(-830,-494,o),
(-825,-473,o),
(-825,-456,cs),
(-825,-437,o),
(-829,-420,o),
(-837,-405,cs),
(-853,-376,o),
(-876,-361,o),
(-907,-361,cs),
(-953,-361,l),
(-953,-239,l),
(-899,-199,l),
(-720,-297,l),
(-539,-199,l),
(-488,-238,l),
(-488,-673,l),
(-348,-673,l),
(-348,-227,l),
(-534,-93,l),
(-720,-194,l),
(-907,-93,l),
(-1093,-227,l),
(-1093,-673,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
4 1 1 0 1 76 30 29 28 16 15 14 13 12 9 9 2 74 3 1 1 0 1 134 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 23 38 24 17 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1796;
},
{
glyphname = uni17D2_1797;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1124,-516,o),
(-1140,-494,o),
(-1140,-478,cs),
(-1140,-459,o),
(-1124,-450,o),
(-1093,-450,c),
(-1093,-545,l)
);
},
{
closed = 1;
nodes = (
(-1233,-518,o),
(-1210,-561,o),
(-1163,-606,cs),
(-1093,-673,l),
(-954,-673,l),
(-954,-272,ls),
(-954,-212,o),
(-876,-182,o),
(-721,-182,cs),
(-566,-182,o),
(-489,-212,o),
(-489,-272,cs),
(-489,-673,l),
(-349,-673,l),
(-349,-272,ls),
(-349,-153,o),
(-473,-93,o),
(-721,-93,cs),
(-969,-93,o),
(-1093,-153,o),
(-1093,-272,cs),
(-1093,-361,l),
(-1140,-361,o),
(-1175,-370,o),
(-1199,-389,cs),
(-1222,-409,o),
(-1233,-438,o),
(-1233,-477,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
4 1 2 0 2 134 0 1 0 3 5 1 3 105 6 1 5 0 0 5 89 6 1 5 5 0 97 0 0 5 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 1 2 0 2 134 6 1 5 0 0 2 5 0 105 0 3 3 1 97 0 1 1 18 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
5 5 5 25 5 25 18 34 18 37 17 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1797;
},
{
glyphname = uni17D2_1798;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-871,-534,o),
(-732,-521,o),
(-488,-495,c),
(-488,-614,o),
(-426,-673,o),
(-301,-673,cs),
(-208,-673,o),
(-162,-628,o),
(-162,-539,cs),
(-162,-450,o),
(-224,-405,o),
(-348,-405,c),
(-348,-93,l),
(-488,-93,l),
(-488,-405,l),
(-723,-430,o),
(-850,-442,o),
(-870,-442,cs),
(-925,-442,o),
(-953,-415,o),
(-953,-361,cs),
(-953,-272,l),
(-1046,-272,o),
(-1093,-302,o),
(-1093,-361,cs),
(-1093,-476,o),
(-1031,-534,o),
(-906,-534,cs)
);
},
{
closed = 1;
nodes = (
(-286,-495,o),
(-255,-510,o),
(-255,-539,cs),
(-255,-569,o),
(-270,-584,o),
(-301,-584,cs),
(-332,-584,o),
(-348,-554,o),
(-348,-495,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
9 1 4 18 1 6 2 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 1 3 133 0 1 4 2 1 112 0 4 0 6 0 4 6 105 0 2 2 0 98 8 1 0 0 20 77 0 7 7 5 98 0 5 5 25 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 3 4 2 1 114 0 4 0 6 0 4 6 105 0 3 3 18 77 0 2 2 0 98 8 1 0 0 20 77 0 7 7 5 98 0 5 5 25 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 3 4 3 1 4 128 0 4 0 6 0 4 6 105 0 2 8 1 0 7 2 0 106 0 7 0 5 7 5 102 0 3 3 18 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 25 23 22 21 17 15 13 12 11 10 8 6 4 3 0 19 1 19 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_1798;
},
{
glyphname = uni17D2_179B;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1210,-590,o),
(-1148,-652,o),
(-1024,-652,cs),
(-931,-652,o),
(-884,-621,o),
(-884,-559,cs),
(-884,-496,o),
(-915,-465,o),
(-977,-465,c),
(-977,-528,o),
(-993,-559,o),
(-1024,-559,cs),
(-1055,-559,o),
(-1070,-528,o),
(-1070,-465,cs),
(-1070,-279,o),
(-1024,-186,o),
(-931,-186,cs),
(-850,-186,o),
(-786,-268,o),
(-739,-433,cs),
(-698,-579,o),
(-613,-652,o),
(-485,-652,cs),
(-349,-652,o),
(-249,-466,o),
(-184,-93,c),
(-323,-93,l),
(-377,-404,o),
(-431,-559,o),
(-485,-559,cs),
(-540,-559,o),
(-587,-492,o),
(-625,-357,cs),
(-675,-181,o),
(-777,-93,o),
(-931,-93,cs),
(-1117,-93,o),
(-1210,-217,o),
(-1210,-465,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 6 4 1 1 6 114 2 1 0 0 4 6 0 4 105 5 1 1 1 3 98 7 1 3 3 25 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 4 1 1 6 114 0 4 4 0 97 2 1 0 0 18 77 5 1 1 1 3 98 7 1 3 3 25 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 6 4 1 1 6 114 5 1 1 7 1 3 1 3 102 0 4 4 0 97 2 1 0 0 18 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 6 4 1 4 6 1 128 5 1 1 7 1 3 1 3 102 0 4 4 0 97 2 1 0 0 18 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 17 34 34 33 17 34 33 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_179B;
},
{
glyphname = uni17D2_179C;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-503,-673,o),
(-348,-509,o),
(-348,-182,cs),
(-348,-93,l),
(-488,-93,l),
(-578,-196,o),
(-673,-272,o),
(-774,-323,cs),
(-875,-374,o),
(-981,-400,o),
(-1093,-401,c),
(-1093,-482,ls),
(-1093,-609,o),
(-1000,-673,o),
(-814,-673,cs)
);
},
{
closed = 1;
nodes = (
(-882,-468,o),
(-812,-445,o),
(-744,-413,cs),
(-675,-382,o),
(-591,-327,o),
(-490,-249,c),
(-497,-476,o),
(-605,-590,o),
(-814,-590,cs),
(-907,-590,o),
(-953,-554,o),
(-953,-482,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 1 2 15 1 3 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 1 2 133 0 1 3 3 1 112 0 3 3 0 98 4 1 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 2 3 3 1 114 0 2 2 18 77 0 3 3 0 98 4 1 0 0 25 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 3 2 1 3 128 0 2 2 18 77 0 3 3 0 98 4 1 0 0 25 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 2 3 2 1 3 128 0 3 4 1 0 3 0 102 0 2 2 18 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 18 16 8 7 4 3 0 10 1 10 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_179C;
},
{
glyphname = uni17D2_17A0;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1007,-289,ls),
(-978,-307,o),
(-950,-316,o),
(-923,-316,cs),
(-897,-316,o),
(-875,-271,o),
(-856,-182,c),
(-884,-182,ls),
(-910,-182,o),
(-935,-175,o),
(-960,-160,cs),
(-1070,-93,l),
(-1238,-299,l),
(-1238,-346,l),
(-1117,-414,l),
(-1117,-495,ls),
(-1117,-614,o),
(-1039,-673,o),
(-884,-673,cs),
(-729,-673,o),
(-652,-614,o),
(-652,-495,cs),
(-652,-272,ls),
(-652,-212,o),
(-621,-182,o),
(-559,-182,cs),
(-497,-182,o),
(-466,-212,o),
(-466,-272,cs),
(-466,-673,l),
(-326,-673,l),
(-326,-272,ls),
(-326,-153,o),
(-404,-93,o),
(-559,-93,cs),
(-714,-93,o),
(-791,-153,o),
(-791,-272,cs),
(-791,-495,ls),
(-791,-554,o),
(-822,-584,o),
(-884,-584,cs),
(-946,-584,o),
(-977,-554,o),
(-977,-495,cs),
(-977,-394,l),
(-1124,-305,l),
(-1078,-247,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
36 26 2 6 5 25 24 1 3 0 6 2 76 27 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 3 5 1 3 105 0 5 0 6 0 5 6 105 0 0 0 2 97 4 1 2 2 25 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 105 0 3 3 1 97 0 1 1 18 77 0 0 0 2 97 4 1 2 2 25 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 0 6 0 5 6 105 0 0 4 1 2 0 2 101 0 3 3 1 97 0 1 1 18 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
33 39 35 34 18 35 35 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_17A0;
},
{
glyphname = uni17D2_17A2;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1186,-605,o),
(-1155,-640,o),
(-1093,-667,c),
(-953,-667,l),
(-953,-459,l),
(-488,-459,l),
(-488,-501,l),
(-511,-501,ls),
(-558,-501,o),
(-581,-522,o),
(-581,-563,cs),
(-581,-605,o),
(-550,-640,o),
(-488,-667,c),
(-348,-667,l),
(-348,-310,l),
(-479,-252,l),
(-442,-210,l),
(-393,-238,o),
(-356,-252,o),
(-330,-252,cs),
(-311,-252,o),
(-292,-224,o),
(-274,-169,c),
(-305,-169,o),
(-342,-155,o),
(-386,-128,cs),
(-451,-87,l),
(-581,-211,l),
(-581,-294,l),
(-488,-335,l),
(-488,-377,l),
(-953,-377,l),
(-953,-310,l),
(-1084,-252,l),
(-1047,-218,l),
(-998,-241,o),
(-961,-252,o),
(-935,-252,cs),
(-916,-252,o),
(-897,-224,o),
(-879,-169,c),
(-909,-169,o),
(-946,-155,o),
(-991,-128,cs),
(-1056,-87,l),
(-1186,-211,l),
(-1186,-294,l),
(-1093,-335,l),
(-1093,-501,l),
(-1116,-501,ls),
(-1163,-501,o),
(-1186,-522,o),
(-1186,-563,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
29 21 14 6 4 2 1 31 20 19 16 5 4 6 3 2 2 76 30 15 2 2 1 75 22 7 2 1 74 7 1 0 8 6 8 0 6 128 9 1 6 6 132 4 1 1 5 1 2 3 1 2 105 0 3 8 8 3 87 0 3 3 8 95 0 8 3 8 79 42 41 17 35 20 33 22 20 33 22 33 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D2_17A2;
},
{
glyphname = uni17D3;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-861,1660,o),
(-849,1684,o),
(-826,1699,cs),
(-803,1714,o),
(-768,1722,o),
(-721,1722,cs),
(-674,1722,o),
(-639,1714,o),
(-616,1699,cs),
(-593,1684,o),
(-582,1660,o),
(-582,1629,cs),
(-582,1598,o),
(-593,1575,o),
(-616,1559,cs),
(-639,1544,o),
(-674,1536,o),
(-721,1536,cs),
(-768,1536,o),
(-803,1544,o),
(-826,1559,cs),
(-849,1575,o),
(-861,1598,o),
(-861,1629,cs)
);
},
{
closed = 1;
nodes = (
(-954,1567,o),
(-934,1520,o),
(-895,1489,cs),
(-857,1458,o),
(-799,1443,o),
(-721,1443,cs),
(-644,1443,o),
(-586,1458,o),
(-547,1489,cs),
(-508,1520,o),
(-489,1567,o),
(-489,1629,cs),
(-489,1691,o),
(-508,1738,o),
(-547,1769,cs),
(-586,1800,o),
(-644,1815,o),
(-721,1815,cs),
(-799,1815,o),
(-857,1800,o),
(-895,1769,cs),
(-934,1738,o),
(-954,1691,o),
(-954,1629,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 3 0 1 0 3 1 105 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 38 38 38 35 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17D3;
unicode = 6099;
},
{
glyphname = uni17DD;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-898,1591,o),
(-814,1651,o),
(-645,1651,cs),
(-477,1651,o),
(-393,1591,o),
(-393,1470,c),
(-199,1470,l),
(-199,1671,o),
(-347,1771,o),
(-644,1771,cs),
(-941,1771,o),
(-1089,1671,o),
(-1089,1470,c),
(-898,1470,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 3 3 0 113 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
2 1 0 3 0 134 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
33 17 33 16 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17DD;
unicode = 6109;
},
{
glyphname = uni17B7.a;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1024,1741,o),
(-1011,1718,o),
(-984,1702,cs),
(-957,1687,o),
(-918,1679,o),
(-865,1679,cs),
(-279,1679,l),
(-279,1772,l),
(-379,1845,ls),
(-453,1898,o),
(-521,1938,o),
(-584,1965,cs),
(-648,1992,o),
(-706,2005,o),
(-758,2005,cs),
(-847,2005,o),
(-913,1986,o),
(-958,1947,cs),
(-1002,1908,o),
(-1024,1850,o),
(-1024,1772,cs)
);
},
{
closed = 1;
nodes = (
(-865,1803,o),
(-856,1827,o),
(-838,1842,cs),
(-820,1857,o),
(-793,1865,o),
(-758,1865,cs),
(-697,1865,o),
(-641,1857,o),
(-590,1842,cs),
(-539,1827,o),
(-492,1803,o),
(-450,1772,c),
(-865,1772,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
9 1 3 1 75 0 0 4 1 2 3 0 2 105 0 3 1 1 3 87 0 3 3 1 95 0 1 3 1 79 16 15 20 19 15 23 16 23 37 35 5 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17B7.a;
},
{
glyphname = uni17B8.a;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1024,1743,o),
(-1011,1719,o),
(-984,1703,cs),
(-957,1687,o),
(-918,1679,o),
(-865,1679,cs),
(-279,1679,l),
(-279,2051,l),
(-385,2051,l),
(-385,1856,l),
(-458,1909,o),
(-525,1950,o),
(-586,1977,cs),
(-649,2004,o),
(-706,2018,o),
(-758,2018,cs),
(-847,2018,o),
(-913,1998,o),
(-958,1957,cs),
(-1002,1917,o),
(-1024,1857,o),
(-1024,1776,cs)
);
},
{
closed = 1;
nodes = (
(-865,1807,o),
(-856,1832,o),
(-838,1849,cs),
(-820,1864,o),
(-793,1872,o),
(-758,1872,cs),
(-697,1872,o),
(-641,1864,o),
(-590,1849,cs),
(-539,1832,o),
(-492,1807,o),
(-450,1776,c),
(-865,1776,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 4 1 112 0 0 5 1 3 4 0 3 105 0 4 2 2 4 87 0 4 4 2 96 0 2 4 2 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 1 133 0 0 5 1 3 4 0 3 105 0 4 2 2 4 87 0 4 4 2 96 0 2 4 2 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
17 16 21 20 16 24 17 24 33 20 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17B8.a;
},
{
glyphname = uni17B9.a;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-488,2145,o),
(-525,2134,o),
(-552,2111,cs),
(-578,2089,o),
(-593,2056,o),
(-598,2011,c),
(-655,2038,o),
(-709,2051,o),
(-758,2051,cs),
(-847,2051,o),
(-913,2029,o),
(-958,1985,cs),
(-1002,1940,o),
(-1024,1874,o),
(-1024,1785,cs),
(-1024,1714,o),
(-971,1679,o),
(-865,1679,cs),
(-279,1679,l),
(-279,1785,l),
(-349,1844,l),
(-327,1856,o),
(-310,1874,o),
(-297,1897,cs),
(-286,1920,o),
(-280,1950,o),
(-280,1985,cs),
(-280,2038,o),
(-293,2078,o),
(-319,2105,cs),
(-346,2132,o),
(-387,2145,o),
(-440,2145,cs)
);
},
{
closed = 1;
nodes = (
(-865,1821,o),
(-856,1848,o),
(-838,1865,cs),
(-820,1883,o),
(-793,1892,o),
(-758,1892,cs),
(-697,1892,o),
(-641,1883,o),
(-590,1865,cs),
(-539,1848,o),
(-492,1821,o),
(-450,1785,c),
(-865,1785,l)
);
},
{
closed = 1;
nodes = (
(-493,2002,o),
(-488,2016,o),
(-479,2025,cs),
(-470,2034,o),
(-457,2039,o),
(-440,2039,cs),
(-422,2039,o),
(-408,2035,o),
(-399,2026,cs),
(-390,2017,o),
(-385,2003,o),
(-385,1985,cs),
(-385,1967,o),
(-390,1954,o),
(-399,1945,cs),
(-408,1936,o),
(-422,1931,o),
(-440,1931,cs),
(-451,1931,o),
(-460,1933,o),
(-467,1936,cs),
(-472,1939,o),
(-476,1941,o),
(-479,1944,cs),
(-488,1953,o),
(-493,1967,o),
(-493,1984,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
19 1 6 5 8 1 4 3 2 76 9 1 4 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 6 5 3 4 6 114 7 1 0 9 1 5 6 0 5 105 0 2 8 1 3 4 2 3 105 0 4 1 1 4 87 0 4 4 1 96 0 1 4 1 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 5 3 5 6 3 128 7 1 0 9 1 5 6 0 5 105 0 2 8 1 3 4 2 3 105 0 4 1 1 4 87 0 4 4 1 96 0 1 4 1 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
33 32 24 23 1 0 43 42 32 49 33 49 28 27 23 31 24 31 18 16 12 10 0 22 1 22 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17B9.a;
},
{
glyphname = uni17BA.a;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1024,1750,o),
(-1011,1723,o),
(-984,1706,cs),
(-957,1688,o),
(-918,1679,o),
(-865,1679,cs),
(-279,1679,l),
(-279,2158,l),
(-385,2158,l),
(-385,1874,l),
(-422,1903,o),
(-457,1930,o),
(-492,1953,c),
(-492,2158,l),
(-599,2158,l),
(-599,2012,l),
(-656,2038,o),
(-709,2051,o),
(-758,2051,cs),
(-847,2051,o),
(-913,2029,o),
(-958,1985,cs),
(-1002,1940,o),
(-1024,1874,o),
(-1024,1785,cs)
);
},
{
closed = 1;
nodes = (
(-865,1820,o),
(-856,1847,o),
(-838,1865,cs),
(-820,1882,o),
(-793,1891,o),
(-758,1891,cs),
(-697,1891,o),
(-641,1882,o),
(-590,1865,cs),
(-539,1847,o),
(-492,1820,o),
(-450,1785,c),
(-865,1785,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
9 6 2 4 0 11 1 5 4 2 76 2 1 1 0 1 133 0 0 6 1 4 5 0 4 105 0 5 3 3 5 87 0 5 5 3 96 0 3 5 3 80 20 19 24 23 19 27 20 27 33 20 18 35 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17BA.a;
},
{
glyphname = uni17C6.a;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-721,1920,o),
(-713,1943,o),
(-697,1958,cs),
(-682,1974,o),
(-659,1982,o),
(-628,1982,cs),
(-597,1982,o),
(-573,1974,o),
(-558,1958,cs),
(-542,1943,o),
(-534,1920,o),
(-534,1889,cs),
(-534,1858,o),
(-542,1834,o),
(-558,1819,cs),
(-573,1803,o),
(-597,1795,o),
(-628,1795,cs),
(-659,1795,o),
(-682,1803,o),
(-697,1819,cs),
(-713,1834,o),
(-721,1858,o),
(-721,1889,cs)
);
},
{
closed = 1;
nodes = (
(-837,1818,o),
(-820,1766,o),
(-785,1731,cs),
(-750,1696,o),
(-698,1679,o),
(-628,1679,cs),
(-557,1679,o),
(-505,1696,o),
(-470,1731,cs),
(-435,1766,o),
(-418,1818,o),
(-418,1889,cs),
(-418,1959,o),
(-435,2011,o),
(-470,2046,cs),
(-505,2081,o),
(-557,2098,o),
(-628,2098,cs),
(-698,2098,o),
(-750,2081,o),
(-785,2046,cs),
(-820,2011,o),
(-837,1959,o),
(-837,1889,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 3 0 1 0 3 1 105 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 38 38 38 35 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17C6.a;
},
{
glyphname = uni17CE.a;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-710,2119,l),
(-710,1970,l),
(-860,1970,l),
(-860,1849,l),
(-710,1849,l),
(-710,1700,l),
(-590,1700,l),
(-590,1849,l),
(-440,1849,l),
(-440,1970,l),
(-590,1970,l),
(-590,2119,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 5 0 2 5 87 4 1 0 3 1 1 2 0 1 103 0 5 5 2 95 0 2 5 2 79 17 17 17 17 17 16 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17CE.a;
},
{
glyphname = uni17D0.a;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-790,1958,o),
(-837,1927,o),
(-837,1865,cs),
(-837,1803,o),
(-818,1757,o),
(-779,1726,cs),
(-740,1695,o),
(-682,1679,o),
(-604,1679,cs),
(-465,1679,o),
(-360,1703,o),
(-290,1752,cs),
(-220,1800,o),
(-185,1873,o),
(-185,1970,cs),
(-185,2039,o),
(-197,2090,o),
(-221,2124,cs),
(-244,2158,o),
(-278,2175,o),
(-325,2175,cs),
(-356,2175,o),
(-372,2160,o),
(-372,2129,cs),
(-372,2098,o),
(-356,2082,o),
(-325,2082,cs),
(-294,2082,o),
(-278,2045,o),
(-278,1970,cs),
(-278,1905,o),
(-305,1855,o),
(-360,1822,cs),
(-414,1789,o),
(-495,1773,o),
(-604,1773,cs),
(-697,1773,o),
(-744,1804,o),
(-744,1865,c),
(-743,1834,o),
(-720,1819,o),
(-674,1819,cs),
(-627,1819,o),
(-604,1842,o),
(-604,1889,cs),
(-604,1935,o),
(-635,1958,o),
(-697,1958,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
0 4 0 3 0 4 3 105 6 1 0 0 1 2 0 1 105 0 2 5 5 2 89 0 2 2 5 97 0 5 2 5 81 1 0 27 25 19 17 15 13 9 7 5 3 0 31 1 31 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17D0.a;
},
{
glyphname = uni17BB.b;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-349,-785,o),
(-358,-770,o),
(-375,-760,cs),
(-392,-750,o),
(-409,-745,o),
(-425,-745,cs),
(-448,-745,o),
(-469,-750,o),
(-486,-760,cs),
(-503,-770,o),
(-512,-785,o),
(-512,-806,c),
(-497,-806,o),
(-489,-817,o),
(-489,-838,cs),
(-489,-1117,l),
(-349,-1117,l),
(-349,-806,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 0 2 1 0 128 0 2 1 0 2 89 0 2 2 0 95 0 0 2 0 79 35 18 17 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17BB.b;
},
{
glyphname = uni17BC.b;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-694,-745,o),
(-713,-750,o),
(-725,-761,cs),
(-738,-772,o),
(-744,-789,o),
(-744,-812,c),
(-713,-812,o),
(-697,-817,o),
(-697,-826,cs),
(-697,-839,o),
(-713,-853,o),
(-745,-870,cs),
(-776,-887,o),
(-824,-905,o),
(-887,-924,c),
(-916,-935,o),
(-930,-958,o),
(-930,-992,cs),
(-930,-1034,o),
(-915,-1065,o),
(-885,-1085,cs),
(-855,-1106,o),
(-810,-1117,o),
(-749,-1117,c),
(-650,-1101,o),
(-566,-1071,o),
(-498,-1028,cs),
(-429,-985,o),
(-376,-927,o),
(-337,-856,cs),
(-315,-815,o),
(-300,-792,o),
(-291,-787,c),
(-282,-780,o),
(-278,-771,o),
(-278,-761,cs),
(-278,-750,o),
(-292,-745,o),
(-321,-745,cs),
(-351,-745,o),
(-378,-753,o),
(-401,-768,cs),
(-425,-783,o),
(-446,-807,o),
(-463,-840,c),
(-498,-895,o),
(-539,-939,o),
(-586,-974,cs),
(-634,-1009,o),
(-688,-1034,o),
(-749,-1050,c),
(-763,-1050,o),
(-773,-1045,o),
(-780,-1035,cs),
(-787,-1026,o),
(-790,-1011,o),
(-790,-992,c),
(-713,-941,o),
(-665,-905,o),
(-640,-882,cs),
(-616,-858,o),
(-604,-835,o),
(-604,-814,cs),
(-604,-791,o),
(-610,-773,o),
(-621,-761,cs),
(-632,-750,o),
(-648,-745,o),
(-669,-745,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
9 1 1 4 1 76 2 5 2 0 0 4 1 0 4 105 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 1 0 43 42 32 31 22 20 13 12 0 46 1 46 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17BC.b;
},
{
glyphname = uni17BD.b;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-694,-745,o),
(-713,-750,o),
(-725,-761,cs),
(-738,-772,o),
(-744,-789,o),
(-744,-812,c),
(-713,-812,o),
(-697,-817,o),
(-697,-826,cs),
(-697,-843,o),
(-716,-862,o),
(-755,-883,cs),
(-794,-902,o),
(-853,-924,o),
(-930,-948,c),
(-930,-1015,ls),
(-930,-1049,o),
(-914,-1074,o),
(-882,-1091,cs),
(-849,-1108,o),
(-801,-1117,o),
(-736,-1117,c),
(-643,-1050,l),
(-591,-1117,l),
(-516,-1110,o),
(-452,-1082,o),
(-401,-1031,cs),
(-350,-980,o),
(-312,-907,o),
(-287,-812,cs),
(-281,-790,o),
(-278,-773,o),
(-278,-761,cs),
(-279,-750,o),
(-294,-745,o),
(-325,-745,cs),
(-349,-745,o),
(-369,-750,o),
(-384,-761,cs),
(-401,-772,o),
(-412,-790,o),
(-419,-813,cs),
(-441,-882,o),
(-463,-937,o),
(-486,-976,cs),
(-509,-1015,o),
(-533,-1040,o),
(-559,-1050,c),
(-619,-982,l),
(-743,-1050,l),
(-758,-1050,o),
(-770,-1046,o),
(-778,-1037,cs),
(-786,-1029,o),
(-790,-1017,o),
(-790,-1000,c),
(-685,-943,o),
(-605,-872,o),
(-605,-812,cs),
(-605,-789,o),
(-610,-772,o),
(-621,-761,cs),
(-632,-750,o),
(-648,-745,o),
(-669,-745,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
44 42 38 14 9 5 1 0 1 76 32 15 2 1 1 75 31 1 3 73 2 4 2 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 1 0 34 33 24 22 13 12 0 47 1 47 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17BD.b;
},
{
glyphname = uni17BB.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-732,0);
ref = uni17BB;
}
);
width = 0;
}
);
note = uni17BB.n;
},
{
glyphname = uni17BC.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-710,0);
ref = uni17BC;
}
);
width = 0;
}
);
note = uni17BC.n;
},
{
glyphname = uni17BD.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-740,0);
ref = uni17BD;
}
);
width = 0;
}
);
note = uni17BD.n;
},
{
glyphname = uni17BB.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-748,0);
ref = uni17BB.b;
}
);
width = 0;
}
);
note = uni17BB.n2;
},
{
glyphname = uni17BC.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-730,0);
ref = uni17BC.b;
}
);
width = 0;
}
);
note = uni17BC.n2;
},
{
glyphname = uni17BD.n2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-740,0);
ref = uni17BD.b;
}
);
width = 0;
}
);
note = uni17BD.n2;
},
{
glyphname = uni17B7.r;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-837,1598,o),
(-824,1575,o),
(-797,1559,cs),
(-770,1544,o),
(-731,1536,o),
(-678,1536,cs),
(-92,1536,l),
(-92,1629,l),
(-192,1702,ls),
(-266,1755,o),
(-334,1795,o),
(-397,1822,cs),
(-461,1849,o),
(-519,1862,o),
(-571,1862,cs),
(-660,1862,o),
(-726,1843,o),
(-771,1804,cs),
(-815,1765,o),
(-837,1706,o),
(-837,1629,cs)
);
},
{
closed = 1;
nodes = (
(-678,1660,o),
(-669,1684,o),
(-651,1699,cs),
(-633,1714,o),
(-606,1722,o),
(-571,1722,cs),
(-510,1722,o),
(-454,1714,o),
(-403,1699,cs),
(-352,1684,o),
(-305,1660,o),
(-263,1629,c),
(-678,1629,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
9 1 3 1 75 0 0 4 1 2 3 0 2 105 0 3 1 1 3 87 0 3 3 1 95 0 1 3 1 79 16 15 20 19 15 23 16 23 37 35 5 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17B7.r;
},
{
glyphname = uni17B8.r;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-837,1600,o),
(-824,1576,o),
(-797,1560,cs),
(-770,1544,o),
(-731,1536,o),
(-678,1536,cs),
(-92,1536,l),
(-92,1908,l),
(-198,1908,l),
(-198,1713,l),
(-271,1766,o),
(-338,1807,o),
(-399,1834,cs),
(-462,1861,o),
(-519,1875,o),
(-571,1875,cs),
(-660,1875,o),
(-726,1855,o),
(-771,1814,cs),
(-815,1774,o),
(-837,1714,o),
(-837,1633,cs)
);
},
{
closed = 1;
nodes = (
(-678,1664,o),
(-669,1688,o),
(-651,1705,cs),
(-633,1721,o),
(-606,1729,o),
(-571,1729,cs),
(-510,1729,o),
(-454,1721,o),
(-403,1705,cs),
(-352,1688,o),
(-305,1664,o),
(-263,1633,c),
(-678,1633,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 4 1 112 0 0 5 1 3 4 0 3 105 0 4 2 2 4 87 0 4 4 2 96 0 2 4 2 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 1 133 0 0 5 1 3 4 0 3 105 0 4 2 2 4 87 0 4 4 2 96 0 2 4 2 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
17 16 21 20 16 24 17 24 33 20 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17B8.r;
},
{
glyphname = uni17B9.r;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-301,2002,o),
(-338,1991,o),
(-365,1968,cs),
(-391,1946,o),
(-406,1913,o),
(-411,1868,c),
(-468,1895,o),
(-522,1908,o),
(-571,1908,cs),
(-660,1908,o),
(-726,1886,o),
(-771,1842,cs),
(-815,1797,o),
(-837,1731,o),
(-837,1642,cs),
(-837,1571,o),
(-784,1536,o),
(-678,1536,cs),
(-92,1536,l),
(-92,1642,l),
(-162,1701,l),
(-140,1713,o),
(-123,1731,o),
(-110,1754,cs),
(-99,1777,o),
(-93,1807,o),
(-93,1842,cs),
(-93,1895,o),
(-106,1935,o),
(-132,1962,cs),
(-159,1989,o),
(-200,2002,o),
(-253,2002,cs)
);
},
{
closed = 1;
nodes = (
(-678,1678,o),
(-669,1705,o),
(-651,1722,cs),
(-633,1740,o),
(-606,1749,o),
(-571,1749,cs),
(-510,1749,o),
(-454,1740,o),
(-403,1722,cs),
(-352,1705,o),
(-305,1678,o),
(-263,1642,c),
(-678,1642,l)
);
},
{
closed = 1;
nodes = (
(-306,1859,o),
(-301,1873,o),
(-292,1882,cs),
(-283,1891,o),
(-270,1896,o),
(-253,1896,cs),
(-235,1896,o),
(-221,1892,o),
(-212,1883,cs),
(-203,1874,o),
(-198,1860,o),
(-198,1842,cs),
(-198,1824,o),
(-203,1811,o),
(-212,1802,cs),
(-221,1793,o),
(-235,1788,o),
(-253,1788,cs),
(-264,1788,o),
(-273,1790,o),
(-280,1793,cs),
(-285,1796,o),
(-289,1798,o),
(-292,1801,cs),
(-301,1810,o),
(-306,1824,o),
(-306,1841,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
19 1 6 5 8 1 4 3 2 76 9 1 4 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 6 5 3 4 6 114 7 1 0 9 1 5 6 0 5 105 0 2 8 1 3 4 2 3 105 0 4 1 1 4 87 0 4 4 1 96 0 1 4 1 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 5 3 5 6 3 128 7 1 0 9 1 5 6 0 5 105 0 2 8 1 3 4 2 3 105 0 4 1 1 4 87 0 4 4 1 96 0 1 4 1 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
33 32 24 23 1 0 43 42 32 49 33 49 28 27 23 31 24 31 18 16 12 10 0 22 1 22 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17B9.r;
},
{
glyphname = uni17BA.r;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-837,1607,o),
(-824,1580,o),
(-797,1563,cs),
(-770,1545,o),
(-731,1536,o),
(-678,1536,cs),
(-92,1536,l),
(-92,2014,l),
(-198,2014,l),
(-198,1731,l),
(-235,1760,o),
(-270,1787,o),
(-305,1810,c),
(-305,2014,l),
(-412,2014,l),
(-412,1869,l),
(-469,1895,o),
(-522,1908,o),
(-571,1908,cs),
(-660,1908,o),
(-726,1886,o),
(-771,1842,cs),
(-815,1797,o),
(-837,1731,o),
(-837,1642,cs)
);
},
{
closed = 1;
nodes = (
(-678,1677,o),
(-669,1704,o),
(-651,1722,cs),
(-633,1739,o),
(-606,1748,o),
(-571,1748,cs),
(-510,1748,o),
(-454,1739,o),
(-403,1722,cs),
(-352,1704,o),
(-305,1677,o),
(-263,1642,c),
(-678,1642,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
9 6 2 4 0 11 1 5 4 2 76 2 1 1 0 1 133 0 0 6 1 4 5 0 4 105 0 5 3 3 5 87 0 5 5 3 96 0 3 5 3 80 20 19 24 23 19 27 20 27 33 20 18 35 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17BA.r;
},
{
glyphname = uni17C6.r;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-489,1730,o),
(-481,1753,o),
(-465,1769,cs),
(-450,1784,o),
(-427,1792,o),
(-396,1792,cs),
(-365,1792,o),
(-341,1784,o),
(-326,1769,cs),
(-310,1753,o),
(-302,1730,o),
(-302,1699,cs),
(-302,1668,o),
(-310,1644,o),
(-326,1629,cs),
(-341,1614,o),
(-365,1606,o),
(-396,1606,cs),
(-427,1606,o),
(-450,1614,o),
(-465,1629,cs),
(-481,1644,o),
(-489,1668,o),
(-489,1699,cs)
);
},
{
closed = 1;
nodes = (
(-605,1629,o),
(-588,1577,o),
(-553,1542,cs),
(-518,1507,o),
(-466,1489,o),
(-396,1489,cs),
(-325,1489,o),
(-273,1507,o),
(-238,1542,cs),
(-203,1577,o),
(-186,1629,o),
(-186,1699,cs),
(-186,1769,o),
(-203,1821,o),
(-238,1856,cs),
(-273,1891,o),
(-325,1908,o),
(-396,1908,cs),
(-466,1908,o),
(-518,1891,o),
(-553,1856,cs),
(-588,1821,o),
(-605,1769,o),
(-605,1699,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 3 0 1 0 3 1 105 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 38 38 38 35 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17C6.r;
},
{
glyphname = uni17C9.r;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-609,1815,l),
(-609,1536,l),
(-550,1489,l),
(-493,1536,l),
(-493,1815,l)
);
},
{
closed = 1;
nodes = (
(-301,1536,l),
(-243,1489,l),
(-185,1536,l),
(-185,1815,l),
(-302,1815,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
7 6 5 2 1 0 6 0 73 1 1 0 0 118 20 19 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17C9.r;
},
{
glyphname = uni17CD.r;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-474,1676,o),
(-470,1694,o),
(-463,1705,cs),
(-455,1716,o),
(-443,1722,o),
(-428,1722,cs),
(-389,1722,o),
(-346,1707,o),
(-300,1676,c),
(-279,1676,o),
(-258,1679,o),
(-235,1686,c),
(-188,1709,o),
(-146,1735,o),
(-109,1766,cs),
(-72,1797,o),
(-39,1832,o),
(-11,1871,c),
(-4,1877,o),
(0,1884,o),
(0,1893,cs),
(0,1902,o),
(-5,1913,o),
(-14,1925,cs),
(-28,1943,o),
(-41,1952,o),
(-53,1952,c),
(-63,1950,l),
(-89,1905,o),
(-121,1868,o),
(-158,1838,cs),
(-195,1808,o),
(-237,1785,o),
(-284,1770,c),
(-320,1800,o),
(-368,1815,o),
(-428,1815,cs),
(-490,1815,o),
(-536,1801,o),
(-567,1774,cs),
(-598,1747,o),
(-614,1706,o),
(-614,1652,cs),
(-614,1598,o),
(-600,1557,o),
(-573,1530,cs),
(-546,1503,o),
(-505,1489,o),
(-451,1489,cs),
(-397,1489,o),
(-356,1498,o),
(-329,1517,cs),
(-302,1536,o),
(-288,1563,o),
(-288,1600,cs),
(-288,1619,o),
(-304,1629,o),
(-335,1629,cs),
(-366,1629,o),
(-381,1619,o),
(-381,1600,cs),
(-381,1589,o),
(-397,1583,o),
(-428,1583,cs),
(-443,1583,o),
(-455,1589,o),
(-463,1601,cs),
(-470,1612,o),
(-474,1630,o),
(-474,1653,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
24 1 5 3 1 76 0 4 5 1 5 4 1 128 0 1 0 0 1 112 0 3 0 5 4 3 5 105 0 0 2 2 0 89 0 0 0 2 98 0 2 0 2 82 44 42 41 40 38 36 34 35 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni17CD.r;
},
{
glyphname = uni17D2_1783_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-643,-271,o),
(-651,-265,o),
(-651,-254,cs),
(-651,-236,o),
(-635,-212,o),
(-604,-182,c),
(-604,-271,l),
(-628,-271,ls)
);
},
{
closed = 1;
nodes = (
(-744,-290,o),
(-734,-317,o),
(-715,-334,cs),
(-696,-351,o),
(-667,-360,o),
(-628,-360,cs),
(-604,-360,l),
(-604,-495,ls),
(-604,-554,o),
(-581,-599,o),
(-535,-629,cs),
(-488,-658,o),
(-418,-673,o),
(-325,-673,cs),
(-264,-673,o),
(-217,-669,o),
(-184,-661,cs),
(-150,-652,o),
(-128,-640,o),
(-117,-624,c),
(-106,-640,o),
(-80,-652,o),
(-37,-661,cs),
(7,-669,o),
(66,-673,o),
(140,-673,cs),
(241,-673,o),
(317,-658,o),
(368,-629,cs),
(418,-599,o),
(443,-554,o),
(443,-495,cs),
(443,869,l),
(246,996,l),
(482,1152,l),
(1001,984,l),
(1001,0,l),
(1164,0,l),
(1164,1103,l),
(543,1303,l),
(117,1025,l),
(117,965,l),
(280,862,l),
(280,-495,ls),
(280,-525,o),
(268,-547,o),
(245,-562,cs),
(222,-577,o),
(187,-584,o),
(140,-584,cs),
(78,-584,o),
(32,-577,o),
(1,-562,cs),
(-30,-547,o),
(-46,-525,o),
(-46,-495,cs),
(-46,-394,l),
(-193,-305,l),
(-146,-246,l),
(-76,-290,ls),
(-47,-307,o),
(-19,-316,o),
(8,-316,cs),
(34,-316,o),
(56,-271,o),
(75,-182,c),
(47,-182,ls),
(21,-182,o),
(-4,-175,o),
(-28,-160,cs),
(-139,-93,l),
(-306,-299,l),
(-306,-346,l),
(-185,-414,l),
(-185,-495,ls),
(-185,-525,o),
(-197,-547,o),
(-221,-562,cs),
(-244,-577,o),
(-278,-584,o),
(-325,-584,cs),
(-372,-584,o),
(-406,-577,o),
(-429,-562,cs),
(-453,-547,o),
(-465,-525,o),
(-465,-496,cs),
(-465,-93,l),
(-604,-93,l),
(-651,-123,o),
(-686,-151,o),
(-709,-178,cs),
(-732,-205,o),
(-744,-230,o),
(-744,-254,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
67 4 2 0 7 68 57 2 8 0 56 1 4 8 69 55 2 6 4 26 1 2 6 5 76 58 1 5 2 1 7 2 75 17 16 15 14 11 10 9 8 7 9 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 1 7 1 5 7 128 0 7 0 8 4 7 8 105 0 0 0 4 6 0 4 105 0 1 1 19 77 9 1 6 6 2 97 3 1 2 2 25 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 7 0 8 4 7 8 105 0 0 0 4 6 0 4 105 0 1 1 19 77 0 5 5 18 77 9 1 6 6 2 97 3 1 2 2 25 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 7 0 8 4 7 8 105 0 0 0 4 6 0 4 105 9 1 6 3 1 2 6 2 101 0 1 1 19 77 0 5 5 18 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
75 73 33 41 36 23 36 38 40 27 16 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D2_1783_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1783_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-643,-271,o),
(-651,-265,o),
(-651,-254,cs),
(-651,-236,o),
(-635,-212,o),
(-604,-182,c),
(-604,-271,l),
(-628,-271,ls)
);
},
{
closed = 1;
nodes = (
(-744,-290,o),
(-734,-317,o),
(-715,-334,cs),
(-696,-351,o),
(-667,-360,o),
(-628,-360,cs),
(-604,-360,l),
(-604,-495,ls),
(-604,-554,o),
(-581,-599,o),
(-535,-629,cs),
(-488,-658,o),
(-418,-673,o),
(-325,-673,cs),
(-264,-673,o),
(-217,-669,o),
(-184,-661,cs),
(-150,-652,o),
(-128,-640,o),
(-117,-624,c),
(-106,-640,o),
(-80,-652,o),
(-37,-661,cs),
(7,-669,o),
(66,-673,o),
(140,-673,cs),
(241,-673,o),
(317,-658,o),
(368,-629,cs),
(418,-599,o),
(443,-554,o),
(443,-495,cs),
(443,869,l),
(246,996,l),
(482,1152,l),
(1001,984,l),
(1001,0,l),
(1164,0,l),
(1164,1024,l),
(1195,1086,o),
(1211,1133,o),
(1211,1164,cs),
(1211,1536,ls),
(1211,1598,o),
(1200,1645,o),
(1179,1676,cs),
(1158,1707,o),
(1126,1722,o),
(1083,1722,cs),
(1040,1722,o),
(1008,1714,o),
(987,1699,cs),
(966,1684,o),
(956,1660,o),
(956,1629,c),
(987,1629,o),
(1010,1621,o),
(1026,1606,cs),
(1041,1591,o),
(1049,1567,o),
(1049,1536,cs),
(1049,1140,l),
(543,1303,l),
(117,1025,l),
(117,965,l),
(280,862,l),
(280,-495,ls),
(280,-525,o),
(268,-547,o),
(245,-562,cs),
(222,-577,o),
(187,-584,o),
(140,-584,cs),
(78,-584,o),
(32,-577,o),
(1,-562,cs),
(-30,-547,o),
(-46,-525,o),
(-46,-495,cs),
(-46,-394,l),
(-193,-305,l),
(-146,-246,l),
(-76,-290,ls),
(-47,-307,o),
(-19,-316,o),
(8,-316,cs),
(34,-316,o),
(56,-271,o),
(75,-182,c),
(47,-182,ls),
(21,-182,o),
(-4,-175,o),
(-28,-160,cs),
(-139,-93,l),
(-306,-299,l),
(-306,-346,l),
(-185,-414,l),
(-185,-495,ls),
(-185,-525,o),
(-197,-547,o),
(-221,-562,cs),
(-244,-577,o),
(-278,-584,o),
(-325,-584,cs),
(-372,-584,o),
(-406,-577,o),
(-429,-562,cs),
(-453,-547,o),
(-465,-525,o),
(-465,-496,cs),
(-465,-93,l),
(-604,-93,l),
(-651,-123,o),
(-686,-151,o),
(-709,-178,cs),
(-732,-205,o),
(-744,-230,o),
(-744,-254,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
33 32 31 30 27 11 10 9 8 7 10 3 1 83 4 2 0 9 84 73 2 10 0 72 1 6 10 85 71 2 8 6 42 1 4 8 6 76 74 1 7 2 1 9 2 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 2 133 0 1 3 1 133 0 7 3 9 3 7 9 128 0 9 0 10 6 9 10 105 0 0 0 6 8 0 6 105 0 3 3 19 77 11 1 8 8 4 97 5 1 4 4 25 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 2 1 2 133 0 1 3 1 133 0 9 0 10 6 9 10 105 0 0 0 6 8 0 6 105 0 3 3 19 77 0 7 7 18 77 11 1 8 8 4 97 5 1 4 4 25 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 2 133 0 1 3 1 133 0 9 0 10 6 9 10 105 0 0 0 6 8 0 6 105 11 1 8 5 1 4 8 4 101 0 3 3 19 77 0 7 7 18 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
91 89 81 79 78 76 36 23 36 38 40 23 35 30 16 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D2_1783_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1788_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,-525,o),
(266,-547,o),
(240,-562,cs),
(213,-577,o),
(174,-584,o),
(121,-584,cs),
(57,-584,o),
(13,-576,o),
(-11,-559,cs),
(-35,-542,o),
(-47,-523,o),
(-47,-501,cs),
(-47,-394,l),
(-194,-305,l),
(-147,-246,l),
(-76,-290,ls),
(-47,-307,o),
(-20,-316,o),
(7,-316,cs),
(34,-316,o),
(56,-271,o),
(74,-182,c),
(47,-182,ls),
(20,-182,o),
(-5,-175,o),
(-29,-160,cs),
(-140,-93,l),
(-307,-299,l),
(-307,-346,l),
(-186,-414,l),
(-186,-494,ls),
(-186,-525,o),
(-198,-547,o),
(-222,-562,cs),
(-245,-577,o),
(-279,-584,o),
(-326,-584,cs),
(-373,-584,o),
(-407,-577,o),
(-430,-562,cs),
(-453,-547,o),
(-465,-525,o),
(-465,-496,cs),
(-465,-271,ls),
(-465,-212,o),
(-488,-167,o),
(-535,-138,cs),
(-582,-108,o),
(-652,-93,o),
(-745,-93,cs),
(-838,-93,o),
(-907,-108,o),
(-954,-138,cs),
(-1001,-167,o),
(-1024,-211,o),
(-1024,-270,cs),
(-1024,-673,l),
(-884,-673,l),
(-838,-606,ls),
(-807,-561,o),
(-791,-524,o),
(-791,-495,cs),
(-791,-465,o),
(-814,-450,o),
(-861,-450,cs),
(-884,-450,l),
(-884,-271,ls),
(-884,-242,o),
(-872,-219,o),
(-849,-204,cs),
(-826,-189,o),
(-792,-182,o),
(-745,-182,cs),
(-698,-182,o),
(-663,-189,o),
(-640,-204,cs),
(-617,-219,o),
(-605,-242,o),
(-605,-271,cs),
(-605,-495,ls),
(-605,-554,o),
(-582,-599,o),
(-535,-629,cs),
(-488,-658,o),
(-419,-673,o),
(-326,-673,cs),
(-279,-673,o),
(-238,-669,o),
(-203,-660,cs),
(-168,-651,o),
(-138,-637,o),
(-115,-619,c),
(-92,-637,o),
(-60,-651,o),
(-21,-660,cs),
(18,-669,o),
(65,-673,o),
(121,-673,cs),
(228,-673,o),
(308,-658,o),
(362,-629,cs),
(415,-599,o),
(442,-554,o),
(442,-495,cs),
(442,869,l),
(245,996,l),
(481,1152,l),
(1001,984,l),
(1001,0,l),
(1164,0,l),
(1164,1103,l),
(543,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,-495,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
77 76 66 3 9 8 78 65 64 3 4 9 20 1 1 7 3 76 67 1 6 1 75 11 10 9 8 5 4 3 2 1 9 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 9 7 9 4 7 128 0 6 0 3 8 6 3 105 0 8 0 9 4 8 9 105 0 0 0 19 77 10 1 7 7 1 97 5 2 2 1 1 25 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 9 7 9 4 7 128 0 8 0 9 4 8 9 105 0 0 0 19 77 0 3 3 6 97 0 6 6 18 77 10 1 7 7 1 97 5 2 2 1 1 25 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 4 9 7 9 4 7 128 0 8 0 9 4 8 9 105 10 1 7 5 2 2 1 7 1 101 0 0 0 19 77 0 3 3 6 97 0 6 6 18 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
84 82 74 72 41 39 36 20 36 39 38 40 22 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D2_1788_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1788_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,-525,o),
(266,-547,o),
(240,-562,cs),
(213,-577,o),
(174,-584,o),
(121,-584,cs),
(57,-584,o),
(13,-576,o),
(-11,-559,cs),
(-35,-542,o),
(-47,-523,o),
(-47,-501,cs),
(-47,-394,l),
(-194,-305,l),
(-147,-246,l),
(-76,-290,ls),
(-47,-307,o),
(-20,-316,o),
(7,-316,cs),
(34,-316,o),
(56,-271,o),
(74,-182,c),
(47,-182,ls),
(20,-182,o),
(-5,-175,o),
(-29,-160,cs),
(-140,-93,l),
(-307,-299,l),
(-307,-346,l),
(-186,-414,l),
(-186,-494,ls),
(-186,-525,o),
(-198,-547,o),
(-222,-562,cs),
(-245,-577,o),
(-279,-584,o),
(-326,-584,cs),
(-373,-584,o),
(-407,-577,o),
(-430,-562,cs),
(-453,-547,o),
(-465,-525,o),
(-465,-496,cs),
(-465,-271,ls),
(-465,-212,o),
(-488,-167,o),
(-535,-138,cs),
(-582,-108,o),
(-652,-93,o),
(-745,-93,cs),
(-838,-93,o),
(-907,-108,o),
(-954,-138,cs),
(-1001,-167,o),
(-1024,-211,o),
(-1024,-270,cs),
(-1024,-673,l),
(-884,-673,l),
(-838,-606,ls),
(-807,-561,o),
(-791,-524,o),
(-791,-495,cs),
(-791,-465,o),
(-814,-450,o),
(-861,-450,cs),
(-884,-450,l),
(-884,-271,ls),
(-884,-242,o),
(-872,-219,o),
(-849,-204,cs),
(-826,-189,o),
(-792,-182,o),
(-745,-182,cs),
(-698,-182,o),
(-663,-189,o),
(-640,-204,cs),
(-617,-219,o),
(-605,-242,o),
(-605,-271,cs),
(-605,-495,ls),
(-605,-554,o),
(-582,-599,o),
(-535,-629,cs),
(-488,-658,o),
(-419,-673,o),
(-326,-673,cs),
(-279,-673,o),
(-238,-669,o),
(-203,-660,cs),
(-168,-651,o),
(-138,-637,o),
(-115,-619,c),
(-92,-637,o),
(-60,-651,o),
(-21,-660,cs),
(18,-669,o),
(65,-673,o),
(121,-673,cs),
(228,-673,o),
(308,-658,o),
(362,-629,cs),
(415,-599,o),
(442,-554,o),
(442,-495,cs),
(442,869,l),
(245,996,l),
(481,1152,l),
(1001,984,l),
(1001,0,l),
(1164,0,l),
(1164,1024,l),
(1195,1086,o),
(1210,1133,o),
(1210,1164,cs),
(1210,1536,ls),
(1210,1598,o),
(1200,1645,o),
(1179,1676,cs),
(1158,1707,o),
(1126,1722,o),
(1083,1722,cs),
(1040,1722,o),
(1008,1714,o),
(987,1699,cs),
(966,1684,o),
(955,1660,o),
(955,1629,c),
(986,1629,o),
(1010,1621,o),
(1025,1606,cs),
(1040,1591,o),
(1048,1567,o),
(1048,1536,cs),
(1048,1140,l),
(543,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,-495,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
27 26 25 24 21 5 4 3 2 1 10 2 0 93 92 82 3 11 10 94 81 80 3 6 11 36 1 3 9 4 76 83 1 8 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 133 0 0 2 0 133 0 6 11 9 11 6 9 128 0 8 0 5 10 8 5 105 0 10 0 11 6 10 11 105 0 2 2 19 77 12 1 9 9 3 97 7 4 2 3 3 25 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 133 0 0 2 0 133 0 6 11 9 11 6 9 128 0 10 0 11 6 10 11 105 0 2 2 19 77 0 5 5 8 97 0 8 8 18 77 12 1 9 9 3 97 7 4 2 3 3 25 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 1 133 0 0 2 0 133 0 6 11 9 11 6 9 128 0 10 0 11 6 10 11 105 12 1 9 7 4 2 3 9 3 101 0 2 2 19 77 0 5 5 8 97 0 8 8 18 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
100 98 90 88 87 85 76 74 36 20 36 39 38 40 23 35 25 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D2_1788_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_178D_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-794,-477,o),
(-796,-488,o),
(-800,-499,cs),
(-837,-584,l),
(-837,-450,l),
(-819,-450,ls),
(-802,-450,o),
(-794,-457,o),
(-794,-472,cs)
);
},
{
closed = 1;
nodes = (
(-837,-673,l),
(-775,-614,o),
(-737,-563,o),
(-723,-522,cs),
(-714,-495,o),
(-709,-473,o),
(-709,-456,cs),
(-709,-437,o),
(-713,-421,o),
(-721,-406,cs),
(-737,-375,o),
(-760,-360,o),
(-791,-360,cs),
(-837,-360,l),
(-837,-239,l),
(-783,-199,l),
(-605,-296,l),
(-423,-199,l),
(-372,-238,l),
(-372,-370,l),
(-434,-370,o),
(-465,-400,o),
(-465,-459,cs),
(-465,-495,o),
(-449,-537,o),
(-418,-584,c),
(-372,-673,l),
(-232,-673,l),
(-232,-459,l),
(-186,-459,ls),
(-154,-459,o),
(-120,-476,o),
(-83,-517,cs),
(-26,-582,ls),
(26,-641,o),
(65,-673,o),
(177,-673,cs),
(266,-673,o),
(332,-658,o),
(377,-629,cs),
(421,-599,o),
(443,-554,o),
(443,-494,cs),
(443,869,l),
(245,996,l),
(482,1152,l),
(1001,984,l),
(1001,0,l),
(1164,0,l),
(1164,1103,l),
(543,1303,l),
(117,1025,l),
(117,965,l),
(280,862,l),
(280,-495,ls),
(280,-525,o),
(271,-547,o),
(254,-562,cs),
(237,-577,o),
(212,-584,o),
(177,-584,cs),
(97,-584,o),
(80,-563,o),
(44,-526,cs),
(-15,-461,ls),
(-71,-400,o),
(-122,-370,o),
(-186,-370,cs),
(-232,-370,l),
(-232,-227,l),
(-418,-93,l),
(-605,-194,l),
(-791,-93,l),
(-977,-227,l),
(-977,-673,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
60 59 58 57 56 44 43 42 41 40 10 5 1 1 76 4 1 9 1 75 19 18 17 16 13 12 11 10 9 9 1 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
60 59 58 57 56 44 43 42 41 40 10 6 1 1 76 4 1 9 1 75 19 18 17 16 13 12 11 10 9 9 1 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
8 6 2 5 3 1 0 9 5 0 105 0 9 7 4 2 2 9 2 99 0 1 1 19 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 6 5 0 6 89 8 1 5 3 1 0 9 5 0 105 0 9 7 4 2 2 9 2 99 0 1 1 19 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
70 68 38 23 38 20 17 37 40 28 17 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D2_178D_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_178D_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-794,-477,o),
(-796,-488,o),
(-800,-499,cs),
(-837,-584,l),
(-837,-450,l),
(-819,-450,ls),
(-802,-450,o),
(-794,-457,o),
(-794,-472,cs)
);
},
{
closed = 1;
nodes = (
(-837,-673,l),
(-775,-614,o),
(-737,-563,o),
(-723,-522,cs),
(-714,-495,o),
(-709,-473,o),
(-709,-456,cs),
(-709,-437,o),
(-713,-421,o),
(-721,-406,cs),
(-737,-375,o),
(-760,-360,o),
(-791,-360,cs),
(-837,-360,l),
(-837,-239,l),
(-783,-199,l),
(-605,-296,l),
(-423,-199,l),
(-372,-238,l),
(-372,-370,l),
(-434,-370,o),
(-465,-400,o),
(-465,-459,cs),
(-465,-495,o),
(-449,-537,o),
(-418,-584,c),
(-372,-673,l),
(-232,-673,l),
(-232,-459,l),
(-186,-459,ls),
(-154,-459,o),
(-120,-476,o),
(-83,-517,cs),
(-26,-582,ls),
(26,-641,o),
(65,-673,o),
(177,-673,cs),
(266,-673,o),
(332,-658,o),
(377,-629,cs),
(421,-599,o),
(443,-554,o),
(443,-494,cs),
(443,869,l),
(245,996,l),
(482,1152,l),
(1001,984,l),
(1001,0,l),
(1164,0,l),
(1164,1024,l),
(1195,1086,o),
(1211,1133,o),
(1211,1164,cs),
(1211,1536,ls),
(1211,1598,o),
(1200,1645,o),
(1179,1676,cs),
(1158,1707,o),
(1126,1722,o),
(1083,1722,cs),
(1040,1722,o),
(1008,1714,o),
(987,1699,cs),
(966,1684,o),
(956,1660,o),
(956,1629,c),
(987,1629,o),
(1010,1621,o),
(1025,1606,cs),
(1041,1591,o),
(1049,1567,o),
(1049,1536,cs),
(1049,1140,l),
(543,1303,l),
(117,1025,l),
(117,965,l),
(280,862,l),
(280,-495,ls),
(280,-525,o),
(271,-547,o),
(254,-562,cs),
(237,-577,o),
(212,-584,o),
(177,-584,cs),
(97,-584,o),
(80,-563,o),
(44,-526,cs),
(-15,-461,ls),
(-71,-400,o),
(-122,-370,o),
(-186,-370,cs),
(-232,-370,l),
(-232,-227,l),
(-418,-93,l),
(-605,-194,l),
(-791,-93,l),
(-977,-227,l),
(-977,-673,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
35 34 33 32 29 13 12 11 10 9 10 3 1 76 75 74 73 72 60 59 58 57 56 10 7 3 2 76 4 1 11 1 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
35 34 33 32 29 13 12 11 10 9 10 3 1 76 75 74 73 72 60 59 58 57 56 10 8 3 2 76 4 1 11 1 75 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 2 133 0 1 3 1 133 10 8 2 7 5 1 0 11 7 0 105 0 11 9 6 2 4 11 4 99 0 3 3 19 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 2 133 0 1 3 1 133 0 8 7 0 8 89 10 1 7 5 1 0 11 7 0 105 0 11 9 6 2 4 11 4 99 0 3 3 19 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
86 84 79 77 71 70 38 20 17 37 40 23 35 31 17 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D2_178D_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1794_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-278,-316,l),
(-255,-316,ls),
(-208,-316,o),
(-185,-294,o),
(-185,-249,cs),
(-185,-204,o),
(-201,-167,o),
(-232,-138,cs),
(-278,-93,l),
(-418,-93,l),
(-418,-673,l),
(-278,-673,l),
(1,-501,l),
(280,-673,l),
(443,-673,l),
(443,869,l),
(246,996,l),
(482,1152,l),
(1002,984,l),
(1002,0,l),
(1165,0,l),
(1165,1103,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(280,862,l),
(280,-567,l),
(1,-395,l),
(-278,-567,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
26 15 1 3 1 4 1 76 12 11 10 9 6 5 4 3 2 9 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 4 3 1 3 4 1 128 0 3 2 1 1 3 1 99 0 0 0 19 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 4 3 1 3 4 1 128 0 0 0 19 77 2 1 1 1 3 95 0 3 3 18 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 18 21 23 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D2_1794_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1794_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-278,-316,l),
(-255,-316,ls),
(-208,-316,o),
(-185,-294,o),
(-185,-249,cs),
(-185,-204,o),
(-201,-167,o),
(-232,-138,cs),
(-278,-93,l),
(-418,-93,l),
(-418,-673,l),
(-278,-673,l),
(1,-501,l),
(280,-673,l),
(443,-673,l),
(443,869,l),
(246,996,l),
(482,1152,l),
(1002,984,l),
(1002,0,l),
(1165,0,l),
(1165,1024,l),
(1196,1086,o),
(1211,1133,o),
(1211,1164,cs),
(1211,1536,ls),
(1211,1598,o),
(1200,1645,o),
(1179,1676,cs),
(1158,1707,o),
(1127,1722,o),
(1084,1722,cs),
(1041,1722,o),
(1009,1714,o),
(988,1699,cs),
(967,1684,o),
(956,1660,o),
(956,1629,c),
(987,1629,o),
(1011,1621,o),
(1026,1606,cs),
(1041,1591,o),
(1049,1567,o),
(1049,1536,cs),
(1049,1140,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(280,862,l),
(280,-567,l),
(1,-395,l),
(-278,-567,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
28 27 26 25 22 6 5 4 3 2 10 2 0 42 31 1 3 3 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 133 0 0 2 0 133 0 6 5 3 5 6 3 128 0 5 4 1 3 5 3 99 0 2 2 19 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 1 133 0 0 2 0 133 0 6 5 3 5 6 3 128 0 2 2 19 77 4 1 3 3 5 95 0 5 5 18 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 17 18 21 23 35 26 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D2_1794_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_1799_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(280,-525,o),
(257,-547,o),
(210,-562,cs),
(164,-577,o),
(94,-584,o),
(1,-584,cs),
(-92,-584,o),
(-162,-577,o),
(-209,-562,cs),
(-255,-547,o),
(-278,-525,o),
(-278,-495,cs),
(-278,-316,l),
(-255,-316,ls),
(-208,-316,o),
(-185,-294,o),
(-185,-249,cs),
(-185,-204,o),
(-201,-167,o),
(-232,-138,cs),
(-278,-93,l),
(-418,-93,l),
(-418,-495,ls),
(-418,-554,o),
(-383,-599,o),
(-313,-629,cs),
(-244,-658,o),
(-139,-673,o),
(1,-673,cs),
(148,-673,o),
(259,-658,o),
(332,-629,cs),
(406,-599,o),
(443,-554,o),
(443,-495,cs),
(443,869,l),
(246,996,l),
(482,1152,l),
(1002,984,l),
(1002,0,l),
(1165,0,l),
(1165,1103,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(280,862,l),
(280,-495,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
11 10 9 8 5 4 3 2 1 9 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 3 0 2 3 128 0 3 4 0 3 4 126 0 0 0 19 77 0 4 4 1 97 0 1 1 25 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 2 4 2 3 4 128 0 0 0 19 77 0 2 2 18 77 0 4 4 1 97 0 1 1 25 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 3 2 4 2 3 4 128 0 4 0 1 4 1 101 0 0 0 19 77 0 2 2 18 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 36 20 40 22 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D2_1799_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_1799_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(280,-525,o),
(257,-547,o),
(210,-562,cs),
(164,-577,o),
(94,-584,o),
(1,-584,cs),
(-92,-584,o),
(-162,-577,o),
(-209,-562,cs),
(-255,-547,o),
(-278,-525,o),
(-278,-495,cs),
(-278,-316,l),
(-255,-316,ls),
(-208,-316,o),
(-185,-294,o),
(-185,-249,cs),
(-185,-204,o),
(-201,-167,o),
(-232,-138,cs),
(-278,-93,l),
(-418,-93,l),
(-418,-495,ls),
(-418,-554,o),
(-383,-599,o),
(-313,-629,cs),
(-244,-658,o),
(-139,-673,o),
(1,-673,cs),
(148,-673,o),
(259,-658,o),
(332,-629,cs),
(406,-599,o),
(443,-554,o),
(443,-495,cs),
(443,869,l),
(246,996,l),
(482,1152,l),
(1002,984,l),
(1002,0,l),
(1165,0,l),
(1165,1024,l),
(1196,1086,o),
(1211,1133,o),
(1211,1164,cs),
(1211,1536,ls),
(1211,1598,o),
(1200,1645,o),
(1179,1676,cs),
(1158,1707,o),
(1127,1722,o),
(1084,1722,cs),
(1041,1722,o),
(1009,1714,o),
(988,1699,cs),
(967,1684,o),
(956,1660,o),
(956,1629,c),
(987,1629,o),
(1011,1621,o),
(1026,1606,cs),
(1041,1591,o),
(1049,1567,o),
(1049,1536,cs),
(1049,1140,l),
(544,1303,l),
(117,1025,l),
(117,965,l),
(280,862,l),
(280,-495,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
27 26 25 24 21 5 4 3 2 1 10 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 133 0 0 2 0 133 0 4 2 5 2 4 5 128 0 5 6 2 5 6 126 0 2 2 19 77 0 6 6 3 97 0 3 3 25 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 1 133 0 0 2 0 133 0 5 4 6 4 5 6 128 0 2 2 19 77 0 4 4 18 77 0 6 6 3 97 0 3 3 25 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 1 133 0 0 2 0 133 0 5 4 6 4 5 6 128 0 6 0 3 6 3 101 0 2 2 19 77 0 4 4 18 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 36 20 40 23 35 25 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D2_1799_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D2_179F_17B6;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,-525,o),
(256,-547,o),
(209,-562,cs),
(163,-577,o),
(93,-584,o),
(0,-584,cs),
(-93,-584,o),
(-163,-577,o),
(-209,-562,cs),
(-256,-547,o),
(-279,-525,o),
(-279,-495,cs),
(-279,-93,l),
(-419,-93,l),
(-465,-138,ls),
(-496,-167,o),
(-512,-204,o),
(-512,-249,cs),
(-512,-294,o),
(-489,-316,o),
(-442,-316,cs),
(-419,-316,l),
(-419,-495,ls),
(-419,-554,o),
(-384,-599,o),
(-315,-629,cs),
(-244,-658,o),
(-139,-673,o),
(0,-673,cs),
(148,-673,o),
(258,-658,o),
(331,-629,cs),
(405,-599,o),
(442,-554,o),
(442,-495,cs),
(442,0,l),
(496,0,o),
(537,8,o),
(564,23,cs),
(591,39,o),
(605,62,o),
(605,93,cs),
(605,108,o),
(601,120,o),
(594,128,cs),
(586,136,o),
(574,140,o),
(559,140,c),
(559,124,o),
(549,112,o),
(530,104,cs),
(511,97,o),
(481,93,o),
(442,93,c),
(442,869,l),
(245,996,l),
(481,1152,l),
(1001,984,l),
(1001,0,l),
(1164,0,l),
(1164,1103,l),
(543,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,93,l),
(140,93,l),
(140,0,l),
(279,-1,l),
(279,-495,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
15 14 13 12 9 8 7 6 5 9 4 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 1 4 133 0 8 0 7 0 8 7 128 0 7 9 0 7 9 126 3 1 1 1 0 95 5 2 2 0 0 19 77 0 9 9 6 97 0 6 6 25 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 4 1 4 133 0 7 8 9 8 7 9 128 3 1 1 1 0 95 5 2 2 0 0 19 77 0 8 8 18 77 0 9 9 6 97 0 6 6 25 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 1 4 133 0 7 8 9 8 7 9 128 0 9 0 6 9 6 101 3 1 1 1 0 95 5 2 2 0 0 19 77 0 8 8 18 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
51 49 20 36 36 22 19 21 22 17 17 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D2_179F_17B6;
subCategory = Spacing;
},
{
glyphname = uni17D2_179F_17C5;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,-525,o),
(256,-547,o),
(209,-562,cs),
(163,-577,o),
(93,-584,o),
(0,-584,cs),
(-93,-584,o),
(-163,-577,o),
(-209,-562,cs),
(-256,-547,o),
(-279,-525,o),
(-279,-495,cs),
(-279,-93,l),
(-419,-93,l),
(-465,-138,ls),
(-496,-167,o),
(-512,-204,o),
(-512,-249,cs),
(-512,-294,o),
(-489,-316,o),
(-442,-316,cs),
(-419,-316,l),
(-419,-495,ls),
(-419,-554,o),
(-384,-599,o),
(-315,-629,cs),
(-244,-658,o),
(-139,-673,o),
(0,-673,cs),
(148,-673,o),
(258,-658,o),
(331,-629,cs),
(405,-599,o),
(442,-554,o),
(442,-495,cs),
(442,0,l),
(496,0,o),
(537,8,o),
(564,23,cs),
(591,39,o),
(605,62,o),
(605,93,cs),
(605,108,o),
(601,120,o),
(594,128,cs),
(586,136,o),
(574,140,o),
(559,140,c),
(559,124,o),
(549,112,o),
(530,104,cs),
(511,97,o),
(481,93,o),
(442,93,c),
(442,869,l),
(245,996,l),
(481,1152,l),
(1001,984,l),
(1001,0,l),
(1164,0,l),
(1164,1024,l),
(1195,1086,o),
(1210,1133,o),
(1210,1164,cs),
(1210,1536,ls),
(1210,1598,o),
(1200,1645,o),
(1179,1676,cs),
(1158,1707,o),
(1126,1722,o),
(1083,1722,cs),
(1040,1722,o),
(1008,1714,o),
(987,1699,cs),
(966,1684,o),
(955,1660,o),
(955,1629,c),
(986,1629,o),
(1010,1621,o),
(1025,1606,cs),
(1040,1591,o),
(1048,1567,o),
(1048,1536,cs),
(1048,1140,l),
(543,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,93,l),
(140,93,l),
(140,0,l),
(279,-1,l),
(279,-495,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
31 30 29 28 25 9 8 7 6 5 10 6 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 2 3 133 0 2 6 2 133 0 6 1 6 133 0 10 0 9 0 10 9 128 0 9 11 0 9 11 126 5 1 1 1 0 95 7 4 2 0 0 19 77 0 11 11 8 97 0 8 8 25 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 2 3 133 0 2 6 2 133 0 6 1 6 133 0 9 10 11 10 9 11 128 5 1 1 1 0 95 7 4 2 0 0 19 77 0 10 10 18 77 0 11 11 8 97 0 8 8 25 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 3 2 3 133 0 2 6 2 133 0 6 1 6 133 0 9 10 11 10 9 11 128 0 11 0 8 11 8 101 5 1 1 1 0 95 7 4 2 0 0 19 77 0 10 10 18 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
67 65 61 60 56 54 36 22 19 21 23 35 25 17 17 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1442;
}
);
note = uni17D2_179F_17C5;
subCategory = Spacing;
},
{
glyphname = uni17D21783;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-643,-271,o),
(-651,-265,o),
(-651,-254,cs),
(-651,-236,o),
(-635,-212,o),
(-604,-182,c),
(-604,-271,l),
(-628,-271,ls)
);
},
{
closed = 1;
nodes = (
(-744,-290,o),
(-734,-317,o),
(-715,-334,cs),
(-696,-351,o),
(-667,-360,o),
(-628,-360,cs),
(-604,-360,l),
(-604,-495,ls),
(-604,-614,o),
(-511,-673,o),
(-325,-673,cs),
(-224,-673,o),
(-154,-657,o),
(-117,-624,c),
(-86,-657,o),
(-1,-673,o),
(140,-673,cs),
(342,-673,o),
(443,-614,o),
(443,-495,cs),
(443,869,l),
(222,1009,l),
(313,1125,l),
(386,1079,ls),
(419,1058,o),
(451,1047,o),
(482,1047,cs),
(513,1047,o),
(555,1094,o),
(606,1187,c),
(559,1187,ls),
(533,1187,o),
(501,1199,o),
(463,1223,cs),
(334,1303,l),
(117,1025,l),
(117,965,l),
(280,862,l),
(280,-495,ls),
(280,-554,o),
(233,-584,o),
(140,-584,cs),
(16,-584,o),
(-46,-554,o),
(-46,-495,cs),
(-46,-394,l),
(-193,-305,l),
(-146,-246,l),
(-76,-290,ls),
(-47,-307,o),
(-19,-316,o),
(8,-316,cs),
(34,-316,o),
(56,-271,o),
(75,-182,c),
(47,-182,ls),
(21,-182,o),
(-4,-175,o),
(-28,-160,cs),
(-139,-93,l),
(-306,-299,l),
(-306,-346,l),
(-185,-414,l),
(-185,-495,ls),
(-185,-554,o),
(-232,-584,o),
(-325,-584,cs),
(-418,-584,o),
(-465,-555,o),
(-465,-496,cs),
(-465,-93,l),
(-604,-93,l),
(-651,-123,o),
(-686,-151,o),
(-709,-178,cs),
(-732,-205,o),
(-744,-230,o),
(-744,-254,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
19 1 2 1 21 20 9 8 7 5 6 2 59 4 2 0 8 60 49 2 9 0 48 1 5 9 61 47 2 7 5 26 1 3 7 7 76 50 1 6 2 1 8 2 75 10 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 2 8 2 6 8 128 0 1 0 2 6 1 2 105 0 8 0 9 5 8 9 105 0 0 0 5 7 0 5 105 10 1 7 7 3 98 4 1 3 3 25 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 2 6 1 2 105 0 8 0 9 5 8 9 105 0 0 0 5 7 0 5 105 0 6 6 18 77 10 1 7 7 3 98 4 1 3 3 25 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 2 6 1 2 105 0 8 0 9 5 8 9 105 0 0 0 5 7 0 5 105 10 1 7 4 1 3 7 3 102 0 6 6 18 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
65 63 57 55 39 34 23 34 34 38 33 43 16 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D21783;
subCategory = Spacing;
},
{
glyphname = uni17D21788;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,-554,o),
(226,-584,o),
(121,-584,cs),
(9,-584,o),
(-47,-556,o),
(-47,-501,cs),
(-47,-394,l),
(-194,-305,l),
(-147,-246,l),
(-76,-290,ls),
(-47,-307,o),
(-20,-316,o),
(7,-316,cs),
(34,-316,o),
(56,-271,o),
(74,-182,c),
(47,-182,ls),
(20,-182,o),
(-5,-175,o),
(-29,-160,cs),
(-140,-93,l),
(-307,-299,l),
(-307,-346,l),
(-186,-414,l),
(-186,-494,ls),
(-186,-554,o),
(-233,-584,o),
(-326,-584,cs),
(-419,-584,o),
(-465,-555,o),
(-465,-496,cs),
(-465,-271,ls),
(-465,-152,o),
(-558,-93,o),
(-745,-93,cs),
(-931,-93,o),
(-1024,-152,o),
(-1024,-270,cs),
(-1024,-673,l),
(-884,-673,l),
(-838,-606,ls),
(-807,-561,o),
(-791,-524,o),
(-791,-495,cs),
(-791,-465,o),
(-814,-450,o),
(-861,-450,cs),
(-884,-450,l),
(-884,-271,ls),
(-884,-212,o),
(-838,-182,o),
(-745,-182,cs),
(-652,-182,o),
(-605,-212,o),
(-605,-271,cs),
(-605,-495,ls),
(-605,-614,o),
(-512,-673,o),
(-326,-673,cs),
(-232,-673,o),
(-162,-655,o),
(-115,-619,c),
(-69,-655,o),
(10,-673,o),
(121,-673,cs),
(335,-673,o),
(442,-614,o),
(442,-495,cs),
(442,869,l),
(222,1009,l),
(312,1125,l),
(385,1079,ls),
(419,1058,o),
(451,1047,o),
(481,1047,cs),
(512,1047,o),
(554,1094,o),
(605,1187,c),
(559,1187,ls),
(532,1187,o),
(500,1199,o),
(463,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,-495,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
13 1 1 0 15 14 3 2 1 5 7 1 61 60 50 3 10 9 62 49 48 3 5 10 20 1 2 8 5 76 51 1 7 1 75 4 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 10 8 10 5 8 128 0 0 0 1 7 0 1 105 0 7 0 4 9 7 4 105 0 9 0 10 5 9 10 105 11 1 8 8 2 97 6 3 2 2 2 25 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 10 8 10 5 8 128 0 0 0 1 7 0 1 105 0 9 0 10 5 9 10 105 0 4 4 7 97 0 7 7 18 77 11 1 8 8 2 97 6 3 2 2 2 25 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 10 8 10 5 8 128 0 0 0 1 7 0 1 105 0 9 0 10 5 9 10 105 11 1 8 6 3 2 2 8 2 101 0 4 4 7 97 0 7 7 18 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
66 64 58 56 55 53 35 34 20 34 35 34 38 33 38 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D21788;
subCategory = Spacing;
},
{
glyphname = uni17D2178D;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-794,-477,o),
(-796,-488,o),
(-800,-499,cs),
(-837,-584,l),
(-837,-450,l),
(-819,-450,ls),
(-802,-450,o),
(-794,-457,o),
(-794,-472,cs)
);
},
{
closed = 1;
nodes = (
(-837,-673,l),
(-775,-614,o),
(-737,-563,o),
(-723,-522,cs),
(-714,-495,o),
(-709,-473,o),
(-709,-456,cs),
(-709,-437,o),
(-713,-421,o),
(-721,-406,cs),
(-737,-375,o),
(-760,-360,o),
(-791,-360,cs),
(-837,-360,l),
(-837,-239,l),
(-783,-199,l),
(-605,-296,l),
(-423,-199,l),
(-372,-238,l),
(-372,-370,l),
(-434,-370,o),
(-465,-400,o),
(-465,-459,cs),
(-465,-495,o),
(-449,-537,o),
(-418,-584,c),
(-372,-673,l),
(-232,-673,l),
(-232,-459,l),
(-186,-459,ls),
(-153,-459,o),
(-104,-495,o),
(-39,-566,cs),
(25,-637,o),
(97,-673,o),
(177,-673,cs),
(354,-673,o),
(443,-613,o),
(443,-494,cs),
(443,869,l),
(222,1009,l),
(312,1125,l),
(386,1079,ls),
(419,1058,o),
(451,1047,o),
(482,1047,cs),
(513,1047,o),
(554,1094,o),
(606,1187,c),
(559,1187,ls),
(533,1187,o),
(501,1199,o),
(463,1223,cs),
(334,1303,l),
(117,1025,l),
(117,965,l),
(280,862,l),
(280,-495,ls),
(280,-554,o),
(246,-584,o),
(177,-584,cs),
(124,-584,o),
(65,-548,o),
(0,-477,cs),
(-65,-406,o),
(-127,-370,o),
(-186,-370,cs),
(-232,-370,l),
(-232,-227,l),
(-418,-93,l),
(-605,-194,l),
(-791,-93,l),
(-977,-227,l),
(-977,-673,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
21 1 2 1 58 57 56 55 54 42 41 40 39 38 23 22 11 10 9 15 6 2 2 76 4 1 10 1 75 12 1 1 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
21 1 2 1 58 57 56 55 54 42 41 40 39 38 23 22 11 10 9 15 7 2 2 76 4 1 10 1 75 12 1 1 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 0 2 6 1 2 105 9 7 2 6 4 1 0 10 6 0 105 0 10 3 3 10 89 0 10 10 3 95 8 5 2 3 10 3 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 2 7 1 2 105 0 7 6 0 7 89 9 1 6 4 1 0 10 6 0 105 0 10 3 3 10 89 0 10 10 3 95 8 5 2 3 10 3 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
64 62 61 59 23 38 20 17 33 38 33 44 17 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D2178D;
subCategory = Spacing;
},
{
glyphname = uni17D21794;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-278,-316,l),
(-255,-316,ls),
(-208,-316,o),
(-185,-294,o),
(-185,-249,cs),
(-185,-204,o),
(-201,-167,o),
(-232,-138,cs),
(-278,-93,l),
(-418,-93,l),
(-418,-673,l),
(-278,-673,l),
(1,-501,l),
(280,-673,l),
(443,-673,l),
(443,869,l),
(222,1009,l),
(313,1125,l),
(386,1079,ls),
(420,1058,o),
(452,1047,o),
(482,1047,cs),
(513,1047,o),
(555,1094,o),
(606,1187,c),
(559,1187,ls),
(533,1187,o),
(501,1199,o),
(464,1223,cs),
(334,1303,l),
(117,1025,l),
(117,965,l),
(280,862,l),
(280,-567,l),
(1,-395,l),
(-278,-567,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
14 1 1 0 16 15 4 3 2 5 4 1 30 19 1 3 2 5 3 76 5 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 4 2 4 5 2 128 0 0 0 1 4 0 1 105 0 4 5 2 4 87 0 4 4 2 95 3 1 2 4 2 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 5 4 2 4 5 2 128 0 0 0 1 4 0 1 105 3 1 2 2 4 95 0 4 4 18 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 17 18 21 33 39 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D21794;
subCategory = Spacing;
},
{
glyphname = uni17D21799;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(280,-554,o),
(187,-584,o),
(1,-584,cs),
(-185,-584,o),
(-278,-554,o),
(-278,-495,cs),
(-278,-316,l),
(-255,-316,ls),
(-208,-316,o),
(-185,-294,o),
(-185,-249,cs),
(-185,-204,o),
(-201,-167,o),
(-232,-138,cs),
(-278,-93,l),
(-418,-93,l),
(-418,-495,ls),
(-418,-614,o),
(-278,-673,o),
(1,-673,cs),
(296,-673,o),
(443,-614,o),
(443,-495,cs),
(443,869,l),
(222,1009,l),
(313,1125,l),
(386,1079,ls),
(420,1058,o),
(452,1047,o),
(482,1047,cs),
(513,1047,o),
(555,1094,o),
(606,1187,c),
(559,1187,ls),
(533,1187,o),
(501,1199,o),
(464,1223,cs),
(334,1303,l),
(117,1025,l),
(117,965,l),
(280,862,l),
(280,-495,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
13 1 1 0 15 14 3 2 1 5 3 1 2 76 4 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 1 4 1 3 4 128 0 4 5 1 4 5 126 0 0 0 1 3 0 1 105 0 5 5 2 98 0 2 2 25 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 4 3 5 3 4 5 128 0 0 0 1 3 0 1 105 0 3 3 18 77 0 5 5 2 98 0 2 2 25 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 4 3 5 3 4 5 128 0 0 0 1 3 0 1 105 0 5 0 2 5 2 102 0 3 3 18 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
34 36 18 38 33 38 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D21799;
subCategory = Spacing;
},
{
glyphname = uni17D2179A;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,-565,o),
(442,-519,o),
(442,-426,cs),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,-426,ls),
(279,-581,o),
(426,-659,o),
(721,-659,cs),
(1016,-659,o),
(1163,-581,o),
(1163,-426,cs),
(1163,-93,l),
(1024,-93,l),
(1024,-426,ls),
(1024,-519,o),
(923,-565,o),
(721,-565,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
22 1 4 3 24 23 12 11 10 5 1 4 2 76 13 1 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 4 0 4 1 0 128 0 3 0 4 1 3 4 105 5 1 0 0 2 98 0 2 2 25 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 4 1 3 4 105 0 1 1 18 77 5 1 0 0 2 98 0 2 2 25 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 0 4 1 3 4 105 5 1 0 0 2 0 2 102 0 1 1 18 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 20 18 17 15 8 6 4 3 0 26 1 26 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D2179A;
subCategory = Spacing;
},
{
glyphname = uni17D2179F;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,-554,o),
(186,-584,o),
(0,-584,cs),
(-186,-584,o),
(-279,-554,o),
(-279,-495,cs),
(-279,-93,l),
(-419,-93,l),
(-465,-138,ls),
(-496,-167,o),
(-512,-204,o),
(-512,-249,cs),
(-512,-294,o),
(-489,-316,o),
(-442,-316,cs),
(-419,-316,l),
(-419,-495,ls),
(-419,-614,o),
(-279,-673,o),
(0,-673,cs),
(295,-673,o),
(442,-614,o),
(442,-495,cs),
(442,0,l),
(551,0,o),
(605,31,o),
(605,93,cs),
(605,124,o),
(590,140,o),
(559,140,c),
(559,109,o),
(520,93,o),
(442,93,c),
(442,869,l),
(222,1009,l),
(312,1125,l),
(385,1079,ls),
(419,1058,o),
(451,1047,o),
(481,1047,cs),
(512,1047,o),
(554,1094,o),
(605,1187,c),
(559,1187,ls),
(532,1187,o),
(500,1199,o),
(463,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,93,l),
(140,93,l),
(140,0,l),
(279,0,l),
(279,-495,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
17 1 3 2 19 18 7 6 5 5 5 3 2 76 8 1 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 3 1 1 5 114 0 9 0 8 0 9 8 128 0 8 10 0 8 10 126 0 2 0 3 5 2 3 105 4 1 1 1 0 98 6 1 0 0 19 77 0 10 10 7 98 0 7 7 25 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 3 1 1 5 114 0 8 9 10 9 8 10 128 0 2 0 3 5 2 3 105 4 1 1 1 0 98 6 1 0 0 19 77 0 9 9 18 77 0 10 10 7 98 0 7 7 25 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 1 1 5 114 0 8 9 10 9 8 10 128 0 2 0 3 5 2 3 105 0 10 0 7 10 7 102 4 1 1 1 0 98 6 1 0 0 19 77 0 9 9 18 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
43 41 39 38 34 34 18 17 21 33 38 17 17 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D2179F;
subCategory = Spacing;
},
{
glyphname = uni17D2179A.b;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,-1026,o),
(558,-1014,o),
(512,-991,cs),
(465,-968,o),
(442,-934,o),
(442,-887,cs),
(442,869,l),
(221,1009,l),
(311,1125,l),
(385,1079,ls),
(418,1058,o),
(450,1047,o),
(481,1047,cs),
(512,1047,o),
(553,1094,o),
(605,1187,c),
(558,1187,ls),
(532,1187,o),
(500,1199,o),
(462,1223,cs),
(333,1303,l),
(116,1025,l),
(116,965,l),
(279,862,l),
(279,-887,ls),
(279,-964,o),
(316,-1023,o),
(390,-1062,cs),
(463,-1101,o),
(574,-1120,o),
(721,-1120,cs),
(868,-1120,o),
(979,-1101,o),
(1052,-1062,cs),
(1126,-1023,o),
(1163,-964,o),
(1163,-887,cs),
(1163,-745,l),
(1024,-745,l),
(1024,-887,ls),
(1024,-934,o),
(999,-968,o),
(948,-991,cs),
(898,-1014,o),
(822,-1026,o),
(721,-1026,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
31 1 4 3 33 32 21 20 19 5 1 4 2 76 22 1 3 74 0 1 4 0 4 1 0 128 0 3 0 4 1 3 4 105 5 1 0 2 2 0 89 5 1 0 0 2 97 0 2 0 2 81 1 0 29 27 26 24 15 13 8 6 0 37 1 37 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni17D2179A.b;
subCategory = Spacing;
},
{
glyphname = grave;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,1554,l),
(309,1288,l),
(456,1288,l),
(272,1560,l),
(42,1560,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 20 values pushed */
2 1 1 0 1 133 0 0 0 118 0 0 0 4 0 3 17 3 8 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 496;
}
);
note = grave;
unicode = 96;
},
{
glyphname = cho.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = cho.half;
},
{
glyphname = coeng_1789khmer.a;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1186,-85,l),
(-1326,-165,l),
(-1465,-85,l),
(-1698,-211,l),
(-1698,-387,l),
(-1558,-387,l),
(-1496,-360,o),
(-1465,-326,o),
(-1465,-285,cs),
(-1465,-259,o),
(-1496,-246,o),
(-1558,-246,c),
(-1558,-228,l),
(-1468,-179,l),
(-1326,-260,l),
(-1184,-179,l),
(-1093,-230,l),
(-1093,-387,l),
(-953,-387,l),
(-953,-249,l),
(-783,-191,l),
(-488,-292,l),
(-488,-387,l),
(-348,-387,l),
(-348,-212,l),
(-720,-85,l),
(-1007,-182,l)
);
},
{
closed = 1;
nodes = (
(-1621,-570,o),
(-1528,-546,o),
(-1419,-546,cs),
(-1320,-546,o),
(-1209,-566,o),
(-1088,-606,cs),
(-967,-645,o),
(-829,-665,o),
(-674,-665,cs),
(-457,-665,o),
(-348,-625,o),
(-348,-546,cs),
(-348,-467,o),
(-395,-427,o),
(-488,-427,cs),
(-550,-427,o),
(-581,-453,o),
(-581,-506,c),
(-519,-506,o),
(-488,-519,o),
(-488,-546,cs),
(-488,-573,o),
(-550,-586,o),
(-674,-586,cs),
(-798,-586,o),
(-922,-566,o),
(-1046,-526,cs),
(-1170,-487,o),
(-1294,-467,o),
(-1419,-467,cs),
(-1605,-467,o),
(-1698,-504,o),
(-1698,-578,cs),
(-1698,-617,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
33 1 3 6 1 76 24 23 22 21 20 13 12 11 10 9 6 5 4 1 14 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
2 1 2 0 8 0 133 0 8 0 7 4 8 7 105 0 5 5 4 97 0 4 4 20 77 0 6 6 3 97 0 3 3 25 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
2 1 2 0 8 0 133 0 8 0 7 4 8 7 105 0 5 0 4 6 5 4 105 0 6 3 3 6 89 0 6 6 3 97 0 3 6 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
33 18 34 35 34 39 26 20 18 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = coeng_1789khmer.a;
},
{
glyphname = coeng_178Akhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-715,0);
ref = uni17D2_178A;
}
);
width = 0;
}
);
note = coeng_178Akhmer.n;
},
{
glyphname = coeng_178Akhmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (355,0);
ref = uni17D2_178A;
}
);
width = 0;
}
);
note = coeng_178Akhmer.r;
},
{
glyphname = coeng_178Bkhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-716,0);
ref = uni17D2_178B;
}
);
width = 0;
}
);
note = coeng_178Bkhmer.n;
},
{
glyphname = coeng_178Ckhmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-725,0);
ref = uni17D2_178C;
}
);
width = 0;
}
);
note = coeng_178Ckhmer.n;
},
{
glyphname = coeng_1797khmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (346,0);
ref = uni17D2_1797;
}
);
width = 0;
}
);
note = coeng_1797khmer.r;
},
{
glyphname = coeng_1798khmer.b;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-990,-997,o),
(-981,-997,o),
(-972,-996,cs),
(-963,-995,o),
(-953,-995,o),
(-943,-994,cs),
(-940,-994,l),
(-500,-965,l),
(-500,-1013,o),
(-485,-1049,o),
(-456,-1074,cs),
(-427,-1099,o),
(-384,-1111,o),
(-325,-1111,cs),
(-266,-1111,o),
(-223,-1102,o),
(-194,-1083,cs),
(-165,-1065,o),
(-150,-1038,o),
(-150,-1002,cs),
(-150,-965,o),
(-167,-937,o),
(-200,-919,cs),
(-233,-900,o),
(-283,-891,o),
(-350,-891,c),
(-350,-767,l),
(-500,-767,l),
(-500,-891,l),
(-940,-921,l),
(-960,-921,ls),
(-990,-921,o),
(-1012,-915,o),
(-1027,-904,cs),
(-1042,-894,o),
(-1050,-878,o),
(-1050,-855,cs),
(-1050,-782,l),
(-1100,-782,o),
(-1138,-788,o),
(-1163,-800,cs),
(-1188,-813,o),
(-1200,-831,o),
(-1200,-855,cs),
(-1200,-902,o),
(-1183,-937,o),
(-1150,-961,cs),
(-1116,-985,o),
(-1066,-997,o),
(-999,-997,cs)
);
},
{
closed = 1;
nodes = (
(-288,-974,o),
(-255,-986,o),
(-255,-1010,cs),
(-255,-1034,o),
(-272,-1046,o),
(-305,-1046,cs),
(-306,-1046,ls),
(-339,-1046,o),
(-355,-1022,o),
(-355,-974,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 2 2 1 112 4 1 2 6 8 2 0 7 2 0 106 0 7 5 5 7 89 0 7 7 5 97 0 5 7 5 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 2 1 133 4 1 2 6 8 2 0 7 2 0 106 0 7 5 5 7 89 0 7 7 5 97 0 5 7 5 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 1 3 133 0 1 4 1 133 0 4 2 0 4 89 0 2 6 8 2 0 7 2 0 106 0 7 5 5 7 89 0 7 7 5 98 0 5 7 5 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 41 38 37 36 27 25 19 18 17 16 15 12 8 7 0 34 1 30 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = coeng_1798khmer.b;
},
{
glyphname = coeng_1798khmer.r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (263,0);
ref = uni17D2_1798;
}
);
width = 0;
}
);
note = coeng_1798khmer.r;
},
{
glyphname = coeng_17A0khmer.b;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1155,-1009,o),
(-1134,-1047,o),
(-1093,-1073,cs),
(-1051,-1098,o),
(-988,-1111,o),
(-905,-1111,cs),
(-822,-1111,o),
(-759,-1098,o),
(-717,-1073,cs),
(-676,-1047,o),
(-655,-1009,o),
(-655,-958,cs),
(-655,-912,ls),
(-655,-887,o),
(-647,-868,o),
(-630,-855,cs),
(-613,-842,o),
(-588,-836,o),
(-555,-836,cs),
(-522,-836,o),
(-497,-842,o),
(-480,-855,cs),
(-463,-868,o),
(-455,-887,o),
(-455,-912,cs),
(-455,-1111,l),
(-305,-1111,l),
(-305,-912,ls),
(-305,-861,o),
(-326,-823,o),
(-367,-797,cs),
(-409,-772,o),
(-472,-759,o),
(-555,-759,cs),
(-638,-759,o),
(-701,-772,o),
(-743,-797,cs),
(-784,-823,o),
(-805,-861,o),
(-805,-912,cs),
(-805,-958,ls),
(-805,-983,o),
(-813,-1002,o),
(-830,-1015,cs),
(-847,-1028,o),
(-872,-1034,o),
(-905,-1034,cs),
(-938,-1034,o),
(-963,-1028,o),
(-980,-1015,cs),
(-997,-1002,o),
(-1005,-983,o),
(-1005,-958,cs),
(-1005,-759,l),
(-1155,-759,l),
(-1155,-958,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
2 1 0 0 4 1 0 4 105 0 1 3 3 1 89 0 1 1 3 98 5 1 3 1 3 82 39 36 20 39 36 17 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = coeng_17A0khmer.b;
},
{
glyphname = coeng_17A0khmer.n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-700,0);
ref = uni17D2_17A0;
}
);
width = 0;
}
);
note = coeng_17A0khmer.n;
},
{
glyphname = iMark_17CDkhmer.r;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-167,1653,o),
(-152,1676,o),
(-121,1676,cs),
(-82,1676,o),
(-39,1660,o),
(7,1629,c),
(28,1629,o),
(50,1632,o),
(72,1639,c),
(166,1684,o),
(241,1746,o),
(296,1825,c),
(304,1831,o),
(308,1838,o),
(308,1847,cs),
(308,1856,o),
(303,1866,o),
(294,1879,cs),
(279,1897,o),
(266,1906,o),
(255,1906,c),
(244,1904,l),
(191,1815,o),
(118,1754,o),
(24,1723,c),
(-12,1754,o),
(-60,1769,o),
(-121,1769,cs),
(-224,1769,o),
(-284,1731,o),
(-301,1656,c),
(-376,1700,o),
(-443,1722,o),
(-502,1722,cs),
(-657,1722,o),
(-735,1644,o),
(-735,1489,cs),
(-735,1427,o),
(-688,1396,o),
(-595,1396,cs),
(-83,1396,l),
(-83,1448,l),
(-15,1459,o),
(19,1495,o),
(19,1554,cs),
(19,1573,o),
(3,1583,o),
(-28,1583,cs),
(-59,1583,o),
(-74,1573,o),
(-74,1554,cs),
(-74,1543,o),
(-90,1537,o),
(-121,1537,cs),
(-152,1537,o),
(-167,1560,o),
(-167,1607,cs)
);
},
{
closed = 1;
nodes = (
(-595,1552,o),
(-564,1583,o),
(-502,1583,cs),
(-425,1583,o),
(-356,1566,o),
(-296,1533,c),
(-290,1516,o),
(-282,1501,o),
(-271,1489,c),
(-595,1489,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
22 1 3 4 18 1 5 6 10 1 2 8 3 76 0 5 6 7 6 5 7 128 0 1 7 0 7 1 0 128 0 0 8 8 0 112 0 4 0 6 5 4 6 105 0 3 9 1 7 1 3 7 105 0 8 2 2 8 87 0 8 8 2 96 0 2 8 2 80 40 39 42 41 39 45 40 45 33 29 34 34 36 34 33 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = iMark_17CDkhmer.r;
},
{
glyphname = nyo_17B6khmer.a;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1763,1122,l),
(1443,1303,l),
(1100,1110,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,0,l),
(1163,0,l),
(1163,1039,l),
(1373,1155,l),
(1722,961,l),
(1722,0,l),
(1885,0,l),
(1885,1054,l),
(1863,1066,l),
(2080,1163,l),
(2443,998,l),
(2443,0,l),
(2606,0,l),
(2606,1103,l),
(2164,1303,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
41 1 0 5 1 76 38 37 36 35 34 33 32 31 18 17 16 15 14 11 10 9 6 5 4 3 0 21 3 74 0 3 6 1 5 0 3 5 105 4 2 1 3 0 0 19 0 78 40 39 39 49 40 49 24 38 20 21 17 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = nyo_17B6khmer.a;
},
{
glyphname = nyo_17C5khmer.a;
lastChange = "2022-11-15 14:54:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2637,1086,o),
(2653,1133,o),
(2653,1164,cs),
(2653,1536,ls),
(2653,1598,o),
(2642,1645,o),
(2621,1676,cs),
(2600,1707,o),
(2568,1722,o),
(2525,1722,cs),
(2482,1722,o),
(2450,1714,o),
(2429,1699,cs),
(2408,1684,o),
(2398,1660,o),
(2398,1629,c),
(2429,1629,o),
(2452,1621,o),
(2468,1606,cs),
(2483,1591,o),
(2491,1567,o),
(2491,1536,cs),
(2491,1155,l),
(2164,1303,l),
(1763,1122,l),
(1443,1303,l),
(1100,1110,l),
(888,1303,l),
(722,1140,l),
(555,1303,l),
(279,1056,l),
(279,0,l),
(442,0,l),
(577,133,ls),
(602,157,o),
(620,183,o),
(633,212,cs),
(645,241,o),
(651,271,o),
(651,303,cs),
(651,349,o),
(637,384,o),
(610,408,cs),
(583,431,o),
(542,442,o),
(488,442,cs),
(442,442,l),
(442,1076,l),
(553,1173,l),
(722,1007,l),
(891,1173,l),
(1000,1075,l),
(1000,0,l),
(1163,0,l),
(1163,1039,l),
(1373,1155,l),
(1722,961,l),
(1722,0,l),
(1885,0,l),
(1885,1054,l),
(1863,1066,l),
(2080,1163,l),
(2443,998,l),
(2443,0,l),
(2606,0,l),
(2606,1024,l)
);
},
{
closed = 1;
nodes = (
(442,349,l),
(488,349,ls),
(511,349,o),
(529,345,o),
(541,337,cs),
(552,330,o),
(558,318,o),
(558,303,cs),
(558,284,o),
(553,266,o),
(544,247,cs),
(535,229,o),
(521,211,o),
(503,192,cs),
(442,131,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
39 38 37 36 35 34 33 32 31 18 17 16 15 14 11 10 9 6 5 4 3 0 22 3 5 57 1 0 7 2 76 0 6 5 6 133 0 5 3 5 133 0 3 8 1 7 0 3 7 105 4 2 1 3 0 0 19 0 78 56 55 55 65 56 65 35 29 24 38 20 21 17 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 2164;
}
);
note = nyo_17C5khmer.a;
},
{
glyphname = ru.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ru.half;
},
{
glyphname = ruu.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ruu.half;
},
{
glyphname = ta.half;
layers = (
{
layerId = m01;
width = 1289;
}
);
note = ta.half;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Regular;
properties = (
{
key = styleNames;
values = (
{
language = ENG;
value = Regular;
}
);
},
{
key = postscriptFullName;
value = Khmer;
},
{
key = postscriptFontName;
value = Khmer;
}
);
}
);
kerningLTR = {
m01 = {
A = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -123;
U = -41;
V = -164;
W = -143;
Y = -143;
asterisk = -143;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
question = -123;
quotedbl = -164;
quotesingle = -164;
u = -41;
v = -123;
w = -61;
y = -102;
};
B = {
A = -41;
T = -41;
V = -82;
W = -61;
X = -41;
Y = -82;
Z = -41;
asterisk = -41;
question = -41;
w = -20;
y = -41;
};
D = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
E = {
V = -41;
W = -41;
Y = -41;
};
F = {
A = -143;
a = -82;
c = -82;
d = -82;
e = -82;
g = -82;
o = -82;
q = -82;
};
G = {
T = -41;
V = -41;
W = -41;
Y = -41;
question = -41;
};
K = {
C = -41;
G = -41;
O = -41;
Q = -41;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
u = -41;
w = -61;
y = -61;
};
L = {
T = -143;
V = -102;
W = -102;
Y = -123;
asterisk = -164;
question = -143;
quotedbl = -123;
quotesingle = -123;
};
O = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
P = {
A = -102;
comma = -246;
period = -246;
};
Q = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
R = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -41;
U = -20;
V = -61;
W = -61;
Y = -61;
asterisk = -41;
question = -41;
w = -41;
y = -41;
};
S = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -41;
question = -41;
w = -20;
y = -41;
};
T = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -61;
c = -61;
comma = -184;
d = -61;
e = -61;
g = -61;
o = -61;
period = -184;
q = -61;
};
U = {
A = -41;
};
V = {
A = -164;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -123;
c = -123;
comma = -225;
d = -123;
e = -123;
g = -123;
o = -123;
period = -225;
q = -123;
s = -82;
};
W = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -102;
c = -123;
comma = -184;
d = -123;
e = -123;
g = -123;
o = -123;
period = -184;
q = -123;
};
X = {
C = -41;
G = -41;
O = -41;
Q = -41;
S = -20;
w = -61;
y = -102;
};
Y = {
A = -143;
C = -61;
G = -61;
O = -61;
Q = -61;
S = -41;
a = -123;
c = -143;
comma = -164;
d = -143;
e = -143;
g = -143;
o = -143;
period = -164;
q = -143;
s = -123;
};
a = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
asterisk = {
A = -102;
comma = -246;
period = -246;
};
b = {
y = -41;
};
f = {
asterisk = 164;
braceright = 184;
bracketright = 184;
parenright = 184;
quotedbl = 164;
quotesingle = 164;
};
h = {
quotedbl = -82;
y = -41;
};
k = {
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
};
n = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
o = {
y = -41;
};
p = {
y = -41;
};
quotedbl = {
A = -164;
g = -82;
};
quotesingle = {
A = -164;
g = -82;
};
r = {
a = -41;
asterisk = 61;
};
v = {
comma = -102;
period = -143;
};
w = {
comma = -143;
period = -143;
};
y = {
comma = -184;
period = -184;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2020 The Khmer Project Authors (https://github.com/danhhong/Khmer)";
}
);
},
{
key = familyNames;
values = (
{
language = ENG;
value = Khmer;
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Danh Hong";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Danh Hong";
}
);
},
{
key = designerURL;
value = "http://www.nextspell.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 2048;
versionMajor = 8;
versionMinor = 0;
}
